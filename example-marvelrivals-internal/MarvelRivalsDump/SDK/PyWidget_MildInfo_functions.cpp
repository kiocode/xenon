#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_MildInfo

#include "Basic.hpp"

#include "PyWidget_MildInfo_classes.hpp"
#include "PyWidget_MildInfo_parameters.hpp"


namespace SDK
{

// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.SetHintIcon
// (Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        InIcon                                                 (Parm, UObjectWrapper, HasGetValueTypeHash)

void UPyWidget_MildInfo::SetHintIcon(TSoftObjectPtr<class UTexture2D> InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "SetHintIcon");

	Params::PyWidget_MildInfo_SetHintIcon Parms{};

	Parms.InIcon = InIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.SetHintText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (Parm)

void UPyWidget_MildInfo::SetHintText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "SetHintText");

	Params::PyWidget_MildInfo_SetHintText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.SetHintData
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCueHintData                     InHintData                                             (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_MildInfo::SetHintData(const struct FCueHintData& InHintData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "SetHintData");

	Params::PyWidget_MildInfo_SetHintData Parms{};

	Parms.InHintData = std::move(InHintData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.Update
// (Native, Public, BlueprintCallable)

void UPyWidget_MildInfo::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.RemoveHintData
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCueHintData                     InHintData                                             (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_MildInfo::RemoveHintData(const struct FCueHintData& InHintData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "RemoveHintData");

	Params::PyWidget_MildInfo_RemoveHintData Parms{};

	Parms.InHintData = std::move(InHintData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.AddHintData
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCueHintData                     InHintData                                             (ConstParm, Parm, OutParm, ReferenceParm)

void UPyWidget_MildInfo::AddHintData(const struct FCueHintData& InHintData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "AddHintData");

	Params::PyWidget_MildInfo_AddHintData Parms{};

	Parms.InHintData = std::move(InHintData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.Reset
// (Native, Public, BlueprintCallable)

void UPyWidget_MildInfo::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyWidget_MildInfo.PyWidget_MildInfo.Construct
// (BlueprintCosmetic, Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyWidget_MildInfo::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyWidget_MildInfo", "Construct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PayloadEventInterface

#include "Basic.hpp"

#include "PayloadEventInterface_classes.hpp"
#include "PayloadEventInterface_parameters.hpp"


namespace SDK
{

// Function PayloadEventInterface.PayloadEventInterface_C.S Payload Reach
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// double                                  EventArgs                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IPayloadEventInterface_C::S_Payload_Reach(const class FString& EventName, const double EventArgs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PayloadEventInterface_C", "S Payload Reach");

	Params::PayloadEventInterface_C_S_Payload_Reach Parms{};

	Parms.EventName = std::move(EventName);
	Parms.EventArgs = EventArgs;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChangeScene

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChangeScene.BP_ChangeScene_C
// 0x0080 (0x0510 - 0x0490)
class ABP_ChangeScene_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PP_SceneChange;                                    // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         MidParticleCount;                                  // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     InstanceTransforms;                                // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MidParticleOffset;                                 // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MidPlaneScale;                                     // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighParticleXCount;                                // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighParticleYCount;                                // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighParticleOffset;                                // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HighParticleHeightOffset;                          // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighPlaneScale;                                    // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowParticleXCount;                                 // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowParticleYCount;                                 // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowParticleOffset;                                 // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LowParticleHeightOffset;                           // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowPlaneScale;                                     // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_ChangeScene(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChangeScene_C">();
	}
	static class ABP_ChangeScene_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChangeScene_C>();
	}
};
//static_assert(alignof(ABP_ChangeScene_C) == 0x000008, "Wrong alignment on ABP_ChangeScene_C");
//static_assert(sizeof(ABP_ChangeScene_C) == 0x000510, "Wrong size on ABP_ChangeScene_C");
//static_assert(offsetof(ABP_ChangeScene_C, UberGraphFrame) == 0x000490, "Member 'ABP_ChangeScene_C::UberGraphFrame' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, PP_SceneChange) == 0x000498, "Member 'ABP_ChangeScene_C::PP_SceneChange' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, DefaultSceneRoot) == 0x0004A0, "Member 'ABP_ChangeScene_C::DefaultSceneRoot' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, MidParticleCount) == 0x0004A8, "Member 'ABP_ChangeScene_C::MidParticleCount' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, InstanceTransforms) == 0x0004B0, "Member 'ABP_ChangeScene_C::InstanceTransforms' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, MidParticleOffset) == 0x0004C0, "Member 'ABP_ChangeScene_C::MidParticleOffset' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, MidPlaneScale) == 0x0004C8, "Member 'ABP_ChangeScene_C::MidPlaneScale' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, HighParticleXCount) == 0x0004D0, "Member 'ABP_ChangeScene_C::HighParticleXCount' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, HighParticleYCount) == 0x0004D4, "Member 'ABP_ChangeScene_C::HighParticleYCount' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, HighParticleOffset) == 0x0004D8, "Member 'ABP_ChangeScene_C::HighParticleOffset' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, HighParticleHeightOffset) == 0x0004E0, "Member 'ABP_ChangeScene_C::HighParticleHeightOffset' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, HighPlaneScale) == 0x0004E8, "Member 'ABP_ChangeScene_C::HighPlaneScale' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, LowParticleXCount) == 0x0004F0, "Member 'ABP_ChangeScene_C::LowParticleXCount' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, LowParticleYCount) == 0x0004F4, "Member 'ABP_ChangeScene_C::LowParticleYCount' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, LowParticleOffset) == 0x0004F8, "Member 'ABP_ChangeScene_C::LowParticleOffset' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, LowParticleHeightOffset) == 0x000500, "Member 'ABP_ChangeScene_C::LowParticleHeightOffset' has a wrong offset!");
//static_assert(offsetof(ABP_ChangeScene_C, LowPlaneScale) == 0x000508, "Member 'ABP_ChangeScene_C::LowPlaneScale' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1029

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct Hero_1029.TPUsageRecord_102941
// 0x0018 (0x0018 - 0x0000)
struct FTPUsageRecord_102941 final
{
public:
	class AActor*                                 UserActor;                                         // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LatestUseTime;                                     // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanUse;                                           // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTPUsageRecord_102941) == 0x000008, "Wrong alignment on FTPUsageRecord_102941");
static_assert(sizeof(FTPUsageRecord_102941) == 0x000018, "Wrong size on FTPUsageRecord_102941");
static_assert(offsetof(FTPUsageRecord_102941, UserActor) == 0x000000, "Member 'FTPUsageRecord_102941::UserActor' has a wrong offset!");
static_assert(offsetof(FTPUsageRecord_102941, LatestUseTime) == 0x000008, "Member 'FTPUsageRecord_102941::LatestUseTime' has a wrong offset!");
static_assert(offsetof(FTPUsageRecord_102941, bCanUse) == 0x000010, "Member 'FTPUsageRecord_102941::bCanUse' has a wrong offset!");

// ScriptStruct Hero_1029.MaterialCurve_102941
// 0x0050 (0x0050 - 0x0000)
struct FMaterialCurve_102941 final
{
public:
	TMap<class FName, class UCurveBase*>          ParamCurvePair;                                    // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMaterialCurve_102941) == 0x000008, "Wrong alignment on FMaterialCurve_102941");
static_assert(sizeof(FMaterialCurve_102941) == 0x000050, "Wrong size on FMaterialCurve_102941");
static_assert(offsetof(FMaterialCurve_102941, ParamCurvePair) == 0x000000, "Member 'FMaterialCurve_102941::ParamCurvePair' has a wrong offset!");

}


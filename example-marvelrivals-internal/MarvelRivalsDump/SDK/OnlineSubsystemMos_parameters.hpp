#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemMos

#include "Basic.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemMos.MosUEClient.Connect
// 0x0018 (0x0018 - 0x0000)
struct MosUEClient_Connect final
{
public:
	class FString                                 IP;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Port;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MosUEClient_Connect) == 0x000008, "Wrong alignment on MosUEClient_Connect");
static_assert(sizeof(MosUEClient_Connect) == 0x000018, "Wrong size on MosUEClient_Connect");
static_assert(offsetof(MosUEClient_Connect, IP) == 0x000000, "Member 'MosUEClient_Connect::IP' has a wrong offset!");
static_assert(offsetof(MosUEClient_Connect, Port) == 0x000010, "Member 'MosUEClient_Connect::Port' has a wrong offset!");
static_assert(offsetof(MosUEClient_Connect, ReturnValue) == 0x000014, "Member 'MosUEClient_Connect::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.Disconnect
// 0x0001 (0x0001 - 0x0000)
struct MosUEClient_Disconnect final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_Disconnect) == 0x000001, "Wrong alignment on MosUEClient_Disconnect");
static_assert(sizeof(MosUEClient_Disconnect) == 0x000001, "Wrong size on MosUEClient_Disconnect");
static_assert(offsetof(MosUEClient_Disconnect, ReturnValue) == 0x000000, "Member 'MosUEClient_Disconnect::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.Initialize
// 0x0008 (0x0008 - 0x0000)
struct MosUEClient_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_Initialize) == 0x000008, "Wrong alignment on MosUEClient_Initialize");
static_assert(sizeof(MosUEClient_Initialize) == 0x000008, "Wrong size on MosUEClient_Initialize");
static_assert(offsetof(MosUEClient_Initialize, InGameInstance) == 0x000000, "Member 'MosUEClient_Initialize::InGameInstance' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.SendData
// 0x0010 (0x0010 - 0x0000)
struct MosUEClient_SendData final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_SendData) == 0x000008, "Wrong alignment on MosUEClient_SendData");
static_assert(sizeof(MosUEClient_SendData) == 0x000010, "Wrong size on MosUEClient_SendData");
static_assert(offsetof(MosUEClient_SendData, Data) == 0x000000, "Member 'MosUEClient_SendData::Data' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.GetConnectionID
// 0x0004 (0x0004 - 0x0000)
struct MosUEClient_GetConnectionID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_GetConnectionID) == 0x000004, "Wrong alignment on MosUEClient_GetConnectionID");
static_assert(sizeof(MosUEClient_GetConnectionID) == 0x000004, "Wrong size on MosUEClient_GetConnectionID");
static_assert(offsetof(MosUEClient_GetConnectionID, ReturnValue) == 0x000000, "Member 'MosUEClient_GetConnectionID::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.IsConnected
// 0x0001 (0x0001 - 0x0000)
struct MosUEClient_IsConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_IsConnected) == 0x000001, "Wrong alignment on MosUEClient_IsConnected");
static_assert(sizeof(MosUEClient_IsConnected) == 0x000001, "Wrong size on MosUEClient_IsConnected");
static_assert(offsetof(MosUEClient_IsConnected, ReturnValue) == 0x000000, "Member 'MosUEClient_IsConnected::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.IsDestroyed
// 0x0001 (0x0001 - 0x0000)
struct MosUEClient_IsDestroyed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_IsDestroyed) == 0x000001, "Wrong alignment on MosUEClient_IsDestroyed");
static_assert(sizeof(MosUEClient_IsDestroyed) == 0x000001, "Wrong size on MosUEClient_IsDestroyed");
static_assert(offsetof(MosUEClient_IsDestroyed, ReturnValue) == 0x000000, "Member 'MosUEClient_IsDestroyed::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemMos.MosUEClient.IsPending
// 0x0001 (0x0001 - 0x0000)
struct MosUEClient_IsPending final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MosUEClient_IsPending) == 0x000001, "Wrong alignment on MosUEClient_IsPending");
static_assert(sizeof(MosUEClient_IsPending) == 0x000001, "Wrong size on MosUEClient_IsPending");
static_assert(offsetof(MosUEClient_IsPending, ReturnValue) == 0x000000, "Member 'MosUEClient_IsPending::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103741

#include "Basic.hpp"

#include "Hero_1037_classes.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_103741.PyConfig_103741
// 0x0010 (0x1180 - 0x1170)
class UPyConfig_103741 final : public UConfig_103741
{
public:
	class UCurveFloat*                            SphereScaleCurve;                                  // 0x1170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_103741">();
	}
	static class UPyConfig_103741* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_103741>();
	}
};
static_assert(alignof(UPyConfig_103741) == 0x000010, "Wrong alignment on UPyConfig_103741");
static_assert(sizeof(UPyConfig_103741) == 0x001180, "Wrong size on UPyConfig_103741");
static_assert(offsetof(UPyConfig_103741, SphereScaleCurve) == 0x001170, "Member 'UPyConfig_103741::SphereScaleCurve' has a wrong offset!");

// PythonClass PyAbility_103741.PySummonedComp_10374101
// 0x0000 (0x0D10 - 0x0D10)
class UPySummonedComp_10374101 final : public UProtectiveSummonedComponent
{
public:
	void K2_OnBeginAgentTask();
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10374101">();
	}
	static class UPySummonedComp_10374101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10374101>();
	}
};
static_assert(alignof(UPySummonedComp_10374101) == 0x000010, "Wrong alignment on UPySummonedComp_10374101");
static_assert(sizeof(UPySummonedComp_10374101) == 0x000D10, "Wrong size on UPySummonedComp_10374101");

// PythonClass PyAbility_103741.PyAbility_103741
// 0x0000 (0x25F8 - 0x25F8)
class UPyAbility_103741 : public UMarvelAbility_SelectTarget
{
public:
	void BeginPlay();
	bool CheckTarget(const class AActor* InTarget);
	bool CanActivate();
	void K2_TryMakeTriggerContext(struct FGameplayEventData* EventData);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void MissileEventNotify();
	void K2_OnEndAbility(bool bWasCancelled);
	void MulticastAddIronByValueEvent(float RecoverValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_103741">();
	}
	static class UPyAbility_103741* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_103741>();
	}
};
static_assert(alignof(UPyAbility_103741) == 0x000008, "Wrong alignment on UPyAbility_103741");
static_assert(sizeof(UPyAbility_103741) == 0x0025F8, "Wrong size on UPyAbility_103741");

// PythonClass PyAbility_103741.PySummoned_10374101
// 0x0010 (0x0980 - 0x0970)
class APySummoned_10374101 : public ASummoned_10374101
{
public:
	FMulticastInlineDelegateProperty_             OnSummonedScaleChange;                             // 0x0970(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	void OnInstigatorDeath(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ParamHandle);
	void OnInstigatorEndPlay();
	void OnInstigatorCapsuleChange();
	void OnSetCapsuleSize();
	void OnSummonedScaleChange__DelegateSignature(float New_scale);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoned_10374101">();
	}
	static class APySummoned_10374101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoned_10374101>();
	}
};
static_assert(alignof(APySummoned_10374101) == 0x000010, "Wrong alignment on APySummoned_10374101");
static_assert(sizeof(APySummoned_10374101) == 0x000980, "Wrong size on APySummoned_10374101");
static_assert(offsetof(APySummoned_10374101, OnSummonedScaleChange) == 0x000970, "Member 'APySummoned_10374101::OnSummonedScaleChange' has a wrong offset!");

// PythonClass PyAbility_103741.PyCue_Summoner_Loop_10374101
// 0x0010 (0x0EA8 - 0x0E98)
class APyCue_Summoner_Loop_10374101 final : public ACueSummonerLoopCue_10374101
{
public:
	class UFXSystemAsset*                         StartFX2;                                          // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShieldHitAudioID;                                  // 0x0EA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void WhileActiveAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnRemoveAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnTakeDamage(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ParamHandle);
	void OnActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnAttributeChange(class AActor* SourceActor, const struct FAttributeModifierHandle& ParamHandle);
	bool OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Summoner_Loop_10374101">();
	}
	static class APyCue_Summoner_Loop_10374101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Summoner_Loop_10374101>();
	}
};
static_assert(alignof(APyCue_Summoner_Loop_10374101) == 0x000008, "Wrong alignment on APyCue_Summoner_Loop_10374101");
static_assert(sizeof(APyCue_Summoner_Loop_10374101) == 0x000EA8, "Wrong size on APyCue_Summoner_Loop_10374101");
static_assert(offsetof(APyCue_Summoner_Loop_10374101, StartFX2) == 0x000E98, "Member 'APyCue_Summoner_Loop_10374101::StartFX2' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10374101, ShieldHitAudioID) == 0x000EA0, "Member 'APyCue_Summoner_Loop_10374101::ShieldHitAudioID' has a wrong offset!");

}


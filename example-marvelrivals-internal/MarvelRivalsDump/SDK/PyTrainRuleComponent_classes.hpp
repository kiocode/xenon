#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyTrainRuleComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "MarvelLevel_structs.hpp"
#include "MarvelLevel_classes.hpp"
#include "PyRuleComponent_classes.hpp"
#include "Marvel_structs.hpp"


namespace SDK
{

// PythonClass PyTrainRuleComponent.PyTrainConfig
// 0x01C8 (0x01F8 - 0x0030)
class UPyTrainConfig final : public UMarvelRuleConfig
{
public:
	TMap<ETrainCustomOp, bool>                    CustomOpenMap;                                     // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAction, struct FGameplayTag>       TrainTag;                                          // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAreaType, TArray<int32>>           InTrainBuff;                                       // 0x00D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAreaType, TArray<int32>>           FriendTrainBuff;                                   // 0x0120(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAction, float>                     IntervalTimeRecord;                                // 0x0170(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<int32>                                 TeleportBuff;                                      // 0x01C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         AIDelayProcess;                                    // 0x01D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeleportCD;                                        // 0x01D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SelectBuffID;                                      // 0x01D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrainCooperateRespawn>         TrainRespawnList;                                  // 0x01E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         FriendHarmOpenDelay;                               // 0x01F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FriendHarmCloseDelay;                              // 0x01F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTrainConfig">();
	}
	static class UPyTrainConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTrainConfig>();
	}
};
static_assert(alignof(UPyTrainConfig) == 0x000008, "Wrong alignment on UPyTrainConfig");
static_assert(sizeof(UPyTrainConfig) == 0x0001F8, "Wrong size on UPyTrainConfig");
static_assert(offsetof(UPyTrainConfig, CustomOpenMap) == 0x000030, "Member 'UPyTrainConfig::CustomOpenMap' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, TrainTag) == 0x000080, "Member 'UPyTrainConfig::TrainTag' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, InTrainBuff) == 0x0000D0, "Member 'UPyTrainConfig::InTrainBuff' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, FriendTrainBuff) == 0x000120, "Member 'UPyTrainConfig::FriendTrainBuff' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, IntervalTimeRecord) == 0x000170, "Member 'UPyTrainConfig::IntervalTimeRecord' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, TeleportBuff) == 0x0001C0, "Member 'UPyTrainConfig::TeleportBuff' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, AIDelayProcess) == 0x0001D0, "Member 'UPyTrainConfig::AIDelayProcess' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, TeleportCD) == 0x0001D4, "Member 'UPyTrainConfig::TeleportCD' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, SelectBuffID) == 0x0001D8, "Member 'UPyTrainConfig::SelectBuffID' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, TrainRespawnList) == 0x0001E0, "Member 'UPyTrainConfig::TrainRespawnList' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, FriendHarmOpenDelay) == 0x0001F0, "Member 'UPyTrainConfig::FriendHarmOpenDelay' has a wrong offset!");
static_assert(offsetof(UPyTrainConfig, FriendHarmCloseDelay) == 0x0001F4, "Member 'UPyTrainConfig::FriendHarmCloseDelay' has a wrong offset!");

// PythonClass PyTrainRuleComponent.PyTrainRuleComponent
// 0x01E0 (0x02D0 - 0x00F0)
class UPyTrainRuleComponent final : public UPyRuleComponent
{
public:
	int32                                         HolderUID;                                         // 0x00F0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETrainCustomOp, bool>                    CustomOpenMap;                                     // 0x00F8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAction, struct FGameplayTag>       TrainTag;                                          // 0x0148(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAreaType, TArray<int32>>           InTrainBuff;                                       // 0x0198(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAreaType, TArray<int32>>           FriendTrainBuff;                                   // 0x01E8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         SelectBuffID;                                      // 0x0238(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 TeleportBuff;                                      // 0x0240(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<ETrainAction, float>                     IntervalTimeRecord;                                // 0x0250(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bOpenFriendHarm;                                   // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CloseSkillCDList;                                  // 0x02A8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	int32                                         AIDelayProcess;                                    // 0x02B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeleportCD;                                        // 0x02BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrainCooperateRespawn>         TrainRespawnList;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void NotifyHolderChange(int32 Holder_uid);
	void OnRep_HolderUID();
	void CustomSettingChanged(ETrainCustomOp Op, bool Change_to);
	void ChangePlayerStateBattleSide(class APlayerState* PS, EBattleSide battle_side);
	void OnRep_OpenFriendHarm();
	void OnRep_CloseSkillCDList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTrainRuleComponent">();
	}
	static class UPyTrainRuleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTrainRuleComponent>();
	}
};
static_assert(alignof(UPyTrainRuleComponent) == 0x000008, "Wrong alignment on UPyTrainRuleComponent");
static_assert(sizeof(UPyTrainRuleComponent) == 0x0002D0, "Wrong size on UPyTrainRuleComponent");
static_assert(offsetof(UPyTrainRuleComponent, HolderUID) == 0x0000F0, "Member 'UPyTrainRuleComponent::HolderUID' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, CustomOpenMap) == 0x0000F8, "Member 'UPyTrainRuleComponent::CustomOpenMap' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, TrainTag) == 0x000148, "Member 'UPyTrainRuleComponent::TrainTag' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, InTrainBuff) == 0x000198, "Member 'UPyTrainRuleComponent::InTrainBuff' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, FriendTrainBuff) == 0x0001E8, "Member 'UPyTrainRuleComponent::FriendTrainBuff' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, SelectBuffID) == 0x000238, "Member 'UPyTrainRuleComponent::SelectBuffID' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, TeleportBuff) == 0x000240, "Member 'UPyTrainRuleComponent::TeleportBuff' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, IntervalTimeRecord) == 0x000250, "Member 'UPyTrainRuleComponent::IntervalTimeRecord' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, bOpenFriendHarm) == 0x0002A0, "Member 'UPyTrainRuleComponent::bOpenFriendHarm' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, CloseSkillCDList) == 0x0002A8, "Member 'UPyTrainRuleComponent::CloseSkillCDList' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, AIDelayProcess) == 0x0002B8, "Member 'UPyTrainRuleComponent::AIDelayProcess' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, TeleportCD) == 0x0002BC, "Member 'UPyTrainRuleComponent::TeleportCD' has a wrong offset!");
static_assert(offsetof(UPyTrainRuleComponent, TrainRespawnList) == 0x0002C0, "Member 'UPyTrainRuleComponent::TrainRespawnList' has a wrong offset!");

}


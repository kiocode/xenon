#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PySynergy_100001

#include "Basic.hpp"

#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PySynergy_100001.PyAbility_10000101.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_10000101_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_CanActivate) == 0x000001, "Wrong alignment on PyAbility_10000101_CanActivate");
static_assert(sizeof(PyAbility_10000101_CanActivate) == 0x000001, "Wrong size on PyAbility_10000101_CanActivate");
static_assert(offsetof(PyAbility_10000101_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_10000101_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnHeroChanged
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_10000101_OnHeroChanged final
{
public:
	class AMarvelPlayerState*                     Player_state;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Hero_id;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_OnHeroChanged) == 0x000008, "Wrong alignment on PyAbility_10000101_OnHeroChanged");
static_assert(sizeof(PyAbility_10000101_OnHeroChanged) == 0x000010, "Wrong size on PyAbility_10000101_OnHeroChanged");
static_assert(offsetof(PyAbility_10000101_OnHeroChanged, Player_state) == 0x000000, "Member 'PyAbility_10000101_OnHeroChanged::Player_state' has a wrong offset!");
static_assert(offsetof(PyAbility_10000101_OnHeroChanged, Hero_id) == 0x000008, "Member 'PyAbility_10000101_OnHeroChanged::Hero_id' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnBondStateChanged
// 0x00A0 (0x00A0 - 0x0000)
struct PyAbility_10000101_OnBondStateChanged final
{
public:
	struct FBondInstance                          bind;                                              // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm)
	TArray<class AMarvelBaseCharacter*>           Triggers;                                          // 0x0090(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_10000101_OnBondStateChanged) == 0x000008, "Wrong alignment on PyAbility_10000101_OnBondStateChanged");
static_assert(sizeof(PyAbility_10000101_OnBondStateChanged) == 0x0000A0, "Wrong size on PyAbility_10000101_OnBondStateChanged");
static_assert(offsetof(PyAbility_10000101_OnBondStateChanged, bind) == 0x000000, "Member 'PyAbility_10000101_OnBondStateChanged::bind' has a wrong offset!");
static_assert(offsetof(PyAbility_10000101_OnBondStateChanged, Triggers) == 0x000090, "Member 'PyAbility_10000101_OnBondStateChanged::Triggers' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnPlayerKilled
// 0x06B8 (0x06B8 - 0x0000)
struct PyAbility_10000101_OnPlayerKilled final
{
public:
	struct FAttributeModifierParameter            Param;                                             // 0x0000(0x06B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_10000101_OnPlayerKilled) == 0x000008, "Wrong alignment on PyAbility_10000101_OnPlayerKilled");
static_assert(sizeof(PyAbility_10000101_OnPlayerKilled) == 0x0006B8, "Wrong size on PyAbility_10000101_OnPlayerKilled");
static_assert(offsetof(PyAbility_10000101_OnPlayerKilled, Param) == 0x000000, "Member 'PyAbility_10000101_OnPlayerKilled::Param' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnCharacterDeath
// 0x0028 (0x0028 - 0x0000)
struct PyAbility_10000101_OnCharacterDeath final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParameterHandle;                                   // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_OnCharacterDeath) == 0x000008, "Wrong alignment on PyAbility_10000101_OnCharacterDeath");
static_assert(sizeof(PyAbility_10000101_OnCharacterDeath) == 0x000028, "Wrong size on PyAbility_10000101_OnCharacterDeath");
static_assert(offsetof(PyAbility_10000101_OnCharacterDeath, DamageCauser) == 0x000000, "Member 'PyAbility_10000101_OnCharacterDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(PyAbility_10000101_OnCharacterDeath, TargetActor) == 0x000008, "Member 'PyAbility_10000101_OnCharacterDeath::TargetActor' has a wrong offset!");
static_assert(offsetof(PyAbility_10000101_OnCharacterDeath, ParameterHandle) == 0x000010, "Member 'PyAbility_10000101_OnCharacterDeath::ParameterHandle' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnSummonedSpawned
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_10000101_OnSummonedSpawned final
{
public:
	class AActor*                                 SpawnActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_OnSummonedSpawned) == 0x000008, "Wrong alignment on PyAbility_10000101_OnSummonedSpawned");
static_assert(sizeof(PyAbility_10000101_OnSummonedSpawned) == 0x000008, "Wrong size on PyAbility_10000101_OnSummonedSpawned");
static_assert(offsetof(PyAbility_10000101_OnSummonedSpawned, SpawnActor) == 0x000000, "Member 'PyAbility_10000101_OnSummonedSpawned::SpawnActor' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnSummonedEndTask
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_10000101_OnSummonedEndTask final
{
public:
	class AActor*                                 SpawnActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_OnSummonedEndTask) == 0x000008, "Wrong alignment on PyAbility_10000101_OnSummonedEndTask");
static_assert(sizeof(PyAbility_10000101_OnSummonedEndTask) == 0x000008, "Wrong size on PyAbility_10000101_OnSummonedEndTask");
static_assert(offsetof(PyAbility_10000101_OnSummonedEndTask, SpawnActor) == 0x000000, "Member 'PyAbility_10000101_OnSummonedEndTask::SpawnActor' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.OnSpawnCharacter
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_10000101_OnSpawnCharacter final
{
public:
	class AMarvelBaseCharacter*                   TargetCharacter;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpawnMethod                                  SpawnMethod;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_OnSpawnCharacter) == 0x000008, "Wrong alignment on PyAbility_10000101_OnSpawnCharacter");
static_assert(sizeof(PyAbility_10000101_OnSpawnCharacter) == 0x000010, "Wrong size on PyAbility_10000101_OnSpawnCharacter");
static_assert(offsetof(PyAbility_10000101_OnSpawnCharacter, TargetCharacter) == 0x000000, "Member 'PyAbility_10000101_OnSpawnCharacter::TargetCharacter' has a wrong offset!");
static_assert(offsetof(PyAbility_10000101_OnSpawnCharacter, SpawnMethod) == 0x000008, "Member 'PyAbility_10000101_OnSpawnCharacter::SpawnMethod' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_10000101_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_10000101_K2_OnEndAbility");
static_assert(sizeof(PyAbility_10000101_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_10000101_K2_OnEndAbility");
static_assert(offsetof(PyAbility_10000101_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_10000101_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.NativeOnMontageBlendOut
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_10000101_NativeOnMontageBlendOut final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_NativeOnMontageBlendOut) == 0x000008, "Wrong alignment on PyAbility_10000101_NativeOnMontageBlendOut");
static_assert(sizeof(PyAbility_10000101_NativeOnMontageBlendOut) == 0x000010, "Wrong size on PyAbility_10000101_NativeOnMontageBlendOut");
static_assert(offsetof(PyAbility_10000101_NativeOnMontageBlendOut, Tag) == 0x000000, "Member 'PyAbility_10000101_NativeOnMontageBlendOut::Tag' has a wrong offset!");

// PythonFunction PySynergy_100001.PyAbility_10000101.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_10000101_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10000101_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_10000101_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_10000101_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_10000101_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_10000101_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_10000101_NativeOnMontageEvent::Tag' has a wrong offset!");

}


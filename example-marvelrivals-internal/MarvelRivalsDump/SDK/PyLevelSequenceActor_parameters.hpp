#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelSequenceActor

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyLevelSequenceActor.PyLevelSequenceActor.S_payload_reach
// 0x0010 (0x0010 - 0x0000)
struct PyLevelSequenceActor_S_payload_reach final
{
public:
	struct FGameplayTag                           Event_name;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	float                                         Event_args;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSequenceActor_S_payload_reach) == 0x000004, "Wrong alignment on PyLevelSequenceActor_S_payload_reach");
static_assert(sizeof(PyLevelSequenceActor_S_payload_reach) == 0x000010, "Wrong size on PyLevelSequenceActor_S_payload_reach");
static_assert(offsetof(PyLevelSequenceActor_S_payload_reach, Event_name) == 0x000000, "Member 'PyLevelSequenceActor_S_payload_reach::Event_name' has a wrong offset!");
static_assert(offsetof(PyLevelSequenceActor_S_payload_reach, Event_args) == 0x00000C, "Member 'PyLevelSequenceActor_S_payload_reach::Event_args' has a wrong offset!");

// PythonFunction PyLevelSequenceActor.PyLevelSequenceActor.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSequenceActor_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSequenceActor_ReceiveTick) == 0x000004, "Wrong alignment on PyLevelSequenceActor_ReceiveTick");
static_assert(sizeof(PyLevelSequenceActor_ReceiveTick) == 0x000004, "Wrong size on PyLevelSequenceActor_ReceiveTick");
static_assert(offsetof(PyLevelSequenceActor_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PyLevelSequenceActor_ReceiveTick::DeltaSeconds' has a wrong offset!");

// PythonFunction PyLevelSequenceActor.PyLevelSequenceActor.PlayReverseFromTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSequenceActor_PlayReverseFromTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSequenceActor_PlayReverseFromTime) == 0x000004, "Wrong alignment on PyLevelSequenceActor_PlayReverseFromTime");
static_assert(sizeof(PyLevelSequenceActor_PlayReverseFromTime) == 0x000004, "Wrong size on PyLevelSequenceActor_PlayReverseFromTime");
static_assert(offsetof(PyLevelSequenceActor_PlayReverseFromTime, Time) == 0x000000, "Member 'PyLevelSequenceActor_PlayReverseFromTime::Time' has a wrong offset!");

// PythonFunction PyLevelSequenceActor.PyLevelSequenceActor.PlayFromTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSequenceActor_PlayFromTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSequenceActor_PlayFromTime) == 0x000004, "Wrong alignment on PyLevelSequenceActor_PlayFromTime");
static_assert(sizeof(PyLevelSequenceActor_PlayFromTime) == 0x000004, "Wrong size on PyLevelSequenceActor_PlayFromTime");
static_assert(offsetof(PyLevelSequenceActor_PlayFromTime, Time) == 0x000000, "Member 'PyLevelSequenceActor_PlayFromTime::Time' has a wrong offset!");

// PythonFunction PyLevelSequenceActor.PyLevelSequenceActor.SetPlayRate
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSequenceActor_SetPlayRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Double_end;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSequenceActor_SetPlayRate) == 0x000004, "Wrong alignment on PyLevelSequenceActor_SetPlayRate");
static_assert(sizeof(PyLevelSequenceActor_SetPlayRate) == 0x000008, "Wrong size on PyLevelSequenceActor_SetPlayRate");
static_assert(offsetof(PyLevelSequenceActor_SetPlayRate, Rate) == 0x000000, "Member 'PyLevelSequenceActor_SetPlayRate::Rate' has a wrong offset!");
static_assert(offsetof(PyLevelSequenceActor_SetPlayRate, Double_end) == 0x000004, "Member 'PyLevelSequenceActor_SetPlayRate::Double_end' has a wrong offset!");

// PythonFunction PyLevelSequenceActor.PyLevelSequenceActor.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PyLevelSequenceActor_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSequenceActor_ReceiveEndPlay) == 0x000001, "Wrong alignment on PyLevelSequenceActor_ReceiveEndPlay");
static_assert(sizeof(PyLevelSequenceActor_ReceiveEndPlay) == 0x000001, "Wrong size on PyLevelSequenceActor_ReceiveEndPlay");
static_assert(offsetof(PyLevelSequenceActor_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PyLevelSequenceActor_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}


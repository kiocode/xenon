#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_League_Fight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_League_Fight.PyWidget_League_Fight
// 0x0048 (0x0638 - 0x05F0)
class UPyWidget_League_Fight final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Defense_Color;                                     // 0x05EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Attack_Color;                                      // 0x05FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Current_Color;                                     // 0x060C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Empty_Color;                                       // 0x061C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimDelayTime;                                     // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLoading;                                         // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_League_Fight">();
	}
	static class UPyWidget_League_Fight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_League_Fight>();
	}
};
static_assert(alignof(UPyWidget_League_Fight) == 0x000008, "Wrong alignment on UPyWidget_League_Fight");
static_assert(sizeof(UPyWidget_League_Fight) == 0x000638, "Wrong size on UPyWidget_League_Fight");
static_assert(offsetof(UPyWidget_League_Fight, Defense_Color) == 0x0005EC, "Member 'UPyWidget_League_Fight::Defense_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_League_Fight, Attack_Color) == 0x0005FC, "Member 'UPyWidget_League_Fight::Attack_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_League_Fight, Current_Color) == 0x00060C, "Member 'UPyWidget_League_Fight::Current_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_League_Fight, Empty_Color) == 0x00061C, "Member 'UPyWidget_League_Fight::Empty_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_League_Fight, AnimDelayTime) == 0x00062C, "Member 'UPyWidget_League_Fight::AnimDelayTime' has a wrong offset!");
static_assert(offsetof(UPyWidget_League_Fight, IsLoading) == 0x000630, "Member 'UPyWidget_League_Fight::IsLoading' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1046

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK::Params
{

// Function Hero_1046.Ability_104621.SetMaxEnergyBallNum
// 0x0004 (0x0004 - 0x0000)
struct Ability_104621_SetMaxEnergyBallNum final
{
public:
	int32                                         InNum;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_104621_SetMaxEnergyBallNum) == 0x000004, "Wrong alignment on Ability_104621_SetMaxEnergyBallNum");
static_assert(sizeof(Ability_104621_SetMaxEnergyBallNum) == 0x000004, "Wrong size on Ability_104621_SetMaxEnergyBallNum");
static_assert(offsetof(Ability_104621_SetMaxEnergyBallNum, InNum) == 0x000000, "Member 'Ability_104621_SetMaxEnergyBallNum::InNum' has a wrong offset!");

// Function Hero_1046.Ability_104621.OnAbilityActiveFailed
// 0x0070 (0x0070 - 0x0000)
struct Ability_104621_OnAbilityActiveFailed final
{
public:
	const class UGameplayAbility*                 InAbility;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_104621_OnAbilityActiveFailed) == 0x000008, "Wrong alignment on Ability_104621_OnAbilityActiveFailed");
static_assert(sizeof(Ability_104621_OnAbilityActiveFailed) == 0x000070, "Wrong size on Ability_104621_OnAbilityActiveFailed");
static_assert(offsetof(Ability_104621_OnAbilityActiveFailed, InAbility) == 0x000000, "Member 'Ability_104621_OnAbilityActiveFailed::InAbility' has a wrong offset!");
static_assert(offsetof(Ability_104621_OnAbilityActiveFailed, Tags) == 0x000008, "Member 'Ability_104621_OnAbilityActiveFailed::Tags' has a wrong offset!");

// Function Hero_1046.Cue_Scope_Loop_10464101.SpawnLinkEffect
// 0x0010 (0x0010 - 0x0000)
struct Cue_Scope_Loop_10464101_SpawnLinkEffect final
{
public:
	class ACharacter*                             FromCharacter;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACharacter*                             ToCharacter;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Scope_Loop_10464101_SpawnLinkEffect) == 0x000008, "Wrong alignment on Cue_Scope_Loop_10464101_SpawnLinkEffect");
static_assert(sizeof(Cue_Scope_Loop_10464101_SpawnLinkEffect) == 0x000010, "Wrong size on Cue_Scope_Loop_10464101_SpawnLinkEffect");
static_assert(offsetof(Cue_Scope_Loop_10464101_SpawnLinkEffect, FromCharacter) == 0x000000, "Member 'Cue_Scope_Loop_10464101_SpawnLinkEffect::FromCharacter' has a wrong offset!");
static_assert(offsetof(Cue_Scope_Loop_10464101_SpawnLinkEffect, ToCharacter) == 0x000008, "Member 'Cue_Scope_Loop_10464101_SpawnLinkEffect::ToCharacter' has a wrong offset!");

// Function Hero_1046.Ability_104651.OnOriginLinkGroupEnd
// 0x0008 (0x0008 - 0x0000)
struct Ability_104651_OnOriginLinkGroupEnd final
{
public:
	const class AActor*                           BuffInstigator;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_104651_OnOriginLinkGroupEnd) == 0x000008, "Wrong alignment on Ability_104651_OnOriginLinkGroupEnd");
static_assert(sizeof(Ability_104651_OnOriginLinkGroupEnd) == 0x000008, "Wrong size on Ability_104651_OnOriginLinkGroupEnd");
static_assert(offsetof(Ability_104651_OnOriginLinkGroupEnd, BuffInstigator) == 0x000000, "Member 'Ability_104651_OnOriginLinkGroupEnd::BuffInstigator' has a wrong offset!");

// Function Hero_1046.Cue_Ability_Loop_10465101.SpawnLinkEffects
// 0x0010 (0x0010 - 0x0000)
struct Cue_Ability_Loop_10465101_SpawnLinkEffects final
{
public:
	TArray<class AActor*>                         LinkTargets;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Ability_Loop_10465101_SpawnLinkEffects) == 0x000008, "Wrong alignment on Cue_Ability_Loop_10465101_SpawnLinkEffects");
static_assert(sizeof(Cue_Ability_Loop_10465101_SpawnLinkEffects) == 0x000010, "Wrong size on Cue_Ability_Loop_10465101_SpawnLinkEffects");
static_assert(offsetof(Cue_Ability_Loop_10465101_SpawnLinkEffects, LinkTargets) == 0x000000, "Member 'Cue_Ability_Loop_10465101_SpawnLinkEffects::LinkTargets' has a wrong offset!");

// Function Hero_1046.Cue_Buff_10465101.OnBuffOwnerDeath
// 0x0028 (0x0028 - 0x0000)
struct Cue_Buff_10465101_OnBuffOwnerDeath final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Buff_10465101_OnBuffOwnerDeath) == 0x000008, "Wrong alignment on Cue_Buff_10465101_OnBuffOwnerDeath");
static_assert(sizeof(Cue_Buff_10465101_OnBuffOwnerDeath) == 0x000028, "Wrong size on Cue_Buff_10465101_OnBuffOwnerDeath");
static_assert(offsetof(Cue_Buff_10465101_OnBuffOwnerDeath, DamageCauser) == 0x000000, "Member 'Cue_Buff_10465101_OnBuffOwnerDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(Cue_Buff_10465101_OnBuffOwnerDeath, TargetActor) == 0x000008, "Member 'Cue_Buff_10465101_OnBuffOwnerDeath::TargetActor' has a wrong offset!");
static_assert(offsetof(Cue_Buff_10465101_OnBuffOwnerDeath, ModifierParameterHandle) == 0x000010, "Member 'Cue_Buff_10465101_OnBuffOwnerDeath::ModifierParameterHandle' has a wrong offset!");

// Function Hero_1046.Ability_104661.GetTraceTransform
// 0x0001 (0x0001 - 0x0000)
struct Ability_104661_GetTraceTransform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_104661_GetTraceTransform) == 0x000001, "Wrong alignment on Ability_104661_GetTraceTransform");
static_assert(sizeof(Ability_104661_GetTraceTransform) == 0x000001, "Wrong size on Ability_104661_GetTraceTransform");
static_assert(offsetof(Ability_104661_GetTraceTransform, ReturnValue) == 0x000000, "Member 'Ability_104661_GetTraceTransform::ReturnValue' has a wrong offset!");

// Function Hero_1046.Ability_104661.SetResurrectedActors
// 0x0010 (0x0010 - 0x0000)
struct Ability_104661_SetResurrectedActors final
{
public:
	TArray<int32>                                 InActors;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_104661_SetResurrectedActors) == 0x000008, "Wrong alignment on Ability_104661_SetResurrectedActors");
static_assert(sizeof(Ability_104661_SetResurrectedActors) == 0x000010, "Wrong size on Ability_104661_SetResurrectedActors");
static_assert(offsetof(Ability_104661_SetResurrectedActors, InActors) == 0x000000, "Member 'Ability_104661_SetResurrectedActors::InActors' has a wrong offset!");

// Function Hero_1046.EffectAbility_104661.StopKillCamImmediately
// 0x0001 (0x0001 - 0x0000)
struct EffectAbility_104661_StopKillCamImmediately final
{
public:
	bool                                          bSet;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EffectAbility_104661_StopKillCamImmediately) == 0x000001, "Wrong alignment on EffectAbility_104661_StopKillCamImmediately");
static_assert(sizeof(EffectAbility_104661_StopKillCamImmediately) == 0x000001, "Wrong size on EffectAbility_104661_StopKillCamImmediately");
static_assert(offsetof(EffectAbility_104661_StopKillCamImmediately, bSet) == 0x000000, "Member 'EffectAbility_104661_StopKillCamImmediately::bSet' has a wrong offset!");

// Function Hero_1046.Cue_Buff_10466103.OnOwnerRebornReset
// 0x0740 (0x0740 - 0x0000)
struct Cue_Buff_10466103_OnOwnerRebornReset final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterRebornParam                  Param;                                             // 0x0010(0x0730)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Buff_10466103_OnOwnerRebornReset) == 0x000010, "Wrong alignment on Cue_Buff_10466103_OnOwnerRebornReset");
static_assert(sizeof(Cue_Buff_10466103_OnOwnerRebornReset) == 0x000740, "Wrong size on Cue_Buff_10466103_OnOwnerRebornReset");
static_assert(offsetof(Cue_Buff_10466103_OnOwnerRebornReset, Target) == 0x000000, "Member 'Cue_Buff_10466103_OnOwnerRebornReset::Target' has a wrong offset!");
static_assert(offsetof(Cue_Buff_10466103_OnOwnerRebornReset, Param) == 0x000010, "Member 'Cue_Buff_10466103_OnOwnerRebornReset::Param' has a wrong offset!");

// Function Hero_1046.AdamWarlockCharacter.AssignDeathCueTag
// 0x000C (0x000C - 0x0000)
struct AdamWarlockCharacter_AssignDeathCueTag final
{
public:
	struct FGameplayTag                           InDeathCue;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdamWarlockCharacter_AssignDeathCueTag) == 0x000004, "Wrong alignment on AdamWarlockCharacter_AssignDeathCueTag");
static_assert(sizeof(AdamWarlockCharacter_AssignDeathCueTag) == 0x00000C, "Wrong size on AdamWarlockCharacter_AssignDeathCueTag");
static_assert(offsetof(AdamWarlockCharacter_AssignDeathCueTag, InDeathCue) == 0x000000, "Member 'AdamWarlockCharacter_AssignDeathCueTag::InDeathCue' has a wrong offset!");

// Function Hero_1046.AdamWarlockCharacter.CanResurrectSelf
// 0x0020 (0x0020 - 0x0000)
struct AdamWarlockCharacter_CanResurrectSelf final
{
public:
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AdamWarlockCharacter_CanResurrectSelf) == 0x000008, "Wrong alignment on AdamWarlockCharacter_CanResurrectSelf");
static_assert(sizeof(AdamWarlockCharacter_CanResurrectSelf) == 0x000020, "Wrong size on AdamWarlockCharacter_CanResurrectSelf");
static_assert(offsetof(AdamWarlockCharacter_CanResurrectSelf, ModifierParameterHandle) == 0x000000, "Member 'AdamWarlockCharacter_CanResurrectSelf::ModifierParameterHandle' has a wrong offset!");
static_assert(offsetof(AdamWarlockCharacter_CanResurrectSelf, ReturnValue) == 0x000018, "Member 'AdamWarlockCharacter_CanResurrectSelf::ReturnValue' has a wrong offset!");

// Function Hero_1046.EpicMomentAction_1046.OnActorResurrected
// 0x06C8 (0x06C8 - 0x0000)
struct EpicMomentAction_1046_OnActorResurrected final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierParameter            ModifierParameter;                                 // 0x0010(0x06B8)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(EpicMomentAction_1046_OnActorResurrected) == 0x000008, "Wrong alignment on EpicMomentAction_1046_OnActorResurrected");
static_assert(sizeof(EpicMomentAction_1046_OnActorResurrected) == 0x0006C8, "Wrong size on EpicMomentAction_1046_OnActorResurrected");
static_assert(offsetof(EpicMomentAction_1046_OnActorResurrected, Instigator) == 0x000000, "Member 'EpicMomentAction_1046_OnActorResurrected::Instigator' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1046_OnActorResurrected, Target) == 0x000008, "Member 'EpicMomentAction_1046_OnActorResurrected::Target' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1046_OnActorResurrected, ModifierParameter) == 0x000010, "Member 'EpicMomentAction_1046_OnActorResurrected::ModifierParameter' has a wrong offset!");

}


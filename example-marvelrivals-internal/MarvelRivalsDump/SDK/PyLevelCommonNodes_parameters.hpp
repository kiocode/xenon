#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelCommonNodes

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SpawnSummoner
// 0x0060 (0x0060 - 0x0000)
struct PyLevelCommonNodes_SpawnSummoner final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SummonerId;                                        // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnCount;                                        // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityScale;                                     // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               InitialRototor;                                    // 0x0030(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               GapRotator;                                        // 0x0048(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PyLevelCommonNodes_SpawnSummoner) == 0x000008, "Wrong alignment on PyLevelCommonNodes_SpawnSummoner");
static_assert(sizeof(PyLevelCommonNodes_SpawnSummoner) == 0x000060, "Wrong size on PyLevelCommonNodes_SpawnSummoner");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, Instance) == 0x000000, "Member 'PyLevelCommonNodes_SpawnSummoner::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, Location) == 0x000008, "Member 'PyLevelCommonNodes_SpawnSummoner::Location' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, SummonerId) == 0x000020, "Member 'PyLevelCommonNodes_SpawnSummoner::SummonerId' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, SpawnCount) == 0x000024, "Member 'PyLevelCommonNodes_SpawnSummoner::SpawnCount' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, VelocityScale) == 0x000028, "Member 'PyLevelCommonNodes_SpawnSummoner::VelocityScale' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, InitialRototor) == 0x000030, "Member 'PyLevelCommonNodes_SpawnSummoner::InitialRototor' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummoner, GapRotator) == 0x000048, "Member 'PyLevelCommonNodes_SpawnSummoner::GapRotator' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SetEditorLevelStreaming
// 0x0010 (0x0010 - 0x0000)
struct PyLevelCommonNodes_SetEditorLevelStreaming final
{
public:
	class ULevelStreaming*                        Level_streaming;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_SetEditorLevelStreaming) == 0x000008, "Wrong alignment on PyLevelCommonNodes_SetEditorLevelStreaming");
static_assert(sizeof(PyLevelCommonNodes_SetEditorLevelStreaming) == 0x000010, "Wrong size on PyLevelCommonNodes_SetEditorLevelStreaming");
static_assert(offsetof(PyLevelCommonNodes_SetEditorLevelStreaming, Level_streaming) == 0x000000, "Member 'PyLevelCommonNodes_SetEditorLevelStreaming::Level_streaming' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SetEditorLevelStreaming, Visible) == 0x000008, "Member 'PyLevelCommonNodes_SetEditorLevelStreaming::Visible' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.StartShrinkCircle
// 0x0018 (0x0018 - 0x0000)
struct PyLevelCommonNodes_StartShrinkCircle final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ActorName;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_StartShrinkCircle) == 0x000008, "Wrong alignment on PyLevelCommonNodes_StartShrinkCircle");
static_assert(sizeof(PyLevelCommonNodes_StartShrinkCircle) == 0x000018, "Wrong size on PyLevelCommonNodes_StartShrinkCircle");
static_assert(offsetof(PyLevelCommonNodes_StartShrinkCircle, Instance) == 0x000000, "Member 'PyLevelCommonNodes_StartShrinkCircle::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_StartShrinkCircle, ActorName) == 0x000008, "Member 'PyLevelCommonNodes_StartShrinkCircle::ActorName' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.ChangeAttackTime
// 0x0010 (0x0010 - 0x0000)
struct PyLevelCommonNodes_ChangeAttackTime final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         NewTime;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCover;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_ChangeAttackTime) == 0x000008, "Wrong alignment on PyLevelCommonNodes_ChangeAttackTime");
static_assert(sizeof(PyLevelCommonNodes_ChangeAttackTime) == 0x000010, "Wrong size on PyLevelCommonNodes_ChangeAttackTime");
static_assert(offsetof(PyLevelCommonNodes_ChangeAttackTime, Instance) == 0x000000, "Member 'PyLevelCommonNodes_ChangeAttackTime::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_ChangeAttackTime, NewTime) == 0x000008, "Member 'PyLevelCommonNodes_ChangeAttackTime::NewTime' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_ChangeAttackTime, IsCover) == 0x00000C, "Member 'PyLevelCommonNodes_ChangeAttackTime::IsCover' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.DisableLastSelectHero
// 0x0010 (0x0010 - 0x0000)
struct PyLevelCommonNodes_DisableLastSelectHero final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMarvelBaseCharacter*                   Character;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_DisableLastSelectHero) == 0x000008, "Wrong alignment on PyLevelCommonNodes_DisableLastSelectHero");
static_assert(sizeof(PyLevelCommonNodes_DisableLastSelectHero) == 0x000010, "Wrong size on PyLevelCommonNodes_DisableLastSelectHero");
static_assert(offsetof(PyLevelCommonNodes_DisableLastSelectHero, Instance) == 0x000000, "Member 'PyLevelCommonNodes_DisableLastSelectHero::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_DisableLastSelectHero, Character) == 0x000008, "Member 'PyLevelCommonNodes_DisableLastSelectHero::Character' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.ApplyBuffToTarget
// 0x0018 (0x0018 - 0x0000)
struct PyLevelCommonNodes_ApplyBuffToTarget final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMarvelBaseCharacter*                   TargetChar;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BuffID;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_ApplyBuffToTarget) == 0x000008, "Wrong alignment on PyLevelCommonNodes_ApplyBuffToTarget");
static_assert(sizeof(PyLevelCommonNodes_ApplyBuffToTarget) == 0x000018, "Wrong size on PyLevelCommonNodes_ApplyBuffToTarget");
static_assert(offsetof(PyLevelCommonNodes_ApplyBuffToTarget, Instance) == 0x000000, "Member 'PyLevelCommonNodes_ApplyBuffToTarget::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_ApplyBuffToTarget, TargetChar) == 0x000008, "Member 'PyLevelCommonNodes_ApplyBuffToTarget::TargetChar' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_ApplyBuffToTarget, BuffID) == 0x000010, "Member 'PyLevelCommonNodes_ApplyBuffToTarget::BuffID' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_ApplyBuffToTarget, DelayTime) == 0x000014, "Member 'PyLevelCommonNodes_ApplyBuffToTarget::DelayTime' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SpawnSummonerWhenCharDeath
// 0x0010 (0x0010 - 0x0000)
struct PyLevelCommonNodes_SpawnSummonerWhenCharDeath final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SummonerId;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELevelSummonerSide                            BattleSideParamter;                                // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_SpawnSummonerWhenCharDeath) == 0x000008, "Wrong alignment on PyLevelCommonNodes_SpawnSummonerWhenCharDeath");
static_assert(sizeof(PyLevelCommonNodes_SpawnSummonerWhenCharDeath) == 0x000010, "Wrong size on PyLevelCommonNodes_SpawnSummonerWhenCharDeath");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummonerWhenCharDeath, Instance) == 0x000000, "Member 'PyLevelCommonNodes_SpawnSummonerWhenCharDeath::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummonerWhenCharDeath, SummonerId) == 0x000008, "Member 'PyLevelCommonNodes_SpawnSummonerWhenCharDeath::SummonerId' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SpawnSummonerWhenCharDeath, BattleSideParamter) == 0x00000C, "Member 'PyLevelCommonNodes_SpawnSummonerWhenCharDeath::BattleSideParamter' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SetMultiRoundParameters
// 0x0010 (0x0010 - 0x0000)
struct PyLevelCommonNodes_SetMultiRoundParameters final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         WinRoundNum;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRoundNum;                                     // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_SetMultiRoundParameters) == 0x000008, "Wrong alignment on PyLevelCommonNodes_SetMultiRoundParameters");
static_assert(sizeof(PyLevelCommonNodes_SetMultiRoundParameters) == 0x000010, "Wrong size on PyLevelCommonNodes_SetMultiRoundParameters");
static_assert(offsetof(PyLevelCommonNodes_SetMultiRoundParameters, Instance) == 0x000000, "Member 'PyLevelCommonNodes_SetMultiRoundParameters::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SetMultiRoundParameters, WinRoundNum) == 0x000008, "Member 'PyLevelCommonNodes_SetMultiRoundParameters::WinRoundNum' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_SetMultiRoundParameters, TotalRoundNum) == 0x00000C, "Member 'PyLevelCommonNodes_SetMultiRoundParameters::TotalRoundNum' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.CloseDoor
// 0x0018 (0x0018 - 0x0000)
struct PyLevelCommonNodes_CloseDoor final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DoorName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_CloseDoor) == 0x000008, "Wrong alignment on PyLevelCommonNodes_CloseDoor");
static_assert(sizeof(PyLevelCommonNodes_CloseDoor) == 0x000018, "Wrong size on PyLevelCommonNodes_CloseDoor");
static_assert(offsetof(PyLevelCommonNodes_CloseDoor, Instance) == 0x000000, "Member 'PyLevelCommonNodes_CloseDoor::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_CloseDoor, DoorName) == 0x000008, "Member 'PyLevelCommonNodes_CloseDoor::DoorName' has a wrong offset!");

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.OpenDoor
// 0x0018 (0x0018 - 0x0000)
struct PyLevelCommonNodes_OpenDoor final
{
public:
	class AActor*                                 Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DoorName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelCommonNodes_OpenDoor) == 0x000008, "Wrong alignment on PyLevelCommonNodes_OpenDoor");
static_assert(sizeof(PyLevelCommonNodes_OpenDoor) == 0x000018, "Wrong size on PyLevelCommonNodes_OpenDoor");
static_assert(offsetof(PyLevelCommonNodes_OpenDoor, Instance) == 0x000000, "Member 'PyLevelCommonNodes_OpenDoor::Instance' has a wrong offset!");
static_assert(offsetof(PyLevelCommonNodes_OpenDoor, DoorName) == 0x000008, "Member 'PyLevelCommonNodes_OpenDoor::DoorName' has a wrong offset!");

}


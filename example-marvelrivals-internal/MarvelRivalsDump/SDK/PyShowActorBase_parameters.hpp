#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyShowActorBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Python_enums_structs.hpp"
#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyShowActorBase.PyShowActorBase.OnLevelSequenceFinished
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_OnLevelSequenceFinished final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnLevelSequenceFinished) == 0x000008, "Wrong alignment on PyShowActorBase_OnLevelSequenceFinished");
static_assert(sizeof(PyShowActorBase_OnLevelSequenceFinished) == 0x000008, "Wrong size on PyShowActorBase_OnLevelSequenceFinished");
static_assert(offsetof(PyShowActorBase_OnLevelSequenceFinished, LevelSequence) == 0x000000, "Member 'PyShowActorBase_OnLevelSequenceFinished::LevelSequence' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetBindingTagInLevelSequenceActor
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_SetBindingTagInLevelSequenceActor final
{
public:
	class ALevelSequenceActor*                    Ls_actor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetBindingTagInLevelSequenceActor) == 0x000008, "Wrong alignment on PyShowActorBase_SetBindingTagInLevelSequenceActor");
static_assert(sizeof(PyShowActorBase_SetBindingTagInLevelSequenceActor) == 0x000008, "Wrong size on PyShowActorBase_SetBindingTagInLevelSequenceActor");
static_assert(offsetof(PyShowActorBase_SetBindingTagInLevelSequenceActor, Ls_actor) == 0x000000, "Member 'PyShowActorBase_SetBindingTagInLevelSequenceActor::Ls_actor' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.PlayHeroGaller_HoverStand
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_PlayHeroGaller_HoverStand final
{
public:
	bool                                          IsPlay_HoverStand;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_PlayHeroGaller_HoverStand) == 0x000001, "Wrong alignment on PyShowActorBase_PlayHeroGaller_HoverStand");
static_assert(sizeof(PyShowActorBase_PlayHeroGaller_HoverStand) == 0x000001, "Wrong size on PyShowActorBase_PlayHeroGaller_HoverStand");
static_assert(offsetof(PyShowActorBase_PlayHeroGaller_HoverStand, IsPlay_HoverStand) == 0x000000, "Member 'PyShowActorBase_PlayHeroGaller_HoverStand::IsPlay_HoverStand' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.PlayHeroGaller_CardPose
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_PlayHeroGaller_CardPose final
{
public:
	bool                                          IsPlay_CardPose;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_PlayHeroGaller_CardPose) == 0x000001, "Wrong alignment on PyShowActorBase_PlayHeroGaller_CardPose");
static_assert(sizeof(PyShowActorBase_PlayHeroGaller_CardPose) == 0x000001, "Wrong size on PyShowActorBase_PlayHeroGaller_CardPose");
static_assert(offsetof(PyShowActorBase_PlayHeroGaller_CardPose, IsPlay_CardPose) == 0x000000, "Member 'PyShowActorBase_PlayHeroGaller_CardPose::IsPlay_CardPose' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.PlayMVPAnim
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_PlayMVPAnim final
{
public:
	class ULevelSequence*                         MVPLevelSequence;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_PlayMVPAnim) == 0x000008, "Wrong alignment on PyShowActorBase_PlayMVPAnim");
static_assert(sizeof(PyShowActorBase_PlayMVPAnim) == 0x000008, "Wrong size on PyShowActorBase_PlayMVPAnim");
static_assert(offsetof(PyShowActorBase_PlayMVPAnim, MVPLevelSequence) == 0x000000, "Member 'PyShowActorBase_PlayMVPAnim::MVPLevelSequence' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.OnPlayEmoteAnimItem
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_OnPlayEmoteAnimItem final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayEmoteAnimItem) == 0x000008, "Wrong alignment on PyShowActorBase_OnPlayEmoteAnimItem");
static_assert(sizeof(PyShowActorBase_OnPlayEmoteAnimItem) == 0x000010, "Wrong size on PyShowActorBase_OnPlayEmoteAnimItem");
static_assert(offsetof(PyShowActorBase_OnPlayEmoteAnimItem, ItemId) == 0x000000, "Member 'PyShowActorBase_OnPlayEmoteAnimItem::ItemId' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.PlayEmoteAnim
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_PlayEmoteAnim final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_PlayEmoteAnim) == 0x000008, "Wrong alignment on PyShowActorBase_PlayEmoteAnim");
static_assert(sizeof(PyShowActorBase_PlayEmoteAnim) == 0x000010, "Wrong size on PyShowActorBase_PlayEmoteAnim");
static_assert(offsetof(PyShowActorBase_PlayEmoteAnim, ItemId) == 0x000000, "Member 'PyShowActorBase_PlayEmoteAnim::ItemId' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.PlayToggleAnim
// 0x0003 (0x0003 - 0x0000)
struct PyShowActorBase_PlayToggleAnim final
{
public:
	bool                                          IsToggleHalf_0;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHalfToHalf_0;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDynamic;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_PlayToggleAnim) == 0x000001, "Wrong alignment on PyShowActorBase_PlayToggleAnim");
static_assert(sizeof(PyShowActorBase_PlayToggleAnim) == 0x000003, "Wrong size on PyShowActorBase_PlayToggleAnim");
static_assert(offsetof(PyShowActorBase_PlayToggleAnim, IsToggleHalf_0) == 0x000000, "Member 'PyShowActorBase_PlayToggleAnim::IsToggleHalf_0' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_PlayToggleAnim, IsHalfToHalf_0) == 0x000001, "Member 'PyShowActorBase_PlayToggleAnim::IsHalfToHalf_0' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_PlayToggleAnim, IsDynamic) == 0x000002, "Member 'PyShowActorBase_PlayToggleAnim::IsDynamic' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.PlayShowAnim
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_PlayShowAnim final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_PlayShowAnim) == 0x000001, "Wrong alignment on PyShowActorBase_PlayShowAnim");
static_assert(sizeof(PyShowActorBase_PlayShowAnim) == 0x000001, "Wrong size on PyShowActorBase_PlayShowAnim");
static_assert(offsetof(PyShowActorBase_PlayShowAnim, IsPlay) == 0x000000, "Member 'PyShowActorBase_PlayShowAnim::IsPlay' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetIsPlayIdleAnim
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_SetIsPlayIdleAnim final
{
public:
	bool                                          IsPlayIdleAnim;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetIsPlayIdleAnim) == 0x000001, "Wrong alignment on PyShowActorBase_SetIsPlayIdleAnim");
static_assert(sizeof(PyShowActorBase_SetIsPlayIdleAnim) == 0x000001, "Wrong size on PyShowActorBase_SetIsPlayIdleAnim");
static_assert(offsetof(PyShowActorBase_SetIsPlayIdleAnim, IsPlayIdleAnim) == 0x000000, "Member 'PyShowActorBase_SetIsPlayIdleAnim::IsPlayIdleAnim' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.LoadRimlightDetailOutlineFinished
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_LoadRimlightDetailOutlineFinished final
{
public:
	class UObject*                                OverlayMaterial;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_LoadRimlightDetailOutlineFinished) == 0x000008, "Wrong alignment on PyShowActorBase_LoadRimlightDetailOutlineFinished");
static_assert(sizeof(PyShowActorBase_LoadRimlightDetailOutlineFinished) == 0x000008, "Wrong size on PyShowActorBase_LoadRimlightDetailOutlineFinished");
static_assert(offsetof(PyShowActorBase_LoadRimlightDetailOutlineFinished, OverlayMaterial) == 0x000000, "Member 'PyShowActorBase_LoadRimlightDetailOutlineFinished::OverlayMaterial' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshRotation
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_SetMeshRotation final
{
public:
	float                                         Yaw;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReset;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetMeshRotation) == 0x000004, "Wrong alignment on PyShowActorBase_SetMeshRotation");
static_assert(sizeof(PyShowActorBase_SetMeshRotation) == 0x000008, "Wrong size on PyShowActorBase_SetMeshRotation");
static_assert(offsetof(PyShowActorBase_SetMeshRotation, Yaw) == 0x000000, "Member 'PyShowActorBase_SetMeshRotation::Yaw' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshRotation, IsReset) == 0x000004, "Member 'PyShowActorBase_SetMeshRotation::IsReset' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.OnRotatioAngleSignChange
// 0x0004 (0x0004 - 0x0000)
struct PyShowActorBase_OnRotatioAngleSignChange final
{
public:
	int32                                         ChangesNum;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnRotatioAngleSignChange) == 0x000004, "Wrong alignment on PyShowActorBase_OnRotatioAngleSignChange");
static_assert(sizeof(PyShowActorBase_OnRotatioAngleSignChange) == 0x000004, "Wrong size on PyShowActorBase_OnRotatioAngleSignChange");
static_assert(offsetof(PyShowActorBase_OnRotatioAngleSignChange, ChangesNum) == 0x000000, "Member 'PyShowActorBase_OnRotatioAngleSignChange::ChangesNum' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.OnMeshRotation
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_OnMeshRotation final
{
public:
	float                                         Yaw;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnglePerSecond;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnMeshRotation) == 0x000004, "Wrong alignment on PyShowActorBase_OnMeshRotation");
static_assert(sizeof(PyShowActorBase_OnMeshRotation) == 0x000008, "Wrong size on PyShowActorBase_OnMeshRotation");
static_assert(offsetof(PyShowActorBase_OnMeshRotation, Yaw) == 0x000000, "Member 'PyShowActorBase_OnMeshRotation::Yaw' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnMeshRotation, AnglePerSecond) == 0x000004, "Member 'PyShowActorBase_OnMeshRotation::AnglePerSecond' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshsVisibleByTag
// 0x0080 (0x0080 - 0x0000)
struct PyShowActorBase_SetMeshsVisibleByTag final
{
public:
	TArray<class USkeletalMeshComponent*>         MeshList;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTagContainer                  MeshTag;                                           // 0x0010(0x0068)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          Visible;                                           // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetMeshsVisibleByTag) == 0x000008, "Wrong alignment on PyShowActorBase_SetMeshsVisibleByTag");
static_assert(sizeof(PyShowActorBase_SetMeshsVisibleByTag) == 0x000080, "Wrong size on PyShowActorBase_SetMeshsVisibleByTag");
static_assert(offsetof(PyShowActorBase_SetMeshsVisibleByTag, MeshList) == 0x000000, "Member 'PyShowActorBase_SetMeshsVisibleByTag::MeshList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshsVisibleByTag, MeshTag) == 0x000010, "Member 'PyShowActorBase_SetMeshsVisibleByTag::MeshTag' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshsVisibleByTag, Visible) == 0x000078, "Member 'PyShowActorBase_SetMeshsVisibleByTag::Visible' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshVisibleByTag
// 0x0078 (0x0078 - 0x0000)
struct PyShowActorBase_SetMeshVisibleByTag final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  MeshTag;                                           // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          Visible;                                           // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetMeshVisibleByTag) == 0x000008, "Wrong alignment on PyShowActorBase_SetMeshVisibleByTag");
static_assert(sizeof(PyShowActorBase_SetMeshVisibleByTag) == 0x000078, "Wrong size on PyShowActorBase_SetMeshVisibleByTag");
static_assert(offsetof(PyShowActorBase_SetMeshVisibleByTag, Mesh) == 0x000000, "Member 'PyShowActorBase_SetMeshVisibleByTag::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshVisibleByTag, MeshTag) == 0x000008, "Member 'PyShowActorBase_SetMeshVisibleByTag::MeshTag' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshVisibleByTag, Visible) == 0x000070, "Member 'PyShowActorBase_SetMeshVisibleByTag::Visible' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshsVisible
// 0x0018 (0x0018 - 0x0000)
struct PyShowActorBase_SetMeshsVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         MeshList;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyShowActorBase_SetMeshsVisible) == 0x000008, "Wrong alignment on PyShowActorBase_SetMeshsVisible");
static_assert(sizeof(PyShowActorBase_SetMeshsVisible) == 0x000018, "Wrong size on PyShowActorBase_SetMeshsVisible");
static_assert(offsetof(PyShowActorBase_SetMeshsVisible, Visible) == 0x000000, "Member 'PyShowActorBase_SetMeshsVisible::Visible' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshsVisible, MeshList) == 0x000008, "Member 'PyShowActorBase_SetMeshsVisible::MeshList' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshVisible
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_SetMeshVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetMeshVisible) == 0x000008, "Wrong alignment on PyShowActorBase_SetMeshVisible");
static_assert(sizeof(PyShowActorBase_SetMeshVisible) == 0x000010, "Wrong size on PyShowActorBase_SetMeshVisible");
static_assert(offsetof(PyShowActorBase_SetMeshVisible, Visible) == 0x000000, "Member 'PyShowActorBase_SetMeshVisible::Visible' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshVisible, Mesh) == 0x000008, "Member 'PyShowActorBase_SetMeshVisible::Mesh' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentsVisibleByTag
// 0x0080 (0x0080 - 0x0000)
struct PyShowActorBase_SetComponentsVisibleByTag final
{
public:
	TArray<class USceneComponent*>                ComponentList;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTagContainer                  ComponentTag;                                      // 0x0010(0x0068)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          Visible;                                           // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetComponentsVisibleByTag) == 0x000008, "Wrong alignment on PyShowActorBase_SetComponentsVisibleByTag");
static_assert(sizeof(PyShowActorBase_SetComponentsVisibleByTag) == 0x000080, "Wrong size on PyShowActorBase_SetComponentsVisibleByTag");
static_assert(offsetof(PyShowActorBase_SetComponentsVisibleByTag, ComponentList) == 0x000000, "Member 'PyShowActorBase_SetComponentsVisibleByTag::ComponentList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetComponentsVisibleByTag, ComponentTag) == 0x000010, "Member 'PyShowActorBase_SetComponentsVisibleByTag::ComponentTag' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetComponentsVisibleByTag, Visible) == 0x000078, "Member 'PyShowActorBase_SetComponentsVisibleByTag::Visible' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentVisibleByTag
// 0x0078 (0x0078 - 0x0000)
struct PyShowActorBase_SetComponentVisibleByTag final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ComponentTag;                                      // 0x0008(0x0068)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          Visible;                                           // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetComponentVisibleByTag) == 0x000008, "Wrong alignment on PyShowActorBase_SetComponentVisibleByTag");
static_assert(sizeof(PyShowActorBase_SetComponentVisibleByTag) == 0x000078, "Wrong size on PyShowActorBase_SetComponentVisibleByTag");
static_assert(offsetof(PyShowActorBase_SetComponentVisibleByTag, Component) == 0x000000, "Member 'PyShowActorBase_SetComponentVisibleByTag::Component' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetComponentVisibleByTag, ComponentTag) == 0x000008, "Member 'PyShowActorBase_SetComponentVisibleByTag::ComponentTag' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetComponentVisibleByTag, Visible) == 0x000070, "Member 'PyShowActorBase_SetComponentVisibleByTag::Visible' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentsVisible
// 0x0018 (0x0018 - 0x0000)
struct PyShowActorBase_SetComponentsVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                ComponentList;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyShowActorBase_SetComponentsVisible) == 0x000008, "Wrong alignment on PyShowActorBase_SetComponentsVisible");
static_assert(sizeof(PyShowActorBase_SetComponentsVisible) == 0x000018, "Wrong size on PyShowActorBase_SetComponentsVisible");
static_assert(offsetof(PyShowActorBase_SetComponentsVisible, Visible) == 0x000000, "Member 'PyShowActorBase_SetComponentsVisible::Visible' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetComponentsVisible, ComponentList) == 0x000008, "Member 'PyShowActorBase_SetComponentsVisible::ComponentList' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentVisible
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_SetComponentVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetComponentVisible) == 0x000008, "Wrong alignment on PyShowActorBase_SetComponentVisible");
static_assert(sizeof(PyShowActorBase_SetComponentVisible) == 0x000010, "Wrong size on PyShowActorBase_SetComponentVisible");
static_assert(offsetof(PyShowActorBase_SetComponentVisible, Visible) == 0x000000, "Member 'PyShowActorBase_SetComponentVisible::Visible' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetComponentVisible, Component) == 0x000008, "Member 'PyShowActorBase_SetComponentVisible::Component' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ToggleCameraBlur
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_ToggleCameraBlur final
{
public:
	bool                                          bUseCameraBlur;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ToggleCameraBlur) == 0x000001, "Wrong alignment on PyShowActorBase_ToggleCameraBlur");
static_assert(sizeof(PyShowActorBase_ToggleCameraBlur) == 0x000001, "Wrong size on PyShowActorBase_ToggleCameraBlur");
static_assert(offsetof(PyShowActorBase_ToggleCameraBlur, bUseCameraBlur) == 0x000000, "Member 'PyShowActorBase_ToggleCameraBlur::bUseCameraBlur' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetEnabledPostProcess
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_SetEnabledPostProcess final
{
public:
	bool                                          IsEnabledPostProcess_0;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetEnabledPostProcess) == 0x000001, "Wrong alignment on PyShowActorBase_SetEnabledPostProcess");
static_assert(sizeof(PyShowActorBase_SetEnabledPostProcess) == 0x000001, "Wrong size on PyShowActorBase_SetEnabledPostProcess");
static_assert(offsetof(PyShowActorBase_SetEnabledPostProcess, IsEnabledPostProcess_0) == 0x000000, "Member 'PyShowActorBase_SetEnabledPostProcess::IsEnabledPostProcess_0' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetMeshsPhysicsBlendWeight
// 0x0020 (0x0020 - 0x0000)
struct PyShowActorBase_SetMeshsPhysicsBlendWeight final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BoneNameList;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIncludeSelf;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PhysicsBlendWeight;                                // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetMeshsPhysicsBlendWeight) == 0x000008, "Wrong alignment on PyShowActorBase_SetMeshsPhysicsBlendWeight");
static_assert(sizeof(PyShowActorBase_SetMeshsPhysicsBlendWeight) == 0x000020, "Wrong size on PyShowActorBase_SetMeshsPhysicsBlendWeight");
static_assert(offsetof(PyShowActorBase_SetMeshsPhysicsBlendWeight, Mesh) == 0x000000, "Member 'PyShowActorBase_SetMeshsPhysicsBlendWeight::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshsPhysicsBlendWeight, BoneNameList) == 0x000008, "Member 'PyShowActorBase_SetMeshsPhysicsBlendWeight::BoneNameList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshsPhysicsBlendWeight, bIncludeSelf) == 0x000018, "Member 'PyShowActorBase_SetMeshsPhysicsBlendWeight::bIncludeSelf' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetMeshsPhysicsBlendWeight, PhysicsBlendWeight) == 0x00001C, "Member 'PyShowActorBase_SetMeshsPhysicsBlendWeight::PhysicsBlendWeight' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ResetAllPhysicsBlendWeightToMin
// 0x0004 (0x0004 - 0x0000)
struct PyShowActorBase_ResetAllPhysicsBlendWeightToMin final
{
public:
	float                                         MinWeight;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ResetAllPhysicsBlendWeightToMin) == 0x000004, "Wrong alignment on PyShowActorBase_ResetAllPhysicsBlendWeightToMin");
static_assert(sizeof(PyShowActorBase_ResetAllPhysicsBlendWeightToMin) == 0x000004, "Wrong size on PyShowActorBase_ResetAllPhysicsBlendWeightToMin");
static_assert(offsetof(PyShowActorBase_ResetAllPhysicsBlendWeightToMin, MinWeight) == 0x000000, "Member 'PyShowActorBase_ResetAllPhysicsBlendWeightToMin::MinWeight' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ResetAllPhysicsBlendWeight
// 0x0004 (0x0004 - 0x0000)
struct PyShowActorBase_ResetAllPhysicsBlendWeight final
{
public:
	float                                         BlendWeight;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ResetAllPhysicsBlendWeight) == 0x000004, "Wrong alignment on PyShowActorBase_ResetAllPhysicsBlendWeight");
static_assert(sizeof(PyShowActorBase_ResetAllPhysicsBlendWeight) == 0x000004, "Wrong size on PyShowActorBase_ResetAllPhysicsBlendWeight");
static_assert(offsetof(PyShowActorBase_ResetAllPhysicsBlendWeight, BlendWeight) == 0x000000, "Member 'PyShowActorBase_ResetAllPhysicsBlendWeight::BlendWeight' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ReversePhysicsBlendWeight
// 0x0020 (0x0020 - 0x0000)
struct PyShowActorBase_ReversePhysicsBlendWeight final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BoneNameList;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIncludeSelf;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ReversePhysicsBlendWeight) == 0x000008, "Wrong alignment on PyShowActorBase_ReversePhysicsBlendWeight");
static_assert(sizeof(PyShowActorBase_ReversePhysicsBlendWeight) == 0x000020, "Wrong size on PyShowActorBase_ReversePhysicsBlendWeight");
static_assert(offsetof(PyShowActorBase_ReversePhysicsBlendWeight, Mesh) == 0x000000, "Member 'PyShowActorBase_ReversePhysicsBlendWeight::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_ReversePhysicsBlendWeight, BoneNameList) == 0x000008, "Member 'PyShowActorBase_ReversePhysicsBlendWeight::BoneNameList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_ReversePhysicsBlendWeight, bIncludeSelf) == 0x000018, "Member 'PyShowActorBase_ReversePhysicsBlendWeight::bIncludeSelf' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ForwardPhysicsBlendWeight
// 0x0020 (0x0020 - 0x0000)
struct PyShowActorBase_ForwardPhysicsBlendWeight final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BoneNameList;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIncludeSelf;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ForwardPhysicsBlendWeight) == 0x000008, "Wrong alignment on PyShowActorBase_ForwardPhysicsBlendWeight");
static_assert(sizeof(PyShowActorBase_ForwardPhysicsBlendWeight) == 0x000020, "Wrong size on PyShowActorBase_ForwardPhysicsBlendWeight");
static_assert(offsetof(PyShowActorBase_ForwardPhysicsBlendWeight, Mesh) == 0x000000, "Member 'PyShowActorBase_ForwardPhysicsBlendWeight::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_ForwardPhysicsBlendWeight, BoneNameList) == 0x000008, "Member 'PyShowActorBase_ForwardPhysicsBlendWeight::BoneNameList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_ForwardPhysicsBlendWeight, bIncludeSelf) == 0x000018, "Member 'PyShowActorBase_ForwardPhysicsBlendWeight::bIncludeSelf' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.OnANSSetAllBodiesBelowSimulatePhysicsEnd
// 0x0018 (0x0018 - 0x0000)
struct PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulatePhysics;                                  // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludeSelf;                                      // 0x0015(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0016(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd) == 0x000008, "Wrong alignment on PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd");
static_assert(sizeof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd) == 0x000018, "Wrong size on PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd, Mesh) == 0x000000, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd, BoneName) == 0x000008, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd::BoneName' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd, bSimulatePhysics) == 0x000014, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd::bSimulatePhysics' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd, bIncludeSelf) == 0x000015, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd::bIncludeSelf' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd, ReturnValue) == 0x000016, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsEnd::ReturnValue' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.OnANSSetAllBodiesBelowSimulatePhysicsBegin
// 0x0018 (0x0018 - 0x0000)
struct PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulatePhysics;                                  // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludeSelf;                                      // 0x0015(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0016(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin) == 0x000008, "Wrong alignment on PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin");
static_assert(sizeof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin) == 0x000018, "Wrong size on PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin, Mesh) == 0x000000, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin, BoneName) == 0x000008, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin::BoneName' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin, bSimulatePhysics) == 0x000014, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin::bSimulatePhysics' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin, bIncludeSelf) == 0x000015, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin::bIncludeSelf' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin, ReturnValue) == 0x000016, "Member 'PyShowActorBase_OnANSSetAllBodiesBelowSimulatePhysicsBegin::ReturnValue' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.AutoReversePhysicsBlendWeight
// 0x0020 (0x0020 - 0x0000)
struct PyShowActorBase_AutoReversePhysicsBlendWeight final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BoneNameList;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIncludeSelf;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_AutoReversePhysicsBlendWeight) == 0x000008, "Wrong alignment on PyShowActorBase_AutoReversePhysicsBlendWeight");
static_assert(sizeof(PyShowActorBase_AutoReversePhysicsBlendWeight) == 0x000020, "Wrong size on PyShowActorBase_AutoReversePhysicsBlendWeight");
static_assert(offsetof(PyShowActorBase_AutoReversePhysicsBlendWeight, Mesh) == 0x000000, "Member 'PyShowActorBase_AutoReversePhysicsBlendWeight::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_AutoReversePhysicsBlendWeight, BoneNameList) == 0x000008, "Member 'PyShowActorBase_AutoReversePhysicsBlendWeight::BoneNameList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_AutoReversePhysicsBlendWeight, bIncludeSelf) == 0x000018, "Member 'PyShowActorBase_AutoReversePhysicsBlendWeight::bIncludeSelf' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.AutoForwardPhysicsBlendWeight
// 0x0020 (0x0020 - 0x0000)
struct PyShowActorBase_AutoForwardPhysicsBlendWeight final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BoneNameList;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIncludeSelf;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_AutoForwardPhysicsBlendWeight) == 0x000008, "Wrong alignment on PyShowActorBase_AutoForwardPhysicsBlendWeight");
static_assert(sizeof(PyShowActorBase_AutoForwardPhysicsBlendWeight) == 0x000020, "Wrong size on PyShowActorBase_AutoForwardPhysicsBlendWeight");
static_assert(offsetof(PyShowActorBase_AutoForwardPhysicsBlendWeight, Mesh) == 0x000000, "Member 'PyShowActorBase_AutoForwardPhysicsBlendWeight::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_AutoForwardPhysicsBlendWeight, BoneNameList) == 0x000008, "Member 'PyShowActorBase_AutoForwardPhysicsBlendWeight::BoneNameList' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_AutoForwardPhysicsBlendWeight, bIncludeSelf) == 0x000018, "Member 'PyShowActorBase_AutoForwardPhysicsBlendWeight::bIncludeSelf' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.OnMeshPhysicsEnable
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnMeshPhysicsEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnMeshPhysicsEnable) == 0x000001, "Wrong alignment on PyShowActorBase_OnMeshPhysicsEnable");
static_assert(sizeof(PyShowActorBase_OnMeshPhysicsEnable) == 0x000001, "Wrong size on PyShowActorBase_OnMeshPhysicsEnable");
static_assert(offsetof(PyShowActorBase_OnMeshPhysicsEnable, bEnable) == 0x000000, "Member 'PyShowActorBase_OnMeshPhysicsEnable::bEnable' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetCustomBoneChain
// 0x0018 (0x0018 - 0x0000)
struct PyShowActorBase_SetCustomBoneChain final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FShowActorCustomPhysicsBlendConfig> PhysicsConfigs;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyShowActorBase_SetCustomBoneChain) == 0x000008, "Wrong alignment on PyShowActorBase_SetCustomBoneChain");
static_assert(sizeof(PyShowActorBase_SetCustomBoneChain) == 0x000018, "Wrong size on PyShowActorBase_SetCustomBoneChain");
static_assert(offsetof(PyShowActorBase_SetCustomBoneChain, Mesh) == 0x000000, "Member 'PyShowActorBase_SetCustomBoneChain::Mesh' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_SetCustomBoneChain, PhysicsConfigs) == 0x000008, "Member 'PyShowActorBase_SetCustomBoneChain::PhysicsConfigs' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.CallExtensionFunction
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_CallExtensionFunction final
{
public:
	class FString                                 Func_name;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_CallExtensionFunction) == 0x000008, "Wrong alignment on PyShowActorBase_CallExtensionFunction");
static_assert(sizeof(PyShowActorBase_CallExtensionFunction) == 0x000010, "Wrong size on PyShowActorBase_CallExtensionFunction");
static_assert(offsetof(PyShowActorBase_CallExtensionFunction, Func_name) == 0x000000, "Member 'PyShowActorBase_CallExtensionFunction::Func_name' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetShowActorStageChanged
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_SetShowActorStageChanged final
{
public:
	EShowActorStage                               ShowActorStage_0;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetShowActorStageChanged) == 0x000001, "Wrong alignment on PyShowActorBase_SetShowActorStageChanged");
static_assert(sizeof(PyShowActorBase_SetShowActorStageChanged) == 0x000001, "Wrong size on PyShowActorBase_SetShowActorStageChanged");
static_assert(offsetof(PyShowActorBase_SetShowActorStageChanged, ShowActorStage_0) == 0x000000, "Member 'PyShowActorBase_SetShowActorStageChanged::ShowActorStage_0' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetComponentVisibility
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_SetComponentVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetComponentVisibility) == 0x000001, "Wrong alignment on PyShowActorBase_SetComponentVisibility");
static_assert(sizeof(PyShowActorBase_SetComponentVisibility) == 0x000001, "Wrong size on PyShowActorBase_SetComponentVisibility");
static_assert(offsetof(PyShowActorBase_SetComponentVisibility, Visible) == 0x000000, "Member 'PyShowActorBase_SetComponentVisibility::Visible' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_SetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_SetVisible) == 0x000001, "Wrong alignment on PyShowActorBase_SetVisible");
static_assert(sizeof(PyShowActorBase_SetVisible) == 0x000001, "Wrong size on PyShowActorBase_SetVisible");
static_assert(offsetof(PyShowActorBase_SetVisible, Visible) == 0x000000, "Member 'PyShowActorBase_SetVisible::Visible' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.LoadShowAssetsFinished
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_LoadShowAssetsFinished final
{
public:
	TArray<class UObject*>                        Assets;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyShowActorBase_LoadShowAssetsFinished) == 0x000008, "Wrong alignment on PyShowActorBase_LoadShowAssetsFinished");
static_assert(sizeof(PyShowActorBase_LoadShowAssetsFinished) == 0x000010, "Wrong size on PyShowActorBase_LoadShowAssetsFinished");
static_assert(offsetof(PyShowActorBase_LoadShowAssetsFinished, Assets) == 0x000000, "Member 'PyShowActorBase_LoadShowAssetsFinished::Assets' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.GetSoftReferenceAssets
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_GetSoftReferenceAssets final
{
public:
	TArray<struct FSoftObjectPath>                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyShowActorBase_GetSoftReferenceAssets) == 0x000008, "Wrong alignment on PyShowActorBase_GetSoftReferenceAssets");
static_assert(sizeof(PyShowActorBase_GetSoftReferenceAssets) == 0x000010, "Wrong size on PyShowActorBase_GetSoftReferenceAssets");
static_assert(offsetof(PyShowActorBase_GetSoftReferenceAssets, ReturnValue) == 0x000000, "Member 'PyShowActorBase_GetSoftReferenceAssets::ReturnValue' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PyShowActorBase_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ReceiveTick) == 0x000004, "Wrong alignment on PyShowActorBase_ReceiveTick");
static_assert(sizeof(PyShowActorBase_ReceiveTick) == 0x000004, "Wrong size on PyShowActorBase_ReceiveTick");
static_assert(offsetof(PyShowActorBase_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PyShowActorBase_ReceiveTick::DeltaSeconds' has a wrong offset!");

// PythonFunction PyShowActorBase.PyShowActorBase.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_ReceiveEndPlay) == 0x000001, "Wrong alignment on PyShowActorBase_ReceiveEndPlay");
static_assert(sizeof(PyShowActorBase_ReceiveEndPlay) == 0x000001, "Wrong size on PyShowActorBase_ReceiveEndPlay");
static_assert(offsetof(PyShowActorBase_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PyShowActorBase_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnVisibleChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnVisibleChange__DelegateSignature final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnVisibleChange__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnVisibleChange__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnVisibleChange__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnVisibleChange__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnVisibleChange__DelegateSignature, bVisible) == 0x000000, "Member 'PyShowActorBase_OnVisibleChange__DelegateSignature::bVisible' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnIsHalfChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnIsHalfChanged__DelegateSignature final
{
public:
	bool                                          IsToggleHalf_0;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnIsHalfChanged__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnIsHalfChanged__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnIsHalfChanged__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnIsHalfChanged__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnIsHalfChanged__DelegateSignature, IsToggleHalf_0) == 0x000000, "Member 'PyShowActorBase_OnIsHalfChanged__DelegateSignature::IsToggleHalf_0' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayIdleAnim__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnPlayIdleAnim__DelegateSignature final
{
public:
	bool                                          IsPlayIdleAnim;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayIdleAnim__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnPlayIdleAnim__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayIdleAnim__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnPlayIdleAnim__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayIdleAnim__DelegateSignature, IsPlayIdleAnim) == 0x000000, "Member 'PyShowActorBase_OnPlayIdleAnim__DelegateSignature::IsPlayIdleAnim' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnShowActorStageChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnShowActorStageChanged__DelegateSignature final
{
public:
	EShowActorStage                               ShowActorStage_0;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnShowActorStageChanged__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnShowActorStageChanged__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnShowActorStageChanged__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnShowActorStageChanged__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnShowActorStageChanged__DelegateSignature, ShowActorStage_0) == 0x000000, "Member 'PyShowActorBase_OnShowActorStageChanged__DelegateSignature::ShowActorStage_0' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnShowActorCameraGaze__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PyShowActorBase_OnShowActorCameraGaze__DelegateSignature final
{
public:
	bool                                          TurnCameraGaze_0;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CameraLocation;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenBlendTime;                                     // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CloseBlendTime;                                    // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnShowActorCameraGaze__DelegateSignature) == 0x000008, "Wrong alignment on PyShowActorBase_OnShowActorCameraGaze__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnShowActorCameraGaze__DelegateSignature) == 0x000028, "Wrong size on PyShowActorBase_OnShowActorCameraGaze__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnShowActorCameraGaze__DelegateSignature, TurnCameraGaze_0) == 0x000000, "Member 'PyShowActorBase_OnShowActorCameraGaze__DelegateSignature::TurnCameraGaze_0' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnShowActorCameraGaze__DelegateSignature, CameraLocation) == 0x000008, "Member 'PyShowActorBase_OnShowActorCameraGaze__DelegateSignature::CameraLocation' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnShowActorCameraGaze__DelegateSignature, OpenBlendTime) == 0x000020, "Member 'PyShowActorBase_OnShowActorCameraGaze__DelegateSignature::OpenBlendTime' has a wrong offset!");
static_assert(offsetof(PyShowActorBase_OnShowActorCameraGaze__DelegateSignature, CloseBlendTime) == 0x000024, "Member 'PyShowActorBase_OnShowActorCameraGaze__DelegateSignature::CloseBlendTime' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnLoadShowAssetFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature final
{
public:
	class AActor*                                 ShowActor;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature) == 0x000008, "Wrong alignment on PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature) == 0x000008, "Wrong size on PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature, ShowActor) == 0x000000, "Member 'PyShowActorBase_OnLoadShowAssetFinished__DelegateSignature::ShowActor' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayVoiceAnim__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyShowActorBase_OnPlayVoiceAnim__DelegateSignature final
{
public:
	class UAnimSequence*                          VoiceAnim;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayVoiceAnim__DelegateSignature) == 0x000008, "Wrong alignment on PyShowActorBase_OnPlayVoiceAnim__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayVoiceAnim__DelegateSignature) == 0x000008, "Wrong size on PyShowActorBase_OnPlayVoiceAnim__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayVoiceAnim__DelegateSignature, VoiceAnim) == 0x000000, "Member 'PyShowActorBase_OnPlayVoiceAnim__DelegateSignature::VoiceAnim' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayHeroGaller_HoverStand__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature final
{
public:
	bool                                          IsPlay_HoverStand;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature, IsPlay_HoverStand) == 0x000000, "Member 'PyShowActorBase_OnPlayHeroGaller_HoverStand__DelegateSignature::IsPlay_HoverStand' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayHeroGaller_CardPose__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature final
{
public:
	bool                                          IsPlay_CardPose;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature, IsPlay_CardPose) == 0x000000, "Member 'PyShowActorBase_OnPlayHeroGaller_CardPose__DelegateSignature::IsPlay_CardPose' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayEmoteAnim__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyShowActorBase_OnPlayEmoteAnim__DelegateSignature final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayEmoteAnim__DelegateSignature) == 0x000008, "Wrong alignment on PyShowActorBase_OnPlayEmoteAnim__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayEmoteAnim__DelegateSignature) == 0x000010, "Wrong size on PyShowActorBase_OnPlayEmoteAnim__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayEmoteAnim__DelegateSignature, ItemId) == 0x000000, "Member 'PyShowActorBase_OnPlayEmoteAnim__DelegateSignature::ItemId' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayToggleAnim__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnPlayToggleAnim__DelegateSignature final
{
public:
	bool                                          IsToggleHalf_0;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayToggleAnim__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnPlayToggleAnim__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayToggleAnim__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnPlayToggleAnim__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayToggleAnim__DelegateSignature, IsToggleHalf_0) == 0x000000, "Member 'PyShowActorBase_OnPlayToggleAnim__DelegateSignature::IsToggleHalf_0' has a wrong offset!");

// DelegateFunction PyShowActorBase.PyShowActorBase.OnPlayShowAnim__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyShowActorBase_OnPlayShowAnim__DelegateSignature final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyShowActorBase_OnPlayShowAnim__DelegateSignature) == 0x000001, "Wrong alignment on PyShowActorBase_OnPlayShowAnim__DelegateSignature");
static_assert(sizeof(PyShowActorBase_OnPlayShowAnim__DelegateSignature) == 0x000001, "Wrong size on PyShowActorBase_OnPlayShowAnim__DelegateSignature");
static_assert(offsetof(PyShowActorBase_OnPlayShowAnim__DelegateSignature, IsPlay) == 0x000000, "Member 'PyShowActorBase_OnPlayShowAnim__DelegateSignature::IsPlay' has a wrong offset!");

}


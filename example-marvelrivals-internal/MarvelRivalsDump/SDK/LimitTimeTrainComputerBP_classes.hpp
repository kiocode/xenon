#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LimitTimeTrainComputerBP

#include "Basic.hpp"

#include "PyLimitTimeTrainComputer_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LimitTimeTrainComputerBP.LimitTimeTrainComputerBP_C
// 0x0028 (0x0A70 - 0x0A48)
class ALimitTimeTrainComputerBP_C final : public APyLimitTimeTrainComputer
{
public:
	class ULevelScopeCheckComponentBP_C*          LevelScopeCheckTrainingAreaBP1;                    // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULevelScopeCheckComponentBP_C*          LevelScopeCheckTrainingAreaBP;                     // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPyWC_LevelActor*                       PyWC_LevelActor;                                   // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULevelScopeCheckComponentBP_C*          LevelScopeCheckComponentBP;                        // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LimitTimeTrainComputerBP_C">();
	}
	static class ALimitTimeTrainComputerBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALimitTimeTrainComputerBP_C>();
	}
};
static_assert(alignof(ALimitTimeTrainComputerBP_C) == 0x000008, "Wrong alignment on ALimitTimeTrainComputerBP_C");
static_assert(sizeof(ALimitTimeTrainComputerBP_C) == 0x000A70, "Wrong size on ALimitTimeTrainComputerBP_C");
static_assert(offsetof(ALimitTimeTrainComputerBP_C, LevelScopeCheckTrainingAreaBP1) == 0x000A48, "Member 'ALimitTimeTrainComputerBP_C::LevelScopeCheckTrainingAreaBP1' has a wrong offset!");
static_assert(offsetof(ALimitTimeTrainComputerBP_C, LevelScopeCheckTrainingAreaBP) == 0x000A50, "Member 'ALimitTimeTrainComputerBP_C::LevelScopeCheckTrainingAreaBP' has a wrong offset!");
static_assert(offsetof(ALimitTimeTrainComputerBP_C, PyWC_LevelActor) == 0x000A58, "Member 'ALimitTimeTrainComputerBP_C::PyWC_LevelActor' has a wrong offset!");
static_assert(offsetof(ALimitTimeTrainComputerBP_C, LevelScopeCheckComponentBP) == 0x000A60, "Member 'ALimitTimeTrainComputerBP_C::LevelScopeCheckComponentBP' has a wrong offset!");
static_assert(offsetof(ALimitTimeTrainComputerBP_C, StaticMesh) == 0x000A68, "Member 'ALimitTimeTrainComputerBP_C::StaticMesh' has a wrong offset!");

}


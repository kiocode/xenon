#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_ThrowBall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoned_Loop_Ball_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Summoned_Loop_Ball_WhileActiveFX");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Summoned_Loop_Ball_WhileActiveFX");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Summoned_Loop_Ball_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoned_Loop_Ball_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Summoned_Loop_Ball_OnRemoveFX");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Summoned_Loop_Ball_OnRemoveFX");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Summoned_Loop_Ball_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Summoned_Loop_Ball_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_ReceiveTick) == 0x000004, "Wrong alignment on PyCue_Summoned_Loop_Ball_ReceiveTick");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_ReceiveTick) == 0x000004, "Wrong size on PyCue_Summoned_Loop_Ball_ReceiveTick");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_ReceiveTick::DeltaSeconds' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.OnThrowStateChanged
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Summoned_Loop_Ball_OnThrowStateChanged final
{
public:
	bool                                          ThrowState;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_OnThrowStateChanged) == 0x000001, "Wrong alignment on PyCue_Summoned_Loop_Ball_OnThrowStateChanged");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_OnThrowStateChanged) == 0x000001, "Wrong size on PyCue_Summoned_Loop_Ball_OnThrowStateChanged");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnThrowStateChanged, ThrowState) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_OnThrowStateChanged::ThrowState' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.OnHoldingStateChanged
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Summoned_Loop_Ball_OnHoldingStateChanged final
{
public:
	bool                                          HoldingState;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_OnHoldingStateChanged) == 0x000001, "Wrong alignment on PyCue_Summoned_Loop_Ball_OnHoldingStateChanged");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_OnHoldingStateChanged) == 0x000001, "Wrong size on PyCue_Summoned_Loop_Ball_OnHoldingStateChanged");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnHoldingStateChanged, HoldingState) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_OnHoldingStateChanged::HoldingState' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.OnHolderChanged
// 0x0008 (0x0008 - 0x0000)
struct PyCue_Summoned_Loop_Ball_OnHolderChanged final
{
public:
	class AMarvelBaseCharacter*                   NewHolder;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_OnHolderChanged) == 0x000008, "Wrong alignment on PyCue_Summoned_Loop_Ball_OnHolderChanged");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_OnHolderChanged) == 0x000008, "Wrong size on PyCue_Summoned_Loop_Ball_OnHolderChanged");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnHolderChanged, NewHolder) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_OnHolderChanged::NewHolder' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Summoned_Loop_Ball.OnCollision
// 0x0190 (0x0190 - 0x0000)
struct PyCue_Summoned_Loop_Ball_OnCollision final
{
public:
	struct FHitResult                             InHitResult;                                       // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIsThrowing;                                       // 0x0170(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0178(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoned_Loop_Ball_OnCollision) == 0x000008, "Wrong alignment on PyCue_Summoned_Loop_Ball_OnCollision");
static_assert(sizeof(PyCue_Summoned_Loop_Ball_OnCollision) == 0x000190, "Wrong size on PyCue_Summoned_Loop_Ball_OnCollision");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnCollision, InHitResult) == 0x000000, "Member 'PyCue_Summoned_Loop_Ball_OnCollision::InHitResult' has a wrong offset!");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnCollision, bIsThrowing) == 0x000170, "Member 'PyCue_Summoned_Loop_Ball_OnCollision::bIsThrowing' has a wrong offset!");
static_assert(offsetof(PyCue_Summoned_Loop_Ball_OnCollision, Impulse) == 0x000178, "Member 'PyCue_Summoned_Loop_Ball_OnCollision::Impulse' has a wrong offset!");

// DelegateFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnThrowStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature final
{
public:
	bool                                          ThrowState;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature");
static_assert(sizeof(PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature) == 0x000001, "Wrong size on PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature");
static_assert(offsetof(PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature, ThrowState) == 0x000000, "Member 'PySummonedComp_Ball_OnThrowStateChanged__DelegateSignature::ThrowState' has a wrong offset!");

// DelegateFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnHoldingStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature final
{
public:
	bool                                          HoldingState;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature");
static_assert(sizeof(PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature) == 0x000001, "Wrong size on PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature");
static_assert(offsetof(PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature, HoldingState) == 0x000000, "Member 'PySummonedComp_Ball_OnHoldingStateChanged__DelegateSignature::HoldingState' has a wrong offset!");

// DelegateFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnCollision__DelegateSignature
// 0x0190 (0x0190 - 0x0000)
struct PySummonedComp_Ball_OnCollision__DelegateSignature final
{
public:
	struct FHitResult                             OutHitResult;                                      // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIsThrowing;                                       // 0x0170(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0178(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_OnCollision__DelegateSignature) == 0x000008, "Wrong alignment on PySummonedComp_Ball_OnCollision__DelegateSignature");
static_assert(sizeof(PySummonedComp_Ball_OnCollision__DelegateSignature) == 0x000190, "Wrong size on PySummonedComp_Ball_OnCollision__DelegateSignature");
static_assert(offsetof(PySummonedComp_Ball_OnCollision__DelegateSignature, OutHitResult) == 0x000000, "Member 'PySummonedComp_Ball_OnCollision__DelegateSignature::OutHitResult' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnCollision__DelegateSignature, bIsThrowing) == 0x000170, "Member 'PySummonedComp_Ball_OnCollision__DelegateSignature::bIsThrowing' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnCollision__DelegateSignature, Impulse) == 0x000178, "Member 'PySummonedComp_Ball_OnCollision__DelegateSignature::Impulse' has a wrong offset!");

// DelegateFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnThrowed__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PySummonedComp_Ball_OnThrowed__DelegateSignature final
{
public:
	class AMarvelBaseCharacter*                   LastHolder;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLongPass;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_OnThrowed__DelegateSignature) == 0x000008, "Wrong alignment on PySummonedComp_Ball_OnThrowed__DelegateSignature");
static_assert(sizeof(PySummonedComp_Ball_OnThrowed__DelegateSignature) == 0x000010, "Wrong size on PySummonedComp_Ball_OnThrowed__DelegateSignature");
static_assert(offsetof(PySummonedComp_Ball_OnThrowed__DelegateSignature, LastHolder) == 0x000000, "Member 'PySummonedComp_Ball_OnThrowed__DelegateSignature::LastHolder' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnThrowed__DelegateSignature, bIsLongPass) == 0x000008, "Member 'PySummonedComp_Ball_OnThrowed__DelegateSignature::bIsLongPass' has a wrong offset!");

// DelegateFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnHolderChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PySummonedComp_Ball_OnHolderChanged__DelegateSignature final
{
public:
	class AMarvelBaseCharacter*                   NewHolder;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_OnHolderChanged__DelegateSignature) == 0x000008, "Wrong alignment on PySummonedComp_Ball_OnHolderChanged__DelegateSignature");
static_assert(sizeof(PySummonedComp_Ball_OnHolderChanged__DelegateSignature) == 0x000008, "Wrong size on PySummonedComp_Ball_OnHolderChanged__DelegateSignature");
static_assert(offsetof(PySummonedComp_Ball_OnHolderChanged__DelegateSignature, NewHolder) == 0x000000, "Member 'PySummonedComp_Ball_OnHolderChanged__DelegateSignature::NewHolder' has a wrong offset!");

// DelegateFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnTackleOccurred__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PySummonedComp_Ball_OnTackleOccurred__DelegateSignature final
{
public:
	class AMarvelBaseCharacter*                   Tackler;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMarvelBaseCharacter*                   SourceCharacter;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         AbilityID_0;                                       // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_OnTackleOccurred__DelegateSignature) == 0x000008, "Wrong alignment on PySummonedComp_Ball_OnTackleOccurred__DelegateSignature");
static_assert(sizeof(PySummonedComp_Ball_OnTackleOccurred__DelegateSignature) == 0x000018, "Wrong size on PySummonedComp_Ball_OnTackleOccurred__DelegateSignature");
static_assert(offsetof(PySummonedComp_Ball_OnTackleOccurred__DelegateSignature, Tackler) == 0x000000, "Member 'PySummonedComp_Ball_OnTackleOccurred__DelegateSignature::Tackler' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnTackleOccurred__DelegateSignature, SourceCharacter) == 0x000008, "Member 'PySummonedComp_Ball_OnTackleOccurred__DelegateSignature::SourceCharacter' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnTackleOccurred__DelegateSignature, AbilityID_0) == 0x000010, "Member 'PySummonedComp_Ball_OnTackleOccurred__DelegateSignature::AbilityID_0' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PySummonedComp_Ball.OnComponentHit
// 0x01A0 (0x01A0 - 0x0000)
struct PySummonedComp_Ball_OnComponentHit final
{
public:
	class UPrimitiveComponent*                    Comp;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Result;                                            // 0x0030(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PySummonedComp_Ball_OnComponentHit) == 0x000008, "Wrong alignment on PySummonedComp_Ball_OnComponentHit");
static_assert(sizeof(PySummonedComp_Ball_OnComponentHit) == 0x0001A0, "Wrong size on PySummonedComp_Ball_OnComponentHit");
static_assert(offsetof(PySummonedComp_Ball_OnComponentHit, Comp) == 0x000000, "Member 'PySummonedComp_Ball_OnComponentHit::Comp' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnComponentHit, OtherActor) == 0x000008, "Member 'PySummonedComp_Ball_OnComponentHit::OtherActor' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnComponentHit, OtherComp) == 0x000010, "Member 'PySummonedComp_Ball_OnComponentHit::OtherComp' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnComponentHit, Impulse) == 0x000018, "Member 'PySummonedComp_Ball_OnComponentHit::Impulse' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_OnComponentHit, Result) == 0x000030, "Member 'PySummonedComp_Ball_OnComponentHit::Result' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PySummonedComp_Ball.MulticastOnComponentHit
// 0x0190 (0x0190 - 0x0000)
struct PySummonedComp_Ball_MulticastOnComponentHit final
{
public:
	struct FHitResult                             Result;                                            // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bIsThrowing;                                       // 0x0170(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0178(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummonedComp_Ball_MulticastOnComponentHit) == 0x000008, "Wrong alignment on PySummonedComp_Ball_MulticastOnComponentHit");
static_assert(sizeof(PySummonedComp_Ball_MulticastOnComponentHit) == 0x000190, "Wrong size on PySummonedComp_Ball_MulticastOnComponentHit");
static_assert(offsetof(PySummonedComp_Ball_MulticastOnComponentHit, Result) == 0x000000, "Member 'PySummonedComp_Ball_MulticastOnComponentHit::Result' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_MulticastOnComponentHit, bIsThrowing) == 0x000170, "Member 'PySummonedComp_Ball_MulticastOnComponentHit::bIsThrowing' has a wrong offset!");
static_assert(offsetof(PySummonedComp_Ball_MulticastOnComponentHit, Impulse) == 0x000178, "Member 'PySummonedComp_Ball_MulticastOnComponentHit::Impulse' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyUIController_ThrowBall.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PyUIController_ThrowBall_ReceiveTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_ThrowBall_ReceiveTick) == 0x000004, "Wrong alignment on PyUIController_ThrowBall_ReceiveTick");
static_assert(sizeof(PyUIController_ThrowBall_ReceiveTick) == 0x000004, "Wrong size on PyUIController_ThrowBall_ReceiveTick");
static_assert(offsetof(PyUIController_ThrowBall_ReceiveTick, DeltaTime) == 0x000000, "Member 'PyUIController_ThrowBall_ReceiveTick::DeltaTime' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyOverlapHandlerComponent_Ball.ApplyEffectOnActorOverlap
// 0x0008 (0x0008 - 0x0000)
struct PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap) == 0x000008, "Wrong alignment on PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap");
static_assert(sizeof(PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap) == 0x000008, "Wrong size on PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap");
static_assert(offsetof(PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap, InActor) == 0x000000, "Member 'PyOverlapHandlerComponent_Ball_ApplyEffectOnActorOverlap::InActor' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Buff_20050101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Buff_20050101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Buff_20050101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Buff_20050101_WhileActiveFX");
static_assert(sizeof(PyCue_Buff_20050101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Buff_20050101_WhileActiveFX");
static_assert(offsetof(PyCue_Buff_20050101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Buff_20050101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_20050101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Buff_20050101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyCue_Buff_20050101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Buff_20050101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Buff_20050101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Buff_20050101_OnRemoveFX");
static_assert(sizeof(PyCue_Buff_20050101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Buff_20050101_OnRemoveFX");
static_assert(offsetof(PyCue_Buff_20050101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Buff_20050101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_20050101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Buff_20050101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyAbility_ThrowBall.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_ThrowBall_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_ThrowBall_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_ThrowBall_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_ThrowBall_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_ThrowBall_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_ThrowBall_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_ThrowBall_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyAbility_ThrowBall.NativeOnMontageBlendOut
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_ThrowBall_NativeOnMontageBlendOut final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_ThrowBall_NativeOnMontageBlendOut) == 0x000008, "Wrong alignment on PyAbility_ThrowBall_NativeOnMontageBlendOut");
static_assert(sizeof(PyAbility_ThrowBall_NativeOnMontageBlendOut) == 0x000010, "Wrong size on PyAbility_ThrowBall_NativeOnMontageBlendOut");
static_assert(offsetof(PyAbility_ThrowBall_NativeOnMontageBlendOut, Tag) == 0x000000, "Member 'PyAbility_ThrowBall_NativeOnMontageBlendOut::Tag' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyAbility_ThrowBall.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_ThrowBall_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_ThrowBall_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_ThrowBall_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_ThrowBall_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_ThrowBall_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_ThrowBall_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_ThrowBall_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyAbility_ThrowBall.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_ThrowBall_NativeOnMontageCancelled final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_ThrowBall_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_ThrowBall_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_ThrowBall_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_ThrowBall_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_ThrowBall_NativeOnMontageCancelled, Tag) == 0x000000, "Member 'PyAbility_ThrowBall_NativeOnMontageCancelled::Tag' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyAbility_ThrowBall.K2_TriggerGameplay
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_ThrowBall_K2_TriggerGameplay final
{
public:
	float                                         HoldTime;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_ThrowBall_K2_TriggerGameplay) == 0x000004, "Wrong alignment on PyAbility_ThrowBall_K2_TriggerGameplay");
static_assert(sizeof(PyAbility_ThrowBall_K2_TriggerGameplay) == 0x000004, "Wrong size on PyAbility_ThrowBall_K2_TriggerGameplay");
static_assert(offsetof(PyAbility_ThrowBall_K2_TriggerGameplay, HoldTime) == 0x000000, "Member 'PyAbility_ThrowBall_K2_TriggerGameplay::HoldTime' has a wrong offset!");

// PythonFunction PyAbility_ThrowBall.PyAbility_ThrowBall.ServerThrowEndPoint
// 0x0020 (0x0020 - 0x0000)
struct PyAbility_ThrowBall_ServerThrowEndPoint final
{
public:
	struct FVector                                TargetPoint;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldTime;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_ThrowBall_ServerThrowEndPoint) == 0x000008, "Wrong alignment on PyAbility_ThrowBall_ServerThrowEndPoint");
static_assert(sizeof(PyAbility_ThrowBall_ServerThrowEndPoint) == 0x000020, "Wrong size on PyAbility_ThrowBall_ServerThrowEndPoint");
static_assert(offsetof(PyAbility_ThrowBall_ServerThrowEndPoint, TargetPoint) == 0x000000, "Member 'PyAbility_ThrowBall_ServerThrowEndPoint::TargetPoint' has a wrong offset!");
static_assert(offsetof(PyAbility_ThrowBall_ServerThrowEndPoint, HoldTime) == 0x000018, "Member 'PyAbility_ThrowBall_ServerThrowEndPoint::HoldTime' has a wrong offset!");

}


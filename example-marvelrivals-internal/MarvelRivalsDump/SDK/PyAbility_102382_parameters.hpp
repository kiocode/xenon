#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102382

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102382.PySummoned_102382.MulticastLocationAndVelocity
// 0x0030 (0x0030 - 0x0000)
struct PySummoned_102382_MulticastLocationAndVelocity final
{
public:
	struct FVector                                CurLocation;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurVelocity;                                       // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummoned_102382_MulticastLocationAndVelocity) == 0x000008, "Wrong alignment on PySummoned_102382_MulticastLocationAndVelocity");
static_assert(sizeof(PySummoned_102382_MulticastLocationAndVelocity) == 0x000030, "Wrong size on PySummoned_102382_MulticastLocationAndVelocity");
static_assert(offsetof(PySummoned_102382_MulticastLocationAndVelocity, CurLocation) == 0x000000, "Member 'PySummoned_102382_MulticastLocationAndVelocity::CurLocation' has a wrong offset!");
static_assert(offsetof(PySummoned_102382_MulticastLocationAndVelocity, CurVelocity) == 0x000018, "Member 'PySummoned_102382_MulticastLocationAndVelocity::CurVelocity' has a wrong offset!");

// PythonFunction PyAbility_102382.PySummoned_102382.MulticastStopSimulating
// 0x0018 (0x0018 - 0x0000)
struct PySummoned_102382_MulticastStopSimulating final
{
public:
	struct FVector                                EndLocation;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummoned_102382_MulticastStopSimulating) == 0x000008, "Wrong alignment on PySummoned_102382_MulticastStopSimulating");
static_assert(sizeof(PySummoned_102382_MulticastStopSimulating) == 0x000018, "Wrong size on PySummoned_102382_MulticastStopSimulating");
static_assert(offsetof(PySummoned_102382_MulticastStopSimulating, EndLocation) == 0x000000, "Member 'PySummoned_102382_MulticastStopSimulating::EndLocation' has a wrong offset!");

// PythonFunction PyAbility_102382.PyCue_Summoner_Loop_10238201_BP.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10238201_BP_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10238201_BP_WhileActive) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10238201_BP_WhileActive");
static_assert(sizeof(PyCue_Summoner_Loop_10238201_BP_WhileActive) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10238201_BP_WhileActive");
static_assert(offsetof(PyCue_Summoner_Loop_10238201_BP_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10238201_BP_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10238201_BP_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10238201_BP_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10238201_BP_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10238201_BP_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102382.PyCue_Summoner_Loop_10238201_BP.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10238201_BP_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10238201_BP_OnRemove) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10238201_BP_OnRemove");
static_assert(sizeof(PyCue_Summoner_Loop_10238201_BP_OnRemove) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10238201_BP_OnRemove");
static_assert(offsetof(PyCue_Summoner_Loop_10238201_BP_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10238201_BP_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10238201_BP_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10238201_BP_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10238201_BP_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10238201_BP_OnRemove::ReturnValue' has a wrong offset!");

}


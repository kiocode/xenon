#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104275

#include "Basic.hpp"

#include "Hero_1042_structs.hpp"
#include "Marvel_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_104275.PyConfig_104275
// 0x0010 (0x00A8 - 0x0098)
class UPyConfig_104275 final : public UMarvelAbilityConfig
{
public:
	TArray<ESweepSpiderLeg_104275>                SpeiderLegTriggerSeq;                              // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_104275">();
	}
	static class UPyConfig_104275* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_104275>();
	}
};
static_assert(alignof(UPyConfig_104275) == 0x000008, "Wrong alignment on UPyConfig_104275");
static_assert(sizeof(UPyConfig_104275) == 0x0000A8, "Wrong size on UPyConfig_104275");
static_assert(offsetof(UPyConfig_104275, SpeiderLegTriggerSeq) == 0x000098, "Member 'UPyConfig_104275::SpeiderLegTriggerSeq' has a wrong offset!");

// PythonClass PyAbility_104275.PyUIController_104275
// 0x0010 (0x0C70 - 0x0C60)
class UPyUIController_104275 final : public UUIC_Ability
{
public:
	struct FGameplayTag                           SpecialAbilityTag;                                 // 0x0C60(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_104275">();
	}
	static class UPyUIController_104275* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_104275>();
	}
};
static_assert(alignof(UPyUIController_104275) == 0x000008, "Wrong alignment on UPyUIController_104275");
static_assert(sizeof(UPyUIController_104275) == 0x000C70, "Wrong size on UPyUIController_104275");
static_assert(offsetof(UPyUIController_104275, SpecialAbilityTag) == 0x000C60, "Member 'UPyUIController_104275::SpecialAbilityTag' has a wrong offset!");

// PythonClass PyAbility_104275.PyAbility_104275
// 0x0000 (0x2588 - 0x2588)
class UPyAbility_104275 : public UAbility_108
{
public:
	void BeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_104275">();
	}
	static class UPyAbility_104275* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_104275>();
	}
};
static_assert(alignof(UPyAbility_104275) == 0x000008, "Wrong alignment on UPyAbility_104275");
static_assert(sizeof(UPyAbility_104275) == 0x002588, "Wrong size on UPyAbility_104275");

// PythonClass PyAbility_104275.PyAbilityCue_10427501
// 0x0028 (0x0E78 - 0x0E50)
class APyAbilityCue_10427501 final : public AMarvelCueNotify_Ability
{
public:
	int32                                         AbilityID;                                         // 0x0E50(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SweepAudioID;                                      // 0x0E54(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        FormalUpperLeftAnimation;                          // 0x0E58(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        FormalLowLeftAnimation;                            // 0x0E60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        FormalUpperRightAnimation;                         // 0x0E68(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        FormalLowRightAnimation;                           // 0x0E70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbilityCue_10427501">();
	}
	static class APyAbilityCue_10427501* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyAbilityCue_10427501>();
	}
};
static_assert(alignof(APyAbilityCue_10427501) == 0x000008, "Wrong alignment on APyAbilityCue_10427501");
static_assert(sizeof(APyAbilityCue_10427501) == 0x000E78, "Wrong size on APyAbilityCue_10427501");
static_assert(offsetof(APyAbilityCue_10427501, AbilityID) == 0x000E50, "Member 'APyAbilityCue_10427501::AbilityID' has a wrong offset!");
static_assert(offsetof(APyAbilityCue_10427501, SweepAudioID) == 0x000E54, "Member 'APyAbilityCue_10427501::SweepAudioID' has a wrong offset!");
static_assert(offsetof(APyAbilityCue_10427501, FormalUpperLeftAnimation) == 0x000E58, "Member 'APyAbilityCue_10427501::FormalUpperLeftAnimation' has a wrong offset!");
static_assert(offsetof(APyAbilityCue_10427501, FormalLowLeftAnimation) == 0x000E60, "Member 'APyAbilityCue_10427501::FormalLowLeftAnimation' has a wrong offset!");
static_assert(offsetof(APyAbilityCue_10427501, FormalUpperRightAnimation) == 0x000E68, "Member 'APyAbilityCue_10427501::FormalUpperRightAnimation' has a wrong offset!");
static_assert(offsetof(APyAbilityCue_10427501, FormalLowRightAnimation) == 0x000E70, "Member 'APyAbilityCue_10427501::FormalLowRightAnimation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_221

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "MarvelLevel_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_221.PyConfig_221
// 0x0008 (0x00D8 - 0x00D0)
class UPyConfig_221 final : public UMarvelAbilityConfig_LongPressTrigger
{
public:
	float                                         GamePadClickTime;                                  // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_221">();
	}
	static class UPyConfig_221* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_221>();
	}
};
static_assert(alignof(UPyConfig_221) == 0x000008, "Wrong alignment on UPyConfig_221");
static_assert(sizeof(UPyConfig_221) == 0x0000D8, "Wrong size on UPyConfig_221");
static_assert(offsetof(UPyConfig_221, GamePadClickTime) == 0x0000D0, "Member 'UPyConfig_221::GamePadClickTime' has a wrong offset!");

// PythonClass PyAbility_221.PyAbility_221
// 0x0030 (0x25C8 - 0x2598)
class UPyAbility_221 : public UMarvelAbility_LongPressTrigger
{
public:
	FMulticastInlineDelegateProperty_             AbilityActivate;                                   // 0x2598(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             AbilityHoldEnd;                                    // 0x25A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             AbilityHoldTriggered;                              // 0x25B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void AbilityActivate__DelegateSignature();
	void AbilityHoldEnd__DelegateSignature();
	void AbilityHoldTriggered__DelegateSignature();
	void BeginPlay();
	void SetRefSelectTarget(class AActor* Target);
	bool CanActivate();
	bool CanPreActivate();
	void K2_ActivateAbility();
	void K2_TriggerGameplay(float HoldTime);
	void K2_MaxHoldTimeGameplay(float HoldTime);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_221">();
	}
	static class UPyAbility_221* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_221>();
	}
};
static_assert(alignof(UPyAbility_221) == 0x000008, "Wrong alignment on UPyAbility_221");
static_assert(sizeof(UPyAbility_221) == 0x0025C8, "Wrong size on UPyAbility_221");
static_assert(offsetof(UPyAbility_221, AbilityActivate) == 0x002598, "Member 'UPyAbility_221::AbilityActivate' has a wrong offset!");
static_assert(offsetof(UPyAbility_221, AbilityHoldEnd) == 0x0025A8, "Member 'UPyAbility_221::AbilityHoldEnd' has a wrong offset!");
static_assert(offsetof(UPyAbility_221, AbilityHoldTriggered) == 0x0025B8, "Member 'UPyAbility_221::AbilityHoldTriggered' has a wrong offset!");

// PythonClass PyAbility_221.PyUIC_SelectTarget_221
// 0x00B0 (0x0208 - 0x0158)
class UPyUIC_SelectTarget_221 : public UUIC_SelectTarget
{
public:
	float                                         SelectUIOffset;                                    // 0x0158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETrainAssist, class FText>               SelectTexts;                                       // 0x0160(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FUIActionData                          SelectActionData;                                  // 0x01B0(0x0058)(Edit, NativeAccessSpecifierPublic)

public:
	void OnInit();
	void OnDestruct();
	TArray<struct FSelectTaskResult> GetTaskResults();
	struct FVector GetLocationFromActor(class AActor* InActor);
	void OnTargetChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIC_SelectTarget_221">();
	}
	static class UPyUIC_SelectTarget_221* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIC_SelectTarget_221>();
	}
};
static_assert(alignof(UPyUIC_SelectTarget_221) == 0x000008, "Wrong alignment on UPyUIC_SelectTarget_221");
static_assert(sizeof(UPyUIC_SelectTarget_221) == 0x000208, "Wrong size on UPyUIC_SelectTarget_221");
static_assert(offsetof(UPyUIC_SelectTarget_221, SelectUIOffset) == 0x000158, "Member 'UPyUIC_SelectTarget_221::SelectUIOffset' has a wrong offset!");
static_assert(offsetof(UPyUIC_SelectTarget_221, SelectTexts) == 0x000160, "Member 'UPyUIC_SelectTarget_221::SelectTexts' has a wrong offset!");
static_assert(offsetof(UPyUIC_SelectTarget_221, SelectActionData) == 0x0001B0, "Member 'UPyUIC_SelectTarget_221::SelectActionData' has a wrong offset!");

}


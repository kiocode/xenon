#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103341

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Hero_1033_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103341.PyProjectile_10334101.K2_OnProcessHit
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10334101_K2_OnProcessHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10334101_K2_OnProcessHit) == 0x000008, "Wrong alignment on PyProjectile_10334101_K2_OnProcessHit");
static_assert(sizeof(PyProjectile_10334101_K2_OnProcessHit) == 0x000170, "Wrong size on PyProjectile_10334101_K2_OnProcessHit");
static_assert(offsetof(PyProjectile_10334101_K2_OnProcessHit, Hit) == 0x000000, "Member 'PyProjectile_10334101_K2_OnProcessHit::Hit' has a wrong offset!");

// PythonFunction PyAbility_103341.PyProjectile_10334101.K2_OnFlyOverMaxDistance
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10334101_K2_OnFlyOverMaxDistance final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10334101_K2_OnFlyOverMaxDistance) == 0x000008, "Wrong alignment on PyProjectile_10334101_K2_OnFlyOverMaxDistance");
static_assert(sizeof(PyProjectile_10334101_K2_OnFlyOverMaxDistance) == 0x000170, "Wrong size on PyProjectile_10334101_K2_OnFlyOverMaxDistance");
static_assert(offsetof(PyProjectile_10334101_K2_OnFlyOverMaxDistance, Hit) == 0x000000, "Member 'PyProjectile_10334101_K2_OnFlyOverMaxDistance::Hit' has a wrong offset!");

// PythonFunction PyAbility_103341.PyCue_Ability_Loop_10334102.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10334102_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10334102_WhileActive) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10334102_WhileActive");
static_assert(sizeof(PyCue_Ability_Loop_10334102_WhileActive) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10334102_WhileActive");
static_assert(offsetof(PyCue_Ability_Loop_10334102_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10334102_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10334102_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10334102_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10334102_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10334102_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103341.PyCue_Ability_Loop_10334102.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10334102_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10334102_OnRemove) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10334102_OnRemove");
static_assert(sizeof(PyCue_Ability_Loop_10334102_OnRemove) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10334102_OnRemove");
static_assert(offsetof(PyCue_Ability_Loop_10334102_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10334102_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10334102_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10334102_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10334102_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10334102_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103341.PyCue_Projectile_Loop_10334101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10334101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10334101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10334101_WhileActiveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10334101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10334101_WhileActiveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10334101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10334101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103341.PyCue_Projectile_Loop_10334101.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10334101_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10334101_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10334101_OnExecuteFX");
static_assert(sizeof(PyCue_Projectile_Loop_10334101_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10334101_OnExecuteFX");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10334101_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_OnExecuteFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10334101_OnExecuteFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103341.PyCue_Projectile_Loop_10334101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10334101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10334101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10334101_OnRemoveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10334101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10334101_OnRemoveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10334101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10334101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103341.PyCue_Projectile_Loop_10334101.OnTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Projectile_Loop_10334101_OnTagUpdated final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Projectile_Loop_10334101_OnTagUpdated) == 0x000004, "Wrong alignment on PyCue_Projectile_Loop_10334101_OnTagUpdated");
static_assert(sizeof(PyCue_Projectile_Loop_10334101_OnTagUpdated) == 0x000010, "Wrong size on PyCue_Projectile_Loop_10334101_OnTagUpdated");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_OnTagUpdated, Tag) == 0x000000, "Member 'PyCue_Projectile_Loop_10334101_OnTagUpdated::Tag' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10334101_OnTagUpdated, Exist) == 0x00000C, "Member 'PyCue_Projectile_Loop_10334101_OnTagUpdated::Exist' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103341_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_CanActivate) == 0x000001, "Wrong alignment on PyAbility_103341_CanActivate");
static_assert(sizeof(PyAbility_103341_CanActivate) == 0x000001, "Wrong size on PyAbility_103341_CanActivate");
static_assert(offsetof(PyAbility_103341_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_103341_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.IsMovingOnGround
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103341_IsMovingOnGround final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_IsMovingOnGround) == 0x000001, "Wrong alignment on PyAbility_103341_IsMovingOnGround");
static_assert(sizeof(PyAbility_103341_IsMovingOnGround) == 0x000001, "Wrong size on PyAbility_103341_IsMovingOnGround");
static_assert(offsetof(PyAbility_103341_IsMovingOnGround, ReturnValue) == 0x000000, "Member 'PyAbility_103341_IsMovingOnGround::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.SetRunState
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103341_SetRunState final
{
public:
	EBlackWidow_RunState                          RunState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_SetRunState) == 0x000001, "Wrong alignment on PyAbility_103341_SetRunState");
static_assert(sizeof(PyAbility_103341_SetRunState) == 0x000001, "Wrong size on PyAbility_103341_SetRunState");
static_assert(offsetof(PyAbility_103341_SetRunState, RunState) == 0x000000, "Member 'PyAbility_103341_SetRunState::RunState' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.SetCanActivateJump
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103341_SetCanActivateJump final
{
public:
	bool                                          bCanActivateJump;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_SetCanActivateJump) == 0x000001, "Wrong alignment on PyAbility_103341_SetCanActivateJump");
static_assert(sizeof(PyAbility_103341_SetCanActivateJump) == 0x000001, "Wrong size on PyAbility_103341_SetCanActivateJump");
static_assert(offsetof(PyAbility_103341_SetCanActivateJump, bCanActivateJump) == 0x000000, "Member 'PyAbility_103341_SetCanActivateJump::bCanActivateJump' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.OnRunStopStateBegin
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103341_OnRunStopStateBegin final
{
public:
	float                                         StateIntervalTime;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_OnRunStopStateBegin) == 0x000004, "Wrong alignment on PyAbility_103341_OnRunStopStateBegin");
static_assert(sizeof(PyAbility_103341_OnRunStopStateBegin) == 0x000004, "Wrong size on PyAbility_103341_OnRunStopStateBegin");
static_assert(offsetof(PyAbility_103341_OnRunStopStateBegin, StateIntervalTime) == 0x000000, "Member 'PyAbility_103341_OnRunStopStateBegin::StateIntervalTime' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.OnRunStopStateEnd
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103341_OnRunStopStateEnd final
{
public:
	float                                         StateIntervalTime;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_OnRunStopStateEnd) == 0x000004, "Wrong alignment on PyAbility_103341_OnRunStopStateEnd");
static_assert(sizeof(PyAbility_103341_OnRunStopStateEnd) == 0x000004, "Wrong size on PyAbility_103341_OnRunStopStateEnd");
static_assert(offsetof(PyAbility_103341_OnRunStopStateEnd, StateIntervalTime) == 0x000000, "Member 'PyAbility_103341_OnRunStopStateEnd::StateIntervalTime' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.OnForwardPressed
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103341_OnForwardPressed final
{
public:
	float                                         StateIntervalTime;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_OnForwardPressed) == 0x000004, "Wrong alignment on PyAbility_103341_OnForwardPressed");
static_assert(sizeof(PyAbility_103341_OnForwardPressed) == 0x000004, "Wrong size on PyAbility_103341_OnForwardPressed");
static_assert(offsetof(PyAbility_103341_OnForwardPressed, StateIntervalTime) == 0x000000, "Member 'PyAbility_103341_OnForwardPressed::StateIntervalTime' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.OnForwardReleased
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103341_OnForwardReleased final
{
public:
	float                                         StateIntervalTime;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_OnForwardReleased) == 0x000004, "Wrong alignment on PyAbility_103341_OnForwardReleased");
static_assert(sizeof(PyAbility_103341_OnForwardReleased) == 0x000004, "Wrong size on PyAbility_103341_OnForwardReleased");
static_assert(offsetof(PyAbility_103341_OnForwardReleased, StateIntervalTime) == 0x000000, "Member 'PyAbility_103341_OnForwardReleased::StateIntervalTime' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.OnStopMovingForward
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103341_OnStopMovingForward final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_OnStopMovingForward) == 0x000001, "Wrong alignment on PyAbility_103341_OnStopMovingForward");
static_assert(sizeof(PyAbility_103341_OnStopMovingForward) == 0x000001, "Wrong size on PyAbility_103341_OnStopMovingForward");
static_assert(offsetof(PyAbility_103341_OnStopMovingForward, ReturnValue) == 0x000000, "Member 'PyAbility_103341_OnStopMovingForward::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.OnJumpPressed
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103341_OnJumpPressed final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_OnJumpPressed) == 0x000004, "Wrong alignment on PyAbility_103341_OnJumpPressed");
static_assert(sizeof(PyAbility_103341_OnJumpPressed) == 0x000004, "Wrong size on PyAbility_103341_OnJumpPressed");
static_assert(offsetof(PyAbility_103341_OnJumpPressed, Time) == 0x000000, "Member 'PyAbility_103341_OnJumpPressed::Time' has a wrong offset!");

// PythonFunction PyAbility_103341.PyAbility_103341.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103341_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103341_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_103341_K2_OnEndAbility");
static_assert(sizeof(PyAbility_103341_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_103341_K2_OnEndAbility");
static_assert(offsetof(PyAbility_103341_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_103341_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}


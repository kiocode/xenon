#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_PyGeneralMoveTo

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// PythonFunction BTT_PyGeneralMoveTo.BTT_PyGeneralMoveTo.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_PyGeneralMoveTo_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTT_PyGeneralMoveTo_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_PyGeneralMoveTo_ReceiveTickAI");
//static_assert(sizeof(BTT_PyGeneralMoveTo_ReceiveTickAI) == 0x000018, "Wrong size on BTT_PyGeneralMoveTo_ReceiveTickAI");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_PyGeneralMoveTo_ReceiveTickAI::OwnerController' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_PyGeneralMoveTo_ReceiveTickAI::ControlledPawn' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_PyGeneralMoveTo_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// PythonFunction BTT_PyGeneralMoveTo.BTT_PyGeneralMoveTo.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_PyGeneralMoveTo_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTT_PyGeneralMoveTo_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_PyGeneralMoveTo_ReceiveExecuteAI");
//static_assert(sizeof(BTT_PyGeneralMoveTo_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_PyGeneralMoveTo_ReceiveExecuteAI");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_PyGeneralMoveTo_ReceiveExecuteAI::OwnerController' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_PyGeneralMoveTo_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// PythonFunction BTT_PyGeneralMoveTo.BTT_PyGeneralMoveTo.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_PyGeneralMoveTo_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTT_PyGeneralMoveTo_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_PyGeneralMoveTo_ReceiveAbortAI");
//static_assert(sizeof(BTT_PyGeneralMoveTo_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_PyGeneralMoveTo_ReceiveAbortAI");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_PyGeneralMoveTo_ReceiveAbortAI::OwnerController' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_PyGeneralMoveTo_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// PythonFunction BTT_PyGeneralMoveTo.BTT_PyGeneralMoveTo.ReceiveOnTaskFinished
// 0x0018 (0x0018 - 0x0000)
struct BTT_PyGeneralMoveTo_ReceiveOnTaskFinished final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 Result;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTT_PyGeneralMoveTo_ReceiveOnTaskFinished) == 0x000008, "Wrong alignment on BTT_PyGeneralMoveTo_ReceiveOnTaskFinished");
//static_assert(sizeof(BTT_PyGeneralMoveTo_ReceiveOnTaskFinished) == 0x000018, "Wrong size on BTT_PyGeneralMoveTo_ReceiveOnTaskFinished");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveOnTaskFinished, OwnerController) == 0x000000, "Member 'BTT_PyGeneralMoveTo_ReceiveOnTaskFinished::OwnerController' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveOnTaskFinished, ControlledPawn) == 0x000008, "Member 'BTT_PyGeneralMoveTo_ReceiveOnTaskFinished::ControlledPawn' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_ReceiveOnTaskFinished, Result) == 0x000010, "Member 'BTT_PyGeneralMoveTo_ReceiveOnTaskFinished::Result' has a wrong offset!");

// PythonFunction BTT_PyGeneralMoveTo.BTT_PyGeneralMoveTo.OnMoveCompleted
// 0x0008 (0x0008 - 0x0000)
struct BTT_PyGeneralMoveTo_OnMoveCompleted final
{
public:
	struct FAIRequestID                           RequestID;                                         // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
	EPathFollowingResult                          Result;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTT_PyGeneralMoveTo_OnMoveCompleted) == 0x000004, "Wrong alignment on BTT_PyGeneralMoveTo_OnMoveCompleted");
//static_assert(sizeof(BTT_PyGeneralMoveTo_OnMoveCompleted) == 0x000008, "Wrong size on BTT_PyGeneralMoveTo_OnMoveCompleted");
//static_assert(offsetof(BTT_PyGeneralMoveTo_OnMoveCompleted, RequestID) == 0x000000, "Member 'BTT_PyGeneralMoveTo_OnMoveCompleted::RequestID' has a wrong offset!");
//static_assert(offsetof(BTT_PyGeneralMoveTo_OnMoveCompleted, Result) == 0x000004, "Member 'BTT_PyGeneralMoveTo_OnMoveCompleted::Result' has a wrong offset!");

// PythonFunction BTT_PyGeneralMoveTo.BTT_PyGeneralMoveTo.OnMoveEnd
// 0x0001 (0x0001 - 0x0000)
struct BTT_PyGeneralMoveTo_OnMoveEnd final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTT_PyGeneralMoveTo_OnMoveEnd) == 0x000001, "Wrong alignment on BTT_PyGeneralMoveTo_OnMoveEnd");
//static_assert(sizeof(BTT_PyGeneralMoveTo_OnMoveEnd) == 0x000001, "Wrong size on BTT_PyGeneralMoveTo_OnMoveEnd");
//static_assert(offsetof(BTT_PyGeneralMoveTo_OnMoveEnd, bSuccess) == 0x000000, "Member 'BTT_PyGeneralMoveTo_OnMoveEnd::bSuccess' has a wrong offset!");

}


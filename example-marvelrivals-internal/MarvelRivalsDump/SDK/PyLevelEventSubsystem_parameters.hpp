#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelEventSubsystem

#include "Basic.hpp"

#include "Python_enums_structs.hpp"
#include "Marvel_structs.hpp"
#include "MarvelLevel_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ClientLoadedMap__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_ClientLoadedMap__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SelectHeroWorldLoadedDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature final
{
public:
	class FString                                 WorldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature, WorldName) == 0x000000, "Member 'PyLevelEventSubSystem_SelectHeroWorldLoadedDispatcher__DelegateSignature::WorldName' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.InitializeSublevelPartList__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature final
{
public:
	TArray<class FString>                         SublevelPartList;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature, SublevelPartList) == 0x000000, "Member 'PyLevelEventSubSystem_InitializeSublevelPartList__DelegateSignature::SublevelPartList' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CurrentLevelPartNameChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature final
{
public:
	class FString                                 CurrentLevelPartName;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature, CurrentLevelPartName) == 0x000000, "Member 'PyLevelEventSubSystem_CurrentLevelPartNameChanged__DelegateSignature::CurrentLevelPartName' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.RemainingTimeDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature, RemainingTime) == 0x000000, "Member 'PyLevelEventSubSystem_RemainingTimeDispatcher__DelegateSignature::RemainingTime' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PauseRemainingTimeDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature, RemainingTime) == 0x000000, "Member 'PyLevelEventSubSystem_PauseRemainingTimeDispatcher__DelegateSignature::RemainingTime' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPlayerSpawn__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnPlayerSpawn__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPlayerWin__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPlayerWin__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPlayerWin__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPlayerWin__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPlayerWin__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPlayerWin__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPlayerWin__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnPlayerWin__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPlayerLost__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPlayerLost__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPlayerLost__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPlayerLost__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPlayerLost__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPlayerLost__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPlayerLost__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnPlayerLost__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnActorSRoomPassDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Char;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          In_pass;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature, Char) == 0x000000, "Member 'PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature::Char' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature, In_pass) == 0x000008, "Member 'PyLevelEventSubSystem_OnActorSRoomPassDispatcher__DelegateSignature::In_pass' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.RoundWinnerDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature final
{
public:
	int32                                         Map_id;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   battle_side;                                       // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature, Map_id) == 0x000000, "Member 'PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature::Map_id' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature, battle_side) == 0x000004, "Member 'PyLevelEventSubSystem_RoundWinnerDispatcher__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.StateTimeChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature final
{
public:
	EMatchState                                   State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Old_time;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_time;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Passed_time;                                       // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature, State) == 0x000000, "Member 'PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature::State' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature, Old_time) == 0x000004, "Member 'PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature::Old_time' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature, New_time) == 0x000008, "Member 'PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature::New_time' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature, Passed_time) == 0x00000C, "Member 'PyLevelEventSubSystem_StateTimeChangeDispatcher__DelegateSignature::Passed_time' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OvertimeUpdateDispatcher__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature final
{
public:
	float                                         OvertimeRemaining;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OvertimeLength;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OvertimeSpeed;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature) == 0x00000C, "Wrong size on PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature, OvertimeRemaining) == 0x000000, "Member 'PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature::OvertimeRemaining' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature, OvertimeLength) == 0x000004, "Member 'PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature::OvertimeLength' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature, OvertimeSpeed) == 0x000008, "Member 'PyLevelEventSubSystem_OvertimeUpdateDispatcher__DelegateSignature::OvertimeSpeed' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DestroyCharacterLogOut__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature final
{
public:
	class AMarvelPlayerState*                     PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature, PlayerState) == 0x000000, "Member 'PyLevelEventSubSystem_DestroyCharacterLogOut__DelegateSignature::PlayerState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPlayerReconnect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature final
{
public:
	class AMarvelPlayerState*                     PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature, PlayerState) == 0x000000, "Member 'PyLevelEventSubSystem_OnPlayerReconnect__DelegateSignature::PlayerState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ObjectiveActivateDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature, Objective) == 0x000000, "Member 'PyLevelEventSubSystem_ObjectiveActivateDispatcher__DelegateSignature::Objective' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ObjectiveEndDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature, Objective) == 0x000000, "Member 'PyLevelEventSubSystem_ObjectiveEndDispatcher__DelegateSignature::Objective' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ObjectiveEndCallback__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature final
{
public:
	class AActor*                                 Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature, Objective) == 0x000000, "Member 'PyLevelEventSubSystem_ObjectiveEndCallback__DelegateSignature::Objective' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ObjectiveStageDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature final
{
public:
	int32                                         Stage;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature, Stage) == 0x000000, "Member 'PyLevelEventSubSystem_ObjectiveStageDispatcher__DelegateSignature::Stage' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ObjectiveMaxProgressDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature final
{
public:
	float                                         MaxProgress;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature, MaxProgress) == 0x000000, "Member 'PyLevelEventSubSystem_ObjectiveMaxProgressDispatcher__DelegateSignature::MaxProgress' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PayloadActivateDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Payload;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature, Payload) == 0x000000, "Member 'PyLevelEventSubSystem_PayloadActivateDispatcher__DelegateSignature::Payload' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PrePayloadRouteStartDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Payload;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature, Payload) == 0x000000, "Member 'PyLevelEventSubSystem_PrePayloadRouteStartDispatcher__DelegateSignature::Payload' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PayloadRouteStartDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Payload;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature, Payload) == 0x000000, "Member 'PyLevelEventSubSystem_PayloadRouteStartDispatcher__DelegateSignature::Payload' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PayloadRouteEndDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Payload;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature, Payload) == 0x000000, "Member 'PyLevelEventSubSystem_PayloadRouteEndDispatcher__DelegateSignature::Payload' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PayloadDecalVisibleDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature, IsVisible) == 0x000000, "Member 'PyLevelEventSubSystem_PayloadDecalVisibleDispatcher__DelegateSignature::IsVisible' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PayloadEndCallback__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature final
{
public:
	class AActor*                                 Payload;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature, Payload) == 0x000000, "Member 'PyLevelEventSubSystem_PayloadEndCallback__DelegateSignature::Payload' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TraceListChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature final
{
public:
	TArray<float>                                 TraceList;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature, TraceList) == 0x000000, "Member 'PyLevelEventSubSystem_TraceListChangeDispatcher__DelegateSignature::TraceList' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PayloadMaxDistanceDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature final
{
public:
	float                                         MaxDistance;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature, MaxDistance) == 0x000000, "Member 'PyLevelEventSubSystem_PayloadMaxDistanceDispatcher__DelegateSignature::MaxDistance' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ControlUnlockStartDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Control;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature, Control) == 0x000000, "Member 'PyLevelEventSubSystem_ControlUnlockStartDispatcher__DelegateSignature::Control' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ControlFightStartDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Control;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature, Control) == 0x000000, "Member 'PyLevelEventSubSystem_ControlFightStartDispatcher__DelegateSignature::Control' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ControlOwnerChangedForRPC__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature final
{
public:
	EBattleSide                                   BattleSide;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstChange;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature) == 0x000002, "Wrong size on PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature, BattleSide) == 0x000000, "Member 'PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature::BattleSide' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature, IsFirstChange) == 0x000001, "Member 'PyLevelEventSubSystem_ControlOwnerChangedForRPC__DelegateSignature::IsFirstChange' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ControlEndCallback__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_ControlEndCallback__DelegateSignature final
{
public:
	class AActor*                                 Control;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ControlEndCallback__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ControlEndCallback__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ControlEndCallback__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_ControlEndCallback__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ControlEndCallback__DelegateSignature, Control) == 0x000000, "Member 'PyLevelEventSubSystem_ControlEndCallback__DelegateSignature::Control' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.RobotEndDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Robot;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature, Robot) == 0x000000, "Member 'PyLevelEventSubSystem_RobotEndDispatcher__DelegateSignature::Robot' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DispatcherRespawnStart__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RespawnTime;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature, PlayerId) == 0x000000, "Member 'PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature::PlayerId' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature, RespawnTime) == 0x000004, "Member 'PyLevelEventSubSystem_DispatcherRespawnStart__DelegateSignature::RespawnTime' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DispatcherRespawnBreak__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature, PlayerId) == 0x000000, "Member 'PyLevelEventSubSystem_DispatcherRespawnBreak__DelegateSignature::PlayerId' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SepcialForceKillByTerrain__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature, Target) == 0x000000, "Member 'PyLevelEventSubSystem_SepcialForceKillByTerrain__DelegateSignature::Target' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DeathZoneKill__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_DeathZoneKill__DelegateSignature final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DeathZoneKill__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_DeathZoneKill__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DeathZoneKill__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_DeathZoneKill__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DeathZoneKill__DelegateSignature, Target) == 0x000000, "Member 'PyLevelEventSubSystem_DeathZoneKill__DelegateSignature::Target' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CampPlayerChangedDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Camp;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature, Camp) == 0x000000, "Member 'PyLevelEventSubSystem_CampPlayerChangedDispatcher__DelegateSignature::Camp' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PreCharacterDestroy__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature, Character) == 0x000000, "Member 'PyLevelEventSubSystem_PreCharacterDestroy__DelegateSignature::Character' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AmpProgressDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature final
{
public:
	float                                         CombineProgress;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnershipType                                OwnerSide;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature, CombineProgress) == 0x000000, "Member 'PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature::CombineProgress' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature, OwnerSide) == 0x000004, "Member 'PyLevelEventSubSystem_AmpProgressDispatcher__DelegateSignature::OwnerSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AmpFlagOccupyProgressDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnershipType                                OwnerSide;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature, Progress) == 0x000000, "Member 'PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature::Progress' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature, OwnerSide) == 0x000004, "Member 'PyLevelEventSubSystem_AmpFlagOccupyProgressDispatcher__DelegateSignature::OwnerSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AmpFlagStateChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature final
{
public:
	EInfinityCrisisState                          OldState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInfinityCrisisState                          NewState;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnershipType                                OldSide;                                           // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOwnershipType                                NewSide;                                           // 0x0003(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature, OldState) == 0x000000, "Member 'PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature::OldState' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature, NewState) == 0x000001, "Member 'PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature::NewState' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature, OldSide) == 0x000002, "Member 'PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature::OldSide' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature, NewSide) == 0x000003, "Member 'PyLevelEventSubSystem_AmpFlagStateChanged__DelegateSignature::NewSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AmpFlagEndDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature final
{
public:
	EOwnershipType                                WinnerSide;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature, WinnerSide) == 0x000000, "Member 'PyLevelEventSubSystem_AmpFlagEndDispatcher__DelegateSignature::WinnerSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SyncUnlockTimeChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature, Num) == 0x000000, "Member 'PyLevelEventSubSystem_SyncUnlockTimeChanged__DelegateSignature::Num' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SyncCatchTimeoutChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature, Num) == 0x000000, "Member 'PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature::Num' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature, Total) == 0x000004, "Member 'PyLevelEventSubSystem_SyncCatchTimeoutChanged__DelegateSignature::Total' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPickupAmpFlag__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature, Character) == 0x000000, "Member 'PyLevelEventSubSystem_OnPickupAmpFlag__DelegateSignature::Character' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPickupAmpFlagInterrupted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature, Character) == 0x000000, "Member 'PyLevelEventSubSystem_OnPickupAmpFlagInterrupted__DelegateSignature::Character' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnTryPickupAmpFlag__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         GatherTotalTime;                                   // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature, Character) == 0x000000, "Member 'PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature::Character' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature, GatherTotalTime) == 0x000008, "Member 'PyLevelEventSubSystem_OnTryPickupAmpFlag__DelegateSignature::GatherTotalTime' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PlaceFlagInLegalZone__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature final
{
public:
	class AActor*                                 LegalZone;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature, LegalZone) == 0x000000, "Member 'PyLevelEventSubSystem_PlaceFlagInLegalZone__DelegateSignature::LegalZone' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CapturingFlag__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_CapturingFlag__DelegateSignature final
{
public:
	class AActor*                                 Char;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_CapturingFlag__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_CapturingFlag__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CapturingFlag__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_CapturingFlag__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CapturingFlag__DelegateSignature, Char) == 0x000000, "Member 'PyLevelEventSubSystem_CapturingFlag__DelegateSignature::Char' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AmpFlagTargetActorChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature, Target) == 0x000000, "Member 'PyLevelEventSubSystem_AmpFlagTargetActorChanged__DelegateSignature::Target' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.HydraMoveAchievementEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature final
{
public:
	EOwnershipType                                BattleSide;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature, BattleSide) == 0x000000, "Member 'PyLevelEventSubSystem_HydraMoveAchievementEvent__DelegateSignature::BattleSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DispatcherFullScreenMessage__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature final
{
public:
	class FString                                 Tips;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature, Tips) == 0x000000, "Member 'PyLevelEventSubSystem_DispatcherFullScreenMessage__DelegateSignature::Tips' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainStart__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_TrainStart__DelegateSignature final
{
public:
	ETrainAction                                  Action;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UID;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainStart__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_TrainStart__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainStart__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_TrainStart__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainStart__DelegateSignature, Action) == 0x000000, "Member 'PyLevelEventSubSystem_TrainStart__DelegateSignature::Action' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainStart__DelegateSignature, UID) == 0x000004, "Member 'PyLevelEventSubSystem_TrainStart__DelegateSignature::UID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_TrainEnd__DelegateSignature final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrainAction                                  Action;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UID;                                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_finish;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainEnd__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_TrainEnd__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainEnd__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_TrainEnd__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainEnd__DelegateSignature, Ret) == 0x000000, "Member 'PyLevelEventSubSystem_TrainEnd__DelegateSignature::Ret' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainEnd__DelegateSignature, Action) == 0x000004, "Member 'PyLevelEventSubSystem_TrainEnd__DelegateSignature::Action' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainEnd__DelegateSignature, UID) == 0x000008, "Member 'PyLevelEventSubSystem_TrainEnd__DelegateSignature::UID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainEnd__DelegateSignature, Is_finish) == 0x00000C, "Member 'PyLevelEventSubSystem_TrainEnd__DelegateSignature::Is_finish' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ChangeTrainHold__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature, UID) == 0x000000, "Member 'PyLevelEventSubSystem_ChangeTrainHold__DelegateSignature::UID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainDelayStart__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct PyLevelEventSubSystem_TrainDelayStart__DelegateSignature final
{
public:
	ETrainAction                                  Action;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UID;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainDelayStart__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_TrainDelayStart__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainDelayStart__DelegateSignature) == 0x00000C, "Wrong size on PyLevelEventSubSystem_TrainDelayStart__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainDelayStart__DelegateSignature, Action) == 0x000000, "Member 'PyLevelEventSubSystem_TrainDelayStart__DelegateSignature::Action' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainDelayStart__DelegateSignature, UID) == 0x000004, "Member 'PyLevelEventSubSystem_TrainDelayStart__DelegateSignature::UID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainDelayStart__DelegateSignature, Delay) == 0x000008, "Member 'PyLevelEventSubSystem_TrainDelayStart__DelegateSignature::Delay' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainDelayEnd__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature final
{
public:
	ETrainAction                                  Action;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UID;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature, Action) == 0x000000, "Member 'PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature::Action' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature, UID) == 0x000004, "Member 'PyLevelEventSubSystem_TrainDelayEnd__DelegateSignature::UID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ObtainTrainComputerAuth__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature final
{
public:
	class AActor*                                 Computer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APyMarvelPlayerState*                   PS;                                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature, Computer) == 0x000000, "Member 'PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature::Computer' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature, PS) == 0x000008, "Member 'PyLevelEventSubSystem_ObtainTrainComputerAuth__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.LoseTrainComputerAuth__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature final
{
public:
	class AActor*                                 Computer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APyMarvelPlayerState*                   PS;                                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature, Computer) == 0x000000, "Member 'PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature::Computer' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature, PS) == 0x000008, "Member 'PyLevelEventSubSystem_LoseTrainComputerAuth__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.EnterPortalArea__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_EnterPortalArea__DelegateSignature final
{
public:
	class AActor*                                 Computer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APyMarvelPlayerState*                   PS;                                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_EnterPortalArea__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_EnterPortalArea__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_EnterPortalArea__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_EnterPortalArea__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_EnterPortalArea__DelegateSignature, Computer) == 0x000000, "Member 'PyLevelEventSubSystem_EnterPortalArea__DelegateSignature::Computer' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_EnterPortalArea__DelegateSignature, PS) == 0x000008, "Member 'PyLevelEventSubSystem_EnterPortalArea__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ExitPortalArea__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_ExitPortalArea__DelegateSignature final
{
public:
	class AActor*                                 Computer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APyMarvelPlayerState*                   PS;                                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ExitPortalArea__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ExitPortalArea__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ExitPortalArea__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_ExitPortalArea__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ExitPortalArea__DelegateSignature, Computer) == 0x000000, "Member 'PyLevelEventSubSystem_ExitPortalArea__DelegateSignature::Computer' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_ExitPortalArea__DelegateSignature, PS) == 0x000008, "Member 'PyLevelEventSubSystem_ExitPortalArea__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.EnterTrainArea__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_EnterTrainArea__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETrainAreaType                                Area_type;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_EnterTrainArea__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_EnterTrainArea__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_EnterTrainArea__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_EnterTrainArea__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_EnterTrainArea__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_EnterTrainArea__DelegateSignature::PS' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_EnterTrainArea__DelegateSignature, Area_type) == 0x000008, "Member 'PyLevelEventSubSystem_EnterTrainArea__DelegateSignature::Area_type' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ExitTrainArea__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_ExitTrainArea__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETrainAreaType                                Area_type;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ExitTrainArea__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_ExitTrainArea__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ExitTrainArea__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_ExitTrainArea__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ExitTrainArea__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_ExitTrainArea__DelegateSignature::PS' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_ExitTrainArea__DelegateSignature, Area_type) == 0x000008, "Member 'PyLevelEventSubSystem_ExitTrainArea__DelegateSignature::Area_type' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainCustomSetting__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature final
{
public:
	ETrainCustomOp                                Custom_op;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature, Custom_op) == 0x000000, "Member 'PyLevelEventSubSystem_TrainCustomSetting__DelegateSignature::Custom_op' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainFriendHarm__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature, Value) == 0x000000, "Member 'PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature, Time) == 0x000004, "Member 'PyLevelEventSubSystem_TrainFriendHarm__DelegateSignature::Time' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainFriendHarmFinshed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature, Value) == 0x000000, "Member 'PyLevelEventSubSystem_TrainFriendHarmFinshed__DelegateSignature::Value' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainSkillNoCd__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature, Value) == 0x000000, "Member 'PyLevelEventSubSystem_TrainSkillNoCd__DelegateSignature::Value' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainEntryStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature, IsPlaying) == 0x000000, "Member 'PyLevelEventSubSystem_TrainEntryStateChanged__DelegateSignature::IsPlaying' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TrainStartLog__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PyLevelEventSubSystem_TrainStartLog__DelegateSignature final
{
public:
	struct FTrainLogContent                       Info;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyLevelEventSubSystem_TrainStartLog__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_TrainStartLog__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TrainStartLog__DelegateSignature) == 0x000018, "Wrong size on PyLevelEventSubSystem_TrainStartLog__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TrainStartLog__DelegateSignature, Info) == 0x000000, "Member 'PyLevelEventSubSystem_TrainStartLog__DelegateSignature::Info' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.LimitTimeTrainStateChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature final
{
public:
	int32                                         TrainState;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature, TrainState) == 0x000000, "Member 'PyLevelEventSubSystem_LimitTimeTrainStateChanged__DelegateSignature::TrainState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.LevelCheckPointActivate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckPointID;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature, UID) == 0x000000, "Member 'PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature::UID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature, CheckPointID) == 0x000004, "Member 'PyLevelEventSubSystem_LevelCheckPointActivate__DelegateSignature::CheckPointID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AddPlayerScore__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_AddPlayerScore__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AddPlayerScore__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_AddPlayerScore__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AddPlayerScore__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_AddPlayerScore__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AddPlayerScore__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_AddPlayerScore__DelegateSignature::PS' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AddPlayerScore__DelegateSignature, Score) == 0x000008, "Member 'PyLevelEventSubSystem_AddPlayerScore__DelegateSignature::Score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnChangePlayerScore__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OldScore;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewScore;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature::PS' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature, OldScore) == 0x000008, "Member 'PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature::OldScore' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature, NewScore) == 0x00000C, "Member 'PyLevelEventSubSystem_OnChangePlayerScore__DelegateSignature::NewScore' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DeathBattleSituation__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Winner_score;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature) == 0x00000C, "Wrong size on PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature, Score) == 0x000004, "Member 'PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature::Score' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature, Winner_score) == 0x000008, "Member 'PyLevelEventSubSystem_DeathBattleSituation__DelegateSignature::Winner_score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SubPlayerScore__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_SubPlayerScore__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SubPlayerScore__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SubPlayerScore__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SubPlayerScore__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_SubPlayerScore__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SubPlayerScore__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_SubPlayerScore__DelegateSignature::PS' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SubPlayerScore__DelegateSignature, Score) == 0x000008, "Member 'PyLevelEventSubSystem_SubPlayerScore__DelegateSignature::Score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ChangeDeathFinal__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature final
{
public:
	bool                                          Is_final;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature, Is_final) == 0x000000, "Member 'PyLevelEventSubSystem_ChangeDeathFinal__DelegateSignature::Is_final' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.FristWinner__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_FristWinner__DelegateSignature final
{
public:
	class APyMarvelPlayerState*                   PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_FristWinner__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_FristWinner__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_FristWinner__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_FristWinner__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_FristWinner__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_FristWinner__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PickUpKillConfirm__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature final
{
public:
	class AActor*                                 Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMarvelPlayerState*                     PlayerState;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   battle_side;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_ally;                                           // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature) == 0x000018, "Wrong size on PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature, Item) == 0x000000, "Member 'PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature, PlayerState) == 0x000008, "Member 'PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature::PlayerState' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature, battle_side) == 0x000010, "Member 'PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature, Is_ally) == 0x000011, "Member 'PyLevelEventSubSystem_PickUpKillConfirm__DelegateSignature::Is_ally' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.AddTeamScore__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_AddTeamScore__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_AddTeamScore__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_AddTeamScore__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_AddTeamScore__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_AddTeamScore__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_AddTeamScore__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_AddTeamScore__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_AddTeamScore__DelegateSignature, Score) == 0x000004, "Member 'PyLevelEventSubSystem_AddTeamScore__DelegateSignature::Score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SubTeamScore__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_SubTeamScore__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SubTeamScore__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_SubTeamScore__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SubTeamScore__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_SubTeamScore__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SubTeamScore__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_SubTeamScore__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SubTeamScore__DelegateSignature, Score) == 0x000004, "Member 'PyLevelEventSubSystem_SubTeamScore__DelegateSignature::Score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.InSuddenDeathDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature final
{
public:
	bool                                          InSuddenDeath;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature, InSuddenDeath) == 0x000000, "Member 'PyLevelEventSubSystem_InSuddenDeathDispatcher__DelegateSignature::InSuddenDeath' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnMultiKillChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature final
{
public:
	int32                                         MultiKill;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarvelPlayerState*                     PlayerState;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature, MultiKill) == 0x000000, "Member 'PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature::MultiKill' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature, PlayerState) == 0x000008, "Member 'PyLevelEventSubSystem_OnMultiKillChanged__DelegateSignature::PlayerState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickHeroIDChange__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature final
{
public:
	class AMarvelPlayerState*                     PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature, PlayerState) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickHeroIDChange__DelegateSignature::PlayerState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickStateChangeDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature final
{
public:
	EBanPickState                                 BanPickState;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature, BanPickState) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickStateChangeDispatcher__DelegateSignature::BanPickState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickResultListChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature final
{
public:
	TArray<struct FBanPickResultInfo>             BanPickResultList;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature, BanPickResultList) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickResultListChangeDispatcher__DelegateSignature::BanPickResultList' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickIndexChangeDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature final
{
public:
	int32                                         BanPickIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature, BanPickIndex) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickIndexChangeDispatcher__DelegateSignature::BanPickIndex' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CurBanPickSideChangeDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature final
{
public:
	EBattleSide                                   CurBanPickSide;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature, CurBanPickSide) == 0x000000, "Member 'PyLevelEventSubSystem_CurBanPickSideChangeDispatcher__DelegateSignature::CurBanPickSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.RedBanPickLeaderIDChangeDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature final
{
public:
	int32                                         RedBanPickLeaderID;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature, RedBanPickLeaderID) == 0x000000, "Member 'PyLevelEventSubSystem_RedBanPickLeaderIDChangeDispatcher__DelegateSignature::RedBanPickLeaderID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BlueBanPickLeaderIDChangeDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature final
{
public:
	int32                                         BlueBanPickLeaderID;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature, BlueBanPickLeaderID) == 0x000000, "Member 'PyLevelEventSubSystem_BlueBanPickLeaderIDChangeDispatcher__DelegateSignature::BlueBanPickLeaderID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature final
{
public:
	struct FBanPickResultInfo                     BanPickResult;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature, BanPickResult) == 0x000000, "Member 'PyLevelEventSubSystem_CurRoundBlueBanPickResultChangeDispatcher__DelegateSignature::BanPickResult' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CurRoundRedBanPickResultChangeDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature final
{
public:
	struct FBanPickResultInfo                     BanPickResult;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature, BanPickResult) == 0x000000, "Member 'PyLevelEventSubSystem_CurRoundRedBanPickResultChangeDispatcher__DelegateSignature::BanPickResult' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.S_BanPickSideChangeDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature final
{
public:
	EBattleSide                                   CurBanPickSide;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature, CurBanPickSide) == 0x000000, "Member 'PyLevelEventSubSystem_S_BanPickSideChangeDispatcher__DelegateSignature::CurBanPickSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickSideConfirmResultDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature final
{
public:
	EBattleSide                                   BattleSide;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature, BattleSide) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickSideConfirmResultDispatcher__DelegateSignature::BattleSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickOperateTypeChangeDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature final
{
public:
	EBanPickOperateType                           OperateType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature, OperateType) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickOperateTypeChangeDispatcher__DelegateSignature::OperateType' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.ClientEnableBanPickChangeDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature final
{
public:
	bool                                          EnableBanPick;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature, EnableBanPick) == 0x000000, "Member 'PyLevelEventSubSystem_ClientEnableBanPickChangeDispatcher__DelegateSignature::EnableBanPick' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.BanPickStateTimeChangeDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature final
{
public:
	EBanPickState                                 BanPickState;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalTime;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature, BanPickState) == 0x000000, "Member 'PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature::BanPickState' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature, TotalTime) == 0x000004, "Member 'PyLevelEventSubSystem_BanPickStateTimeChangeDispatcher__DelegateSignature::TotalTime' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnReceivePlayerLaunchSurrender__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature final
{
public:
	class AMarvelPlayerState*                     PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnReceivePlayerLaunchSurrender__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnReceivePlayerSurrender__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature final
{
public:
	class AMarvelPlayerState*                     PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnReceivePlayerSurrender__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnSurrenderStart__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   BattleSide;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature, UID) == 0x000000, "Member 'PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature::UID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature, BattleSide) == 0x000004, "Member 'PyLevelEventSubSystem_OnSurrenderStart__DelegateSignature::BattleSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnSurrenderAnnouncement__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature final
{
public:
	EBattleSide                                   BattleSide;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSurrenderSuccess;                                 // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature) == 0x000002, "Wrong size on PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature, BattleSide) == 0x000000, "Member 'PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature::BattleSide' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature, bSurrenderSuccess) == 0x000001, "Member 'PyLevelEventSubSystem_OnSurrenderAnnouncement__DelegateSignature::bSurrenderSuccess' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnSurrenderEnd__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature final
{
public:
	EBattleSide                                   BattleSide;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature, BattleSide) == 0x000000, "Member 'PyLevelEventSubSystem_OnSurrenderEnd__DelegateSignature::BattleSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnRedValidSurrenderPlayersChange__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature final
{
public:
	TArray<class AMarvelPlayerState*>             ValidSurrenderPlayers;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature, ValidSurrenderPlayers) == 0x000000, "Member 'PyLevelEventSubSystem_OnRedValidSurrenderPlayersChange__DelegateSignature::ValidSurrenderPlayers' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnBlueValidSurrenderPlayersChange__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature final
{
public:
	TArray<class AMarvelPlayerState*>             ValidSurrenderPlayers;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature, ValidSurrenderPlayers) == 0x000000, "Member 'PyLevelEventSubSystem_OnBlueValidSurrenderPlayersChange__DelegateSignature::ValidSurrenderPlayers' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnRedSurrenderStateChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature final
{
public:
	ESurrenderState                               SurrenderState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature, SurrenderState) == 0x000000, "Member 'PyLevelEventSubSystem_OnRedSurrenderStateChange__DelegateSignature::SurrenderState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnBlueSurrenderStateChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature final
{
public:
	ESurrenderState                               SurrenderState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature, SurrenderState) == 0x000000, "Member 'PyLevelEventSubSystem_OnBlueSurrenderStateChange__DelegateSignature::SurrenderState' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnRedSurrenderResultChange__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature final
{
public:
	TArray<struct FSurrenderResultInfo>           SurrenderResult;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature, SurrenderResult) == 0x000000, "Member 'PyLevelEventSubSystem_OnRedSurrenderResultChange__DelegateSignature::SurrenderResult' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnBlueSurrenderResultChange__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature final
{
public:
	TArray<struct FSurrenderResultInfo>           SurrenderResult;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature, SurrenderResult) == 0x000000, "Member 'PyLevelEventSubSystem_OnBlueSurrenderResultChange__DelegateSignature::SurrenderResult' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnRedSurrenderPassedChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature final
{
public:
	bool                                          bSurrenderPassed;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature, bSurrenderPassed) == 0x000000, "Member 'PyLevelEventSubSystem_OnRedSurrenderPassedChange__DelegateSignature::bSurrenderPassed' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnBlueSurrenderPassedChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature final
{
public:
	bool                                          bSurrenderPassed;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature, bSurrenderPassed) == 0x000000, "Member 'PyLevelEventSubSystem_OnBlueSurrenderPassedChange__DelegateSignature::bSurrenderPassed' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnSurrenderFailed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature final
{
public:
	ESurrenderFailedReason                        SurrenderFailedReason;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature, SurrenderFailedReason) == 0x000000, "Member 'PyLevelEventSubSystem_OnSurrenderFailed__DelegateSignature::SurrenderFailedReason' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.UIMultiKill__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_UIMultiKill__DelegateSignature final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	float                                         Interval_time;                                     // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_UIMultiKill__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_UIMultiKill__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_UIMultiKill__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_UIMultiKill__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_UIMultiKill__DelegateSignature, Tag) == 0x000000, "Member 'PyLevelEventSubSystem_UIMultiKill__DelegateSignature::Tag' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_UIMultiKill__DelegateSignature, Interval_time) == 0x00000C, "Member 'PyLevelEventSubSystem_UIMultiKill__DelegateSignature::Interval_time' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.UITeamKill__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_UITeamKill__DelegateSignature final
{
public:
	class AActor*                                 Killer_pawn;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_UITeamKill__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_UITeamKill__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_UITeamKill__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_UITeamKill__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_UITeamKill__DelegateSignature, Killer_pawn) == 0x000000, "Member 'PyLevelEventSubSystem_UITeamKill__DelegateSignature::Killer_pawn' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.UIOccupyingSideChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature final
{
public:
	EOwnershipTypeUI                              Occupying_side;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature, Occupying_side) == 0x000000, "Member 'PyLevelEventSubSystem_UIOccupyingSideChange__DelegateSignature::Occupying_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.VHolderSideDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Camp;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EOwnershipType                                Hold_side;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature, Camp) == 0x000000, "Member 'PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature::Camp' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature, Hold_side) == 0x000008, "Member 'PyLevelEventSubSystem_VHolderSideDispatcher__DelegateSignature::Hold_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.DispatchVictoryProgressChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature final
{
public:
	class AActor*                                 Control;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   battle_side;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature, Control) == 0x000000, "Member 'PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature::Control' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature, battle_side) == 0x000008, "Member 'PyLevelEventSubSystem_DispatchVictoryProgressChanged__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnVoiceEnd__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature final
{
public:
	int32                                         VoiceID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature) == 0x000004, "Wrong size on PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature, VoiceID) == 0x000000, "Member 'PyLevelEventSubSystem_OnVoiceEnd__DelegateSignature::VoiceID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnCampOccupied__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnCampOccupied__DelegateSignature final
{
public:
	class APyCamp*                                Camp;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Mode_id;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   battle_side;                                       // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnCampOccupied__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnCampOccupied__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnCampOccupied__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnCampOccupied__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnCampOccupied__DelegateSignature, Camp) == 0x000000, "Member 'PyLevelEventSubSystem_OnCampOccupied__DelegateSignature::Camp' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnCampOccupied__DelegateSignature, Mode_id) == 0x000008, "Member 'PyLevelEventSubSystem_OnCampOccupied__DelegateSignature::Mode_id' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnCampOccupied__DelegateSignature, battle_side) == 0x00000C, "Member 'PyLevelEventSubSystem_OnCampOccupied__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnInteractingWithNPC__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature final
{
public:
	class AMarvelPlayerState*                     PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Tags;                                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	int32                                         Mode_id;                                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature) == 0x000020, "Wrong size on PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature, PS) == 0x000000, "Member 'PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature::PS' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature, Tags) == 0x000008, "Member 'PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature::Tags' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature, Mode_id) == 0x000018, "Member 'PyLevelEventSubSystem_OnInteractingWithNPC__DelegateSignature::Mode_id' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnHearingLevelVoice__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature final
{
public:
	EMarvelVoiceType                              Voice_type;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Voice_id;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Char;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 To_char;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMarvelPlayerState*                     PS;                                                // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature) == 0x000020, "Wrong size on PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature, Voice_type) == 0x000000, "Member 'PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature::Voice_type' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature, Voice_id) == 0x000004, "Member 'PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature::Voice_id' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature, Char) == 0x000008, "Member 'PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature::Char' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature, To_char) == 0x000010, "Member 'PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature::To_char' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature, PS) == 0x000018, "Member 'PyLevelEventSubSystem_OnHearingLevelVoice__DelegateSignature::PS' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnVictoryInMap__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature final
{
public:
	int32                                         Mode_id;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   battle_side;                                       // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature, Mode_id) == 0x000000, "Member 'PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature::Mode_id' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature, battle_side) == 0x000004, "Member 'PyLevelEventSubSystem_OnVictoryInMap__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TeamKillPlayerDeath__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_TeamKillPlayerDeath__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.TeamKillTeamWin__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_TeamKillTeamWin__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.NotifyClientCloseSelectHero__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature final
{
public:
	int32                                         HeroID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoundIndex;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature, HeroID) == 0x000000, "Member 'PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature::HeroID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature, RoundIndex) == 0x000004, "Member 'PyLevelEventSubSystem_NotifyClientCloseSelectHero__DelegateSignature::RoundIndex' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.FillColorToPoint__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct PyLevelEventSubSystem_FillColorToPoint__DelegateSignature final
{
public:
	EBattleSide                                   OldBattleSide;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   NewBattleSide;                                     // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_FillColorToPoint__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_FillColorToPoint__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_FillColorToPoint__DelegateSignature) == 0x000002, "Wrong size on PyLevelEventSubSystem_FillColorToPoint__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_FillColorToPoint__DelegateSignature, OldBattleSide) == 0x000000, "Member 'PyLevelEventSubSystem_FillColorToPoint__DelegateSignature::OldBattleSide' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_FillColorToPoint__DelegateSignature, NewBattleSide) == 0x000001, "Member 'PyLevelEventSubSystem_FillColorToPoint__DelegateSignature::NewBattleSide' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.FillColorUpdatePercentDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature final
{
public:
	float                                         BluePercent;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RedPercent;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature, BluePercent) == 0x000000, "Member 'PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature::BluePercent' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature, RedPercent) == 0x000004, "Member 'PyLevelEventSubSystem_FillColorUpdatePercentDispatcher__DelegateSignature::RedPercent' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.CommonFestivalPlayerStatChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature) == 0x000020, "Wrong size on PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature, UID) == 0x000000, "Member 'PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature::UID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature, Key) == 0x000008, "Member 'PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature::Key' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature, Val) == 0x000018, "Member 'PyLevelEventSubSystem_CommonFestivalPlayerStatChanged__DelegateSignature::Val' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalScoreChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cur_score;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature, Cur_score) == 0x000004, "Member 'PyLevelEventSubSystem_SpringFestivalScoreChanged__DelegateSignature::Cur_score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalGoaled__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Goaled_score;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total_score;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UID;                                               // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature, Goaled_score) == 0x000004, "Member 'PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature::Goaled_score' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature, Total_score) == 0x000008, "Member 'PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature::Total_score' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature, UID) == 0x00000C, "Member 'PyLevelEventSubSystem_SpringFestivalGoaled__DelegateSignature::UID' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalOnTackling__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Ability_id;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hold_time;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature) == 0x000018, "Wrong size on PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature, Source) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature::Source' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature, Target) == 0x000008, "Member 'PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature::Target' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature, Ability_id) == 0x000010, "Member 'PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature::Ability_id' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature, Hold_time) == 0x000014, "Member 'PyLevelEventSubSystem_SpringFestivalOnTackling__DelegateSignature::Hold_time' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalPlayerStatChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Val;                                               // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature) == 0x000020, "Wrong size on PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature, UID) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature::UID' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature, Key) == 0x000008, "Member 'PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature::Key' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature, Val) == 0x000018, "Member 'PyLevelEventSubSystem_SpringFestivalPlayerStatChanged__DelegateSignature::Val' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnBallKeepSideChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_OnBallKeepSideChange__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalNear2Win__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cur_score;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Total_score;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature) == 0x00000C, "Wrong size on PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature, Cur_score) == 0x000004, "Member 'PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature::Cur_score' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature, Total_score) == 0x000008, "Member 'PyLevelEventSubSystem_SpringFestivalNear2Win__DelegateSignature::Total_score' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalForbidKeepBallStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature final
{
public:
	class AActor*                                 Char;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_forbid;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature, Char) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature::Char' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature, Is_forbid) == 0x000008, "Member 'PyLevelEventSubSystem_SpringFestivalForbidKeepBallStateChanged__DelegateSignature::Is_forbid' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalMatchEnd__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature final
{
public:
	EBattleSide                                   Winner_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature, Winner_side) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalMatchEnd__DelegateSignature::Winner_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnSpringFestivalMatchStateChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature final
{
public:
	ESpringFestivalMatchState                     Spring_festival_match_state;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature, Spring_festival_match_state) == 0x000000, "Member 'PyLevelEventSubSystem_OnSpringFestivalMatchStateChange__DelegateSignature::Spring_festival_match_state' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpringFestivalGotLongPass__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature, battle_side) == 0x000000, "Member 'PyLevelEventSubSystem_SpringFestivalGotLongPass__DelegateSignature::battle_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.EnergyScoreChanged__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature final
{
public:
	TMap<EBattleSide, float>                      Score_board;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature) == 0x000050, "Wrong size on PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature, Score_board) == 0x000000, "Member 'PyLevelEventSubSystem_EnergyScoreChanged__DelegateSignature::Score_board' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.EnergyContestHasWinner__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature final
{
public:
	EBattleSide                                   Win_side;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature) == 0x000001, "Wrong size on PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature, Win_side) == 0x000000, "Member 'PyLevelEventSubSystem_EnergyContestHasWinner__DelegateSignature::Win_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.NewMineControlActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature final
{
public:
	class AActor*                                 Mine;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature, Mine) == 0x000000, "Member 'PyLevelEventSubSystem_NewMineControlActivated__DelegateSignature::Mine' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.MineControlDeactivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature final
{
public:
	class AActor*                                 Mine;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature, Mine) == 0x000000, "Member 'PyLevelEventSubSystem_MineControlDeactivated__DelegateSignature::Mine' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnMineProxyConstructed__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature final
{
public:
	class AActor*                                 Mine;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_pre;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature, Mine) == 0x000000, "Member 'PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature::Mine' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature, Is_pre) == 0x000008, "Member 'PyLevelEventSubSystem_OnMineProxyConstructed__DelegateSignature::Is_pre' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnMineProxyDestructed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature final
{
public:
	class AActor*                                 Mine;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature, Mine) == 0x000000, "Member 'PyLevelEventSubSystem_OnMineProxyDestructed__DelegateSignature::Mine' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.PreCreateMineProxy__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature final
{
public:
	class AActor*                                 Mine;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          With_normal_ui;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature, Mine) == 0x000000, "Member 'PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature::Mine' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature, With_normal_ui) == 0x000008, "Member 'PyLevelEventSubSystem_PreCreateMineProxy__DelegateSignature::With_normal_ui' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.MineControlUnlockStartDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Control;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature, Control) == 0x000000, "Member 'PyLevelEventSubSystem_MineControlUnlockStartDispatcher__DelegateSignature::Control' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.RuleComponentReceiveInit__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature final
{
public:
	class URuleComponent*                         RuleCom;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature, RuleCom) == 0x000000, "Member 'PyLevelEventSubSystem_RuleComponentReceiveInit__DelegateSignature::RuleCom' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnWinterFestivalResult__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature final
{
public:
	float                                         BluePercent;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RedPercent;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   Winner_side;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature) == 0x000004, "Wrong alignment on PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature) == 0x00000C, "Wrong size on PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature, BluePercent) == 0x000000, "Member 'PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature::BluePercent' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature, RedPercent) == 0x000004, "Member 'PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature::RedPercent' has a wrong offset!");
static_assert(offsetof(PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature, Winner_side) == 0x000008, "Member 'PyLevelEventSubSystem_OnWinterFestivalResult__DelegateSignature::Winner_side' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.SpecialAreaTrigger__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature final
{
public:
	class AActor*                                 SpecialArea;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature, SpecialArea) == 0x000000, "Member 'PyLevelEventSubSystem_SpecialAreaTrigger__DelegateSignature::SpecialArea' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnPortalActivate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnPortalActivate__DelegateSignature final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnPortalActivate__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnPortalActivate__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnPortalActivate__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnPortalActivate__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnPortalActivate__DelegateSignature, Character) == 0x000000, "Member 'PyLevelEventSubSystem_OnPortalActivate__DelegateSignature::Character' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnLocalAreaChange__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature final
{
public:
	class FString                                 NewAreaTag;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature) == 0x000010, "Wrong size on PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature, NewAreaTag) == 0x000000, "Member 'PyLevelEventSubSystem_OnLocalAreaChange__DelegateSignature::NewAreaTag' has a wrong offset!");

// DelegateFunction PyLevelEventSubsystem.PyLevelEventSubSystem.OnActorChangedByTrajectoryPortal__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature) == 0x000008, "Wrong alignment on PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature");
static_assert(sizeof(PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature) == 0x000008, "Wrong size on PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature");
static_assert(offsetof(PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature, Character) == 0x000000, "Member 'PyLevelEventSubSystem_OnActorChangedByTrajectoryPortal__DelegateSignature::Character' has a wrong offset!");

// PythonFunction PyLevelEventSubsystem.PyLevelEventSubSystem.IsMapLoaded
// 0x0001 (0x0001 - 0x0000)
struct PyLevelEventSubSystem_IsMapLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelEventSubSystem_IsMapLoaded) == 0x000001, "Wrong alignment on PyLevelEventSubSystem_IsMapLoaded");
static_assert(sizeof(PyLevelEventSubSystem_IsMapLoaded) == 0x000001, "Wrong size on PyLevelEventSubSystem_IsMapLoaded");
static_assert(offsetof(PyLevelEventSubSystem_IsMapLoaded, ReturnValue) == 0x000000, "Member 'PyLevelEventSubSystem_IsMapLoaded::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelEventSubsystem.PyReplayLevelEventSubSystem.IsMapLoaded
// 0x0001 (0x0001 - 0x0000)
struct PyReplayLevelEventSubSystem_IsMapLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyReplayLevelEventSubSystem_IsMapLoaded) == 0x000001, "Wrong alignment on PyReplayLevelEventSubSystem_IsMapLoaded");
static_assert(sizeof(PyReplayLevelEventSubSystem_IsMapLoaded) == 0x000001, "Wrong size on PyReplayLevelEventSubSystem_IsMapLoaded");
static_assert(offsetof(PyReplayLevelEventSubSystem_IsMapLoaded, ReturnValue) == 0x000000, "Member 'PyReplayLevelEventSubSystem_IsMapLoaded::ReturnValue' has a wrong offset!");

}


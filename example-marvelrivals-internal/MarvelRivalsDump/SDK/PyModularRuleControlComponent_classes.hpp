#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyModularRuleControlComponent

#include "Basic.hpp"

#include "PyLevelRuleControlComponent_classes.hpp"
#include "Marvel_structs.hpp"
#include "MarvelLevel_structs.hpp"


namespace SDK
{

// PythonClass PyModularRuleControlComponent.PyModularRuleControlComponent
// 0x0010 (0x0200 - 0x01F0)
class UPyModularRuleControlComponent final : public UPyLevelRuleControlComponent
{
public:
	TSubclassOf<class UUserWidget>                ModuleModePanelClass;                              // 0x01F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoundCount;                                        // 0x01F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnMapLoaded();
	void OnLevelStart();
	void OnPrepareStartStart();
	void OnFightStart();
	void GoToNextRound();
	void OnModeTimeOut();
	void SOvertimeSetstate(EOvertimeState State);
	void SOvertimeEndEvent();
	class AActor* GetCampByName(const class FString& CampName);
	void RuleEnd(class UPyModularRuleComponent* RuleComponent, EBattleSide WinnerSide);
	void UILoaded();
	void GameOver(EBattleSide WinnerSide);
	void RuleActivating(class UPyModularRuleComponent* RuleComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyModularRuleControlComponent">();
	}
	static class UPyModularRuleControlComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyModularRuleControlComponent>();
	}
};
static_assert(alignof(UPyModularRuleControlComponent) == 0x000008, "Wrong alignment on UPyModularRuleControlComponent");
static_assert(sizeof(UPyModularRuleControlComponent) == 0x000200, "Wrong size on UPyModularRuleControlComponent");
static_assert(offsetof(UPyModularRuleControlComponent, ModuleModePanelClass) == 0x0001F0, "Member 'UPyModularRuleControlComponent::ModuleModePanelClass' has a wrong offset!");
static_assert(offsetof(UPyModularRuleControlComponent, RoundCount) == 0x0001F8, "Member 'UPyModularRuleControlComponent::RoundCount' has a wrong offset!");

}


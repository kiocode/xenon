#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_LobbyHero

#include "Basic.hpp"

#include "PyWidget_Button_classes.hpp"
#include "Marvel_structs.hpp"


namespace SDK
{

// PythonClass PyWidget_LobbyHero.PyWidget_Hero_Button
// 0x0040 (0x0790 - 0x0750)
class UPyWidget_Hero_Button final : public UPyWidget_Button
{
public:
	int32                                         HeroID;                                            // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkinID;                                            // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShapeID;                                           // 0x0758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CardName;                                          // 0x0760(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          IsUnlock;                                          // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEquip;                                           // 0x0779(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsSelection;                                       // 0x077A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsNew;                                             // 0x077B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsHeroCard;                                        // 0x077C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHoveredPosition;                                 // 0x0780(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnHoveredPosition__DelegateSignature(int32 HeroID_0, const struct FVector2D& Circle, const struct FVector2D& Target, float Max_R);
	void OnInitialized();
	void SetHeroData(int32 HeroID_0, int32 SkinID_0);
	void SetCardName(const class FText& CardName_0);
	void SetIsUnlock(bool IsUnlock_0);
	void SetIsEquip(bool IsEquip_0);
	void SetIsNew(bool IsNew_0);
	void SetIsHeroCard(bool IsHeroCard_0);
	void SetIsDefaultHero(bool IsDefaultHero);
	void SetHeroAvarat(int32 HeroID_0, int32 ShapeID_0, class UImage* Image);
	void OnSetHovered(bool Is_hovered);
	void UpdateHoveredPosition();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Hero_Button">();
	}
	static class UPyWidget_Hero_Button* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Hero_Button>();
	}
};
static_assert(alignof(UPyWidget_Hero_Button) == 0x000008, "Wrong alignment on UPyWidget_Hero_Button");
static_assert(sizeof(UPyWidget_Hero_Button) == 0x000790, "Wrong size on UPyWidget_Hero_Button");
static_assert(offsetof(UPyWidget_Hero_Button, HeroID) == 0x000750, "Member 'UPyWidget_Hero_Button::HeroID' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, SkinID) == 0x000754, "Member 'UPyWidget_Hero_Button::SkinID' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, ShapeID) == 0x000758, "Member 'UPyWidget_Hero_Button::ShapeID' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, CardName) == 0x000760, "Member 'UPyWidget_Hero_Button::CardName' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, IsUnlock) == 0x000778, "Member 'UPyWidget_Hero_Button::IsUnlock' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, IsEquip) == 0x000779, "Member 'UPyWidget_Hero_Button::IsEquip' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, IsSelection) == 0x00077A, "Member 'UPyWidget_Hero_Button::IsSelection' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, IsNew) == 0x00077B, "Member 'UPyWidget_Hero_Button::IsNew' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, IsHeroCard) == 0x00077C, "Member 'UPyWidget_Hero_Button::IsHeroCard' has a wrong offset!");
static_assert(offsetof(UPyWidget_Hero_Button, OnHoveredPosition) == 0x000780, "Member 'UPyWidget_Hero_Button::OnHoveredPosition' has a wrong offset!");

// PythonClass PyWidget_LobbyHero.PyWidget_Skill_Button
// 0x0038 (0x0788 - 0x0750)
class UPyWidget_Skill_Button final : public UPyWidget_Button
{
public:
	class FText                                   AbilityName;                                       // 0x0750(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   AbilityDesc;                                       // 0x0768(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EAbilityInputBinds                            AbilityInputAction;                                // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetAbilityData(const class FText& Name_0, const class FText& Desc, TSoftObjectPtr<class UTexture2D> Icon, EAbilityInputBinds InptuAction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Skill_Button">();
	}
	static class UPyWidget_Skill_Button* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Skill_Button>();
	}
};
static_assert(alignof(UPyWidget_Skill_Button) == 0x000008, "Wrong alignment on UPyWidget_Skill_Button");
static_assert(sizeof(UPyWidget_Skill_Button) == 0x000788, "Wrong size on UPyWidget_Skill_Button");
static_assert(offsetof(UPyWidget_Skill_Button, AbilityName) == 0x000750, "Member 'UPyWidget_Skill_Button::AbilityName' has a wrong offset!");
static_assert(offsetof(UPyWidget_Skill_Button, AbilityDesc) == 0x000768, "Member 'UPyWidget_Skill_Button::AbilityDesc' has a wrong offset!");
static_assert(offsetof(UPyWidget_Skill_Button, AbilityInputAction) == 0x000780, "Member 'UPyWidget_Skill_Button::AbilityInputAction' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103241

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103241.PyCue_Ability_Loop_10324101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10324101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10324101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10324101_WhileActiveFX");
static_assert(sizeof(PyCue_Ability_Loop_10324101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10324101_WhileActiveFX");
static_assert(offsetof(PyCue_Ability_Loop_10324101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10324101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10324101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10324101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103241.PyCue_Ability_Loop_10324103.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10324103_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10324103_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10324103_WhileActiveFX");
static_assert(sizeof(PyCue_Ability_Loop_10324103_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10324103_WhileActiveFX");
static_assert(offsetof(PyCue_Ability_Loop_10324103_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10324103_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10324103_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10324103_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103241.PyCue_Ability_Loop_10324103.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10324103_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10324103_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10324103_OnRemoveFX");
static_assert(sizeof(PyCue_Ability_Loop_10324103_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10324103_OnRemoveFX");
static_assert(offsetof(PyCue_Ability_Loop_10324103_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10324103_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10324103_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10324103_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103241.PyAbility_103241.GetAbilityDuration
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103241_GetAbilityDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103241_GetAbilityDuration) == 0x000004, "Wrong alignment on PyAbility_103241_GetAbilityDuration");
static_assert(sizeof(PyAbility_103241_GetAbilityDuration) == 0x000004, "Wrong size on PyAbility_103241_GetAbilityDuration");
static_assert(offsetof(PyAbility_103241_GetAbilityDuration, ReturnValue) == 0x000000, "Member 'PyAbility_103241_GetAbilityDuration::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103241.PyAbility_103241.OnCooldownTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_103241_OnCooldownTagUpdated final
{
public:
	struct FGameplayTag                           TagUpdated;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExists;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103241_OnCooldownTagUpdated) == 0x000004, "Wrong alignment on PyAbility_103241_OnCooldownTagUpdated");
static_assert(sizeof(PyAbility_103241_OnCooldownTagUpdated) == 0x000010, "Wrong size on PyAbility_103241_OnCooldownTagUpdated");
static_assert(offsetof(PyAbility_103241_OnCooldownTagUpdated, TagUpdated) == 0x000000, "Member 'PyAbility_103241_OnCooldownTagUpdated::TagUpdated' has a wrong offset!");
static_assert(offsetof(PyAbility_103241_OnCooldownTagUpdated, TagExists) == 0x00000C, "Member 'PyAbility_103241_OnCooldownTagUpdated::TagExists' has a wrong offset!");

// PythonFunction PyAbility_103241.PyAbility_103241.OnActivatedAbilityEnd
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103241_OnActivatedAbilityEnd final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103241_OnActivatedAbilityEnd) == 0x000004, "Wrong alignment on PyAbility_103241_OnActivatedAbilityEnd");
static_assert(sizeof(PyAbility_103241_OnActivatedAbilityEnd) == 0x000004, "Wrong size on PyAbility_103241_OnActivatedAbilityEnd");
static_assert(offsetof(PyAbility_103241_OnActivatedAbilityEnd, AbilityID) == 0x000000, "Member 'PyAbility_103241_OnActivatedAbilityEnd::AbilityID' has a wrong offset!");

// PythonFunction PyAbility_103241.PyAbility_103241.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103241_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103241_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_103241_K2_OnEndAbility");
static_assert(sizeof(PyAbility_103241_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_103241_K2_OnEndAbility");
static_assert(offsetof(PyAbility_103241_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_103241_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_103241.PyAbility_103241.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_103241_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103241_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_103241_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_103241_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_103241_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_103241_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_103241_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_103241.PyUIController_103241.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_103241_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_103241_SetAbility) == 0x000008, "Wrong alignment on PyUIController_103241_SetAbility");
static_assert(sizeof(PyUIController_103241_SetAbility) == 0x000010, "Wrong size on PyUIController_103241_SetAbility");
static_assert(offsetof(PyUIController_103241_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_103241_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_103241_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_103241_SetAbility::InAbility' has a wrong offset!");

// PythonFunction PyAbility_103241.PyUIController_103241.OnCharacterAbilityTagChange
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_103241_OnCharacterAbilityTagChange final
{
public:
	struct FGameplayTag                           CallbackTag;                                       // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_103241_OnCharacterAbilityTagChange) == 0x000004, "Wrong alignment on PyUIController_103241_OnCharacterAbilityTagChange");
static_assert(sizeof(PyUIController_103241_OnCharacterAbilityTagChange) == 0x000010, "Wrong size on PyUIController_103241_OnCharacterAbilityTagChange");
static_assert(offsetof(PyUIController_103241_OnCharacterAbilityTagChange, CallbackTag) == 0x000000, "Member 'PyUIController_103241_OnCharacterAbilityTagChange::CallbackTag' has a wrong offset!");
static_assert(offsetof(PyUIController_103241_OnCharacterAbilityTagChange, NewCount) == 0x00000C, "Member 'PyUIController_103241_OnCharacterAbilityTagChange::NewCount' has a wrong offset!");

}


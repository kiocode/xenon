#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SM_PracticeRange012Aa

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SM_PracticeRange012Aa.SM_PracticeRange012Aa_C
// 0x0058 (0x04E8 - 0x0490)
class ASM_PracticeRange012Aa_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_PracticeRange012Aj;                             // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ai;                             // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ah;                             // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ag;                             // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Af;                             // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ae;                             // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ad;                             // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ac;                             // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Ab;                             // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PracticeRange012Aa;                             // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SM_PracticeRangeBuilding001A;                      // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SM_PracticeRange012Aa_C">();
	}
	static class ASM_PracticeRange012Aa_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASM_PracticeRange012Aa_C>();
	}
};
////static_assert(alignof(ASM_PracticeRange012Aa_C) == 0x000008, "Wrong alignment on ASM_PracticeRange012Aa_C");
////static_assert(sizeof(ASM_PracticeRange012Aa_C) == 0x0004E8, "Wrong size on ASM_PracticeRange012Aa_C");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Aj) == 0x000490, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Aj' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ai) == 0x000498, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ai' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ah) == 0x0004A0, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ah' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ag) == 0x0004A8, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ag' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Af) == 0x0004B0, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Af' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ae) == 0x0004B8, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ae' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ad) == 0x0004C0, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ad' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ac) == 0x0004C8, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ac' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Ab) == 0x0004D0, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Ab' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRange012Aa) == 0x0004D8, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRange012Aa' has a wrong offset!");
////static_assert(offsetof(ASM_PracticeRange012Aa_C, SM_PracticeRangeBuilding001A) == 0x0004E0, "Member 'ASM_PracticeRange012Aa_C::SM_PracticeRangeBuilding001A' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyEscortAudioComponent

#include "Basic.hpp"

#include "MarvelLevel_structs.hpp"
#include "MarvelLevel_classes.hpp"
#include "PyModeAudioComponent_classes.hpp"


namespace SDK
{

// PythonClass PyEscortAudioComponent.PyEscortAudioItem
// 0x0160 (0x0198 - 0x0038)
class UPyEscortAudioItem final : public UMarvelLevelAudioItem
{
public:
	TArray<struct FLevelAudioContent>             SelectStage;                                       // 0x0038(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             PrepareStage;                                      // 0x0048(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             RpcFightStart;                                     // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             FightStage;                                        // 0x0068(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             OverTimeStage;                                     // 0x0078(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             GameResult;                                        // 0x0088(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             DrawResult;                                        // 0x0098(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ActivateCar;                                       // 0x00A8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             StartOccupy;                                       // 0x00B8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             StalemateOccupy;                                   // 0x00C8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             FinishOccupy;                                      // 0x00D8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             MovingCar;                                         // 0x00E8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             AlmostCheckPoint;                                  // 0x00F8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             EndCheckPoint;                                     // 0x0108(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ReachCheckPoint;                                   // 0x0118(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             SustainForward;                                    // 0x0128(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             SustainBack;                                       // 0x0138(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             SustainToDest;                                     // 0x0148(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             Progress50ToAB;                                    // 0x0158(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             Progress80ToAB;                                    // 0x0168(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             Progress50ToEnd;                                   // 0x0178(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             Progress80ToEnd;                                   // 0x0188(0x0010)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyEscortAudioItem">();
	}
	static class UPyEscortAudioItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyEscortAudioItem>();
	}
};
static_assert(alignof(UPyEscortAudioItem) == 0x000008, "Wrong alignment on UPyEscortAudioItem");
static_assert(sizeof(UPyEscortAudioItem) == 0x000198, "Wrong size on UPyEscortAudioItem");
static_assert(offsetof(UPyEscortAudioItem, SelectStage) == 0x000038, "Member 'UPyEscortAudioItem::SelectStage' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, PrepareStage) == 0x000048, "Member 'UPyEscortAudioItem::PrepareStage' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, RpcFightStart) == 0x000058, "Member 'UPyEscortAudioItem::RpcFightStart' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, FightStage) == 0x000068, "Member 'UPyEscortAudioItem::FightStage' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, OverTimeStage) == 0x000078, "Member 'UPyEscortAudioItem::OverTimeStage' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, GameResult) == 0x000088, "Member 'UPyEscortAudioItem::GameResult' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, DrawResult) == 0x000098, "Member 'UPyEscortAudioItem::DrawResult' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, ActivateCar) == 0x0000A8, "Member 'UPyEscortAudioItem::ActivateCar' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, StartOccupy) == 0x0000B8, "Member 'UPyEscortAudioItem::StartOccupy' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, StalemateOccupy) == 0x0000C8, "Member 'UPyEscortAudioItem::StalemateOccupy' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, FinishOccupy) == 0x0000D8, "Member 'UPyEscortAudioItem::FinishOccupy' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, MovingCar) == 0x0000E8, "Member 'UPyEscortAudioItem::MovingCar' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, AlmostCheckPoint) == 0x0000F8, "Member 'UPyEscortAudioItem::AlmostCheckPoint' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, EndCheckPoint) == 0x000108, "Member 'UPyEscortAudioItem::EndCheckPoint' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, ReachCheckPoint) == 0x000118, "Member 'UPyEscortAudioItem::ReachCheckPoint' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, SustainForward) == 0x000128, "Member 'UPyEscortAudioItem::SustainForward' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, SustainBack) == 0x000138, "Member 'UPyEscortAudioItem::SustainBack' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, SustainToDest) == 0x000148, "Member 'UPyEscortAudioItem::SustainToDest' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, Progress50ToAB) == 0x000158, "Member 'UPyEscortAudioItem::Progress50ToAB' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, Progress80ToAB) == 0x000168, "Member 'UPyEscortAudioItem::Progress80ToAB' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, Progress50ToEnd) == 0x000178, "Member 'UPyEscortAudioItem::Progress50ToEnd' has a wrong offset!");
static_assert(offsetof(UPyEscortAudioItem, Progress80ToEnd) == 0x000188, "Member 'UPyEscortAudioItem::Progress80ToEnd' has a wrong offset!");

// PythonClass PyEscortAudioComponent.PyEscortAudioComponent
// 0x0000 (0x0108 - 0x0108)
class UPyEscortAudioComponent : public UPyModeAudioComponent
{
public:
	void DispatchOnPayloadReachCheckpoint(class UObject* TaskOwner, int64 Magnitude);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyEscortAudioComponent">();
	}
	static class UPyEscortAudioComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyEscortAudioComponent>();
	}
};
static_assert(alignof(UPyEscortAudioComponent) == 0x000008, "Wrong alignment on UPyEscortAudioComponent");
static_assert(sizeof(UPyEscortAudioComponent) == 0x000108, "Wrong size on UPyEscortAudioComponent");

}


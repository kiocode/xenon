#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyPlayerStateTrainComponent

#include "Basic.hpp"

#include "PyPlayerStateTrainComponent_classes.hpp"
#include "PyPlayerStateTrainComponent_parameters.hpp"


namespace SDK
{

// DelegateFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.TrainEnd__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ETrainAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::TrainEnd__DelegateSignature(ETrainAction Action, int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "TrainEnd__DelegateSignature");

	Params::PyPlayerStateTrainComponent_TrainEnd__DelegateSignature Parms{};

	Parms.Action = Action;
	Parms.UID = UID;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.DelayQuickTrainEnd__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ETrainAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::DelayQuickTrainEnd__DelegateSignature(ETrainAction Action, int32 UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "DelayQuickTrainEnd__DelegateSignature");

	Params::PyPlayerStateTrainComponent_DelayQuickTrainEnd__DelegateSignature Parms{};

	Parms.Action = Action;
	Parms.UID = UID;

	UObject::ProcessEvent(Func, &Parms);
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.ReceiveInitializeComponent
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyPlayerStateTrainComponent::ReceiveInitializeComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "ReceiveInitializeComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UPyPlayerStateTrainComponent::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.OnRep_TrainAreaType
// (Native, Public, BlueprintCallable)

void UPyPlayerStateTrainComponent::OnRep_TrainAreaType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "OnRep_TrainAreaType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.OnRep_TrainAction
// (Native, Public, BlueprintCallable)

void UPyPlayerStateTrainComponent::OnRep_TrainAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "OnRep_TrainAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.recover_train_pre_hero
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)

void UPyPlayerStateTrainComponent::Recover_train_pre_hero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "recover_train_pre_hero");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.notify_train_delay
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// ETrainAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Notify_train_delay(ETrainAction Action, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "notify_train_delay");

	Params::PyPlayerStateTrainComponent_Notify_train_delay Parms{};

	Parms.Action = Action;
	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.notify_train_delay_end
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// ETrainAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Notify_train_delay_end(ETrainAction Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "notify_train_delay_end");

	Params::PyPlayerStateTrainComponent_Notify_train_delay_end Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.Step_start_train
// (Native, Public, BlueprintCallable)

void UPyPlayerStateTrainComponent::Step_start_train()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "Step_start_train");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.EndTrain
// (Native, Public, BlueprintCallable)

void UPyPlayerStateTrainComponent::EndTrain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "EndTrain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.OnRep_TracePointIndex
// (Native, Public, BlueprintCallable)

void UPyPlayerStateTrainComponent::OnRep_TracePointIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "OnRep_TracePointIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.OnRep_TracePointTotal
// (Native, Public, BlueprintCallable)

void UPyPlayerStateTrainComponent::OnRep_TracePointTotal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "OnRep_TracePointTotal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.train_tips
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// class FString                           Text                                                   (Parm, ZeroConstructor, HasGetValueTypeHash)
// ETipsPriority                           Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Train_tips(const class FString& Text, ETipsPriority Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "train_tips");

	Params::PyPlayerStateTrainComponent_Train_tips Parms{};

	Parms.Text = std::move(Text);
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.train_tips_bykey
// (Net, NetReliable, Native, Public, HasOutParams, NetClient, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>                   Replace_list                                           (ConstParm, Parm, OutParm, ReferenceParm)
// ETipsPriority                           Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Train_tips_bykey(const class FString& Key, const TArray<class FString>& Replace_list, ETipsPriority Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "train_tips_bykey");

	Params::PyPlayerStateTrainComponent_Train_tips_bykey Parms{};

	Parms.Key = std::move(Key);
	Parms.Replace_list = std::move(Replace_list);
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.train_holder_tips
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// int32                                   Holder_uid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETipsPriority                           Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Train_holder_tips(int32 Holder_uid, ETipsPriority Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "train_holder_tips");

	Params::PyPlayerStateTrainComponent_Train_holder_tips Parms{};

	Parms.Holder_uid = Holder_uid;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.formal_start_trace_train
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// ETrainAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Select_hero                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Formal_start_trace_train(ETrainAction Action, int32 Select_hero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "formal_start_trace_train");

	Params::PyPlayerStateTrainComponent_Formal_start_trace_train Parms{};

	Parms.Action = Action;
	Parms.Select_hero = Select_hero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.formal_start_fixedtarget_train
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   Select_hero                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EShootingDis                            Select_dis                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Formal_start_fixedtarget_train(int32 Select_hero, EShootingDis Select_dis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "formal_start_fixedtarget_train");

	Params::PyPlayerStateTrainComponent_Formal_start_fixedtarget_train Parms{};

	Parms.Select_hero = Select_hero;
	Parms.Select_dis = Select_dis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.formal_start_movingtarget_train
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   Select_hero                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EShootingDis                            Select_dis                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Target_speed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Target_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Formal_start_movingtarget_train(int32 Select_hero, EShootingDis Select_dis, float Target_speed, int32 Target_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "formal_start_movingtarget_train");

	Params::PyPlayerStateTrainComponent_Formal_start_movingtarget_train Parms{};

	Parms.Select_hero = Select_hero;
	Parms.Select_dis = Select_dis;
	Parms.Target_speed = Target_speed;
	Parms.Target_type = Target_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.formal_start_melee_train
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// ETrainAction                            Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Select_hero                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETrainAIModeType                        Move_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Formal_start_melee_train(ETrainAction Action, int32 Select_hero, ETrainAIModeType Move_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "formal_start_melee_train");

	Params::PyPlayerStateTrainComponent_Formal_start_melee_train Parms{};

	Parms.Action = Action;
	Parms.Select_hero = Select_hero;
	Parms.Move_type = Move_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.set_not_cd
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                                    No_cd                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Set_not_cd(bool No_cd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "set_not_cd");

	Params::PyPlayerStateTrainComponent_Set_not_cd Parms{};

	Parms.No_cd = No_cd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.set_friend_harm
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// bool                                    No_cd                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Set_friend_harm(bool No_cd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "set_friend_harm");

	Params::PyPlayerStateTrainComponent_Set_friend_harm Parms{};

	Parms.No_cd = No_cd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.stop_train
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)

void UPyPlayerStateTrainComponent::Stop_train()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "stop_train");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.spawn_train_entry_ai
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class APyAISpawnActor*                  Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Spawn_train_entry_ai(class APyAISpawnActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "spawn_train_entry_ai");

	Params::PyPlayerStateTrainComponent_Spawn_train_entry_ai Parms{};

	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.destroy_train_entry_ai
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class APyAISpawnActor*                  Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Destroy_train_entry_ai(class APyAISpawnActor* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "destroy_train_entry_ai");

	Params::PyPlayerStateTrainComponent_Destroy_train_entry_ai Parms{};

	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.set_entry_play_state
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class AActor*                           Entry_controller                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_playing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Set_entry_play_state(class AActor* Entry_controller, bool Is_playing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "set_entry_play_state");

	Params::PyPlayerStateTrainComponent_Set_entry_play_state Parms{};

	Parms.Entry_controller = Entry_controller;
	Parms.Is_playing = Is_playing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.trigger_entry_chaos_destruction
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class AActor*                           Entry_controller                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           Actor_name                                             (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Trigger_entry_chaos_destruction(class AActor* Entry_controller, const class FString& Actor_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "trigger_entry_chaos_destruction");

	Params::PyPlayerStateTrainComponent_Trigger_entry_chaos_destruction Parms{};

	Parms.Entry_controller = Entry_controller;
	Parms.Actor_name = std::move(Actor_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.trigger_entry_chaos_recovery
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class AActor*                           Entry_controller                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           Actor_name                                             (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Trigger_entry_chaos_recovery(class AActor* Entry_controller, const class FString& Actor_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "trigger_entry_chaos_recovery");

	Params::PyPlayerStateTrainComponent_Trigger_entry_chaos_recovery Parms{};

	Parms.Entry_controller = Entry_controller;
	Parms.Actor_name = std::move(Actor_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.start_limit_time_train
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)
// Parameters:
// class AActor*                           Limit_time_train_computer                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::Start_limit_time_train(class AActor* Limit_time_train_computer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "start_limit_time_train");

	Params::PyPlayerStateTrainComponent_Start_limit_time_train Parms{};

	Parms.Limit_time_train_computer = Limit_time_train_computer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.set_limit_time_train_config
// (Net, NetReliable, Native, Public, NetServer, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Limit_time_train_computer                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Key_list                                               (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Value_list                                             (ConstParm, Parm, OutParm, ReferenceParm)

void UPyPlayerStateTrainComponent::Set_limit_time_train_config(class AActor* Limit_time_train_computer, const TArray<class FString>& Key_list, const TArray<int32>& Value_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "set_limit_time_train_config");

	Params::PyPlayerStateTrainComponent_Set_limit_time_train_config Parms{};

	Parms.Limit_time_train_computer = Limit_time_train_computer;
	Parms.Key_list = std::move(Key_list);
	Parms.Value_list = std::move(Value_list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.spwan_ai_on_entry
// (Net, NetReliable, Native, Public, NetServer, BlueprintCallable)

void UPyPlayerStateTrainComponent::Spwan_ai_on_entry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "spwan_ai_on_entry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyPlayerStateTrainComponent.PyPlayerStateTrainComponent.on_teleport_player_to_train_area
// (Net, NetReliable, Native, Public, NetClient, BlueprintCallable)
// Parameters:
// class AActor*                           Train_computer                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyPlayerStateTrainComponent::On_teleport_player_to_train_area(class AActor* Train_computer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyPlayerStateTrainComponent", "on_teleport_player_to_train_area");

	Params::PyPlayerStateTrainComponent_On_teleport_player_to_train_area Parms{};

	Parms.Train_computer = Train_computer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}


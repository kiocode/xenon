#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FPSLogic

#include "Basic.hpp"


namespace SDK::Params
{

// PythonFunction FPSLogic.UISettingEntryFPSLimitHandler.BP_OnApply
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryFPSLimitHandler_BP_OnApply final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      OPTIONS;                                           // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         Value;                                             // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryFPSLimitHandler_BP_OnApply) == 0x000008, "Wrong alignment on UISettingEntryFPSLimitHandler_BP_OnApply");
static_assert(sizeof(UISettingEntryFPSLimitHandler_BP_OnApply) == 0x0000C0, "Wrong size on UISettingEntryFPSLimitHandler_BP_OnApply");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnApply, Obj) == 0x000000, "Member 'UISettingEntryFPSLimitHandler_BP_OnApply::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnApply, Setting_key) == 0x000008, "Member 'UISettingEntryFPSLimitHandler_BP_OnApply::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnApply, P) == 0x000018, "Member 'UISettingEntryFPSLimitHandler_BP_OnApply::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnApply, OPTIONS) == 0x000068, "Member 'UISettingEntryFPSLimitHandler_BP_OnApply::OPTIONS' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnApply, Value) == 0x0000B8, "Member 'UISettingEntryFPSLimitHandler_BP_OnApply::Value' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryFPSLimitHandler.BP_GetCurrentValue
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryFPSLimitHandler_BP_GetCurrentValue final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      O;                                                 // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue) == 0x000008, "Wrong alignment on UISettingEntryFPSLimitHandler_BP_GetCurrentValue");
static_assert(sizeof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue) == 0x0000C0, "Wrong size on UISettingEntryFPSLimitHandler_BP_GetCurrentValue");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue, Obj) == 0x000000, "Member 'UISettingEntryFPSLimitHandler_BP_GetCurrentValue::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue, Setting_key) == 0x000008, "Member 'UISettingEntryFPSLimitHandler_BP_GetCurrentValue::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue, P) == 0x000018, "Member 'UISettingEntryFPSLimitHandler_BP_GetCurrentValue::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue, O) == 0x000068, "Member 'UISettingEntryFPSLimitHandler_BP_GetCurrentValue::O' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_GetCurrentValue, ReturnValue) == 0x0000B8, "Member 'UISettingEntryFPSLimitHandler_BP_GetCurrentValue::ReturnValue' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryFPSLimitHandler.BP_OnChanged
// 0x0160 (0x0160 - 0x0000)
struct UISettingEntryFPSLimitHandler_BP_OnChanged final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Params_0;                                          // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      OPTIONS;                                           // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         Value;                                             // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    Tags;                                              // 0x00C0(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<class FString, int32>                    ReturnValue;                                       // 0x0110(0x0050)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(UISettingEntryFPSLimitHandler_BP_OnChanged) == 0x000008, "Wrong alignment on UISettingEntryFPSLimitHandler_BP_OnChanged");
static_assert(sizeof(UISettingEntryFPSLimitHandler_BP_OnChanged) == 0x000160, "Wrong size on UISettingEntryFPSLimitHandler_BP_OnChanged");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, Obj) == 0x000000, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, Setting_key) == 0x000008, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, Params_0) == 0x000018, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::Params_0' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, OPTIONS) == 0x000068, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::OPTIONS' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, Value) == 0x0000B8, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::Value' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, Tags) == 0x0000C0, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::Tags' has a wrong offset!");
static_assert(offsetof(UISettingEntryFPSLimitHandler_BP_OnChanged, ReturnValue) == 0x000110, "Member 'UISettingEntryFPSLimitHandler_BP_OnChanged::ReturnValue' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryMaxFPSHandler.BP_OnApply
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryMaxFPSHandler_BP_OnApply final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      OPTIONS;                                           // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         Value;                                             // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryMaxFPSHandler_BP_OnApply) == 0x000008, "Wrong alignment on UISettingEntryMaxFPSHandler_BP_OnApply");
static_assert(sizeof(UISettingEntryMaxFPSHandler_BP_OnApply) == 0x0000C0, "Wrong size on UISettingEntryMaxFPSHandler_BP_OnApply");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_OnApply, Obj) == 0x000000, "Member 'UISettingEntryMaxFPSHandler_BP_OnApply::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_OnApply, Setting_key) == 0x000008, "Member 'UISettingEntryMaxFPSHandler_BP_OnApply::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_OnApply, P) == 0x000018, "Member 'UISettingEntryMaxFPSHandler_BP_OnApply::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_OnApply, OPTIONS) == 0x000068, "Member 'UISettingEntryMaxFPSHandler_BP_OnApply::OPTIONS' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_OnApply, Value) == 0x0000B8, "Member 'UISettingEntryMaxFPSHandler_BP_OnApply::Value' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryMaxFPSHandler.BP_GetCurrentValue
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryMaxFPSHandler_BP_GetCurrentValue final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      O;                                                 // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue) == 0x000008, "Wrong alignment on UISettingEntryMaxFPSHandler_BP_GetCurrentValue");
static_assert(sizeof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue) == 0x0000C0, "Wrong size on UISettingEntryMaxFPSHandler_BP_GetCurrentValue");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue, Obj) == 0x000000, "Member 'UISettingEntryMaxFPSHandler_BP_GetCurrentValue::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue, Setting_key) == 0x000008, "Member 'UISettingEntryMaxFPSHandler_BP_GetCurrentValue::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue, P) == 0x000018, "Member 'UISettingEntryMaxFPSHandler_BP_GetCurrentValue::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue, O) == 0x000068, "Member 'UISettingEntryMaxFPSHandler_BP_GetCurrentValue::O' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetCurrentValue, ReturnValue) == 0x0000B8, "Member 'UISettingEntryMaxFPSHandler_BP_GetCurrentValue::ReturnValue' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryMaxFPSHandler.BP_GetDefaultValue
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryMaxFPSHandler_BP_GetDefaultValue final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      O;                                                 // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue) == 0x000008, "Wrong alignment on UISettingEntryMaxFPSHandler_BP_GetDefaultValue");
static_assert(sizeof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue) == 0x0000C0, "Wrong size on UISettingEntryMaxFPSHandler_BP_GetDefaultValue");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue, Obj) == 0x000000, "Member 'UISettingEntryMaxFPSHandler_BP_GetDefaultValue::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue, Setting_key) == 0x000008, "Member 'UISettingEntryMaxFPSHandler_BP_GetDefaultValue::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue, P) == 0x000018, "Member 'UISettingEntryMaxFPSHandler_BP_GetDefaultValue::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue, O) == 0x000068, "Member 'UISettingEntryMaxFPSHandler_BP_GetDefaultValue::O' has a wrong offset!");
static_assert(offsetof(UISettingEntryMaxFPSHandler_BP_GetDefaultValue, ReturnValue) == 0x0000B8, "Member 'UISettingEntryMaxFPSHandler_BP_GetDefaultValue::ReturnValue' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryShowFPSSwitchHandler.BP_OnApply
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryShowFPSSwitchHandler_BP_OnApply final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      OPTIONS;                                           // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         Value;                                             // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryShowFPSSwitchHandler_BP_OnApply) == 0x000008, "Wrong alignment on UISettingEntryShowFPSSwitchHandler_BP_OnApply");
static_assert(sizeof(UISettingEntryShowFPSSwitchHandler_BP_OnApply) == 0x0000C0, "Wrong size on UISettingEntryShowFPSSwitchHandler_BP_OnApply");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnApply, Obj) == 0x000000, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnApply::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnApply, Setting_key) == 0x000008, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnApply::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnApply, P) == 0x000018, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnApply::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnApply, OPTIONS) == 0x000068, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnApply::OPTIONS' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnApply, Value) == 0x0000B8, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnApply::Value' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryShowFPSSwitchHandler.BP_GetCurrentValue
// 0x00C0 (0x00C0 - 0x0000)
struct UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            P;                                                 // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      O;                                                 // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x00B8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue) == 0x000008, "Wrong alignment on UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue");
static_assert(sizeof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue) == 0x0000C0, "Wrong size on UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue, Obj) == 0x000000, "Member 'UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue, Setting_key) == 0x000008, "Member 'UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue, P) == 0x000018, "Member 'UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue::P' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue, O) == 0x000068, "Member 'UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue::O' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue, ReturnValue) == 0x0000B8, "Member 'UISettingEntryShowFPSSwitchHandler_BP_GetCurrentValue::ReturnValue' has a wrong offset!");

// PythonFunction FPSLogic.UISettingEntryShowFPSSwitchHandler.BP_OnChanged
// 0x0160 (0x0160 - 0x0000)
struct UISettingEntryShowFPSSwitchHandler_BP_OnChanged final
{
public:
	class UObject*                                Obj;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Setting_key;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Params_0;                                          // 0x0018(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<int32, class FText>                      OPTIONS;                                           // 0x0068(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	float                                         Value;                                             // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    Tags;                                              // 0x00C0(0x0050)(ConstParm, Parm, OutParm, ReferenceParm)
	TMap<class FString, int32>                    ReturnValue;                                       // 0x0110(0x0050)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged) == 0x000008, "Wrong alignment on UISettingEntryShowFPSSwitchHandler_BP_OnChanged");
static_assert(sizeof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged) == 0x000160, "Wrong size on UISettingEntryShowFPSSwitchHandler_BP_OnChanged");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, Obj) == 0x000000, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::Obj' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, Setting_key) == 0x000008, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::Setting_key' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, Params_0) == 0x000018, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::Params_0' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, OPTIONS) == 0x000068, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::OPTIONS' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, Value) == 0x0000B8, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::Value' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, Tags) == 0x0000C0, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::Tags' has a wrong offset!");
static_assert(offsetof(UISettingEntryShowFPSSwitchHandler_BP_OnChanged, ReturnValue) == 0x000110, "Member 'UISettingEntryShowFPSSwitchHandler_BP_OnChanged::ReturnValue' has a wrong offset!");

}


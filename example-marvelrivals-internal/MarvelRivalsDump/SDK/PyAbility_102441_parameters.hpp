#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102441

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "Hero_1024_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102441.PyCue_Projectile_HitImpact_10244101.OnExecuteAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_HitImpact_10244101_OnExecuteAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_HitImpact_10244101_OnExecuteAudio) == 0x000008, "Wrong alignment on PyCue_Projectile_HitImpact_10244101_OnExecuteAudio");
static_assert(sizeof(PyCue_Projectile_HitImpact_10244101_OnExecuteAudio) == 0x0001C0, "Wrong size on PyCue_Projectile_HitImpact_10244101_OnExecuteAudio");
static_assert(offsetof(PyCue_Projectile_HitImpact_10244101_OnExecuteAudio, MyTarget) == 0x000000, "Member 'PyCue_Projectile_HitImpact_10244101_OnExecuteAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_HitImpact_10244101_OnExecuteAudio, Parameters) == 0x000008, "Member 'PyCue_Projectile_HitImpact_10244101_OnExecuteAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102441.PyEffectiveComponent_10244101.K2_OnPreApplyContainer
// 0x0020 (0x0020 - 0x0000)
struct PyEffectiveComponent_10244101_K2_OnPreApplyContainer final
{
public:
	TArray<struct FHitResult>                     HitResults;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FHitResult>                     ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyEffectiveComponent_10244101_K2_OnPreApplyContainer) == 0x000008, "Wrong alignment on PyEffectiveComponent_10244101_K2_OnPreApplyContainer");
static_assert(sizeof(PyEffectiveComponent_10244101_K2_OnPreApplyContainer) == 0x000020, "Wrong size on PyEffectiveComponent_10244101_K2_OnPreApplyContainer");
static_assert(offsetof(PyEffectiveComponent_10244101_K2_OnPreApplyContainer, HitResults) == 0x000000, "Member 'PyEffectiveComponent_10244101_K2_OnPreApplyContainer::HitResults' has a wrong offset!");
static_assert(offsetof(PyEffectiveComponent_10244101_K2_OnPreApplyContainer, ReturnValue) == 0x000010, "Member 'PyEffectiveComponent_10244101_K2_OnPreApplyContainer::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102441.PyProjectile_10244101.K2_OnProcessHit
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10244101_K2_OnProcessHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10244101_K2_OnProcessHit) == 0x000008, "Wrong alignment on PyProjectile_10244101_K2_OnProcessHit");
static_assert(sizeof(PyProjectile_10244101_K2_OnProcessHit) == 0x000170, "Wrong size on PyProjectile_10244101_K2_OnProcessHit");
static_assert(offsetof(PyProjectile_10244101_K2_OnProcessHit, Hit) == 0x000000, "Member 'PyProjectile_10244101_K2_OnProcessHit::Hit' has a wrong offset!");

// PythonFunction PyAbility_102441.PyProjectile_10244101.OnAttachActorEndPlay
// 0x0010 (0x0010 - 0x0000)
struct PyProjectile_10244101_OnAttachActorEndPlay final
{
public:
	class AActor*                                 EndActor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10244101_OnAttachActorEndPlay) == 0x000008, "Wrong alignment on PyProjectile_10244101_OnAttachActorEndPlay");
static_assert(sizeof(PyProjectile_10244101_OnAttachActorEndPlay) == 0x000010, "Wrong size on PyProjectile_10244101_OnAttachActorEndPlay");
static_assert(offsetof(PyProjectile_10244101_OnAttachActorEndPlay, EndActor) == 0x000000, "Member 'PyProjectile_10244101_OnAttachActorEndPlay::EndActor' has a wrong offset!");
static_assert(offsetof(PyProjectile_10244101_OnAttachActorEndPlay, EndPlayReason) == 0x000008, "Member 'PyProjectile_10244101_OnAttachActorEndPlay::EndPlayReason' has a wrong offset!");

// PythonFunction PyAbility_102441.PyProjectile_10244101.OnAttachAgentEndTask
// 0x0008 (0x0008 - 0x0000)
struct PyProjectile_10244101_OnAttachAgentEndTask final
{
public:
	class AActor*                                 EndTaskAgent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10244101_OnAttachAgentEndTask) == 0x000008, "Wrong alignment on PyProjectile_10244101_OnAttachAgentEndTask");
static_assert(sizeof(PyProjectile_10244101_OnAttachAgentEndTask) == 0x000008, "Wrong size on PyProjectile_10244101_OnAttachAgentEndTask");
static_assert(offsetof(PyProjectile_10244101_OnAttachAgentEndTask, EndTaskAgent) == 0x000000, "Member 'PyProjectile_10244101_OnAttachAgentEndTask::EndTaskAgent' has a wrong offset!");

// PythonFunction PyAbility_102441.PyProjectile_10244101.OnHitComponentCollisionChanged
// 0x0008 (0x0008 - 0x0000)
struct PyProjectile_10244101_OnHitComponentCollisionChanged final
{
public:
	class UPrimitiveComponent*                    InPrimitiveComponent;                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10244101_OnHitComponentCollisionChanged) == 0x000008, "Wrong alignment on PyProjectile_10244101_OnHitComponentCollisionChanged");
static_assert(sizeof(PyProjectile_10244101_OnHitComponentCollisionChanged) == 0x000008, "Wrong size on PyProjectile_10244101_OnHitComponentCollisionChanged");
static_assert(offsetof(PyProjectile_10244101_OnHitComponentCollisionChanged, InPrimitiveComponent) == 0x000000, "Member 'PyProjectile_10244101_OnHitComponentCollisionChanged::InPrimitiveComponent' has a wrong offset!");

// PythonFunction PyAbility_102441.PyProjectile_10244101.OnRemoveAttachBuff
// 0x0028 (0x0028 - 0x0000)
struct PyProjectile_10244101_OnRemoveAttachBuff final
{
public:
	struct FGameplayEffectRemovalInfo             InGameplayEffectRemovalInfo;                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10244101_OnRemoveAttachBuff) == 0x000008, "Wrong alignment on PyProjectile_10244101_OnRemoveAttachBuff");
static_assert(sizeof(PyProjectile_10244101_OnRemoveAttachBuff) == 0x000028, "Wrong size on PyProjectile_10244101_OnRemoveAttachBuff");
static_assert(offsetof(PyProjectile_10244101_OnRemoveAttachBuff, InGameplayEffectRemovalInfo) == 0x000000, "Member 'PyProjectile_10244101_OnRemoveAttachBuff::InGameplayEffectRemovalInfo' has a wrong offset!");

// PythonFunction PyAbility_102441.PyTraceComponent_10244101.K2_OnGetTraceStart
// 0x0030 (0x0030 - 0x0000)
struct PyTraceComponent_10244101_K2_OnGetTraceStart final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyTraceComponent_10244101_K2_OnGetTraceStart) == 0x000008, "Wrong alignment on PyTraceComponent_10244101_K2_OnGetTraceStart");
static_assert(sizeof(PyTraceComponent_10244101_K2_OnGetTraceStart) == 0x000030, "Wrong size on PyTraceComponent_10244101_K2_OnGetTraceStart");
static_assert(offsetof(PyTraceComponent_10244101_K2_OnGetTraceStart, Location) == 0x000000, "Member 'PyTraceComponent_10244101_K2_OnGetTraceStart::Location' has a wrong offset!");
static_assert(offsetof(PyTraceComponent_10244101_K2_OnGetTraceStart, ReturnValue) == 0x000018, "Member 'PyTraceComponent_10244101_K2_OnGetTraceStart::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Projectile_Loop_10244101.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10244101_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10244101_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10244101_OnExecuteFX");
static_assert(sizeof(PyCue_Projectile_Loop_10244101_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10244101_OnExecuteFX");
static_assert(offsetof(PyCue_Projectile_Loop_10244101_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10244101_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10244101_OnExecuteFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10244101_OnExecuteFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Projectile_Loop_10244101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10244101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10244101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10244101_OnRemoveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10244101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10244101_OnRemoveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10244101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10244101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10244101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10244101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10244101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_WhileActiveFX");
static_assert(sizeof(PyCue_Ability_Loop_10244101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10244101_WhileActiveFX");
static_assert(offsetof(PyCue_Ability_Loop_10244101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10244101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10244101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.SetFXEnableTick0
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Ability_Loop_10244101_SetFXEnableTick0 final
{
public:
	struct FHelaFXInfo                            Info;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_SetFXEnableTick0) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_SetFXEnableTick0");
static_assert(sizeof(PyCue_Ability_Loop_10244101_SetFXEnableTick0) == 0x000010, "Wrong size on PyCue_Ability_Loop_10244101_SetFXEnableTick0");
static_assert(offsetof(PyCue_Ability_Loop_10244101_SetFXEnableTick0, Info) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_SetFXEnableTick0::Info' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.SetFXEnableTick1
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Ability_Loop_10244101_SetFXEnableTick1 final
{
public:
	struct FHelaFXInfo                            Info;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_SetFXEnableTick1) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_SetFXEnableTick1");
static_assert(sizeof(PyCue_Ability_Loop_10244101_SetFXEnableTick1) == 0x000010, "Wrong size on PyCue_Ability_Loop_10244101_SetFXEnableTick1");
static_assert(offsetof(PyCue_Ability_Loop_10244101_SetFXEnableTick1, Info) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_SetFXEnableTick1::Info' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.SetFXEnableTick2
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Ability_Loop_10244101_SetFXEnableTick2 final
{
public:
	struct FHelaFXInfo                            Info;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_SetFXEnableTick2) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_SetFXEnableTick2");
static_assert(sizeof(PyCue_Ability_Loop_10244101_SetFXEnableTick2) == 0x000010, "Wrong size on PyCue_Ability_Loop_10244101_SetFXEnableTick2");
static_assert(offsetof(PyCue_Ability_Loop_10244101_SetFXEnableTick2, Info) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_SetFXEnableTick2::Info' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.SetFXEnableTick3
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Ability_Loop_10244101_SetFXEnableTick3 final
{
public:
	struct FHelaFXInfo                            Info;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_SetFXEnableTick3) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_SetFXEnableTick3");
static_assert(sizeof(PyCue_Ability_Loop_10244101_SetFXEnableTick3) == 0x000010, "Wrong size on PyCue_Ability_Loop_10244101_SetFXEnableTick3");
static_assert(offsetof(PyCue_Ability_Loop_10244101_SetFXEnableTick3, Info) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_SetFXEnableTick3::Info' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10244101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_OnRemoveFX");
static_assert(sizeof(PyCue_Ability_Loop_10244101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10244101_OnRemoveFX");
static_assert(offsetof(PyCue_Ability_Loop_10244101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10244101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10244101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102441.PyCue_Ability_Loop_10244101.RecoverFXState
// 0x0020 (0x0020 - 0x0000)
struct PyCue_Ability_Loop_10244101_RecoverFXState final
{
public:
	class UNiagaraComponent*                      Fx;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewRotate;                                         // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PyCue_Ability_Loop_10244101_RecoverFXState) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10244101_RecoverFXState");
static_assert(sizeof(PyCue_Ability_Loop_10244101_RecoverFXState) == 0x000020, "Wrong size on PyCue_Ability_Loop_10244101_RecoverFXState");
static_assert(offsetof(PyCue_Ability_Loop_10244101_RecoverFXState, Fx) == 0x000000, "Member 'PyCue_Ability_Loop_10244101_RecoverFXState::Fx' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10244101_RecoverFXState, NewRotate) == 0x000008, "Member 'PyCue_Ability_Loop_10244101_RecoverFXState::NewRotate' has a wrong offset!");

}


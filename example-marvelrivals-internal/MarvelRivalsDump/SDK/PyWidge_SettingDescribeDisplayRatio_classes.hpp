#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidge_SettingDescribeDisplayRatio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// PythonClass PyWidge_SettingDescribeDisplayRatio.PyWidge_SettingDescribeDisplayRatio
// 0x00F0 (0x04A8 - 0x03B8)
class UPyWidge_SettingDescribeDisplayRatio : public UUserWidget
{
public:
	struct FSoftObjectPath                        Img_PC_Default;                                    // 0x03B8(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Img_PC_Small;                                      // 0x03E0(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Img_PC_Large;                                      // 0x0408(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Img_Gamepad_Default;                               // 0x0430(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Img_Gamepad_Small;                                 // 0x0458(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        Img_Gamepad_Large;                                 // 0x0480(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidge_SettingDescribeDisplayRatio">();
	}
	static class UPyWidge_SettingDescribeDisplayRatio* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidge_SettingDescribeDisplayRatio>();
	}
};
static_assert(alignof(UPyWidge_SettingDescribeDisplayRatio) == 0x000008, "Wrong alignment on UPyWidge_SettingDescribeDisplayRatio");
static_assert(sizeof(UPyWidge_SettingDescribeDisplayRatio) == 0x0004A8, "Wrong size on UPyWidge_SettingDescribeDisplayRatio");
static_assert(offsetof(UPyWidge_SettingDescribeDisplayRatio, Img_PC_Default) == 0x0003B8, "Member 'UPyWidge_SettingDescribeDisplayRatio::Img_PC_Default' has a wrong offset!");
static_assert(offsetof(UPyWidge_SettingDescribeDisplayRatio, Img_PC_Small) == 0x0003E0, "Member 'UPyWidge_SettingDescribeDisplayRatio::Img_PC_Small' has a wrong offset!");
static_assert(offsetof(UPyWidge_SettingDescribeDisplayRatio, Img_PC_Large) == 0x000408, "Member 'UPyWidge_SettingDescribeDisplayRatio::Img_PC_Large' has a wrong offset!");
static_assert(offsetof(UPyWidge_SettingDescribeDisplayRatio, Img_Gamepad_Default) == 0x000430, "Member 'UPyWidge_SettingDescribeDisplayRatio::Img_Gamepad_Default' has a wrong offset!");
static_assert(offsetof(UPyWidge_SettingDescribeDisplayRatio, Img_Gamepad_Small) == 0x000458, "Member 'UPyWidge_SettingDescribeDisplayRatio::Img_Gamepad_Small' has a wrong offset!");
static_assert(offsetof(UPyWidge_SettingDescribeDisplayRatio, Img_Gamepad_Large) == 0x000480, "Member 'UPyWidge_SettingDescribeDisplayRatio::Img_Gamepad_Large' has a wrong offset!");

}


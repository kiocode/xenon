#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JarvisReplay

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class JarvisReplay.JarvisDemoNetConnection
// 0x0000 (0x2200 - 0x2200)
class UJarvisDemoNetConnection final : public UDemoNetConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisDemoNetConnection">();
	}
	static class UJarvisDemoNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisDemoNetConnection>();
	}
};
static_assert(alignof(UJarvisDemoNetConnection) == 0x000008, "Wrong alignment on UJarvisDemoNetConnection");
static_assert(sizeof(UJarvisDemoNetConnection) == 0x002200, "Wrong size on UJarvisDemoNetConnection");

// Class JarvisReplay.JarvisReplayCharacter
// 0x0010 (0x0A20 - 0x0A10)
class AJarvisReplayCharacter final : public ACharacter
{
public:
	class UInputMappingContext*                   DefaultMappingContext;                             // 0x0A10(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayCharacter">();
	}
	static class AJarvisReplayCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AJarvisReplayCharacter>();
	}
};
static_assert(alignof(AJarvisReplayCharacter) == 0x000010, "Wrong alignment on AJarvisReplayCharacter");
static_assert(sizeof(AJarvisReplayCharacter) == 0x000A20, "Wrong size on AJarvisReplayCharacter");
static_assert(offsetof(AJarvisReplayCharacter, DefaultMappingContext) == 0x000A10, "Member 'AJarvisReplayCharacter::DefaultMappingContext' has a wrong offset!");

// Class JarvisReplay.JarvisReplayCharacterInterface
// 0x0000 (0x0030 - 0x0030)
class IJarvisReplayCharacterInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayCharacterInterface">();
	}
	static class IJarvisReplayCharacterInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IJarvisReplayCharacterInterface>();
	}
};
static_assert(alignof(IJarvisReplayCharacterInterface) == 0x000008, "Wrong alignment on IJarvisReplayCharacterInterface");
static_assert(sizeof(IJarvisReplayCharacterInterface) == 0x000030, "Wrong size on IJarvisReplayCharacterInterface");

// Class JarvisReplay.JarvisReplayComponent
// 0x0028 (0x0118 - 0x00F0)
class UJarvisReplayComponent final : public UActorComponent
{
public:
	uint8                                         Pad_F0[0x28];                                      // 0x00F0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PlayRecord();
	void StartRecord();
	void StopRecord();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayComponent">();
	}
	static class UJarvisReplayComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplayComponent>();
	}
};
static_assert(alignof(UJarvisReplayComponent) == 0x000008, "Wrong alignment on UJarvisReplayComponent");
static_assert(sizeof(UJarvisReplayComponent) == 0x000118, "Wrong size on UJarvisReplayComponent");

// Class JarvisReplay.JarvisReplayConnection
// 0x0010 (0x2270 - 0x2260)
class UJarvisReplayConnection final : public UIpConnection
{
public:
	uint8                                         Pad_2260[0x10];                                    // 0x2260(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayConnection">();
	}
	static class UJarvisReplayConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplayConnection>();
	}
};
static_assert(alignof(UJarvisReplayConnection) == 0x000008, "Wrong alignment on UJarvisReplayConnection");
static_assert(sizeof(UJarvisReplayConnection) == 0x002270, "Wrong size on UJarvisReplayConnection");

// Class JarvisReplay.JarvisReplayGameInstance
// 0x0000 (0x0340 - 0x0340)
class UJarvisReplayGameInstance final : public UPlatformGameInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayGameInstance">();
	}
	static class UJarvisReplayGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplayGameInstance>();
	}
};
static_assert(alignof(UJarvisReplayGameInstance) == 0x000008, "Wrong alignment on UJarvisReplayGameInstance");
static_assert(sizeof(UJarvisReplayGameInstance) == 0x000340, "Wrong size on UJarvisReplayGameInstance");

// Class JarvisReplay.JarvisReplayLibrary
// 0x0000 (0x0030 - 0x0030)
class UJarvisReplayLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayLibrary">();
	}
	static class UJarvisReplayLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplayLibrary>();
	}
};
static_assert(alignof(UJarvisReplayLibrary) == 0x000008, "Wrong alignment on UJarvisReplayLibrary");
static_assert(sizeof(UJarvisReplayLibrary) == 0x000030, "Wrong size on UJarvisReplayLibrary");

// Class JarvisReplay.JarvisReplayNetDriver
// 0x0040 (0x0BE0 - 0x0BA0)
class UJarvisReplayNetDriver final : public UIpNetDriver
{
public:
	uint8                                         Pad_BA0[0x40];                                     // 0x0BA0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayNetDriver">();
	}
	static class UJarvisReplayNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplayNetDriver>();
	}
};
static_assert(alignof(UJarvisReplayNetDriver) == 0x000010, "Wrong alignment on UJarvisReplayNetDriver");
static_assert(sizeof(UJarvisReplayNetDriver) == 0x000BE0, "Wrong size on UJarvisReplayNetDriver");

// Class JarvisReplay.JarvisReplayPlayerController
// 0x0000 (0x0A98 - 0x0A98)
class AJarvisReplayPlayerController final : public APlayerController
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayPlayerController">();
	}
	static class AJarvisReplayPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AJarvisReplayPlayerController>();
	}
};
static_assert(alignof(AJarvisReplayPlayerController) == 0x000008, "Wrong alignment on AJarvisReplayPlayerController");
static_assert(sizeof(AJarvisReplayPlayerController) == 0x000A98, "Wrong size on AJarvisReplayPlayerController");

// Class JarvisReplay.JarvisReplayDemoNetDriver
// 0x0030 (0x1AB0 - 0x1A80)
class UJarvisReplayDemoNetDriver : public UDemoNetDriver
{
public:
	uint8                                         Pad_1A80[0x30];                                    // 0x1A80(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplayDemoNetDriver">();
	}
	static class UJarvisReplayDemoNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplayDemoNetDriver>();
	}
};
static_assert(alignof(UJarvisReplayDemoNetDriver) == 0x000010, "Wrong alignment on UJarvisReplayDemoNetDriver");
static_assert(sizeof(UJarvisReplayDemoNetDriver) == 0x001AB0, "Wrong size on UJarvisReplayDemoNetDriver");

// Class JarvisReplay.JarvisReplaySubsystem
// 0x0068 (0x00C8 - 0x0060)
class UJarvisReplaySubsystem final : public UReplaySubsystem
{
public:
	uint8                                         Pad_60[0x68];                                      // 0x0060(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void LocalRecordJarvisReplay(const class FString& Name_0, const class FString& FriendlyName);
	void PlayJarvisReplay(const class FString& DemoURL, bool bIsNetFile);
	void PlayJarvisReplaySequence(const TArray<class FString>& ReplayIDSequence, int32 InLoopTimes, float InReplayInterval, bool bInQuitAppOnEnd);
	void RecordJarvisReplay();

	void CopyReplayIDToClipboard() const;
	float GetRecordingDemoCurrentTime() const;
	class FString GetRecordingReplayID() const;
	bool IsJarvisRecording() const;
	void UploadReplayFile() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"JarvisReplaySubsystem">();
	}
	static class UJarvisReplaySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJarvisReplaySubsystem>();
	}
};
static_assert(alignof(UJarvisReplaySubsystem) == 0x000008, "Wrong alignment on UJarvisReplaySubsystem");
static_assert(sizeof(UJarvisReplaySubsystem) == 0x0000C8, "Wrong size on UJarvisReplaySubsystem");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_RoomList_InfoV3

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_RoomList_InfoV3.PyWidget_RoomList_InfoV3
// 0x00A0 (0x0690 - 0x05F0)
class UPyWidget_RoomList_InfoV3 final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RoomID;                                            // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerNum;                                         // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpectatorNum;                                      // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsSelected;                                        // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLock;                                            // 0x0601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGame;                                            // 0x0602(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDisable;                                         // 0x0603(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsBattle;                                          // 0x0604(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFriend;                                          // 0x0605(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_606[0x2];                                      // 0x0606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            ColorNormal;                                       // 0x0608(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            ColorHoverText;                                    // 0x061C(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorNormalIcon;                                   // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorHoverIcon;                                    // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            ColorInSelectBlackBG;                              // 0x0650(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            ColorInSelectYellowBG;                             // 0x0664(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         UnableOpacity;                                     // 0x0678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             TextureLock;                                       // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             TextureGame;                                       // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RoomList_InfoV3">();
	}
	static class UPyWidget_RoomList_InfoV3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RoomList_InfoV3>();
	}
};
static_assert(alignof(UPyWidget_RoomList_InfoV3) == 0x000008, "Wrong alignment on UPyWidget_RoomList_InfoV3");
static_assert(sizeof(UPyWidget_RoomList_InfoV3) == 0x000690, "Wrong size on UPyWidget_RoomList_InfoV3");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, RoomID) == 0x0005F0, "Member 'UPyWidget_RoomList_InfoV3::RoomID' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, PlayerNum) == 0x0005F8, "Member 'UPyWidget_RoomList_InfoV3::PlayerNum' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, SpectatorNum) == 0x0005FC, "Member 'UPyWidget_RoomList_InfoV3::SpectatorNum' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, IsSelected) == 0x000600, "Member 'UPyWidget_RoomList_InfoV3::IsSelected' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, IsLock) == 0x000601, "Member 'UPyWidget_RoomList_InfoV3::IsLock' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, IsGame) == 0x000602, "Member 'UPyWidget_RoomList_InfoV3::IsGame' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, IsDisable) == 0x000603, "Member 'UPyWidget_RoomList_InfoV3::IsDisable' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, IsBattle) == 0x000604, "Member 'UPyWidget_RoomList_InfoV3::IsBattle' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, IsFriend) == 0x000605, "Member 'UPyWidget_RoomList_InfoV3::IsFriend' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, ColorNormal) == 0x000608, "Member 'UPyWidget_RoomList_InfoV3::ColorNormal' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, ColorHoverText) == 0x00061C, "Member 'UPyWidget_RoomList_InfoV3::ColorHoverText' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, ColorNormalIcon) == 0x000630, "Member 'UPyWidget_RoomList_InfoV3::ColorNormalIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, ColorHoverIcon) == 0x000640, "Member 'UPyWidget_RoomList_InfoV3::ColorHoverIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, ColorInSelectBlackBG) == 0x000650, "Member 'UPyWidget_RoomList_InfoV3::ColorInSelectBlackBG' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, ColorInSelectYellowBG) == 0x000664, "Member 'UPyWidget_RoomList_InfoV3::ColorInSelectYellowBG' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, UnableOpacity) == 0x000678, "Member 'UPyWidget_RoomList_InfoV3::UnableOpacity' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, TextureLock) == 0x000680, "Member 'UPyWidget_RoomList_InfoV3::TextureLock' has a wrong offset!");
static_assert(offsetof(UPyWidget_RoomList_InfoV3, TextureGame) == 0x000688, "Member 'UPyWidget_RoomList_InfoV3::TextureGame' has a wrong offset!");

}


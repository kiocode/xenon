#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102571

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102571.PyCue_Scope_Loop_10257101.WhileActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10257101_WhileActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10257101_WhileActiveAudio) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10257101_WhileActiveAudio");
static_assert(sizeof(PyCue_Scope_Loop_10257101_WhileActiveAudio) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10257101_WhileActiveAudio");
static_assert(offsetof(PyCue_Scope_Loop_10257101_WhileActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10257101_WhileActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10257101_WhileActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10257101_WhileActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Scope_Loop_10257101.OnActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10257101_OnActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10257101_OnActiveAudio) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10257101_OnActiveAudio");
static_assert(sizeof(PyCue_Scope_Loop_10257101_OnActiveAudio) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10257101_OnActiveAudio");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10257101_OnActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10257101_OnActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Scope_Loop_10257101.OnExecuteAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10257101_OnExecuteAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10257101_OnExecuteAudio) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10257101_OnExecuteAudio");
static_assert(sizeof(PyCue_Scope_Loop_10257101_OnExecuteAudio) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10257101_OnExecuteAudio");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnExecuteAudio, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10257101_OnExecuteAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnExecuteAudio, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10257101_OnExecuteAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Scope_Loop_10257101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10257101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10257101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10257101_WhileActiveFX");
static_assert(sizeof(PyCue_Scope_Loop_10257101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10257101_WhileActiveFX");
static_assert(offsetof(PyCue_Scope_Loop_10257101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10257101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10257101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10257101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Scope_Loop_10257101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10257101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10257101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10257101_OnRemoveFX");
static_assert(sizeof(PyCue_Scope_Loop_10257101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10257101_OnRemoveFX");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10257101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10257101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Scope_Loop_10257101.OnFloorLocation
// 0x0018 (0x0018 - 0x0000)
struct PyCue_Scope_Loop_10257101_OnFloorLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Scope_Loop_10257101_OnFloorLocation) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10257101_OnFloorLocation");
static_assert(sizeof(PyCue_Scope_Loop_10257101_OnFloorLocation) == 0x000018, "Wrong size on PyCue_Scope_Loop_10257101_OnFloorLocation");
static_assert(offsetof(PyCue_Scope_Loop_10257101_OnFloorLocation, Location) == 0x000000, "Member 'PyCue_Scope_Loop_10257101_OnFloorLocation::Location' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Ability_Loop_10257101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10257101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10257101_WhileActive) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10257101_WhileActive");
static_assert(sizeof(PyCue_Ability_Loop_10257101_WhileActive) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10257101_WhileActive");
static_assert(offsetof(PyCue_Ability_Loop_10257101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10257101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10257101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10257101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10257101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10257101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Ability_Loop_10257101.OnAbilityInit
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Ability_Loop_10257101_OnAbilityInit final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10257101_OnAbilityInit) == 0x000004, "Wrong alignment on PyCue_Ability_Loop_10257101_OnAbilityInit");
static_assert(sizeof(PyCue_Ability_Loop_10257101_OnAbilityInit) == 0x000004, "Wrong size on PyCue_Ability_Loop_10257101_OnAbilityInit");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnAbilityInit, AbilityID) == 0x000000, "Member 'PyCue_Ability_Loop_10257101_OnAbilityInit::AbilityID' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Ability_Loop_10257101.OnTranslatedByPortal
// 0x0030 (0x0030 - 0x0000)
struct PyCue_Ability_Loop_10257101_OnTranslatedByPortal final
{
public:
	struct FVector                                LastPosition;                                      // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewPosition;                                       // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10257101_OnTranslatedByPortal) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10257101_OnTranslatedByPortal");
static_assert(sizeof(PyCue_Ability_Loop_10257101_OnTranslatedByPortal) == 0x000030, "Wrong size on PyCue_Ability_Loop_10257101_OnTranslatedByPortal");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnTranslatedByPortal, LastPosition) == 0x000000, "Member 'PyCue_Ability_Loop_10257101_OnTranslatedByPortal::LastPosition' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnTranslatedByPortal, NewPosition) == 0x000018, "Member 'PyCue_Ability_Loop_10257101_OnTranslatedByPortal::NewPosition' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Ability_Loop_10257101.OnFlyStarted
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Ability_Loop_10257101_OnFlyStarted final
{
public:
	bool                                          IsLastFly;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10257101_OnFlyStarted) == 0x000001, "Wrong alignment on PyCue_Ability_Loop_10257101_OnFlyStarted");
static_assert(sizeof(PyCue_Ability_Loop_10257101_OnFlyStarted) == 0x000001, "Wrong size on PyCue_Ability_Loop_10257101_OnFlyStarted");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnFlyStarted, IsLastFly) == 0x000000, "Member 'PyCue_Ability_Loop_10257101_OnFlyStarted::IsLastFly' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Ability_Loop_10257101.OnFlyStoped
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Ability_Loop_10257101_OnFlyStoped final
{
public:
	bool                                          IsLastFly;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10257101_OnFlyStoped) == 0x000001, "Wrong alignment on PyCue_Ability_Loop_10257101_OnFlyStoped");
static_assert(sizeof(PyCue_Ability_Loop_10257101_OnFlyStoped) == 0x000001, "Wrong size on PyCue_Ability_Loop_10257101_OnFlyStoped");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnFlyStoped, IsLastFly) == 0x000000, "Member 'PyCue_Ability_Loop_10257101_OnFlyStoped::IsLastFly' has a wrong offset!");

// PythonFunction PyAbility_102571.PyCue_Ability_Loop_10257101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10257101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10257101_OnRemove) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10257101_OnRemove");
static_assert(sizeof(PyCue_Ability_Loop_10257101_OnRemove) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10257101_OnRemove");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10257101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10257101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10257101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10257101_OnRemove::ReturnValue' has a wrong offset!");

// DelegateFunction PyAbility_102571.PyAbility_102571.FlyStartedDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102571_FlyStartedDispatcher__DelegateSignature final
{
public:
	bool                                          IsLastFly;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_FlyStartedDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyAbility_102571_FlyStartedDispatcher__DelegateSignature");
static_assert(sizeof(PyAbility_102571_FlyStartedDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyAbility_102571_FlyStartedDispatcher__DelegateSignature");
static_assert(offsetof(PyAbility_102571_FlyStartedDispatcher__DelegateSignature, IsLastFly) == 0x000000, "Member 'PyAbility_102571_FlyStartedDispatcher__DelegateSignature::IsLastFly' has a wrong offset!");

// DelegateFunction PyAbility_102571.PyAbility_102571.FlyStopedDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102571_FlyStopedDispatcher__DelegateSignature final
{
public:
	bool                                          IsLastFly;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_FlyStopedDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyAbility_102571_FlyStopedDispatcher__DelegateSignature");
static_assert(sizeof(PyAbility_102571_FlyStopedDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyAbility_102571_FlyStopedDispatcher__DelegateSignature");
static_assert(offsetof(PyAbility_102571_FlyStopedDispatcher__DelegateSignature, IsLastFly) == 0x000000, "Member 'PyAbility_102571_FlyStopedDispatcher__DelegateSignature::IsLastFly' has a wrong offset!");

// DelegateFunction PyAbility_102571.PyAbility_102571.FloorLocationDispatcher__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PyAbility_102571_FloorLocationDispatcher__DelegateSignature final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_FloorLocationDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyAbility_102571_FloorLocationDispatcher__DelegateSignature");
static_assert(sizeof(PyAbility_102571_FloorLocationDispatcher__DelegateSignature) == 0x000018, "Wrong size on PyAbility_102571_FloorLocationDispatcher__DelegateSignature");
static_assert(offsetof(PyAbility_102571_FloorLocationDispatcher__DelegateSignature, InLocation) == 0x000000, "Member 'PyAbility_102571_FloorLocationDispatcher__DelegateSignature::InLocation' has a wrong offset!");

// PythonFunction PyAbility_102571.PyAbility_102571.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_102571_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_ReceiveTick) == 0x000004, "Wrong alignment on PyAbility_102571_ReceiveTick");
static_assert(sizeof(PyAbility_102571_ReceiveTick) == 0x000004, "Wrong size on PyAbility_102571_ReceiveTick");
static_assert(offsetof(PyAbility_102571_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PyAbility_102571_ReceiveTick::DeltaSeconds' has a wrong offset!");

// PythonFunction PyAbility_102571.PyAbility_102571.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_102571_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_102571_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_102571_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_102571_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_102571_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_102571_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_102571.PyAbility_102571.OnDashFinish
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102571_OnDashFinish final
{
public:
	EDashStopReason                               Reason;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_OnDashFinish) == 0x000001, "Wrong alignment on PyAbility_102571_OnDashFinish");
static_assert(sizeof(PyAbility_102571_OnDashFinish) == 0x000001, "Wrong size on PyAbility_102571_OnDashFinish");
static_assert(offsetof(PyAbility_102571_OnDashFinish, Reason) == 0x000000, "Member 'PyAbility_102571_OnDashFinish::Reason' has a wrong offset!");

// PythonFunction PyAbility_102571.PyAbility_102571.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_102571_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_102571_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_102571_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_102571_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_102571_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_102571_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_102571.PyAbility_102571.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102571_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102571_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_102571_K2_OnEndAbility");
static_assert(sizeof(PyAbility_102571_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_102571_K2_OnEndAbility");
static_assert(offsetof(PyAbility_102571_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_102571_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// DelegateFunction PyAbility_102571.PyScope_10257101.ScopeFloorLocationDispatcher__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature");
static_assert(sizeof(PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature) == 0x000018, "Wrong size on PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature");
static_assert(offsetof(PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature, InLocation) == 0x000000, "Member 'PyScope_10257101_ScopeFloorLocationDispatcher__DelegateSignature::InLocation' has a wrong offset!");

// PythonFunction PyAbility_102571.PyScope_10257101.OnFlyStoped
// 0x0001 (0x0001 - 0x0000)
struct PyScope_10257101_OnFlyStoped final
{
public:
	bool                                          IsLastFly;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyScope_10257101_OnFlyStoped) == 0x000001, "Wrong alignment on PyScope_10257101_OnFlyStoped");
static_assert(sizeof(PyScope_10257101_OnFlyStoped) == 0x000001, "Wrong size on PyScope_10257101_OnFlyStoped");
static_assert(offsetof(PyScope_10257101_OnFlyStoped, IsLastFly) == 0x000000, "Member 'PyScope_10257101_OnFlyStoped::IsLastFly' has a wrong offset!");

// PythonFunction PyAbility_102571.PyScope_10257101.OnFlyStarted
// 0x0001 (0x0001 - 0x0000)
struct PyScope_10257101_OnFlyStarted final
{
public:
	bool                                          IsLastFly;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyScope_10257101_OnFlyStarted) == 0x000001, "Wrong alignment on PyScope_10257101_OnFlyStarted");
static_assert(sizeof(PyScope_10257101_OnFlyStarted) == 0x000001, "Wrong size on PyScope_10257101_OnFlyStarted");
static_assert(offsetof(PyScope_10257101_OnFlyStarted, IsLastFly) == 0x000000, "Member 'PyScope_10257101_OnFlyStarted::IsLastFly' has a wrong offset!");

// PythonFunction PyAbility_102571.PyScope_10257101.SegmentScope
// 0x0030 (0x0030 - 0x0000)
struct PyScope_10257101_SegmentScope final
{
public:
	struct FVector                                LastPosition;                                      // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewPosition;                                       // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyScope_10257101_SegmentScope) == 0x000008, "Wrong alignment on PyScope_10257101_SegmentScope");
static_assert(sizeof(PyScope_10257101_SegmentScope) == 0x000030, "Wrong size on PyScope_10257101_SegmentScope");
static_assert(offsetof(PyScope_10257101_SegmentScope, LastPosition) == 0x000000, "Member 'PyScope_10257101_SegmentScope::LastPosition' has a wrong offset!");
static_assert(offsetof(PyScope_10257101_SegmentScope, NewPosition) == 0x000018, "Member 'PyScope_10257101_SegmentScope::NewPosition' has a wrong offset!");

// PythonFunction PyAbility_102571.PyScope_10257101.OnFloorLocation
// 0x0018 (0x0018 - 0x0000)
struct PyScope_10257101_OnFloorLocation final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyScope_10257101_OnFloorLocation) == 0x000008, "Wrong alignment on PyScope_10257101_OnFloorLocation");
static_assert(sizeof(PyScope_10257101_OnFloorLocation) == 0x000018, "Wrong size on PyScope_10257101_OnFloorLocation");
static_assert(offsetof(PyScope_10257101_OnFloorLocation, InLocation) == 0x000000, "Member 'PyScope_10257101_OnFloorLocation::InLocation' has a wrong offset!");

}


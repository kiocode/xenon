#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NumRedDot

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_NumRedDot.WBP_NumRedDot_C.ExecuteUbergraph_WBP_NumRedDot
// 0x0040 (0x0040 - 0x0000)
struct WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Number;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRed;                          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
////static_assert(alignof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot) == 0x000008, "Wrong alignment on WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot");
////static_assert(sizeof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot) == 0x000040, "Wrong size on WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, EntryPoint) == 0x000000, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::EntryPoint' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_bool_Variable) == 0x000004, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_bool_Variable' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_byte_Variable) == 0x000005, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_byte_Variable' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_byte_Variable_1' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_bool_Variable_1' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_byte_Variable_2' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_byte_Variable_3' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_bool_Variable_2) == 0x00000A, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_bool_Variable_2' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_byte_Variable_4) == 0x00000B, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_byte_Variable_4' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, Temp_byte_Variable_5) == 0x00000C, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::Temp_byte_Variable_5' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, K2Node_CustomEvent_Number) == 0x000010, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::K2Node_CustomEvent_Number' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::CallFunc_Clamp_ReturnValue' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, K2Node_Select_Default) == 0x000038, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::K2Node_Select_Default' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, K2Node_CustomEvent_Visible) == 0x000039, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::K2Node_CustomEvent_Visible' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, K2Node_CustomEvent_IsRed) == 0x00003A, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::K2Node_CustomEvent_IsRed' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, K2Node_Select_Default_1) == 0x00003B, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::K2Node_Select_Default_1' has a wrong offset!");
////static_assert(offsetof(WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot, K2Node_Select_Default_2) == 0x00003C, "Member 'WBP_NumRedDot_C_ExecuteUbergraph_WBP_NumRedDot::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_NumRedDot.WBP_NumRedDot_C.SetIsRed
// 0x0001 (0x0001 - 0x0000)
struct WBP_NumRedDot_C_SetIsRed final
{
public:
	bool                                          IsRed;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
////static_assert(alignof(WBP_NumRedDot_C_SetIsRed) == 0x000001, "Wrong alignment on WBP_NumRedDot_C_SetIsRed");
////static_assert(sizeof(WBP_NumRedDot_C_SetIsRed) == 0x000001, "Wrong size on WBP_NumRedDot_C_SetIsRed");
////static_assert(offsetof(WBP_NumRedDot_C_SetIsRed, IsRed) == 0x000000, "Member 'WBP_NumRedDot_C_SetIsRed::IsRed' has a wrong offset!");

// Function WBP_NumRedDot.WBP_NumRedDot_C.SetNum
// 0x0004 (0x0004 - 0x0000)
struct WBP_NumRedDot_C_SetNum final
{
public:
	int32                                         Number_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
////static_assert(alignof(WBP_NumRedDot_C_SetNum) == 0x000004, "Wrong alignment on WBP_NumRedDot_C_SetNum");
////static_assert(sizeof(WBP_NumRedDot_C_SetNum) == 0x000004, "Wrong size on WBP_NumRedDot_C_SetNum");
////static_assert(offsetof(WBP_NumRedDot_C_SetNum, Number_0) == 0x000000, "Member 'WBP_NumRedDot_C_SetNum::Number_0' has a wrong offset!");

// Function WBP_NumRedDot.WBP_NumRedDot_C.SetTextVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_NumRedDot_C_SetTextVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
////static_assert(alignof(WBP_NumRedDot_C_SetTextVisible) == 0x000001, "Wrong alignment on WBP_NumRedDot_C_SetTextVisible");
////static_assert(sizeof(WBP_NumRedDot_C_SetTextVisible) == 0x000001, "Wrong size on WBP_NumRedDot_C_SetTextVisible");
////static_assert(offsetof(WBP_NumRedDot_C_SetTextVisible, Visible) == 0x000000, "Member 'WBP_NumRedDot_C_SetTextVisible::Visible' has a wrong offset!");

}


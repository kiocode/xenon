#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102471

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Hero_1024_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_102471.PySummoned_10247101
// 0x0020 (0x0900 - 0x08E0)
class APySummoned_10247101 : public ASummoned_10247101
{
public:
	TArray<int32>                                 InheritedBuff;                                     // 0x08E0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTag                           FogTag;                                            // 0x08F0(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoned_10247101">();
	}
	static class APySummoned_10247101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoned_10247101>();
	}
};
static_assert(alignof(APySummoned_10247101) == 0x000010, "Wrong alignment on APySummoned_10247101");
static_assert(sizeof(APySummoned_10247101) == 0x000900, "Wrong size on APySummoned_10247101");
static_assert(offsetof(APySummoned_10247101, InheritedBuff) == 0x0008E0, "Member 'APySummoned_10247101::InheritedBuff' has a wrong offset!");
static_assert(offsetof(APySummoned_10247101, FogTag) == 0x0008F0, "Member 'APySummoned_10247101::FogTag' has a wrong offset!");

// PythonClass PyAbility_102471.PySummonedComp_10247101
// 0x0080 (0x0D30 - 0x0CB0)
class UPySummonedComp_10247101 final : public USummonedComp_10247101
{
public:
	float                                         ComboDuration;                                     // 0x0CB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComboNum;                                          // 0x0CB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbilityStatus;                                     // 0x0CB8(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     ChildActorClass;                                   // 0x0CC0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CrowAttackNotify;                                  // 0x0CC8(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CCC[0x4];                                      // 0x0CCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WeaponSocketRelativeLoc;                           // 0x0CD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAbilityStatusChanged;                            // 0x0CE8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMeshHiddenChanged;                               // 0x0CF8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPlayAttackMontage;                               // 0x0D08(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCameraBlendEnd;                                  // 0x0D18(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnAbilityStatusChanged__DelegateSignature(int32 NewStatus);
	void OnMeshHiddenChanged__DelegateSignature(bool NewStatus);
	void ReceiveBeginPlay();
	void K2_OnBeginAgentTask();
	void OnFogTagupdate(const struct FGameplayTag& Tag, bool Exist);
	void OnViewTargetChange(class AActor* InActor);
	void OnSculptAssetsLoaded();
	void K2_OnEndAgentTask();
	void OnRep_AbilityStatus();
	void OnRep_CrowAttackNotify();
	void OnPlayAttackMontage__DelegateSignature(int32 ComboState);
	void OnCameraBlendEnd__DelegateSignature();
	void OnAttackMontageMissile();
	void MulticastOnCameraBlendFinished();
	void K2_OnRecycleAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10247101">();
	}
	static class UPySummonedComp_10247101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10247101>();
	}
};
static_assert(alignof(UPySummonedComp_10247101) == 0x000010, "Wrong alignment on UPySummonedComp_10247101");
static_assert(sizeof(UPySummonedComp_10247101) == 0x000D30, "Wrong size on UPySummonedComp_10247101");
static_assert(offsetof(UPySummonedComp_10247101, ComboDuration) == 0x000CB0, "Member 'UPySummonedComp_10247101::ComboDuration' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, ComboNum) == 0x000CB4, "Member 'UPySummonedComp_10247101::ComboNum' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, AbilityStatus) == 0x000CB8, "Member 'UPySummonedComp_10247101::AbilityStatus' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, ChildActorClass) == 0x000CC0, "Member 'UPySummonedComp_10247101::ChildActorClass' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, CrowAttackNotify) == 0x000CC8, "Member 'UPySummonedComp_10247101::CrowAttackNotify' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, WeaponSocketRelativeLoc) == 0x000CD0, "Member 'UPySummonedComp_10247101::WeaponSocketRelativeLoc' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, OnAbilityStatusChanged) == 0x000CE8, "Member 'UPySummonedComp_10247101::OnAbilityStatusChanged' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, OnMeshHiddenChanged) == 0x000CF8, "Member 'UPySummonedComp_10247101::OnMeshHiddenChanged' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, OnPlayAttackMontage) == 0x000D08, "Member 'UPySummonedComp_10247101::OnPlayAttackMontage' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10247101, OnCameraBlendEnd) == 0x000D18, "Member 'UPySummonedComp_10247101::OnCameraBlendEnd' has a wrong offset!");

// PythonClass PyAbility_102471.PyConfig_102471
// 0x2F68 (0x3000 - 0x0098)
class UPyConfig_102471 final : public UMarvelAbilityConfig
{
public:
	float                                         SkillDuration;                                     // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSummonerHeight;                                 // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultSummonerHeight;                             // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffsetPositionMutiple;                             // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             SkyTraceContext;                                   // 0x00B0(0x0F90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMarvelAbilityTraceContext             FinalPointTraceContext;                            // 0x1040(0x0F90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         SummonedHalfScale;                                 // 0x1FD0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraMaxPitchLimit;                               // 0x1FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToCrowCameraBlendTime;                             // 0x1FD8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EViewTargetBlendFunction                      ToCrowCameraBlendFunc;                             // 0x1FDC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FDD[0x3];                                     // 0x1FDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ToHelaCameraBlendTime;                             // 0x1FE0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EViewTargetBlendFunction                      ToHelaCameraBlendFunc;                             // 0x1FE4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE5[0x3];                                     // 0x1FE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ToCrowStartAnimTime;                               // 0x1FE8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartUIEffectBlackTime;                            // 0x1FEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartAnimLength;                                   // 0x1FF0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF4[0xC];                                     // 0x1FF4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             TraceContext;                                      // 0x2000(0x0F90)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                RelativeLocationLeftHand;                          // 0x2F90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RelativeLocationRightHand;                         // 0x2FA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PerspectiveBuffID;                                 // 0x2FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CrowSummonedID;                                    // 0x2FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProjectileID;                                      // 0x2FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BlackUIBuffID;                                     // 0x2FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CrowUIBuffID;                                      // 0x2FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultSummonerCameraRot;                          // 0x2FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FShootModeSensitivityParam             SensitivityParam;                                  // 0x2FD8(0x0024)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_102471">();
	}
	static class UPyConfig_102471* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_102471>();
	}
};
static_assert(alignof(UPyConfig_102471) == 0x000010, "Wrong alignment on UPyConfig_102471");
static_assert(sizeof(UPyConfig_102471) == 0x003000, "Wrong size on UPyConfig_102471");
static_assert(offsetof(UPyConfig_102471, SkillDuration) == 0x000098, "Member 'UPyConfig_102471::SkillDuration' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, MinSummonerHeight) == 0x00009C, "Member 'UPyConfig_102471::MinSummonerHeight' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, DefaultSummonerHeight) == 0x0000A0, "Member 'UPyConfig_102471::DefaultSummonerHeight' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, OffsetPositionMutiple) == 0x0000A4, "Member 'UPyConfig_102471::OffsetPositionMutiple' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, SkyTraceContext) == 0x0000B0, "Member 'UPyConfig_102471::SkyTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, FinalPointTraceContext) == 0x001040, "Member 'UPyConfig_102471::FinalPointTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, SummonedHalfScale) == 0x001FD0, "Member 'UPyConfig_102471::SummonedHalfScale' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, CameraMaxPitchLimit) == 0x001FD4, "Member 'UPyConfig_102471::CameraMaxPitchLimit' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, ToCrowCameraBlendTime) == 0x001FD8, "Member 'UPyConfig_102471::ToCrowCameraBlendTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, ToCrowCameraBlendFunc) == 0x001FDC, "Member 'UPyConfig_102471::ToCrowCameraBlendFunc' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, ToHelaCameraBlendTime) == 0x001FE0, "Member 'UPyConfig_102471::ToHelaCameraBlendTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, ToHelaCameraBlendFunc) == 0x001FE4, "Member 'UPyConfig_102471::ToHelaCameraBlendFunc' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, ToCrowStartAnimTime) == 0x001FE8, "Member 'UPyConfig_102471::ToCrowStartAnimTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, StartUIEffectBlackTime) == 0x001FEC, "Member 'UPyConfig_102471::StartUIEffectBlackTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, StartAnimLength) == 0x001FF0, "Member 'UPyConfig_102471::StartAnimLength' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, TraceContext) == 0x002000, "Member 'UPyConfig_102471::TraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, RelativeLocationLeftHand) == 0x002F90, "Member 'UPyConfig_102471::RelativeLocationLeftHand' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, RelativeLocationRightHand) == 0x002FA8, "Member 'UPyConfig_102471::RelativeLocationRightHand' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, PerspectiveBuffID) == 0x002FC0, "Member 'UPyConfig_102471::PerspectiveBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, CrowSummonedID) == 0x002FC4, "Member 'UPyConfig_102471::CrowSummonedID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, ProjectileID) == 0x002FC8, "Member 'UPyConfig_102471::ProjectileID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, BlackUIBuffID) == 0x002FCC, "Member 'UPyConfig_102471::BlackUIBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, CrowUIBuffID) == 0x002FD0, "Member 'UPyConfig_102471::CrowUIBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, DefaultSummonerCameraRot) == 0x002FD4, "Member 'UPyConfig_102471::DefaultSummonerCameraRot' has a wrong offset!");
static_assert(offsetof(UPyConfig_102471, SensitivityParam) == 0x002FD8, "Member 'UPyConfig_102471::SensitivityParam' has a wrong offset!");

// PythonClass PyAbility_102471.PyCue_SummonedLoop_10247101
// 0x0000 (0x0E90 - 0x0E90)
class APyCue_SummonedLoop_10247101 final : public AMarvelCueNotify_Summoned
{
public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void ChangeMeshTo1P();
	void OnViewTargetChangeEvent(class AActor* InActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_SummonedLoop_10247101">();
	}
	static class APyCue_SummonedLoop_10247101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_SummonedLoop_10247101>();
	}
};
static_assert(alignof(APyCue_SummonedLoop_10247101) == 0x000008, "Wrong alignment on APyCue_SummonedLoop_10247101");
static_assert(sizeof(APyCue_SummonedLoop_10247101) == 0x000E90, "Wrong size on APyCue_SummonedLoop_10247101");

// PythonClass PyAbility_102471.PyAbility_102471
// 0x0030 (0x25C8 - 0x2598)
class UPyAbility_102471 : public UAbility_102471
{
public:
	bool                                          IsCrow;                                            // 0x2598(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2599[0x3];                                     // 0x2599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbilityStatus;                                     // 0x259C(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPySummonedComp_10247101*               CrowSummonedComp;                                  // 0x25A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAbilityStatusChanged;                            // 0x25A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCrowMoveEnd;                                     // 0x25B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnAbilityStatusChanged__DelegateSignature(int32 NewStatus);
	void OnCrowMoveEnd__DelegateSignature();
	void MulticastOnCrwoMoveHitEnd();
	void BeginPlay();
	bool CheckHeightAboveGround();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnRep_AbilityStatus();
	void OnRep_CrowSummonedComp();
	void NativeOnMontageCompleted(const class FString& Tag);
	void NativeOnMontageBlendOut(const class FString& Tag);
	void NativeOnMontageInterrupted(const class FString& Tag);
	void NativeOnMontageCancelled(const class FString& Tag);
	void NativeOnMontageEvent(const class FString& Tag);
	void ServerSpawnCrowEnd(class AActor* Crow);
	void UpdateShootModeSensitivity();
	void OnDurationEnd();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_102471">();
	}
	static class UPyAbility_102471* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_102471>();
	}
};
static_assert(alignof(UPyAbility_102471) == 0x000008, "Wrong alignment on UPyAbility_102471");
static_assert(sizeof(UPyAbility_102471) == 0x0025C8, "Wrong size on UPyAbility_102471");
static_assert(offsetof(UPyAbility_102471, IsCrow) == 0x002598, "Member 'UPyAbility_102471::IsCrow' has a wrong offset!");
static_assert(offsetof(UPyAbility_102471, AbilityStatus) == 0x00259C, "Member 'UPyAbility_102471::AbilityStatus' has a wrong offset!");
static_assert(offsetof(UPyAbility_102471, CrowSummonedComp) == 0x0025A0, "Member 'UPyAbility_102471::CrowSummonedComp' has a wrong offset!");
static_assert(offsetof(UPyAbility_102471, OnAbilityStatusChanged) == 0x0025A8, "Member 'UPyAbility_102471::OnAbilityStatusChanged' has a wrong offset!");
static_assert(offsetof(UPyAbility_102471, OnCrowMoveEnd) == 0x0025B8, "Member 'UPyAbility_102471::OnCrowMoveEnd' has a wrong offset!");

// PythonClass PyAbility_102471.PyUIController_102471
// 0x0130 (0x0D90 - 0x0C60)
class UPyUIController_102471 final : public UUIC_Ability
{
public:
	struct FCueHintData                           HintData;                                          // 0x0C60(0x0098)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCueHintData                           MoveEndHitData;                                    // 0x0CF8(0x0098)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void OnInit();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_102471">();
	}
	static class UPyUIController_102471* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_102471>();
	}
};
static_assert(alignof(UPyUIController_102471) == 0x000008, "Wrong alignment on UPyUIController_102471");
static_assert(sizeof(UPyUIController_102471) == 0x000D90, "Wrong size on UPyUIController_102471");
static_assert(offsetof(UPyUIController_102471, HintData) == 0x000C60, "Member 'UPyUIController_102471::HintData' has a wrong offset!");
static_assert(offsetof(UPyUIController_102471, MoveEndHitData) == 0x000CF8, "Member 'UPyUIController_102471::MoveEndHitData' has a wrong offset!");

}


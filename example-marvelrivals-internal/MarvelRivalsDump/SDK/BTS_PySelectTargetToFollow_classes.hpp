#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_PySelectTargetToFollow

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "BTS_PySelectTarget_Base_classes.hpp"


namespace SDK
{

// PythonClass BTS_PySelectTargetToFollow.BTS_PySelectTargetToFollow
// 0x0068 (0x0148 - 0x00E0)
class UBTS_PySelectTargetToFollow : public UBTS_PySelectTarget_Base
{
public:
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AllowedMaxDistance;                                // 0x00DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetFactorForPlayer;                             // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EHeroRole, float>                        TargetFactorByRole;                                // 0x00E8(0x0050)(Edit, NativeAccessSpecifierPublic)
	class FString                                 RequiredTag;                                       // 0x0138(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTS_PySelectTargetToFollow">();
	}
	static class UBTS_PySelectTargetToFollow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_PySelectTargetToFollow>();
	}
};
//static_assert(alignof(UBTS_PySelectTargetToFollow) == 0x000008, "Wrong alignment on UBTS_PySelectTargetToFollow");
//static_assert(sizeof(UBTS_PySelectTargetToFollow) == 0x000148, "Wrong size on UBTS_PySelectTargetToFollow");
//static_assert(offsetof(UBTS_PySelectTargetToFollow, AllowedMaxDistance) == 0x0000DC, "Member 'UBTS_PySelectTargetToFollow::AllowedMaxDistance' has a wrong offset!");
//static_assert(offsetof(UBTS_PySelectTargetToFollow, TargetFactorForPlayer) == 0x0000E0, "Member 'UBTS_PySelectTargetToFollow::TargetFactorForPlayer' has a wrong offset!");
//static_assert(offsetof(UBTS_PySelectTargetToFollow, TargetFactorByRole) == 0x0000E8, "Member 'UBTS_PySelectTargetToFollow::TargetFactorByRole' has a wrong offset!");
//static_assert(offsetof(UBTS_PySelectTargetToFollow, RequiredTag) == 0x000138, "Member 'UBTS_PySelectTargetToFollow::RequiredTag' has a wrong offset!");

}


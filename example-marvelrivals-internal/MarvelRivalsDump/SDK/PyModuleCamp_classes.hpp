#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyModuleCamp

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyModuleCamp.PyModuleCamp
// 0x0018 (0x04C0 - 0x04A8)
class APyModuleCamp final : public AModuleControlBase
{
public:
	class FString                                 Name_0;                                            // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleSide                                   WinnerSide;                                        // 0x04B8(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleSide                                   AttackSide;                                        // 0x04B9(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void S_Activate();
	void ControlRangeCheck(bool Active);
	void OnPlayerEnterCamp(int32 UID);
	void OnPlayerExitCamp(int32 UID);
	bool IsCampActivate();
	void ServerUpdate();
	void CampMoveFollowPlayer(float DurationTime, bool IsHidden, int32 PlayerUID);
	void CampStopMoveFollowPlayer();
	void Update();
	void SetMoveSpeed(float NewSpeed);
	void FollowTraceMoveStart(const class FString& TraceName, float StartPercent);
	float GetCurLength();
	void ReachCheckPoint(const class FString& EventName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyModuleCamp">();
	}
	static class APyModuleCamp* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyModuleCamp>();
	}
};
static_assert(alignof(APyModuleCamp) == 0x000008, "Wrong alignment on APyModuleCamp");
static_assert(sizeof(APyModuleCamp) == 0x0004C0, "Wrong size on APyModuleCamp");
static_assert(offsetof(APyModuleCamp, Name_0) == 0x0004A8, "Member 'APyModuleCamp::Name_0' has a wrong offset!");
static_assert(offsetof(APyModuleCamp, WinnerSide) == 0x0004B8, "Member 'APyModuleCamp::WinnerSide' has a wrong offset!");
static_assert(offsetof(APyModuleCamp, AttackSide) == 0x0004B9, "Member 'APyModuleCamp::AttackSide' has a wrong offset!");

}


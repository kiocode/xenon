#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1021

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Hero_1021_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function Hero_1021.Ability_102111.CheckEnergyStage
// 0x0004 (0x0004 - 0x0000)
struct Ability_102111_CheckEnergyStage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_CheckEnergyStage) == 0x000004, "Wrong alignment on Ability_102111_CheckEnergyStage");
static_assert(sizeof(Ability_102111_CheckEnergyStage) == 0x000004, "Wrong size on Ability_102111_CheckEnergyStage");
static_assert(offsetof(Ability_102111_CheckEnergyStage, ReturnValue) == 0x000000, "Member 'Ability_102111_CheckEnergyStage::ReturnValue' has a wrong offset!");

// Function Hero_1021.Ability_102111.OnActivateAbility
// 0x0004 (0x0004 - 0x0000)
struct Ability_102111_OnActivateAbility final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_OnActivateAbility) == 0x000004, "Wrong alignment on Ability_102111_OnActivateAbility");
static_assert(sizeof(Ability_102111_OnActivateAbility) == 0x000004, "Wrong size on Ability_102111_OnActivateAbility");
static_assert(offsetof(Ability_102111_OnActivateAbility, AbilityID) == 0x000000, "Member 'Ability_102111_OnActivateAbility::AbilityID' has a wrong offset!");

// Function Hero_1021.Ability_102111.OnAimTargetChanged
// 0x0001 (0x0001 - 0x0000)
struct Ability_102111_OnAimTargetChanged final
{
public:
	bool                                          bAimingTarget;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_OnAimTargetChanged) == 0x000001, "Wrong alignment on Ability_102111_OnAimTargetChanged");
static_assert(sizeof(Ability_102111_OnAimTargetChanged) == 0x000001, "Wrong size on Ability_102111_OnAimTargetChanged");
static_assert(offsetof(Ability_102111_OnAimTargetChanged, bAimingTarget) == 0x000000, "Member 'Ability_102111_OnAimTargetChanged::bAimingTarget' has a wrong offset!");

// Function Hero_1021.Ability_102111.OnBowStageChanged
// 0x0001 (0x0001 - 0x0000)
struct Ability_102111_OnBowStageChanged final
{
public:
	bool                                          bIsInBowState;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_OnBowStageChanged) == 0x000001, "Wrong alignment on Ability_102111_OnBowStageChanged");
static_assert(sizeof(Ability_102111_OnBowStageChanged) == 0x000001, "Wrong size on Ability_102111_OnBowStageChanged");
static_assert(offsetof(Ability_102111_OnBowStageChanged, bIsInBowState) == 0x000000, "Member 'Ability_102111_OnBowStageChanged::bIsInBowState' has a wrong offset!");

// Function Hero_1021.Ability_102111.OnEndAbility
// 0x0004 (0x0004 - 0x0000)
struct Ability_102111_OnEndAbility final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_OnEndAbility) == 0x000004, "Wrong alignment on Ability_102111_OnEndAbility");
static_assert(sizeof(Ability_102111_OnEndAbility) == 0x000004, "Wrong size on Ability_102111_OnEndAbility");
static_assert(offsetof(Ability_102111_OnEndAbility, AbilityID) == 0x000000, "Member 'Ability_102111_OnEndAbility::AbilityID' has a wrong offset!");

// Function Hero_1021.Ability_102111.OnEnergyAttrChangeThroughStageOne
// 0x0008 (0x0008 - 0x0000)
struct Ability_102111_OnEnergyAttrChangeThroughStageOne final
{
public:
	bool                                          bLessStageOne;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentValue;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_OnEnergyAttrChangeThroughStageOne) == 0x000004, "Wrong alignment on Ability_102111_OnEnergyAttrChangeThroughStageOne");
static_assert(sizeof(Ability_102111_OnEnergyAttrChangeThroughStageOne) == 0x000008, "Wrong size on Ability_102111_OnEnergyAttrChangeThroughStageOne");
static_assert(offsetof(Ability_102111_OnEnergyAttrChangeThroughStageOne, bLessStageOne) == 0x000000, "Member 'Ability_102111_OnEnergyAttrChangeThroughStageOne::bLessStageOne' has a wrong offset!");
static_assert(offsetof(Ability_102111_OnEnergyAttrChangeThroughStageOne, CurrentValue) == 0x000004, "Member 'Ability_102111_OnEnergyAttrChangeThroughStageOne::CurrentValue' has a wrong offset!");

// Function Hero_1021.Ability_102111.UpdateEnergyDamage
// 0x0004 (0x0004 - 0x0000)
struct Ability_102111_UpdateEnergyDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Ability_102111_UpdateEnergyDamage) == 0x000004, "Wrong alignment on Ability_102111_UpdateEnergyDamage");
static_assert(sizeof(Ability_102111_UpdateEnergyDamage) == 0x000004, "Wrong size on Ability_102111_UpdateEnergyDamage");
static_assert(offsetof(Ability_102111_UpdateEnergyDamage, ReturnValue) == 0x000000, "Member 'Ability_102111_UpdateEnergyDamage::ReturnValue' has a wrong offset!");

// Function Hero_1021.UIController_102111.OnFullPercent
// 0x0001 (0x0001 - 0x0000)
struct UIController_102111_OnFullPercent final
{
public:
	bool                                          InIsFull;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIController_102111_OnFullPercent) == 0x000001, "Wrong alignment on UIController_102111_OnFullPercent");
static_assert(sizeof(UIController_102111_OnFullPercent) == 0x000001, "Wrong size on UIController_102111_OnFullPercent");
static_assert(offsetof(UIController_102111_OnFullPercent, InIsFull) == 0x000000, "Member 'UIController_102111_OnFullPercent::InIsFull' has a wrong offset!");

// Function Hero_1021.UIController_102111.SetUpdateEnable
// 0x0001 (0x0001 - 0x0000)
struct UIController_102111_SetUpdateEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIController_102111_SetUpdateEnable) == 0x000001, "Wrong alignment on UIController_102111_SetUpdateEnable");
static_assert(sizeof(UIController_102111_SetUpdateEnable) == 0x000001, "Wrong size on UIController_102111_SetUpdateEnable");
static_assert(offsetof(UIController_102111_SetUpdateEnable, bEnable) == 0x000000, "Member 'UIController_102111_SetUpdateEnable::bEnable' has a wrong offset!");

// Function Hero_1021.Cue_Ability_Loop_10211102.OnEnergyStageChanged
// 0x0004 (0x0004 - 0x0000)
struct Cue_Ability_Loop_10211102_OnEnergyStageChanged final
{
public:
	int32                                         InStage;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Ability_Loop_10211102_OnEnergyStageChanged) == 0x000004, "Wrong alignment on Cue_Ability_Loop_10211102_OnEnergyStageChanged");
static_assert(sizeof(Cue_Ability_Loop_10211102_OnEnergyStageChanged) == 0x000004, "Wrong size on Cue_Ability_Loop_10211102_OnEnergyStageChanged");
static_assert(offsetof(Cue_Ability_Loop_10211102_OnEnergyStageChanged, InStage) == 0x000000, "Member 'Cue_Ability_Loop_10211102_OnEnergyStageChanged::InStage' has a wrong offset!");

// Function Hero_1021.Cue_Ability_Loop_10211102.OnEnergyStageIsUp
// 0x0008 (0x0008 - 0x0000)
struct Cue_Ability_Loop_10211102_OnEnergyStageIsUp final
{
public:
	int32                                         InStageIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUp;                                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Cue_Ability_Loop_10211102_OnEnergyStageIsUp) == 0x000004, "Wrong alignment on Cue_Ability_Loop_10211102_OnEnergyStageIsUp");
static_assert(sizeof(Cue_Ability_Loop_10211102_OnEnergyStageIsUp) == 0x000008, "Wrong size on Cue_Ability_Loop_10211102_OnEnergyStageIsUp");
static_assert(offsetof(Cue_Ability_Loop_10211102_OnEnergyStageIsUp, InStageIndex) == 0x000000, "Member 'Cue_Ability_Loop_10211102_OnEnergyStageIsUp::InStageIndex' has a wrong offset!");
static_assert(offsetof(Cue_Ability_Loop_10211102_OnEnergyStageIsUp, bIsUp) == 0x000004, "Member 'Cue_Ability_Loop_10211102_OnEnergyStageIsUp::bIsUp' has a wrong offset!");

// Function Hero_1021.DragAbility_102161.ApplyBuffToTarget
// 0x0001 (0x0001 - 0x0000)
struct DragAbility_102161_ApplyBuffToTarget final
{
public:
	EDashStopReason                               Reason;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DragAbility_102161_ApplyBuffToTarget) == 0x000001, "Wrong alignment on DragAbility_102161_ApplyBuffToTarget");
static_assert(sizeof(DragAbility_102161_ApplyBuffToTarget) == 0x000001, "Wrong size on DragAbility_102161_ApplyBuffToTarget");
static_assert(offsetof(DragAbility_102161_ApplyBuffToTarget, Reason) == 0x000000, "Member 'DragAbility_102161_ApplyBuffToTarget::Reason' has a wrong offset!");

// Function Hero_1021.DragAbility_102161.OnCharacterHit
// 0x0198 (0x0198 - 0x0000)
struct DragAbility_102161_OnCharacterHit final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             Hit;                                               // 0x0028(0x0170)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(DragAbility_102161_OnCharacterHit) == 0x000008, "Wrong alignment on DragAbility_102161_OnCharacterHit");
static_assert(sizeof(DragAbility_102161_OnCharacterHit) == 0x000198, "Wrong size on DragAbility_102161_OnCharacterHit");
static_assert(offsetof(DragAbility_102161_OnCharacterHit, SelfActor) == 0x000000, "Member 'DragAbility_102161_OnCharacterHit::SelfActor' has a wrong offset!");
static_assert(offsetof(DragAbility_102161_OnCharacterHit, OtherActor) == 0x000008, "Member 'DragAbility_102161_OnCharacterHit::OtherActor' has a wrong offset!");
static_assert(offsetof(DragAbility_102161_OnCharacterHit, NormalImpulse) == 0x000010, "Member 'DragAbility_102161_OnCharacterHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(DragAbility_102161_OnCharacterHit, Hit) == 0x000028, "Member 'DragAbility_102161_OnCharacterHit::Hit' has a wrong offset!");

// Function Hero_1021.Summoned_102181.GetAllAfterImageLocations
// 0x0010 (0x0010 - 0x0000)
struct Summoned_102181_GetAllAfterImageLocations final
{
public:
	TArray<struct FVector>                        OutLocations;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_GetAllAfterImageLocations) == 0x000008, "Wrong alignment on Summoned_102181_GetAllAfterImageLocations");
static_assert(sizeof(Summoned_102181_GetAllAfterImageLocations) == 0x000010, "Wrong size on Summoned_102181_GetAllAfterImageLocations");
static_assert(offsetof(Summoned_102181_GetAllAfterImageLocations, OutLocations) == 0x000000, "Member 'Summoned_102181_GetAllAfterImageLocations::OutLocations' has a wrong offset!");

// Function Hero_1021.Summoned_102181.GetCauser
// 0x0008 (0x0008 - 0x0000)
struct Summoned_102181_GetCauser final
{
public:
	class AMarvelBaseCharacter*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_GetCauser) == 0x000008, "Wrong alignment on Summoned_102181_GetCauser");
static_assert(sizeof(Summoned_102181_GetCauser) == 0x000008, "Wrong size on Summoned_102181_GetCauser");
static_assert(offsetof(Summoned_102181_GetCauser, ReturnValue) == 0x000000, "Member 'Summoned_102181_GetCauser::ReturnValue' has a wrong offset!");

// Function Hero_1021.Summoned_102181.GetIsRelevant
// 0x0001 (0x0001 - 0x0000)
struct Summoned_102181_GetIsRelevant final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_GetIsRelevant) == 0x000001, "Wrong alignment on Summoned_102181_GetIsRelevant");
static_assert(sizeof(Summoned_102181_GetIsRelevant) == 0x000001, "Wrong size on Summoned_102181_GetIsRelevant");
static_assert(offsetof(Summoned_102181_GetIsRelevant, ReturnValue) == 0x000000, "Member 'Summoned_102181_GetIsRelevant::ReturnValue' has a wrong offset!");

// Function Hero_1021.Summoned_102181.GetTargetCharacter
// 0x0008 (0x0008 - 0x0000)
struct Summoned_102181_GetTargetCharacter final
{
public:
	class AMarvelBaseCharacter*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_GetTargetCharacter) == 0x000008, "Wrong alignment on Summoned_102181_GetTargetCharacter");
static_assert(sizeof(Summoned_102181_GetTargetCharacter) == 0x000008, "Wrong size on Summoned_102181_GetTargetCharacter");
static_assert(offsetof(Summoned_102181_GetTargetCharacter, ReturnValue) == 0x000000, "Member 'Summoned_102181_GetTargetCharacter::ReturnValue' has a wrong offset!");

// Function Hero_1021.Summoned_102181.OnSummonerTakeDamage
// 0x0028 (0x0028 - 0x0000)
struct Summoned_102181_OnSummonerTakeDamage final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_OnSummonerTakeDamage) == 0x000008, "Wrong alignment on Summoned_102181_OnSummonerTakeDamage");
static_assert(sizeof(Summoned_102181_OnSummonerTakeDamage) == 0x000028, "Wrong size on Summoned_102181_OnSummonerTakeDamage");
static_assert(offsetof(Summoned_102181_OnSummonerTakeDamage, InSourceAvatar) == 0x000000, "Member 'Summoned_102181_OnSummonerTakeDamage::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(Summoned_102181_OnSummonerTakeDamage, InTargetAvatar) == 0x000008, "Member 'Summoned_102181_OnSummonerTakeDamage::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(Summoned_102181_OnSummonerTakeDamage, ModifierParameterHandle) == 0x000010, "Member 'Summoned_102181_OnSummonerTakeDamage::ModifierParameterHandle' has a wrong offset!");

// Function Hero_1021.Summoned_102181.SetShouldCreate
// 0x0001 (0x0001 - 0x0000)
struct Summoned_102181_SetShouldCreate final
{
public:
	bool                                          bShould;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_SetShouldCreate) == 0x000001, "Wrong alignment on Summoned_102181_SetShouldCreate");
static_assert(sizeof(Summoned_102181_SetShouldCreate) == 0x000001, "Wrong size on Summoned_102181_SetShouldCreate");
static_assert(offsetof(Summoned_102181_SetShouldCreate, bShould) == 0x000000, "Member 'Summoned_102181_SetShouldCreate::bShould' has a wrong offset!");

// Function Hero_1021.Summoned_102181.SetTargetCharacter
// 0x0008 (0x0008 - 0x0000)
struct Summoned_102181_SetTargetCharacter final
{
public:
	class AMarvelBaseCharacter*                   OutTarget;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Summoned_102181_SetTargetCharacter) == 0x000008, "Wrong alignment on Summoned_102181_SetTargetCharacter");
static_assert(sizeof(Summoned_102181_SetTargetCharacter) == 0x000008, "Wrong size on Summoned_102181_SetTargetCharacter");
static_assert(offsetof(Summoned_102181_SetTargetCharacter, OutTarget) == 0x000000, "Member 'Summoned_102181_SetTargetCharacter::OutTarget' has a wrong offset!");

// Function Hero_1021.Cue_Summoner_Loop_10218101.ApplyUsablePoseMesh
// 0x0004 (0x0004 - 0x0000)
struct Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh) == 0x000004, "Wrong alignment on Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh");
static_assert(sizeof(Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh) == 0x000004, "Wrong size on Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh");
static_assert(offsetof(Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh, ReturnValue) == 0x000000, "Member 'Cue_Summoner_Loop_10218101_ApplyUsablePoseMesh::ReturnValue' has a wrong offset!");

// Function Hero_1021.Cue_Summoner_Loop_10218101.OnSetupAfterCom
// 0x0080 (0x0080 - 0x0000)
struct Cue_Summoner_Loop_10218101_OnSetupAfterCom final
{
public:
	class AMarvelBaseCharacter*                   OutTargetCharacter;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAfterImageSpec                        AfterImageSpec;                                    // 0x0008(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Summoner_Loop_10218101_OnSetupAfterCom) == 0x000008, "Wrong alignment on Cue_Summoner_Loop_10218101_OnSetupAfterCom");
static_assert(sizeof(Cue_Summoner_Loop_10218101_OnSetupAfterCom) == 0x000080, "Wrong size on Cue_Summoner_Loop_10218101_OnSetupAfterCom");
static_assert(offsetof(Cue_Summoner_Loop_10218101_OnSetupAfterCom, OutTargetCharacter) == 0x000000, "Member 'Cue_Summoner_Loop_10218101_OnSetupAfterCom::OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(Cue_Summoner_Loop_10218101_OnSetupAfterCom, AfterImageSpec) == 0x000008, "Member 'Cue_Summoner_Loop_10218101_OnSetupAfterCom::AfterImageSpec' has a wrong offset!");

// Function Hero_1021.Cue_Summoner_Loop_10218101.UpdatePoseMesh
// 0x0004 (0x0004 - 0x0000)
struct Cue_Summoner_Loop_10218101_UpdatePoseMesh final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Cue_Summoner_Loop_10218101_UpdatePoseMesh) == 0x000004, "Wrong alignment on Cue_Summoner_Loop_10218101_UpdatePoseMesh");
static_assert(sizeof(Cue_Summoner_Loop_10218101_UpdatePoseMesh) == 0x000004, "Wrong size on Cue_Summoner_Loop_10218101_UpdatePoseMesh");
static_assert(offsetof(Cue_Summoner_Loop_10218101_UpdatePoseMesh, DeltaSeconds) == 0x000000, "Member 'Cue_Summoner_Loop_10218101_UpdatePoseMesh::DeltaSeconds' has a wrong offset!");

// Function Hero_1021.EpicMomentAction_1021.OnSummonedBegin
// 0x0060 (0x0060 - 0x0000)
struct EpicMomentAction_1021_OnSummonedBegin final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelGameplayAbility*                 SourceAbility;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Summoned;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMarvelTargetActorGenerateInfo         GenerateInfo;                                      // 0x0018(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EpicMomentAction_1021_OnSummonedBegin) == 0x000008, "Wrong alignment on EpicMomentAction_1021_OnSummonedBegin");
static_assert(sizeof(EpicMomentAction_1021_OnSummonedBegin) == 0x000060, "Wrong size on EpicMomentAction_1021_OnSummonedBegin");
static_assert(offsetof(EpicMomentAction_1021_OnSummonedBegin, SourceActor) == 0x000000, "Member 'EpicMomentAction_1021_OnSummonedBegin::SourceActor' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1021_OnSummonedBegin, SourceAbility) == 0x000008, "Member 'EpicMomentAction_1021_OnSummonedBegin::SourceAbility' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1021_OnSummonedBegin, Summoned) == 0x000010, "Member 'EpicMomentAction_1021_OnSummonedBegin::Summoned' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1021_OnSummonedBegin, GenerateInfo) == 0x000018, "Member 'EpicMomentAction_1021_OnSummonedBegin::GenerateInfo' has a wrong offset!");

// Function Hero_1021.EpicMomentAction_1021.OnSummonedEnd
// 0x0008 (0x0008 - 0x0000)
struct EpicMomentAction_1021_OnSummonedEnd final
{
public:
	class AActor*                                 InSummoner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EpicMomentAction_1021_OnSummonedEnd) == 0x000008, "Wrong alignment on EpicMomentAction_1021_OnSummonedEnd");
static_assert(sizeof(EpicMomentAction_1021_OnSummonedEnd) == 0x000008, "Wrong size on EpicMomentAction_1021_OnSummonedEnd");
static_assert(offsetof(EpicMomentAction_1021_OnSummonedEnd, InSummoner) == 0x000000, "Member 'EpicMomentAction_1021_OnSummonedEnd::InSummoner' has a wrong offset!");

// Function Hero_1021.EpicMomentAction_1021.OnSummonerTakeDamage
// 0x0028 (0x0028 - 0x0000)
struct EpicMomentAction_1021_OnSummonerTakeDamage final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EpicMomentAction_1021_OnSummonerTakeDamage) == 0x000008, "Wrong alignment on EpicMomentAction_1021_OnSummonerTakeDamage");
static_assert(sizeof(EpicMomentAction_1021_OnSummonerTakeDamage) == 0x000028, "Wrong size on EpicMomentAction_1021_OnSummonerTakeDamage");
static_assert(offsetof(EpicMomentAction_1021_OnSummonerTakeDamage, InSourceAvatar) == 0x000000, "Member 'EpicMomentAction_1021_OnSummonerTakeDamage::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1021_OnSummonerTakeDamage, InTargetAvatar) == 0x000008, "Member 'EpicMomentAction_1021_OnSummonerTakeDamage::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(EpicMomentAction_1021_OnSummonerTakeDamage, ModifierParameterHandle) == 0x000010, "Member 'EpicMomentAction_1021_OnSummonerTakeDamage::ModifierParameterHandle' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.GetIsHiddenArrow
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_GetIsHiddenArrow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_GetIsHiddenArrow) == 0x000001, "Wrong alignment on HawkeyeCharacter_GetIsHiddenArrow");
static_assert(sizeof(HawkeyeCharacter_GetIsHiddenArrow) == 0x000001, "Wrong size on HawkeyeCharacter_GetIsHiddenArrow");
static_assert(offsetof(HawkeyeCharacter_GetIsHiddenArrow, ReturnValue) == 0x000000, "Member 'HawkeyeCharacter_GetIsHiddenArrow::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.GetIsInBowState
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_GetIsInBowState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_GetIsInBowState) == 0x000001, "Wrong alignment on HawkeyeCharacter_GetIsInBowState");
static_assert(sizeof(HawkeyeCharacter_GetIsInBowState) == 0x000001, "Wrong size on HawkeyeCharacter_GetIsInBowState");
static_assert(offsetof(HawkeyeCharacter_GetIsInBowState, ReturnValue) == 0x000000, "Member 'HawkeyeCharacter_GetIsInBowState::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.OnArrowTypeTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct HawkeyeCharacter_OnArrowTypeTagUpdate final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExist;                                            // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HawkeyeCharacter_OnArrowTypeTagUpdate) == 0x000004, "Wrong alignment on HawkeyeCharacter_OnArrowTypeTagUpdate");
static_assert(sizeof(HawkeyeCharacter_OnArrowTypeTagUpdate) == 0x000010, "Wrong size on HawkeyeCharacter_OnArrowTypeTagUpdate");
static_assert(offsetof(HawkeyeCharacter_OnArrowTypeTagUpdate, Tag) == 0x000000, "Member 'HawkeyeCharacter_OnArrowTypeTagUpdate::Tag' has a wrong offset!");
static_assert(offsetof(HawkeyeCharacter_OnArrowTypeTagUpdate, bExist) == 0x00000C, "Member 'HawkeyeCharacter_OnArrowTypeTagUpdate::bExist' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.SetCurrentArrowType
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_SetCurrentArrowType final
{
public:
	EHawkeyeArrowType                             ArrowType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_SetCurrentArrowType) == 0x000001, "Wrong alignment on HawkeyeCharacter_SetCurrentArrowType");
static_assert(sizeof(HawkeyeCharacter_SetCurrentArrowType) == 0x000001, "Wrong size on HawkeyeCharacter_SetCurrentArrowType");
static_assert(offsetof(HawkeyeCharacter_SetCurrentArrowType, ArrowType) == 0x000000, "Member 'HawkeyeCharacter_SetCurrentArrowType::ArrowType' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.SetEnergyDamage
// 0x0004 (0x0004 - 0x0000)
struct HawkeyeCharacter_SetEnergyDamage final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_SetEnergyDamage) == 0x000004, "Wrong alignment on HawkeyeCharacter_SetEnergyDamage");
static_assert(sizeof(HawkeyeCharacter_SetEnergyDamage) == 0x000004, "Wrong size on HawkeyeCharacter_SetEnergyDamage");
static_assert(offsetof(HawkeyeCharacter_SetEnergyDamage, InValue) == 0x000000, "Member 'HawkeyeCharacter_SetEnergyDamage::InValue' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.SetEnergyStage
// 0x0004 (0x0004 - 0x0000)
struct HawkeyeCharacter_SetEnergyStage final
{
public:
	int32                                         InStageIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_SetEnergyStage) == 0x000004, "Wrong alignment on HawkeyeCharacter_SetEnergyStage");
static_assert(sizeof(HawkeyeCharacter_SetEnergyStage) == 0x000004, "Wrong size on HawkeyeCharacter_SetEnergyStage");
static_assert(offsetof(HawkeyeCharacter_SetEnergyStage, InStageIndex) == 0x000000, "Member 'HawkeyeCharacter_SetEnergyStage::InStageIndex' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.SetIsHiddenArrow
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_SetIsHiddenArrow final
{
public:
	bool                                          bHiddenArrow;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_SetIsHiddenArrow) == 0x000001, "Wrong alignment on HawkeyeCharacter_SetIsHiddenArrow");
static_assert(sizeof(HawkeyeCharacter_SetIsHiddenArrow) == 0x000001, "Wrong size on HawkeyeCharacter_SetIsHiddenArrow");
static_assert(offsetof(HawkeyeCharacter_SetIsHiddenArrow, bHiddenArrow) == 0x000000, "Member 'HawkeyeCharacter_SetIsHiddenArrow::bHiddenArrow' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.SetIsInBowState
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_SetIsInBowState final
{
public:
	bool                                          bCanInBowState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_SetIsInBowState) == 0x000001, "Wrong alignment on HawkeyeCharacter_SetIsInBowState");
static_assert(sizeof(HawkeyeCharacter_SetIsInBowState) == 0x000001, "Wrong size on HawkeyeCharacter_SetIsInBowState");
static_assert(offsetof(HawkeyeCharacter_SetIsInBowState, bCanInBowState) == 0x000000, "Member 'HawkeyeCharacter_SetIsInBowState::bCanInBowState' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.GetCurrentArrowType
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_GetCurrentArrowType final
{
public:
	EHawkeyeArrowType                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_GetCurrentArrowType) == 0x000001, "Wrong alignment on HawkeyeCharacter_GetCurrentArrowType");
static_assert(sizeof(HawkeyeCharacter_GetCurrentArrowType) == 0x000001, "Wrong size on HawkeyeCharacter_GetCurrentArrowType");
static_assert(offsetof(HawkeyeCharacter_GetCurrentArrowType, ReturnValue) == 0x000000, "Member 'HawkeyeCharacter_GetCurrentArrowType::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.GetEnergyDamage
// 0x0004 (0x0004 - 0x0000)
struct HawkeyeCharacter_GetEnergyDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_GetEnergyDamage) == 0x000004, "Wrong alignment on HawkeyeCharacter_GetEnergyDamage");
static_assert(sizeof(HawkeyeCharacter_GetEnergyDamage) == 0x000004, "Wrong size on HawkeyeCharacter_GetEnergyDamage");
static_assert(offsetof(HawkeyeCharacter_GetEnergyDamage, ReturnValue) == 0x000000, "Member 'HawkeyeCharacter_GetEnergyDamage::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.GetEnergyStage
// 0x0004 (0x0004 - 0x0000)
struct HawkeyeCharacter_GetEnergyStage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_GetEnergyStage) == 0x000004, "Wrong alignment on HawkeyeCharacter_GetEnergyStage");
static_assert(sizeof(HawkeyeCharacter_GetEnergyStage) == 0x000004, "Wrong size on HawkeyeCharacter_GetEnergyStage");
static_assert(offsetof(HawkeyeCharacter_GetEnergyStage, ReturnValue) == 0x000000, "Member 'HawkeyeCharacter_GetEnergyStage::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeCharacter.GetIsInTripleArrowState
// 0x0001 (0x0001 - 0x0000)
struct HawkeyeCharacter_GetIsInTripleArrowState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeCharacter_GetIsInTripleArrowState) == 0x000001, "Wrong alignment on HawkeyeCharacter_GetIsInTripleArrowState");
static_assert(sizeof(HawkeyeCharacter_GetIsInTripleArrowState) == 0x000001, "Wrong size on HawkeyeCharacter_GetIsInTripleArrowState");
static_assert(offsetof(HawkeyeCharacter_GetIsInTripleArrowState, ReturnValue) == 0x000000, "Member 'HawkeyeCharacter_GetIsInTripleArrowState::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeChildActor.GetOwningChar
// 0x0008 (0x0008 - 0x0000)
struct HawkeyeChildActor_GetOwningChar final
{
public:
	class AHawkeyeCharacter*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HawkeyeChildActor_GetOwningChar) == 0x000008, "Wrong alignment on HawkeyeChildActor_GetOwningChar");
static_assert(sizeof(HawkeyeChildActor_GetOwningChar) == 0x000008, "Wrong size on HawkeyeChildActor_GetOwningChar");
static_assert(offsetof(HawkeyeChildActor_GetOwningChar, ReturnValue) == 0x000000, "Member 'HawkeyeChildActor_GetOwningChar::ReturnValue' has a wrong offset!");

// Function Hero_1021.HawkeyeChildActor.HandleHiddenArrowMesh
// 0x0010 (0x0010 - 0x0000)
struct HawkeyeChildActor_HandleHiddenArrowMesh final
{
public:
	class ACharacter*                             InCharacter;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHiddenArrow;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HawkeyeChildActor_HandleHiddenArrowMesh) == 0x000008, "Wrong alignment on HawkeyeChildActor_HandleHiddenArrowMesh");
static_assert(sizeof(HawkeyeChildActor_HandleHiddenArrowMesh) == 0x000010, "Wrong size on HawkeyeChildActor_HandleHiddenArrowMesh");
static_assert(offsetof(HawkeyeChildActor_HandleHiddenArrowMesh, InCharacter) == 0x000000, "Member 'HawkeyeChildActor_HandleHiddenArrowMesh::InCharacter' has a wrong offset!");
static_assert(offsetof(HawkeyeChildActor_HandleHiddenArrowMesh, bHiddenArrow) == 0x000008, "Member 'HawkeyeChildActor_HandleHiddenArrowMesh::bHiddenArrow' has a wrong offset!");

// Function Hero_1021.HawkeyeChildActor.UpdateArrowMesh
// 0x0010 (0x0010 - 0x0000)
struct HawkeyeChildActor_UpdateArrowMesh final
{
public:
	class ACharacter*                             OutUselessChar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHawkeyeArrowType                             ArrowType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HawkeyeChildActor_UpdateArrowMesh) == 0x000008, "Wrong alignment on HawkeyeChildActor_UpdateArrowMesh");
static_assert(sizeof(HawkeyeChildActor_UpdateArrowMesh) == 0x000010, "Wrong size on HawkeyeChildActor_UpdateArrowMesh");
static_assert(offsetof(HawkeyeChildActor_UpdateArrowMesh, OutUselessChar) == 0x000000, "Member 'HawkeyeChildActor_UpdateArrowMesh::OutUselessChar' has a wrong offset!");
static_assert(offsetof(HawkeyeChildActor_UpdateArrowMesh, ArrowType) == 0x000008, "Member 'HawkeyeChildActor_UpdateArrowMesh::ArrowType' has a wrong offset!");

// Function Hero_1021.TabData_1021.OnActorPreDeath
// 0x0030 (0x0030 - 0x0000)
struct TabData_1021_OnActorPreDeath final
{
public:
	class AActor*                                 Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalEventExtraData                  ExtraData;                                         // 0x0028(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TabData_1021_OnActorPreDeath) == 0x000008, "Wrong alignment on TabData_1021_OnActorPreDeath");
static_assert(sizeof(TabData_1021_OnActorPreDeath) == 0x000030, "Wrong size on TabData_1021_OnActorPreDeath");
static_assert(offsetof(TabData_1021_OnActorPreDeath, Killer) == 0x000000, "Member 'TabData_1021_OnActorPreDeath::Killer' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnActorPreDeath, Target) == 0x000008, "Member 'TabData_1021_OnActorPreDeath::Target' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnActorPreDeath, ModifierParameterHandle) == 0x000010, "Member 'TabData_1021_OnActorPreDeath::ModifierParameterHandle' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnActorPreDeath, ExtraData) == 0x000028, "Member 'TabData_1021_OnActorPreDeath::ExtraData' has a wrong offset!");

// Function Hero_1021.TabData_1021.OnBuffAddEvent
// 0x0020 (0x0020 - 0x0000)
struct TabData_1021_OnBuffAddEvent final
{
public:
	class UAbilitySystemComponent*                Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*                Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayEffectSpecStackHandle         EffectSpecHandle;                                  // 0x0010(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle            EffectHandle;                                      // 0x0018(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TabData_1021_OnBuffAddEvent) == 0x000008, "Wrong alignment on TabData_1021_OnBuffAddEvent");
static_assert(sizeof(TabData_1021_OnBuffAddEvent) == 0x000020, "Wrong size on TabData_1021_OnBuffAddEvent");
static_assert(offsetof(TabData_1021_OnBuffAddEvent, Source) == 0x000000, "Member 'TabData_1021_OnBuffAddEvent::Source' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnBuffAddEvent, Target) == 0x000008, "Member 'TabData_1021_OnBuffAddEvent::Target' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnBuffAddEvent, EffectSpecHandle) == 0x000010, "Member 'TabData_1021_OnBuffAddEvent::EffectSpecHandle' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnBuffAddEvent, EffectHandle) == 0x000018, "Member 'TabData_1021_OnBuffAddEvent::EffectHandle' has a wrong offset!");

// Function Hero_1021.TabData_1021.OnPostApplyDamage
// 0x0028 (0x0028 - 0x0000)
struct TabData_1021_OnPostApplyDamage final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TabData_1021_OnPostApplyDamage) == 0x000008, "Wrong alignment on TabData_1021_OnPostApplyDamage");
static_assert(sizeof(TabData_1021_OnPostApplyDamage) == 0x000028, "Wrong size on TabData_1021_OnPostApplyDamage");
static_assert(offsetof(TabData_1021_OnPostApplyDamage, InSourceAvatar) == 0x000000, "Member 'TabData_1021_OnPostApplyDamage::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnPostApplyDamage, InTargetAvatar) == 0x000008, "Member 'TabData_1021_OnPostApplyDamage::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(TabData_1021_OnPostApplyDamage, ModifierParameterHandle) == 0x000010, "Member 'TabData_1021_OnPostApplyDamage::ModifierParameterHandle' has a wrong offset!");

}


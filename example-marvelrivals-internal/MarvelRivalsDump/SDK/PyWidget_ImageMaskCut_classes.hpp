#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_ImageMaskCut

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_ImageMaskCut.PyWidget_ImageMaskCut
// 0x0070 (0x0428 - 0x03B8)
class UPyWidget_ImageMaskCut : public UUserWidget
{
public:
	class UTexture2D*                             Img_mask;                                          // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Img_Picture;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Image_Size;                                        // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Image_Location;                                    // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Image_Map;                                         // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Mask_Map;                                          // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMaskLoadCompleted;                               // 0x0408(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPictureLoadCompleted;                            // 0x0418(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnMaskLoadCompleted__DelegateSignature(class UTexture2D* Mask);
	void OnPictureLoadCompleted__DelegateSignature(class UTexture2D* Picture);
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Destruct();
	void SetMaskMap(const struct FVector2D& Mask_Map_0);
	void SetImageData(const struct FVector2D& Image_Location_0, const struct FVector2D& Image_Size_0);
	void SetImgMask(class UTexture2D* Img_mask_0, TSoftObjectPtr<class UTexture2D> Img_Mask_Soft);
	void SetLoadImgMask(class UObject* Img_mask_0);
	void SetImgPicture(class UTexture2D* Img_Picture_0, TSoftObjectPtr<class UTexture2D> Img_Picture_Soft);
	void SetLoadimgPicture(class UObject* Img_Picture_0);
	void UpdateMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ImageMaskCut">();
	}
	static class UPyWidget_ImageMaskCut* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ImageMaskCut>();
	}
};
static_assert(alignof(UPyWidget_ImageMaskCut) == 0x000008, "Wrong alignment on UPyWidget_ImageMaskCut");
static_assert(sizeof(UPyWidget_ImageMaskCut) == 0x000428, "Wrong size on UPyWidget_ImageMaskCut");
static_assert(offsetof(UPyWidget_ImageMaskCut, Img_mask) == 0x0003B8, "Member 'UPyWidget_ImageMaskCut::Img_mask' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, Img_Picture) == 0x0003C0, "Member 'UPyWidget_ImageMaskCut::Img_Picture' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, Image_Size) == 0x0003C8, "Member 'UPyWidget_ImageMaskCut::Image_Size' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, Image_Location) == 0x0003D8, "Member 'UPyWidget_ImageMaskCut::Image_Location' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, Image_Map) == 0x0003E8, "Member 'UPyWidget_ImageMaskCut::Image_Map' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, Mask_Map) == 0x0003F8, "Member 'UPyWidget_ImageMaskCut::Mask_Map' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, OnMaskLoadCompleted) == 0x000408, "Member 'UPyWidget_ImageMaskCut::OnMaskLoadCompleted' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut, OnPictureLoadCompleted) == 0x000418, "Member 'UPyWidget_ImageMaskCut::OnPictureLoadCompleted' has a wrong offset!");

// PythonClass PyWidget_ImageMaskCut.PyWidget_ImageMaskCut_Gradient
// 0x0028 (0x0450 - 0x0428)
class UPyWidget_ImageMaskCut_Gradient final : public UPyWidget_ImageMaskCut
{
public:
	class UTexture2D*                             Img_Picture_2;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Image_Size_2;                                      // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Image_Location_2;                                  // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetImgPicture2(class UTexture2D* Img_Picture_2_0, TSoftObjectPtr<class UTexture2D> Img_Picture_Soft_2);
	void SetLoadimgPicture2(class UObject* Img_Picture_2_0);
	void UpdateMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ImageMaskCut_Gradient">();
	}
	static class UPyWidget_ImageMaskCut_Gradient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ImageMaskCut_Gradient>();
	}
};
static_assert(alignof(UPyWidget_ImageMaskCut_Gradient) == 0x000008, "Wrong alignment on UPyWidget_ImageMaskCut_Gradient");
static_assert(sizeof(UPyWidget_ImageMaskCut_Gradient) == 0x000450, "Wrong size on UPyWidget_ImageMaskCut_Gradient");
static_assert(offsetof(UPyWidget_ImageMaskCut_Gradient, Img_Picture_2) == 0x000428, "Member 'UPyWidget_ImageMaskCut_Gradient::Img_Picture_2' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut_Gradient, Image_Size_2) == 0x000430, "Member 'UPyWidget_ImageMaskCut_Gradient::Image_Size_2' has a wrong offset!");
static_assert(offsetof(UPyWidget_ImageMaskCut_Gradient, Image_Location_2) == 0x000440, "Member 'UPyWidget_ImageMaskCut_Gradient::Image_Location_2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_League_KnockoutSchedule_Line

#include "Basic.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_League_KnockoutSchedule_Line.PyWidget_League_KnockoutSchedule_Line_Base.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct");
static_assert(sizeof(PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct) == 0x000001, "Wrong size on PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct");
static_assert(offsetof(PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_League_KnockoutSchedule_Line_Base_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_League_KnockoutSchedule_Line.PyWidget_League_KnockoutSchedule_Line_Base.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet) == 0x000008, "Wrong alignment on PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet");
static_assert(sizeof(PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet) == 0x000008, "Wrong size on PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet");
static_assert(offsetof(PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'PyWidget_League_KnockoutSchedule_Line_Base_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// PythonFunction PyWidget_League_KnockoutSchedule_Line.PyWidget_League_KnockoutSchedule_Line_2I1O.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct");
static_assert(sizeof(PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct) == 0x000001, "Wrong size on PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct");
static_assert(offsetof(PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_League_KnockoutSchedule_Line_2I1O_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_League_KnockoutSchedule_Line.PyWidget_League_KnockoutSchedule_Line_2I1O.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet) == 0x000008, "Wrong alignment on PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet");
static_assert(sizeof(PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet) == 0x000008, "Wrong size on PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet");
static_assert(offsetof(PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'PyWidget_League_KnockoutSchedule_Line_2I1O_OnListItemObjectSet::ListItemObject' has a wrong offset!");

}


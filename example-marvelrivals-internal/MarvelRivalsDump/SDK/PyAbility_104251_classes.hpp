#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104251

#include "Basic.hpp"

#include "DeclarativeUnreal_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Hero_1042_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_104251.PyConfig_104251
// 0x0FE8 (0x1080 - 0x0098)
class UPyConfig_104251 final : public UMarvelAbilityConfig
{
public:
	int32                                         BuffIdInvincible;                                  // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScopeIdDetect;                                     // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScopeIdExplode;                                    // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SummonedID;                                        // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveDelay;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplodeDelay;                                      // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeammateBuffID;                                    // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IndicatorRadius;                                   // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BuffIdHint;                                        // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProjectileSpeed;                                   // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProjectileGravityScale;                            // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeLocation;                                  // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMarvelAbilityTraceContext             ThrowTraceContext;                                 // 0x00E0(0x0F90)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 SpawnSocketName;                                   // 0x1070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_104251">();
	}
	static class UPyConfig_104251* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_104251>();
	}
};
static_assert(alignof(UPyConfig_104251) == 0x000010, "Wrong alignment on UPyConfig_104251");
static_assert(sizeof(UPyConfig_104251) == 0x001080, "Wrong size on UPyConfig_104251");
static_assert(offsetof(UPyConfig_104251, BuffIdInvincible) == 0x000098, "Member 'UPyConfig_104251::BuffIdInvincible' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ScopeIdDetect) == 0x00009C, "Member 'UPyConfig_104251::ScopeIdDetect' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ScopeIdExplode) == 0x0000A0, "Member 'UPyConfig_104251::ScopeIdExplode' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, SummonedID) == 0x0000A4, "Member 'UPyConfig_104251::SummonedID' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ActiveDelay) == 0x0000A8, "Member 'UPyConfig_104251::ActiveDelay' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ExplodeDelay) == 0x0000AC, "Member 'UPyConfig_104251::ExplodeDelay' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, TeammateBuffID) == 0x0000B0, "Member 'UPyConfig_104251::TeammateBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, IndicatorRadius) == 0x0000B4, "Member 'UPyConfig_104251::IndicatorRadius' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, BuffIdHint) == 0x0000B8, "Member 'UPyConfig_104251::BuffIdHint' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ProjectileSpeed) == 0x0000BC, "Member 'UPyConfig_104251::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ProjectileGravityScale) == 0x0000C0, "Member 'UPyConfig_104251::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, RelativeLocation) == 0x0000C8, "Member 'UPyConfig_104251::RelativeLocation' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, ThrowTraceContext) == 0x0000E0, "Member 'UPyConfig_104251::ThrowTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_104251, SpawnSocketName) == 0x001070, "Member 'UPyConfig_104251::SpawnSocketName' has a wrong offset!");

// PythonClass PyAbility_104251.PyCueScopeStart_10425102
// 0x0008 (0x0370 - 0x0368)
class UPyCueScopeStart_10425102 final : public UMarvelCueNotify_Base
{
public:
	float                                         FxScale;                                           // 0x0368(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetFXParameter(class UNiagaraComponent* InFXComponent, const class AActor* MyTarget, const struct FGameplayCueParameters& Parameters) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCueScopeStart_10425102">();
	}
	static class UPyCueScopeStart_10425102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCueScopeStart_10425102>();
	}
};
static_assert(alignof(UPyCueScopeStart_10425102) == 0x000008, "Wrong alignment on UPyCueScopeStart_10425102");
static_assert(sizeof(UPyCueScopeStart_10425102) == 0x000370, "Wrong size on UPyCueScopeStart_10425102");
static_assert(offsetof(UPyCueScopeStart_10425102, FxScale) == 0x000368, "Member 'UPyCueScopeStart_10425102::FxScale' has a wrong offset!");

// PythonClass PyAbility_104251.PySummoned_10425101
// 0x0010 (0x08A0 - 0x0890)
class APySummoned_10425101 final : public AMarvelSummonerBase
{
public:
	class UMarvelProjectileComponent*             ProjectileMovement;                                // 0x0890(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoned_10425101">();
	}
	static class APySummoned_10425101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoned_10425101>();
	}
};
static_assert(alignof(APySummoned_10425101) == 0x000010, "Wrong alignment on APySummoned_10425101");
static_assert(sizeof(APySummoned_10425101) == 0x0008A0, "Wrong size on APySummoned_10425101");
static_assert(offsetof(APySummoned_10425101, ProjectileMovement) == 0x000890, "Member 'APySummoned_10425101::ProjectileMovement' has a wrong offset!");

// PythonClass PyAbility_104251.PySummonedComp_10425101
// 0x0060 (0x0D10 - 0x0CB0)
class UPySummonedComp_10425101 : public USummonedComp_10425101
{
public:
	int32                                         MineState;                                         // 0x0CB0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HiddenCount;                                       // 0x0CB4(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeclarationHolder                     ViewingCharacterHolder;                            // 0x0CB8(0x0010)(NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMineStateChangedDispatcher;                      // 0x0CC8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMineHiddenDispatcher;                            // 0x0CD8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMineExplodeDispatcher;                           // 0x0CE8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMineTriggerDispatcher;                           // 0x0CF8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnMineStateChangedDispatcher__DelegateSignature();
	void OnMineHiddenDispatcher__DelegateSignature();
	void OnMineExplodeDispatcher__DelegateSignature();
	void OnMineTriggerDispatcher__DelegateSignature();
	void BeginInit();
	void K2_OnBeginAgentTask();
	void MulticastLaunch(const struct FVector& StartLocation, const struct FVector& Velocity);
	void MulticastStop();
	void ClientExplode();
	void ClientShowHint();
	void OnProjectileHit(const struct FHitResult& Hit);
	void OnCheckScopeTraceResult(const TArray<struct FHitResult>& HitResults);
	void OnAttachComponentFracture(const struct FVector& Point, const struct FVector& Direction);
	void OnAttachActorDestroyed(class UGeometryCollectionComponent* Component, class FName Name_0);
	void OnChaosBroken(const struct FChaosBreakEvent& BreakEvent);
	void OnChaosReset();
	void OnChaosActorBreak();
	void OnAttachChaosBroken(const struct FChaosBreakEvent& BreakEvent);
	void OnAttachAgentEndTask(class AActor* EndTaskAgent);
	void OnAttachActorEndPlay(class AActor* EndActor, EEndPlayReason EndPlayReason);
	void OnPresetDestuctionBegin(class FName LevelName);
	void MulticastMineState(int32 State);
	void MulticastHiddenCount(int32 Count);
	void MineStateChanged();
	void K2_MineTrigger();
	void OnTriggerActorChange();
	void ChangeHiddenCount(bool Is_hidden, int32 UniqID);
	void HiddenCountChanged();
	void K2_OnSummonedDeath(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ParameterHandle);
	void K2_OnEndAgentTask();
	void K2_OnRecycleAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10425101">();
	}
	static class UPySummonedComp_10425101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10425101>();
	}
};
static_assert(alignof(UPySummonedComp_10425101) == 0x000010, "Wrong alignment on UPySummonedComp_10425101");
static_assert(sizeof(UPySummonedComp_10425101) == 0x000D10, "Wrong size on UPySummonedComp_10425101");
static_assert(offsetof(UPySummonedComp_10425101, MineState) == 0x000CB0, "Member 'UPySummonedComp_10425101::MineState' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10425101, HiddenCount) == 0x000CB4, "Member 'UPySummonedComp_10425101::HiddenCount' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10425101, ViewingCharacterHolder) == 0x000CB8, "Member 'UPySummonedComp_10425101::ViewingCharacterHolder' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10425101, OnMineStateChangedDispatcher) == 0x000CC8, "Member 'UPySummonedComp_10425101::OnMineStateChangedDispatcher' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10425101, OnMineHiddenDispatcher) == 0x000CD8, "Member 'UPySummonedComp_10425101::OnMineHiddenDispatcher' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10425101, OnMineExplodeDispatcher) == 0x000CE8, "Member 'UPySummonedComp_10425101::OnMineExplodeDispatcher' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10425101, OnMineTriggerDispatcher) == 0x000CF8, "Member 'UPySummonedComp_10425101::OnMineTriggerDispatcher' has a wrong offset!");

// PythonClass PyAbility_104251.PyPeniParkMineUMGAnimationManager
// 0x0000 (0x0030 - 0x0030)
class UPyPeniParkMineUMGAnimationManager final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyPeniParkMineUMGAnimationManager">();
	}
	static class UPyPeniParkMineUMGAnimationManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyPeniParkMineUMGAnimationManager>();
	}
};
static_assert(alignof(UPyPeniParkMineUMGAnimationManager) == 0x000008, "Wrong alignment on UPyPeniParkMineUMGAnimationManager");
static_assert(sizeof(UPyPeniParkMineUMGAnimationManager) == 0x000030, "Wrong size on UPyPeniParkMineUMGAnimationManager");

// PythonClass PyAbility_104251.PyAbility_104251
// 0x0010 (0x2598 - 0x2588)
class UPyAbility_104251 : public UAbility_108
{
public:
	FMulticastInlineDelegateProperty_             OnShowHintDispatcher;                              // 0x2588(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnShowHintDispatcher__DelegateSignature();
	void BeginPlay();
	bool CanActivate();
	void K2_ActivateAbility();
	void MissileEventNotify();
	void K2_OnEndAbility(bool bWasCancelled);
	void NativeOnMontageEvent(const class FString& Tag);
	void EndPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_104251">();
	}
	static class UPyAbility_104251* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_104251>();
	}
};
static_assert(alignof(UPyAbility_104251) == 0x000008, "Wrong alignment on UPyAbility_104251");
static_assert(sizeof(UPyAbility_104251) == 0x002598, "Wrong size on UPyAbility_104251");
static_assert(offsetof(UPyAbility_104251, OnShowHintDispatcher) == 0x002588, "Member 'UPyAbility_104251::OnShowHintDispatcher' has a wrong offset!");

// PythonClass PyAbility_104251.PyUIController_104251
// 0x0098 (0x0CF8 - 0x0C60)
class UPyUIController_104251 final : public UUIC_Ability
{
public:
	struct FCueHintData                           HintData;                                          // 0x0C60(0x0098)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_104251">();
	}
	static class UPyUIController_104251* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_104251>();
	}
};
static_assert(alignof(UPyUIController_104251) == 0x000008, "Wrong alignment on UPyUIController_104251");
static_assert(sizeof(UPyUIController_104251) == 0x000CF8, "Wrong size on UPyUIController_104251");
static_assert(offsetof(UPyUIController_104251, HintData) == 0x000C60, "Member 'UPyUIController_104251::HintData' has a wrong offset!");

// PythonClass PyAbility_104251.PyCue_ScopeLoop_10425101
// 0x0000 (0x0D70 - 0x0D70)
class APyCue_ScopeLoop_10425101 final : public AMarvelCueNotify_Scope
{
public:
	void OnMineHidden();
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_ScopeLoop_10425101">();
	}
	static class APyCue_ScopeLoop_10425101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_ScopeLoop_10425101>();
	}
};
static_assert(alignof(APyCue_ScopeLoop_10425101) == 0x000008, "Wrong alignment on APyCue_ScopeLoop_10425101");
static_assert(sizeof(APyCue_ScopeLoop_10425101) == 0x000D70, "Wrong size on APyCue_ScopeLoop_10425101");

// PythonClass PyAbility_104251.PySummonerLoop_10425101_Cue
// 0x0030 (0x0EC0 - 0x0E90)
class APySummonerLoop_10425101_Cue final : public AMarvelCueNotify_Summoned
{
public:
	class USkeletalMeshComponent*                 MineMesh;                                          // 0x0E90(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMineMesh;                                    // 0x0E98(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon_Skill_Bg;                                     // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon_Skill_Add;                                    // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBeginLoopAnimDispatcher;                         // 0x0EB0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnBeginLoopAnimDispatcher__DelegateSignature();
	void ReceiveBeginPlay();
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnMineStateChanged();
	void OnMineHidden();
	void OnShowTriggerIndicator();
	void OnShowExplodeIndicator();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonerLoop_10425101_Cue">();
	}
	static class APySummonerLoop_10425101_Cue* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummonerLoop_10425101_Cue>();
	}
};
static_assert(alignof(APySummonerLoop_10425101_Cue) == 0x000008, "Wrong alignment on APySummonerLoop_10425101_Cue");
static_assert(sizeof(APySummonerLoop_10425101_Cue) == 0x000EC0, "Wrong size on APySummonerLoop_10425101_Cue");
static_assert(offsetof(APySummonerLoop_10425101_Cue, MineMesh) == 0x000E90, "Member 'APySummonerLoop_10425101_Cue::MineMesh' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10425101_Cue, StaticMineMesh) == 0x000E98, "Member 'APySummonerLoop_10425101_Cue::StaticMineMesh' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10425101_Cue, Icon_Skill_Bg) == 0x000EA0, "Member 'APySummonerLoop_10425101_Cue::Icon_Skill_Bg' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10425101_Cue, Icon_Skill_Add) == 0x000EA8, "Member 'APySummonerLoop_10425101_Cue::Icon_Skill_Add' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10425101_Cue, OnBeginLoopAnimDispatcher) == 0x000EB0, "Member 'APySummonerLoop_10425101_Cue::OnBeginLoopAnimDispatcher' has a wrong offset!");

// PythonClass PyAbility_104251.PyAbilityCue_10425101
// 0x0008 (0x0E58 - 0x0E50)
class APyAbilityCue_10425101 final : public AMarvelCueNotify_Ability
{
public:
	class UAnimationAsset*                        ShootAnimation;                                    // 0x0E50(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbilityCue_10425101">();
	}
	static class APyAbilityCue_10425101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyAbilityCue_10425101>();
	}
};
static_assert(alignof(APyAbilityCue_10425101) == 0x000008, "Wrong alignment on APyAbilityCue_10425101");
static_assert(sizeof(APyAbilityCue_10425101) == 0x000E58, "Wrong size on APyAbilityCue_10425101");
static_assert(offsetof(APyAbilityCue_10425101, ShootAnimation) == 0x000E50, "Member 'APyAbilityCue_10425101::ShootAnimation' has a wrong offset!");

// PythonClass PyAbility_104251.PyWidget_104251_EnemyWarning
// 0x0000 (0x08A0 - 0x08A0)
class UPyWidget_104251_EnemyWarning final : public UMarvel3DWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_104251_EnemyWarning">();
	}
	static class UPyWidget_104251_EnemyWarning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_104251_EnemyWarning>();
	}
};
static_assert(alignof(UPyWidget_104251_EnemyWarning) == 0x000010, "Wrong alignment on UPyWidget_104251_EnemyWarning");
static_assert(sizeof(UPyWidget_104251_EnemyWarning) == 0x0008A0, "Wrong size on UPyWidget_104251_EnemyWarning");

}


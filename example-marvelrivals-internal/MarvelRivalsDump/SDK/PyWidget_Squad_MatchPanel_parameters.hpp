#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_Squad_MatchPanel

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchPanel.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_MatchPanel_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchPanel_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_Squad_MatchPanel_MarvelSetVisible");
static_assert(sizeof(PyWidget_Squad_MatchPanel_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_Squad_MatchPanel_MarvelSetVisible");
static_assert(offsetof(PyWidget_Squad_MatchPanel_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_Squad_MatchPanel_MarvelSetVisible::Visible' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchPanel.OnReceiveInputKey
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_Squad_MatchPanel_OnReceiveInputKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	EInputEvent                                   EventType;                                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchPanel_OnReceiveInputKey) == 0x000008, "Wrong alignment on PyWidget_Squad_MatchPanel_OnReceiveInputKey");
static_assert(sizeof(PyWidget_Squad_MatchPanel_OnReceiveInputKey) == 0x000028, "Wrong size on PyWidget_Squad_MatchPanel_OnReceiveInputKey");
static_assert(offsetof(PyWidget_Squad_MatchPanel_OnReceiveInputKey, InKey) == 0x000000, "Member 'PyWidget_Squad_MatchPanel_OnReceiveInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PyWidget_Squad_MatchPanel_OnReceiveInputKey, EventType) == 0x000020, "Member 'PyWidget_Squad_MatchPanel_OnReceiveInputKey::EventType' has a wrong offset!");

// DelegateFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_RecommendAIDifficulty.AIDiffChange__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature final
{
public:
	int32                                         Ai_diff;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature) == 0x000004, "Wrong alignment on PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature");
static_assert(sizeof(PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature) == 0x000004, "Wrong size on PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature");
static_assert(offsetof(PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature, Ai_diff) == 0x000000, "Member 'PyWidget_Squad_RecommendAIDifficulty_AIDiffChange__DelegateSignature::Ai_diff' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo_Card.MarvelSetVisibleImmediately
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately final
{
public:
	bool                                          bTmpVisible;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately) == 0x000001, "Wrong alignment on PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately");
static_assert(sizeof(PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately) == 0x000001, "Wrong size on PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately");
static_assert(offsetof(PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately, bTmpVisible) == 0x000000, "Member 'PyWidget_Squad_MatchInfo_Card_MarvelSetVisibleImmediately::bTmpVisible' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo_Card.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_MatchInfo_Card_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchInfo_Card_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_Squad_MatchInfo_Card_MarvelSetVisible");
static_assert(sizeof(PyWidget_Squad_MatchInfo_Card_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_Squad_MatchInfo_Card_MarvelSetVisible");
static_assert(offsetof(PyWidget_Squad_MatchInfo_Card_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_Squad_MatchInfo_Card_MarvelSetVisible::Visible' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo_Card.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Squad_MatchInfo_Card_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchInfo_Card_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_Squad_MatchInfo_Card_OnAnimationFinished");
static_assert(sizeof(PyWidget_Squad_MatchInfo_Card_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_Squad_MatchInfo_Card_OnAnimationFinished");
static_assert(offsetof(PyWidget_Squad_MatchInfo_Card_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_Squad_MatchInfo_Card_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_ModeSelectionBtn.OnReceiveInputKey
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	EInputEvent                                   EventType;                                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey) == 0x000008, "Wrong alignment on PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey");
static_assert(sizeof(PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey) == 0x000028, "Wrong size on PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey");
static_assert(offsetof(PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey, InKey) == 0x000000, "Member 'PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey::InKey' has a wrong offset!");
static_assert(offsetof(PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey, EventType) == 0x000020, "Member 'PyWidget_Squad_ModeSelectionBtn_OnReceiveInputKey::EventType' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_ModeSelectionBtn.OnSoftTextureLoad
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad final
{
public:
	class UObject*                                Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad) == 0x000008, "Wrong alignment on PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad");
static_assert(sizeof(PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad) == 0x000008, "Wrong size on PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad");
static_assert(offsetof(PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad, Texture) == 0x000000, "Member 'PyWidget_Squad_ModeSelectionBtn_OnSoftTextureLoad::Texture' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo.MarvelSetVisibleImmediately
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately final
{
public:
	bool                                          bTmpVisible;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately) == 0x000001, "Wrong alignment on PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately");
static_assert(sizeof(PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately) == 0x000001, "Wrong size on PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately");
static_assert(offsetof(PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately, bTmpVisible) == 0x000000, "Member 'PyWidget_Squad_MatchInfo_MarvelSetVisibleImmediately::bTmpVisible' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_MatchInfo_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchInfo_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_Squad_MatchInfo_MarvelSetVisible");
static_assert(sizeof(PyWidget_Squad_MatchInfo_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_Squad_MatchInfo_MarvelSetVisible");
static_assert(offsetof(PyWidget_Squad_MatchInfo_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_Squad_MatchInfo_MarvelSetVisible::Visible' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Squad_MatchInfo_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_MatchInfo_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_Squad_MatchInfo_OnAnimationFinished");
static_assert(sizeof(PyWidget_Squad_MatchInfo_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_Squad_MatchInfo_OnAnimationFinished");
static_assert(offsetof(PyWidget_Squad_MatchInfo_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_Squad_MatchInfo_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_ConsoleCheckBox.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_ConsoleCheckBox_SetIsHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ConsoleCheckBox_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_ConsoleCheckBox_SetIsHover");
static_assert(sizeof(PyWidget_ConsoleCheckBox_SetIsHover) == 0x000001, "Wrong size on PyWidget_ConsoleCheckBox_SetIsHover");
static_assert(offsetof(PyWidget_ConsoleCheckBox_SetIsHover, IsHover_0) == 0x000000, "Member 'PyWidget_ConsoleCheckBox_SetIsHover::IsHover_0' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_ConsoleCheckBox.SetBtnIsPressed
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_ConsoleCheckBox_SetBtnIsPressed final
{
public:
	bool                                          IsBtnPressed_0;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ConsoleCheckBox_SetBtnIsPressed) == 0x000001, "Wrong alignment on PyWidget_ConsoleCheckBox_SetBtnIsPressed");
static_assert(sizeof(PyWidget_ConsoleCheckBox_SetBtnIsPressed) == 0x000001, "Wrong size on PyWidget_ConsoleCheckBox_SetBtnIsPressed");
static_assert(offsetof(PyWidget_ConsoleCheckBox_SetBtnIsPressed, IsBtnPressed_0) == 0x000000, "Member 'PyWidget_ConsoleCheckBox_SetBtnIsPressed::IsBtnPressed_0' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_League_Team.MarvelSetVisibleImmediately
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_League_Team_MarvelSetVisibleImmediately final
{
public:
	bool                                          bTmpVisible;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_League_Team_MarvelSetVisibleImmediately) == 0x000001, "Wrong alignment on PyWidget_Squad_League_Team_MarvelSetVisibleImmediately");
static_assert(sizeof(PyWidget_Squad_League_Team_MarvelSetVisibleImmediately) == 0x000001, "Wrong size on PyWidget_Squad_League_Team_MarvelSetVisibleImmediately");
static_assert(offsetof(PyWidget_Squad_League_Team_MarvelSetVisibleImmediately, bTmpVisible) == 0x000000, "Member 'PyWidget_Squad_League_Team_MarvelSetVisibleImmediately::bTmpVisible' has a wrong offset!");

// PythonFunction PyWidget_Squad_MatchPanel.PyWidget_Squad_League_Team.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Squad_League_Team_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Squad_League_Team_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_Squad_League_Team_MarvelSetVisible");
static_assert(sizeof(PyWidget_Squad_League_Team_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_Squad_League_Team_MarvelSetVisible");
static_assert(offsetof(PyWidget_Squad_League_Team_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_Squad_League_Team_MarvelSetVisible::Visible' has a wrong offset!");

}


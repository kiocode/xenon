#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieRenderPipelineCore

#include "Basic.hpp"

#include "MovieRenderPipelineCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetEffectiveFrameRate
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphBlueprintLibrary_GetEffectiveFrameRate final
{
public:
	class UMovieGraphOutputSettingNode*           InNode;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             InDefaultRate;                                     // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetEffectiveFrameRate");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate) == 0x000018, "Wrong size on MovieGraphBlueprintLibrary_GetEffectiveFrameRate");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate, InNode) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetEffectiveFrameRate::InNode' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate, InDefaultRate) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetEffectiveFrameRate::InDefaultRate' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveFrameRate, ReturnValue) == 0x000010, "Member 'MovieGraphBlueprintLibrary_GetEffectiveFrameRate::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.GetEffectiveOutputResolution
// 0x0020 (0x0020 - 0x0000)
struct MovieGraphBlueprintLibrary_GetEffectiveOutputResolution final
{
public:
	class UMovieGraphEvaluatedConfig*             InEvaluatedGraph;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InBranchName;                                      // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              ReturnValue;                                       // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(sizeof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution) == 0x000020, "Wrong size on MovieGraphBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution, InEvaluatedGraph) == 0x000000, "Member 'MovieGraphBlueprintLibrary_GetEffectiveOutputResolution::InEvaluatedGraph' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution, InBranchName) == 0x000008, "Member 'MovieGraphBlueprintLibrary_GetEffectiveOutputResolution::InBranchName' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_GetEffectiveOutputResolution, ReturnValue) == 0x000014, "Member 'MovieGraphBlueprintLibrary_GetEffectiveOutputResolution::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBlueprintLibrary.ResolveFilenameFormatArguments
// 0x01F0 (0x01F0 - 0x0000)
struct MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments final
{
public:
	class FString                                 InFormatString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieGraphFilenameResolveParams       InParams;                                          // 0x0010(0x0130)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FMovieGraphResolveArgs                 OutMergedFormatArgs;                               // 0x0140(0x00A0)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x01E0(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments) == 0x000008, "Wrong alignment on MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(sizeof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments) == 0x0001F0, "Wrong size on MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, InFormatString) == 0x000000, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::InFormatString' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, InParams) == 0x000010, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::InParams' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, OutMergedFormatArgs) == 0x000140, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::OutMergedFormatArgs' has a wrong offset!");
static_assert(offsetof(MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments, ReturnValue) == 0x0001E0, "Member 'MovieGraphBlueprintLibrary_ResolveFilenameFormatArguments::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphBurnInWidget.UpdateForGraph
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphBurnInWidget_UpdateForGraph final
{
public:
	class UMovieGraphPipeline*                    InGraphPipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphBurnInWidget_UpdateForGraph) == 0x000008, "Wrong alignment on MovieGraphBurnInWidget_UpdateForGraph");
static_assert(sizeof(MovieGraphBurnInWidget_UpdateForGraph) == 0x000008, "Wrong size on MovieGraphBurnInWidget_UpdateForGraph");
static_assert(offsetof(MovieGraphBurnInWidget_UpdateForGraph, InGraphPipeline) == 0x000000, "Member 'MovieGraphBurnInWidget_UpdateForGraph::InGraphPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueSerializedString
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueSerializedString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueSerializedString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueSerializedString");
static_assert(sizeof(MovieGraphValueContainer_GetValueSerializedString) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueSerializedString");
static_assert(offsetof(MovieGraphValueContainer_GetValueSerializedString, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueBool
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_SetValueBool final
{
public:
	bool                                          bInValue;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueBool) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueBool");
static_assert(sizeof(MovieGraphValueContainer_SetValueBool) == 0x000002, "Wrong size on MovieGraphValueContainer_SetValueBool");
static_assert(offsetof(MovieGraphValueContainer_SetValueBool, bInValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueBool::bInValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueBool, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_SetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueByte
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_SetValueByte final
{
public:
	uint8                                         InValue;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueByte) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueByte");
static_assert(sizeof(MovieGraphValueContainer_SetValueByte) == 0x000002, "Wrong size on MovieGraphValueContainer_SetValueByte");
static_assert(offsetof(MovieGraphValueContainer_SetValueByte, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueByte::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueByte, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_SetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueClass
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueClass final
{
public:
	class UClass*                                 InValue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueClass) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueClass");
static_assert(sizeof(MovieGraphValueContainer_SetValueClass) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueClass");
static_assert(offsetof(MovieGraphValueContainer_SetValueClass, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueClass::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueClass, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueContainerType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_SetValueContainerType final
{
public:
	EMovieGraphContainerType                      ContainerType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueContainerType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueContainerType");
static_assert(sizeof(MovieGraphValueContainer_SetValueContainerType) == 0x000001, "Wrong size on MovieGraphValueContainer_SetValueContainerType");
static_assert(offsetof(MovieGraphValueContainer_SetValueContainerType, ContainerType) == 0x000000, "Member 'MovieGraphValueContainer_SetValueContainerType::ContainerType' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueDouble
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueDouble final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueDouble) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueDouble");
static_assert(sizeof(MovieGraphValueContainer_SetValueDouble) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueDouble");
static_assert(offsetof(MovieGraphValueContainer_SetValueDouble, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueDouble::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueDouble, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueEnum
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueEnum final
{
public:
	uint8                                         InValue;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            Enum;                                              // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueEnum) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueEnum");
static_assert(sizeof(MovieGraphValueContainer_SetValueEnum) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueEnum");
static_assert(offsetof(MovieGraphValueContainer_SetValueEnum, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueEnum::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueEnum, Enum) == 0x000008, "Member 'MovieGraphValueContainer_SetValueEnum::Enum' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueEnum, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueFloat
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_SetValueFloat final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueFloat) == 0x000004, "Wrong alignment on MovieGraphValueContainer_SetValueFloat");
static_assert(sizeof(MovieGraphValueContainer_SetValueFloat) == 0x000008, "Wrong size on MovieGraphValueContainer_SetValueFloat");
static_assert(offsetof(MovieGraphValueContainer_SetValueFloat, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueFloat::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueFloat, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_SetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueInt32
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_SetValueInt32 final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueInt32) == 0x000004, "Wrong alignment on MovieGraphValueContainer_SetValueInt32");
static_assert(sizeof(MovieGraphValueContainer_SetValueInt32) == 0x000008, "Wrong size on MovieGraphValueContainer_SetValueInt32");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt32, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueInt32::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt32, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_SetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueInt64
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueInt64 final
{
public:
	int64                                         InValue;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueInt64) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueInt64");
static_assert(sizeof(MovieGraphValueContainer_SetValueInt64) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueInt64");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt64, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueInt64::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueInt64, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueName
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueName final
{
public:
	class FName                                   InValue;                                           // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueName) == 0x000004, "Wrong alignment on MovieGraphValueContainer_SetValueName");
static_assert(sizeof(MovieGraphValueContainer_SetValueName) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueName");
static_assert(offsetof(MovieGraphValueContainer_SetValueName, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueName::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueName, ReturnValue) == 0x00000C, "Member 'MovieGraphValueContainer_SetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueObject
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_SetValueObject final
{
public:
	class UObject*                                InValue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueObject");
static_assert(sizeof(MovieGraphValueContainer_SetValueObject) == 0x000010, "Wrong size on MovieGraphValueContainer_SetValueObject");
static_assert(offsetof(MovieGraphValueContainer_SetValueObject, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueObject::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueObject, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_SetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueSerializedString
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueSerializedString final
{
public:
	class FString                                 NewValue;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueSerializedString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueSerializedString");
static_assert(sizeof(MovieGraphValueContainer_SetValueSerializedString) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueSerializedString");
static_assert(offsetof(MovieGraphValueContainer_SetValueSerializedString, NewValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueSerializedString::NewValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueSerializedString, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueString
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_SetValueString final
{
public:
	class FString                                 InValue;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueString");
static_assert(sizeof(MovieGraphValueContainer_SetValueString) == 0x000018, "Wrong size on MovieGraphValueContainer_SetValueString");
static_assert(offsetof(MovieGraphValueContainer_SetValueString, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueString::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueString, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_SetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueText
// 0x0020 (0x0020 - 0x0000)
struct MovieGraphValueContainer_SetValueText final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_SetValueText) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueText");
static_assert(sizeof(MovieGraphValueContainer_SetValueText) == 0x000020, "Wrong size on MovieGraphValueContainer_SetValueText");
static_assert(offsetof(MovieGraphValueContainer_SetValueText, InValue) == 0x000000, "Member 'MovieGraphValueContainer_SetValueText::InValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_SetValueText, ReturnValue) == 0x000018, "Member 'MovieGraphValueContainer_SetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_SetValueType final
{
public:
	EMovieGraphValueType                          ValueType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_SetValueType");
static_assert(sizeof(MovieGraphValueContainer_SetValueType) == 0x000001, "Wrong size on MovieGraphValueContainer_SetValueType");
static_assert(offsetof(MovieGraphValueContainer_SetValueType, ValueType) == 0x000000, "Member 'MovieGraphValueContainer_SetValueType::ValueType' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.SetValueTypeObject
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_SetValueTypeObject final
{
public:
	const class UObject*                          ValueTypeObject;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_SetValueTypeObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_SetValueTypeObject");
static_assert(sizeof(MovieGraphValueContainer_SetValueTypeObject) == 0x000008, "Wrong size on MovieGraphValueContainer_SetValueTypeObject");
static_assert(offsetof(MovieGraphValueContainer_SetValueTypeObject, ValueTypeObject) == 0x000000, "Member 'MovieGraphValueContainer_SetValueTypeObject::ValueTypeObject' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueBool
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_GetValueBool final
{
public:
	bool                                          bOutValue;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueBool) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueBool");
static_assert(sizeof(MovieGraphValueContainer_GetValueBool) == 0x000002, "Wrong size on MovieGraphValueContainer_GetValueBool");
static_assert(offsetof(MovieGraphValueContainer_GetValueBool, bOutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueBool::bOutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueBool, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_GetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueByte
// 0x0002 (0x0002 - 0x0000)
struct MovieGraphValueContainer_GetValueByte final
{
public:
	uint8                                         OutValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueByte) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueByte");
static_assert(sizeof(MovieGraphValueContainer_GetValueByte) == 0x000002, "Wrong size on MovieGraphValueContainer_GetValueByte");
static_assert(offsetof(MovieGraphValueContainer_GetValueByte, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueByte::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueByte, ReturnValue) == 0x000001, "Member 'MovieGraphValueContainer_GetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueClass
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueClass final
{
public:
	class UClass*                                 OutValue;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueClass) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueClass");
static_assert(sizeof(MovieGraphValueContainer_GetValueClass) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueClass");
static_assert(offsetof(MovieGraphValueContainer_GetValueClass, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueClass::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueClass, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueContainerType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_GetValueContainerType final
{
public:
	EMovieGraphContainerType                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueContainerType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueContainerType");
static_assert(sizeof(MovieGraphValueContainer_GetValueContainerType) == 0x000001, "Wrong size on MovieGraphValueContainer_GetValueContainerType");
static_assert(offsetof(MovieGraphValueContainer_GetValueContainerType, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueContainerType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueDouble
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueDouble final
{
public:
	double                                        OutValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueDouble) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueDouble");
static_assert(sizeof(MovieGraphValueContainer_GetValueDouble) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueDouble");
static_assert(offsetof(MovieGraphValueContainer_GetValueDouble, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueDouble::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueDouble, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueEnum
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueEnum final
{
public:
	uint8                                         OutValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            RequestedEnum;                                     // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueEnum) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueEnum");
static_assert(sizeof(MovieGraphValueContainer_GetValueEnum) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueEnum");
static_assert(offsetof(MovieGraphValueContainer_GetValueEnum, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueEnum::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueEnum, RequestedEnum) == 0x000008, "Member 'MovieGraphValueContainer_GetValueEnum::RequestedEnum' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueEnum, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueFloat
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_GetValueFloat final
{
public:
	float                                         OutValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueFloat) == 0x000004, "Wrong alignment on MovieGraphValueContainer_GetValueFloat");
static_assert(sizeof(MovieGraphValueContainer_GetValueFloat) == 0x000008, "Wrong size on MovieGraphValueContainer_GetValueFloat");
static_assert(offsetof(MovieGraphValueContainer_GetValueFloat, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueFloat::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueFloat, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_GetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueInt32
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_GetValueInt32 final
{
public:
	int32                                         OutValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueInt32) == 0x000004, "Wrong alignment on MovieGraphValueContainer_GetValueInt32");
static_assert(sizeof(MovieGraphValueContainer_GetValueInt32) == 0x000008, "Wrong size on MovieGraphValueContainer_GetValueInt32");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt32, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueInt32::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt32, ReturnValue) == 0x000004, "Member 'MovieGraphValueContainer_GetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueInt64
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueInt64 final
{
public:
	int64                                         OutValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueInt64) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueInt64");
static_assert(sizeof(MovieGraphValueContainer_GetValueInt64) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueInt64");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt64, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueInt64::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueInt64, ReturnValue) == 0x000008, "Member 'MovieGraphValueContainer_GetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueName
// 0x0010 (0x0010 - 0x0000)
struct MovieGraphValueContainer_GetValueName final
{
public:
	class FName                                   OutValue;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueName) == 0x000004, "Wrong alignment on MovieGraphValueContainer_GetValueName");
static_assert(sizeof(MovieGraphValueContainer_GetValueName) == 0x000010, "Wrong size on MovieGraphValueContainer_GetValueName");
static_assert(offsetof(MovieGraphValueContainer_GetValueName, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueName::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueName, ReturnValue) == 0x00000C, "Member 'MovieGraphValueContainer_GetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueObject
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueObject final
{
public:
	class UObject*                                OutValue;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UClass*                           RequestedClass;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueObject");
static_assert(sizeof(MovieGraphValueContainer_GetValueObject) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueObject");
static_assert(offsetof(MovieGraphValueContainer_GetValueObject, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueObject::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueObject, RequestedClass) == 0x000008, "Member 'MovieGraphValueContainer_GetValueObject::RequestedClass' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueObject, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueString
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphValueContainer_GetValueString final
{
public:
	class FString                                 OutValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueString) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueString");
static_assert(sizeof(MovieGraphValueContainer_GetValueString) == 0x000018, "Wrong size on MovieGraphValueContainer_GetValueString");
static_assert(offsetof(MovieGraphValueContainer_GetValueString, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueString::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueString, ReturnValue) == 0x000010, "Member 'MovieGraphValueContainer_GetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueText
// 0x0020 (0x0020 - 0x0000)
struct MovieGraphValueContainer_GetValueText final
{
public:
	class FText                                   OutValue;                                          // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieGraphValueContainer_GetValueText) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueText");
static_assert(sizeof(MovieGraphValueContainer_GetValueText) == 0x000020, "Wrong size on MovieGraphValueContainer_GetValueText");
static_assert(offsetof(MovieGraphValueContainer_GetValueText, OutValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueText::OutValue' has a wrong offset!");
static_assert(offsetof(MovieGraphValueContainer_GetValueText, ReturnValue) == 0x000018, "Member 'MovieGraphValueContainer_GetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueType
// 0x0001 (0x0001 - 0x0000)
struct MovieGraphValueContainer_GetValueType final
{
public:
	EMovieGraphValueType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueType) == 0x000001, "Wrong alignment on MovieGraphValueContainer_GetValueType");
static_assert(sizeof(MovieGraphValueContainer_GetValueType) == 0x000001, "Wrong size on MovieGraphValueContainer_GetValueType");
static_assert(offsetof(MovieGraphValueContainer_GetValueType, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphValueContainer.GetValueTypeObject
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphValueContainer_GetValueTypeObject final
{
public:
	const class UObject*                          ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphValueContainer_GetValueTypeObject) == 0x000008, "Wrong alignment on MovieGraphValueContainer_GetValueTypeObject");
static_assert(sizeof(MovieGraphValueContainer_GetValueTypeObject) == 0x000008, "Wrong size on MovieGraphValueContainer_GetValueTypeObject");
static_assert(offsetof(MovieGraphValueContainer_GetValueTypeObject, ReturnValue) == 0x000000, "Member 'MovieGraphValueContainer_GetValueTypeObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.AddVariable
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConfig_AddVariable final
{
public:
	class FName                                   InCustomBaseName;                                  // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieGraphVariable*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_AddVariable) == 0x000008, "Wrong alignment on MovieGraphConfig_AddVariable");
static_assert(sizeof(MovieGraphConfig_AddVariable) == 0x000018, "Wrong size on MovieGraphConfig_AddVariable");
static_assert(offsetof(MovieGraphConfig_AddVariable, InCustomBaseName) == 0x000000, "Member 'MovieGraphConfig_AddVariable::InCustomBaseName' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_AddVariable, ReturnValue) == 0x000010, "Member 'MovieGraphConfig_AddVariable::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.CreateFlattenedGraph
// 0x0090 (0x0090 - 0x0000)
struct MovieGraphConfig_CreateFlattenedGraph final
{
public:
	struct FMovieGraphTraversalContext            InContext;                                         // 0x0000(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UMovieGraphEvaluatedConfig*             ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_CreateFlattenedGraph) == 0x000008, "Wrong alignment on MovieGraphConfig_CreateFlattenedGraph");
static_assert(sizeof(MovieGraphConfig_CreateFlattenedGraph) == 0x000090, "Wrong size on MovieGraphConfig_CreateFlattenedGraph");
static_assert(offsetof(MovieGraphConfig_CreateFlattenedGraph, InContext) == 0x000000, "Member 'MovieGraphConfig_CreateFlattenedGraph::InContext' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_CreateFlattenedGraph, ReturnValue) == 0x000088, "Member 'MovieGraphConfig_CreateFlattenedGraph::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphConfig.GetVariables
// 0x0018 (0x0018 - 0x0000)
struct MovieGraphConfig_GetVariables final
{
public:
	bool                                          bIncludeGlobal;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieGraphVariable*>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphConfig_GetVariables) == 0x000008, "Wrong alignment on MovieGraphConfig_GetVariables");
static_assert(sizeof(MovieGraphConfig_GetVariables) == 0x000018, "Wrong size on MovieGraphConfig_GetVariables");
static_assert(offsetof(MovieGraphConfig_GetVariables, bIncludeGlobal) == 0x000000, "Member 'MovieGraphConfig_GetVariables::bIncludeGlobal' has a wrong offset!");
static_assert(offsetof(MovieGraphConfig_GetVariables, ReturnValue) == 0x000008, "Member 'MovieGraphConfig_GetVariables::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.RequestShutdown
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_RequestShutdown final
{
public:
	bool                                          bIsError;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_RequestShutdown) == 0x000001, "Wrong alignment on MoviePipelineBase_RequestShutdown");
static_assert(sizeof(MoviePipelineBase_RequestShutdown) == 0x000001, "Wrong size on MoviePipelineBase_RequestShutdown");
static_assert(offsetof(MoviePipelineBase_RequestShutdown, bIsError) == 0x000000, "Member 'MoviePipelineBase_RequestShutdown::bIsError' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.Shutdown
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_Shutdown final
{
public:
	bool                                          bIsError;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_Shutdown) == 0x000001, "Wrong alignment on MoviePipelineBase_Shutdown");
static_assert(sizeof(MoviePipelineBase_Shutdown) == 0x000001, "Wrong size on MoviePipelineBase_Shutdown");
static_assert(offsetof(MoviePipelineBase_Shutdown, bIsError) == 0x000000, "Member 'MoviePipelineBase_Shutdown::bIsError' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.GetPipelineState
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_GetPipelineState final
{
public:
	EMovieRenderPipelineState                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_GetPipelineState) == 0x000001, "Wrong alignment on MoviePipelineBase_GetPipelineState");
static_assert(sizeof(MoviePipelineBase_GetPipelineState) == 0x000001, "Wrong size on MoviePipelineBase_GetPipelineState");
static_assert(offsetof(MoviePipelineBase_GetPipelineState, ReturnValue) == 0x000000, "Member 'MoviePipelineBase_GetPipelineState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBase.IsShutdownRequested
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineBase_IsShutdownRequested final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBase_IsShutdownRequested) == 0x000001, "Wrong alignment on MoviePipelineBase_IsShutdownRequested");
static_assert(sizeof(MoviePipelineBase_IsShutdownRequested) == 0x000001, "Wrong size on MoviePipelineBase_IsShutdownRequested");
static_assert(offsetof(MoviePipelineBase_IsShutdownRequested, ReturnValue) == 0x000000, "Member 'MoviePipelineBase_IsShutdownRequested::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.Initialize
// 0x0028 (0x0028 - 0x0000)
struct MovieGraphPipeline_Initialize final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieGraphInitConfig                  InitConfig;                                        // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_Initialize) == 0x000008, "Wrong alignment on MovieGraphPipeline_Initialize");
static_assert(sizeof(MovieGraphPipeline_Initialize) == 0x000028, "Wrong size on MovieGraphPipeline_Initialize");
static_assert(offsetof(MovieGraphPipeline_Initialize, InJob) == 0x000000, "Member 'MovieGraphPipeline_Initialize::InJob' has a wrong offset!");
static_assert(offsetof(MovieGraphPipeline_Initialize, InitConfig) == 0x000008, "Member 'MovieGraphPipeline_Initialize::InitConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.SetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_SetInitializationTime final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_SetInitializationTime) == 0x000008, "Wrong alignment on MovieGraphPipeline_SetInitializationTime");
static_assert(sizeof(MovieGraphPipeline_SetInitializationTime) == 0x000008, "Wrong size on MovieGraphPipeline_SetInitializationTime");
static_assert(offsetof(MovieGraphPipeline_SetInitializationTime, InDateTime) == 0x000000, "Member 'MovieGraphPipeline_SetInitializationTime::InDateTime' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetCurrentJob
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetCurrentJob final
{
public:
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetCurrentJob) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetCurrentJob");
static_assert(sizeof(MovieGraphPipeline_GetCurrentJob) == 0x000008, "Wrong size on MovieGraphPipeline_GetCurrentJob");
static_assert(offsetof(MovieGraphPipeline_GetCurrentJob, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetCurrentJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphPipeline.GetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphPipeline_GetInitializationTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphPipeline_GetInitializationTime) == 0x000008, "Wrong alignment on MovieGraphPipeline_GetInitializationTime");
static_assert(sizeof(MovieGraphPipeline_GetInitializationTime) == 0x000008, "Wrong size on MovieGraphPipeline_GetInitializationTime");
static_assert(offsetof(MovieGraphPipeline_GetInitializationTime, ReturnValue) == 0x000000, "Member 'MovieGraphPipeline_GetInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphSubgraphNode.SetSubGraphAsset
// 0x0030 (0x0030 - 0x0000)
struct MovieGraphSubgraphNode_SetSubGraphAsset final
{
public:
	TSoftObjectPtr<class UMovieGraphConfig>       InSubgraphAsset;                                   // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphSubgraphNode_SetSubGraphAsset) == 0x000008, "Wrong alignment on MovieGraphSubgraphNode_SetSubGraphAsset");
static_assert(sizeof(MovieGraphSubgraphNode_SetSubGraphAsset) == 0x000030, "Wrong size on MovieGraphSubgraphNode_SetSubGraphAsset");
static_assert(offsetof(MovieGraphSubgraphNode_SetSubGraphAsset, InSubgraphAsset) == 0x000000, "Member 'MovieGraphSubgraphNode_SetSubGraphAsset::InSubgraphAsset' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieGraphSubgraphNode.GetSubgraphAsset
// 0x0008 (0x0008 - 0x0000)
struct MovieGraphSubgraphNode_GetSubgraphAsset final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieGraphSubgraphNode_GetSubgraphAsset) == 0x000008, "Wrong alignment on MovieGraphSubgraphNode_GetSubgraphAsset");
static_assert(sizeof(MovieGraphSubgraphNode_GetSubgraphAsset) == 0x000008, "Wrong size on MovieGraphSubgraphNode_GetSubgraphAsset");
static_assert(offsetof(MovieGraphSubgraphNode_GetSubgraphAsset, ReturnValue) == 0x000000, "Member 'MovieGraphSubgraphNode_GetSubgraphAsset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueSerializedString
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueSerializedString final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueSerializedString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueSerializedString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueSerializedString) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueSerializedString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueSerializedString, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueSerializedString::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueSerializedString, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetVariableAssignmentEnableState
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutIsEnabled;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState, bOutIsEnabled) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState::bOutIsEnabled' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_GetVariableAssignmentEnableState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetGraphConfig
// 0x0030 (0x0030 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetGraphConfig final
{
public:
	TSoftObjectPtr<class UMovieGraphConfig>       InGraphConfig;                                     // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetGraphConfig) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetGraphConfig");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetGraphConfig) == 0x000030, "Wrong size on MovieJobVariableAssignmentContainer_SetGraphConfig");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetGraphConfig, InGraphConfig) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetGraphConfig::InGraphConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueBool
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueBool final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInValue;                                          // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueBool) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueBool");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueBool) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetValueBool");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueBool, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueBool::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueBool, bInValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueBool::bInValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueBool, ReturnValue) == 0x00000D, "Member 'MovieJobVariableAssignmentContainer_SetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueByte
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueByte final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InValue;                                           // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueByte) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueByte");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueByte) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetValueByte");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueByte, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueByte::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueByte, InValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueByte::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueByte, ReturnValue) == 0x00000D, "Member 'MovieJobVariableAssignmentContainer_SetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueClass
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueClass final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 InValue;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueClass) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueClass");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueClass) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueClass");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueClass, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueClass::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueClass, InValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueClass::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueClass, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueDouble
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueDouble final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InValue;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueDouble) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueDouble");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueDouble) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueDouble");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueDouble, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueDouble::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueDouble, InValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueDouble::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueDouble, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueEnum
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueEnum final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InValue;                                           // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            Enum;                                              // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueEnum) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueEnum");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueEnum) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueEnum");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, InValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, Enum) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::Enum' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueEnum, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueFloat
// 0x0014 (0x0014 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueFloat final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueFloat) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueFloat");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueFloat) == 0x000014, "Wrong size on MovieJobVariableAssignmentContainer_SetValueFloat");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueFloat, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueFloat::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueFloat, InValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueFloat::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueFloat, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueInt32
// 0x0014 (0x0014 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueInt32 final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValue;                                           // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueInt32) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueInt32");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueInt32) == 0x000014, "Wrong size on MovieJobVariableAssignmentContainer_SetValueInt32");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt32, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueInt32::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt32, InValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueInt32::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt32, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueInt64
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueInt64 final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         InValue;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueInt64) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueInt64");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueInt64) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueInt64");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt64, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueInt64::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt64, InValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueInt64::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueInt64, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueName
// 0x001C (0x001C - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueName final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InValue;                                           // 0x000C(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueName) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueName");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueName) == 0x00001C, "Wrong size on MovieJobVariableAssignmentContainer_SetValueName");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueName, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueName::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueName, InValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_SetValueName::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueName, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueObject
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueObject final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InValue;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueObject) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueObject");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueObject) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_SetValueObject");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueObject, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueObject::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueObject, InValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueObject::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueObject, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_SetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueSerializedString
// 0x0028 (0x0028 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueSerializedString final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewValue;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueSerializedString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueSerializedString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueSerializedString) == 0x000028, "Wrong size on MovieJobVariableAssignmentContainer_SetValueSerializedString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueSerializedString, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueSerializedString::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueSerializedString, NewValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueSerializedString::NewValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueSerializedString, ReturnValue) == 0x000020, "Member 'MovieJobVariableAssignmentContainer_SetValueSerializedString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueString
// 0x0028 (0x0028 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueString final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InValue;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueString) == 0x000028, "Wrong size on MovieJobVariableAssignmentContainer_SetValueString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueString, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueString::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueString, InValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueString::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueString, ReturnValue) == 0x000020, "Member 'MovieJobVariableAssignmentContainer_SetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetValueText
// 0x0030 (0x0030 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetValueText final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InValue;                                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetValueText) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetValueText");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetValueText) == 0x000030, "Wrong size on MovieJobVariableAssignmentContainer_SetValueText");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueText, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetValueText::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueText, InValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_SetValueText::InValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetValueText, ReturnValue) == 0x000028, "Member 'MovieJobVariableAssignmentContainer_SetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.SetVariableAssignmentEnableState
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState final
{
public:
	const class UMovieGraphVariable*              InGraphVariable;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEnabled;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState");
static_assert(sizeof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState, InGraphVariable) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState::InGraphVariable' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState, bIsEnabled) == 0x000008, "Member 'MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState::bIsEnabled' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState, ReturnValue) == 0x000009, "Member 'MovieJobVariableAssignmentContainer_SetVariableAssignmentEnableState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueBool
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueBool final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutValue;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueBool) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueBool");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueBool) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueBool");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueBool, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueBool::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueBool, bOutValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueBool::bOutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueBool, ReturnValue) == 0x00000D, "Member 'MovieJobVariableAssignmentContainer_GetValueBool::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueByte
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueByte final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OutValue;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueByte) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueByte");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueByte) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueByte");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueByte, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueByte::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueByte, OutValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueByte::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueByte, ReturnValue) == 0x00000D, "Member 'MovieJobVariableAssignmentContainer_GetValueByte::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueClass
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueClass final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 OutValue;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueClass) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueClass");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueClass) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueClass");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueClass, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueClass::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueClass, OutValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueClass::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueClass, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueContainerType
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueContainerType final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieGraphContainerType                      ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueContainerType) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueContainerType");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueContainerType) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueContainerType");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueContainerType, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueContainerType::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueContainerType, ReturnValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueContainerType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueDouble
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueDouble final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueDouble) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueDouble");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueDouble) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueDouble");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueDouble, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueDouble::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueDouble, OutValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueDouble::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueDouble, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueDouble::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueEnum
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueEnum final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         OutValue;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UEnum*                            RequestedEnum;                                     // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueEnum) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueEnum");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueEnum) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueEnum");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, OutValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, RequestedEnum) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::RequestedEnum' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueEnum, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueEnum::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueFloat
// 0x0014 (0x0014 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueFloat final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueFloat) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueFloat");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueFloat) == 0x000014, "Wrong size on MovieJobVariableAssignmentContainer_GetValueFloat");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueFloat, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueFloat::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueFloat, OutValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueFloat::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueFloat, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueFloat::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueInt32
// 0x0014 (0x0014 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueInt32 final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutValue;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueInt32) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueInt32");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueInt32) == 0x000014, "Wrong size on MovieJobVariableAssignmentContainer_GetValueInt32");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt32, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueInt32::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt32, OutValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueInt32::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt32, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueInt32::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueInt64
// 0x0020 (0x0020 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueInt64 final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         OutValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueInt64) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueInt64");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueInt64) == 0x000020, "Wrong size on MovieJobVariableAssignmentContainer_GetValueInt64");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt64, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueInt64::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt64, OutValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueInt64::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueInt64, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueInt64::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueName
// 0x001C (0x001C - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueName final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutValue;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueName) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueName");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueName) == 0x00001C, "Wrong size on MovieJobVariableAssignmentContainer_GetValueName");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueName, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueName::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueName, OutValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueName::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueName, ReturnValue) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueObject
// 0x0028 (0x0028 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueObject final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                OutValue;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UClass*                           RequestedClass;                                    // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueObject) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueObject");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueObject) == 0x000028, "Wrong size on MovieJobVariableAssignmentContainer_GetValueObject");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, OutValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, RequestedClass) == 0x000018, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::RequestedClass' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueObject, ReturnValue) == 0x000020, "Member 'MovieJobVariableAssignmentContainer_GetValueObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueString
// 0x0028 (0x0028 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueString final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueString) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueString");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueString) == 0x000028, "Wrong size on MovieJobVariableAssignmentContainer_GetValueString");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueString, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueString::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueString, OutValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueString::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueString, ReturnValue) == 0x000020, "Member 'MovieJobVariableAssignmentContainer_GetValueString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueText
// 0x0030 (0x0030 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueText final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutValue;                                          // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueText) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueText");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueText) == 0x000030, "Wrong size on MovieJobVariableAssignmentContainer_GetValueText");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueText, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueText::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueText, OutValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueText::OutValue' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueText, ReturnValue) == 0x000028, "Member 'MovieJobVariableAssignmentContainer_GetValueText::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueType
// 0x0010 (0x0010 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueType final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieGraphValueType                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueType) == 0x000004, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueType");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueType) == 0x000010, "Wrong size on MovieJobVariableAssignmentContainer_GetValueType");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueType, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueType::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueType, ReturnValue) == 0x00000C, "Member 'MovieJobVariableAssignmentContainer_GetValueType::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieJobVariableAssignmentContainer.GetValueTypeObject
// 0x0018 (0x0018 - 0x0000)
struct MovieJobVariableAssignmentContainer_GetValueTypeObject final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UObject*                          ReturnValue;                                       // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieJobVariableAssignmentContainer_GetValueTypeObject) == 0x000008, "Wrong alignment on MovieJobVariableAssignmentContainer_GetValueTypeObject");
static_assert(sizeof(MovieJobVariableAssignmentContainer_GetValueTypeObject) == 0x000018, "Wrong size on MovieJobVariableAssignmentContainer_GetValueTypeObject");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueTypeObject, PropertyName) == 0x000000, "Member 'MovieJobVariableAssignmentContainer_GetValueTypeObject::PropertyName' has a wrong offset!");
static_assert(offsetof(MovieJobVariableAssignmentContainer_GetValueTypeObject, ReturnValue) == 0x000010, "Member 'MovieJobVariableAssignmentContainer_GetValueTypeObject::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.SetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineSetting_SetIsEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_SetIsEnabled) == 0x000001, "Wrong alignment on MoviePipelineSetting_SetIsEnabled");
static_assert(sizeof(MoviePipelineSetting_SetIsEnabled) == 0x000001, "Wrong size on MoviePipelineSetting_SetIsEnabled");
static_assert(offsetof(MoviePipelineSetting_SetIsEnabled, bInEnabled) == 0x000000, "Member 'MoviePipelineSetting_SetIsEnabled::bInEnabled' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLine
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineSetting_BuildNewProcessCommandLine final
{
public:
	class FString                                 InOutUnrealURLParams;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InOutCommandLineArgs;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BuildNewProcessCommandLine) == 0x000008, "Wrong alignment on MoviePipelineSetting_BuildNewProcessCommandLine");
static_assert(sizeof(MoviePipelineSetting_BuildNewProcessCommandLine) == 0x000020, "Wrong size on MoviePipelineSetting_BuildNewProcessCommandLine");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLine, InOutUnrealURLParams) == 0x000000, "Member 'MoviePipelineSetting_BuildNewProcessCommandLine::InOutUnrealURLParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLine, InOutCommandLineArgs) == 0x000010, "Member 'MoviePipelineSetting_BuildNewProcessCommandLine::InOutCommandLineArgs' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLineArgs
// 0x0040 (0x0040 - 0x0000)
struct MoviePipelineSetting_BuildNewProcessCommandLineArgs final
{
public:
	TArray<class FString>                         InOutUnrealURLParams;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         InOutCommandLineArgs;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         InOutDeviceProfileCvars;                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         InOutExecCmds;                                     // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BuildNewProcessCommandLineArgs) == 0x000008, "Wrong alignment on MoviePipelineSetting_BuildNewProcessCommandLineArgs");
static_assert(sizeof(MoviePipelineSetting_BuildNewProcessCommandLineArgs) == 0x000040, "Wrong size on MoviePipelineSetting_BuildNewProcessCommandLineArgs");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutUnrealURLParams) == 0x000000, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutUnrealURLParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutCommandLineArgs) == 0x000010, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutCommandLineArgs' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutDeviceProfileCvars) == 0x000020, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutDeviceProfileCvars' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BuildNewProcessCommandLineArgs, InOutExecCmds) == 0x000030, "Member 'MoviePipelineSetting_BuildNewProcessCommandLineArgs::InOutExecCmds' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineSetting_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_IsEnabled) == 0x000001, "Wrong alignment on MoviePipelineSetting_IsEnabled");
static_assert(sizeof(MoviePipelineSetting_IsEnabled) == 0x000001, "Wrong size on MoviePipelineSetting_IsEnabled");
static_assert(offsetof(MoviePipelineSetting_IsEnabled, ReturnValue) == 0x000000, "Member 'MoviePipelineSetting_IsEnabled::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollection.AddQuery
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineCollection_AddQuery final
{
public:
	class UMoviePipelineCollectionQuery*          Query;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollection_AddQuery) == 0x000008, "Wrong alignment on MoviePipelineCollection_AddQuery");
static_assert(sizeof(MoviePipelineCollection_AddQuery) == 0x000008, "Wrong size on MoviePipelineCollection_AddQuery");
static_assert(offsetof(MoviePipelineCollection_AddQuery, Query) == 0x000000, "Member 'MoviePipelineCollection_AddQuery::Query' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollection.SetCollectionName
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollection_SetCollectionName final
{
public:
	class FString                                 InName;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollection_SetCollectionName) == 0x000008, "Wrong alignment on MoviePipelineCollection_SetCollectionName");
static_assert(sizeof(MoviePipelineCollection_SetCollectionName) == 0x000010, "Wrong size on MoviePipelineCollection_SetCollectionName");
static_assert(offsetof(MoviePipelineCollection_SetCollectionName, InName) == 0x000000, "Member 'MoviePipelineCollection_SetCollectionName::InName' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollection.GetCollectionName
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollection_GetCollectionName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollection_GetCollectionName) == 0x000008, "Wrong alignment on MoviePipelineCollection_GetCollectionName");
static_assert(sizeof(MoviePipelineCollection_GetCollectionName) == 0x000010, "Wrong size on MoviePipelineCollection_GetCollectionName");
static_assert(offsetof(MoviePipelineCollection_GetCollectionName, ReturnValue) == 0x000000, "Member 'MoviePipelineCollection_GetCollectionName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollection.GetMatchingActors
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineCollection_GetMatchingActors final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertResult;                                     // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollection_GetMatchingActors) == 0x000008, "Wrong alignment on MoviePipelineCollection_GetMatchingActors");
static_assert(sizeof(MoviePipelineCollection_GetMatchingActors) == 0x000020, "Wrong size on MoviePipelineCollection_GetMatchingActors");
static_assert(offsetof(MoviePipelineCollection_GetMatchingActors, World) == 0x000000, "Member 'MoviePipelineCollection_GetMatchingActors::World' has a wrong offset!");
static_assert(offsetof(MoviePipelineCollection_GetMatchingActors, bInvertResult) == 0x000008, "Member 'MoviePipelineCollection_GetMatchingActors::bInvertResult' has a wrong offset!");
static_assert(offsetof(MoviePipelineCollection_GetMatchingActors, ReturnValue) == 0x000010, "Member 'MoviePipelineCollection_GetMatchingActors::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionModifier.AddCollection
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineCollectionModifier_AddCollection final
{
public:
	class UMoviePipelineCollection*               Collection;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionModifier_AddCollection) == 0x000008, "Wrong alignment on MoviePipelineCollectionModifier_AddCollection");
static_assert(sizeof(MoviePipelineCollectionModifier_AddCollection) == 0x000008, "Wrong size on MoviePipelineCollectionModifier_AddCollection");
static_assert(offsetof(MoviePipelineCollectionModifier_AddCollection, Collection) == 0x000000, "Member 'MoviePipelineCollectionModifier_AddCollection::Collection' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionModifier.SetCollections
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollectionModifier_SetCollections final
{
public:
	TArray<class UMoviePipelineCollection*>       InCollections;                                     // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionModifier_SetCollections) == 0x000008, "Wrong alignment on MoviePipelineCollectionModifier_SetCollections");
static_assert(sizeof(MoviePipelineCollectionModifier_SetCollections) == 0x000010, "Wrong size on MoviePipelineCollectionModifier_SetCollections");
static_assert(offsetof(MoviePipelineCollectionModifier_SetCollections, InCollections) == 0x000000, "Member 'MoviePipelineCollectionModifier_SetCollections::InCollections' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionModifier.SetIsInverted
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineCollectionModifier_SetIsInverted final
{
public:
	bool                                          bIsInverted;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionModifier_SetIsInverted) == 0x000001, "Wrong alignment on MoviePipelineCollectionModifier_SetIsInverted");
static_assert(sizeof(MoviePipelineCollectionModifier_SetIsInverted) == 0x000001, "Wrong size on MoviePipelineCollectionModifier_SetIsInverted");
static_assert(offsetof(MoviePipelineCollectionModifier_SetIsInverted, bIsInverted) == 0x000000, "Member 'MoviePipelineCollectionModifier_SetIsInverted::bIsInverted' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionModifier.GetCollections
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollectionModifier_GetCollections final
{
public:
	TArray<class UMoviePipelineCollection*>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionModifier_GetCollections) == 0x000008, "Wrong alignment on MoviePipelineCollectionModifier_GetCollections");
static_assert(sizeof(MoviePipelineCollectionModifier_GetCollections) == 0x000010, "Wrong size on MoviePipelineCollectionModifier_GetCollections");
static_assert(offsetof(MoviePipelineCollectionModifier_GetCollections, ReturnValue) == 0x000000, "Member 'MoviePipelineCollectionModifier_GetCollections::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionModifier.IsInverted
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineCollectionModifier_IsInverted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionModifier_IsInverted) == 0x000001, "Wrong alignment on MoviePipelineCollectionModifier_IsInverted");
static_assert(sizeof(MoviePipelineCollectionModifier_IsInverted) == 0x000001, "Wrong size on MoviePipelineCollectionModifier_IsInverted");
static_assert(offsetof(MoviePipelineCollectionModifier_IsInverted, ReturnValue) == 0x000000, "Member 'MoviePipelineCollectionModifier_IsInverted::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineMaterialModifier.ApplyModifier
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineMaterialModifier_ApplyModifier final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineMaterialModifier_ApplyModifier) == 0x000008, "Wrong alignment on MoviePipelineMaterialModifier_ApplyModifier");
static_assert(sizeof(MoviePipelineMaterialModifier_ApplyModifier) == 0x000008, "Wrong size on MoviePipelineMaterialModifier_ApplyModifier");
static_assert(offsetof(MoviePipelineMaterialModifier_ApplyModifier, World) == 0x000000, "Member 'MoviePipelineMaterialModifier_ApplyModifier::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineMaterialModifier.SetMaterial
// 0x0030 (0x0030 - 0x0000)
struct MoviePipelineMaterialModifier_SetMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      InMaterial;                                        // 0x0000(0x0030)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineMaterialModifier_SetMaterial) == 0x000008, "Wrong alignment on MoviePipelineMaterialModifier_SetMaterial");
static_assert(sizeof(MoviePipelineMaterialModifier_SetMaterial) == 0x000030, "Wrong size on MoviePipelineMaterialModifier_SetMaterial");
static_assert(offsetof(MoviePipelineMaterialModifier_SetMaterial, InMaterial) == 0x000000, "Member 'MoviePipelineMaterialModifier_SetMaterial::InMaterial' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineVisibilityModifier.ApplyModifier
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineVisibilityModifier_ApplyModifier final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineVisibilityModifier_ApplyModifier) == 0x000008, "Wrong alignment on MoviePipelineVisibilityModifier_ApplyModifier");
static_assert(sizeof(MoviePipelineVisibilityModifier_ApplyModifier) == 0x000008, "Wrong size on MoviePipelineVisibilityModifier_ApplyModifier");
static_assert(offsetof(MoviePipelineVisibilityModifier_ApplyModifier, World) == 0x000000, "Member 'MoviePipelineVisibilityModifier_ApplyModifier::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineVisibilityModifier.SetHidden
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineVisibilityModifier_SetHidden final
{
public:
	bool                                          bInIsHidden;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineVisibilityModifier_SetHidden) == 0x000001, "Wrong alignment on MoviePipelineVisibilityModifier_SetHidden");
static_assert(sizeof(MoviePipelineVisibilityModifier_SetHidden) == 0x000001, "Wrong size on MoviePipelineVisibilityModifier_SetHidden");
static_assert(offsetof(MoviePipelineVisibilityModifier_SetHidden, bInIsHidden) == 0x000000, "Member 'MoviePipelineVisibilityModifier_SetHidden::bInIsHidden' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineVisibilityModifier.IsHidden
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineVisibilityModifier_IsHidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineVisibilityModifier_IsHidden) == 0x000001, "Wrong alignment on MoviePipelineVisibilityModifier_IsHidden");
static_assert(sizeof(MoviePipelineVisibilityModifier_IsHidden) == 0x000001, "Wrong size on MoviePipelineVisibilityModifier_IsHidden");
static_assert(offsetof(MoviePipelineVisibilityModifier_IsHidden, ReturnValue) == 0x000000, "Member 'MoviePipelineVisibilityModifier_IsHidden::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionCommonQuery.SetActorNames
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollectionCommonQuery_SetActorNames final
{
public:
	TArray<class FString>                         InActorNames;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionCommonQuery_SetActorNames) == 0x000008, "Wrong alignment on MoviePipelineCollectionCommonQuery_SetActorNames");
static_assert(sizeof(MoviePipelineCollectionCommonQuery_SetActorNames) == 0x000010, "Wrong size on MoviePipelineCollectionCommonQuery_SetActorNames");
static_assert(offsetof(MoviePipelineCollectionCommonQuery_SetActorNames, InActorNames) == 0x000000, "Member 'MoviePipelineCollectionCommonQuery_SetActorNames::InActorNames' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionCommonQuery.SetComponentTypes
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollectionCommonQuery_SetComponentTypes final
{
public:
	TArray<class UClass*>                         InComponentTypes;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionCommonQuery_SetComponentTypes) == 0x000008, "Wrong alignment on MoviePipelineCollectionCommonQuery_SetComponentTypes");
static_assert(sizeof(MoviePipelineCollectionCommonQuery_SetComponentTypes) == 0x000010, "Wrong size on MoviePipelineCollectionCommonQuery_SetComponentTypes");
static_assert(offsetof(MoviePipelineCollectionCommonQuery_SetComponentTypes, InComponentTypes) == 0x000000, "Member 'MoviePipelineCollectionCommonQuery_SetComponentTypes::InComponentTypes' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionCommonQuery.SetQueryMode
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineCollectionCommonQuery_SetQueryMode final
{
public:
	EMoviePipelineCollectionCommonQueryMode       InQueryMode;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionCommonQuery_SetQueryMode) == 0x000001, "Wrong alignment on MoviePipelineCollectionCommonQuery_SetQueryMode");
static_assert(sizeof(MoviePipelineCollectionCommonQuery_SetQueryMode) == 0x000001, "Wrong size on MoviePipelineCollectionCommonQuery_SetQueryMode");
static_assert(offsetof(MoviePipelineCollectionCommonQuery_SetQueryMode, InQueryMode) == 0x000000, "Member 'MoviePipelineCollectionCommonQuery_SetQueryMode::InQueryMode' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionCommonQuery.SetTags
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollectionCommonQuery_SetTags final
{
public:
	TArray<class FName>                           InTags;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineCollectionCommonQuery_SetTags) == 0x000008, "Wrong alignment on MoviePipelineCollectionCommonQuery_SetTags");
static_assert(sizeof(MoviePipelineCollectionCommonQuery_SetTags) == 0x000010, "Wrong size on MoviePipelineCollectionCommonQuery_SetTags");
static_assert(offsetof(MoviePipelineCollectionCommonQuery_SetTags, InTags) == 0x000000, "Member 'MoviePipelineCollectionCommonQuery_SetTags::InTags' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineCollectionCommonQuery.DoesActorMatchQuery
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineCollectionCommonQuery_DoesActorMatchQuery final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineCollectionCommonQuery_DoesActorMatchQuery) == 0x000008, "Wrong alignment on MoviePipelineCollectionCommonQuery_DoesActorMatchQuery");
static_assert(sizeof(MoviePipelineCollectionCommonQuery_DoesActorMatchQuery) == 0x000010, "Wrong size on MoviePipelineCollectionCommonQuery_DoesActorMatchQuery");
static_assert(offsetof(MoviePipelineCollectionCommonQuery_DoesActorMatchQuery, Actor) == 0x000000, "Member 'MoviePipelineCollectionCommonQuery_DoesActorMatchQuery::Actor' has a wrong offset!");
static_assert(offsetof(MoviePipelineCollectionCommonQuery_DoesActorMatchQuery, ReturnValue) == 0x000008, "Member 'MoviePipelineCollectionCommonQuery_DoesActorMatchQuery::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.AddModifier
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayer_AddModifier final
{
public:
	class UMoviePipelineCollectionModifier*       Modifier;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_AddModifier) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_AddModifier");
static_assert(sizeof(MoviePipelineRenderLayer_AddModifier) == 0x000008, "Wrong size on MoviePipelineRenderLayer_AddModifier");
static_assert(offsetof(MoviePipelineRenderLayer_AddModifier, Modifier) == 0x000000, "Member 'MoviePipelineRenderLayer_AddModifier::Modifier' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.Preview
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayer_Preview final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_Preview) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_Preview");
static_assert(sizeof(MoviePipelineRenderLayer_Preview) == 0x000008, "Wrong size on MoviePipelineRenderLayer_Preview");
static_assert(offsetof(MoviePipelineRenderLayer_Preview, World) == 0x000000, "Member 'MoviePipelineRenderLayer_Preview::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.RemoveModifier
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayer_RemoveModifier final
{
public:
	class UMoviePipelineCollectionModifier*       Modifier;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_RemoveModifier) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_RemoveModifier");
static_assert(sizeof(MoviePipelineRenderLayer_RemoveModifier) == 0x000008, "Wrong size on MoviePipelineRenderLayer_RemoveModifier");
static_assert(offsetof(MoviePipelineRenderLayer_RemoveModifier, Modifier) == 0x000000, "Member 'MoviePipelineRenderLayer_RemoveModifier::Modifier' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.SetRenderLayerName
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayer_SetRenderLayerName final
{
public:
	class FString                                 NewName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_SetRenderLayerName) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_SetRenderLayerName");
static_assert(sizeof(MoviePipelineRenderLayer_SetRenderLayerName) == 0x000010, "Wrong size on MoviePipelineRenderLayer_SetRenderLayerName");
static_assert(offsetof(MoviePipelineRenderLayer_SetRenderLayerName, NewName) == 0x000000, "Member 'MoviePipelineRenderLayer_SetRenderLayerName::NewName' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.UndoPreview
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayer_UndoPreview final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_UndoPreview) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_UndoPreview");
static_assert(sizeof(MoviePipelineRenderLayer_UndoPreview) == 0x000008, "Wrong size on MoviePipelineRenderLayer_UndoPreview");
static_assert(offsetof(MoviePipelineRenderLayer_UndoPreview, World) == 0x000000, "Member 'MoviePipelineRenderLayer_UndoPreview::World' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.GetCollectionByName
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineRenderLayer_GetCollectionByName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineCollection*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_GetCollectionByName) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_GetCollectionByName");
static_assert(sizeof(MoviePipelineRenderLayer_GetCollectionByName) == 0x000018, "Wrong size on MoviePipelineRenderLayer_GetCollectionByName");
static_assert(offsetof(MoviePipelineRenderLayer_GetCollectionByName, Name_0) == 0x000000, "Member 'MoviePipelineRenderLayer_GetCollectionByName::Name_0' has a wrong offset!");
static_assert(offsetof(MoviePipelineRenderLayer_GetCollectionByName, ReturnValue) == 0x000010, "Member 'MoviePipelineRenderLayer_GetCollectionByName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.GetModifiers
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayer_GetModifiers final
{
public:
	TArray<class UMoviePipelineCollectionModifier*> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_GetModifiers) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_GetModifiers");
static_assert(sizeof(MoviePipelineRenderLayer_GetModifiers) == 0x000010, "Wrong size on MoviePipelineRenderLayer_GetModifiers");
static_assert(offsetof(MoviePipelineRenderLayer_GetModifiers, ReturnValue) == 0x000000, "Member 'MoviePipelineRenderLayer_GetModifiers::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayer.GetRenderLayerName
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayer_GetRenderLayerName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayer_GetRenderLayerName) == 0x000008, "Wrong alignment on MoviePipelineRenderLayer_GetRenderLayerName");
static_assert(sizeof(MoviePipelineRenderLayer_GetRenderLayerName) == 0x000010, "Wrong size on MoviePipelineRenderLayer_GetRenderLayerName");
static_assert(offsetof(MoviePipelineRenderLayer_GetRenderLayerName, ReturnValue) == 0x000000, "Member 'MoviePipelineRenderLayer_GetRenderLayerName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.GetFromWorld
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_GetFromWorld final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineRenderLayerSubsystem*     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_GetFromWorld) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_GetFromWorld");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_GetFromWorld) == 0x000010, "Wrong size on MoviePipelineRenderLayerSubsystem_GetFromWorld");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_GetFromWorld, World) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_GetFromWorld::World' has a wrong offset!");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_GetFromWorld, ReturnValue) == 0x000008, "Member 'MoviePipelineRenderLayerSubsystem_GetFromWorld::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.AddRenderLayer
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_AddRenderLayer final
{
public:
	class UMoviePipelineRenderLayer*              RenderLayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_AddRenderLayer) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_AddRenderLayer");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_AddRenderLayer) == 0x000010, "Wrong size on MoviePipelineRenderLayerSubsystem_AddRenderLayer");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_AddRenderLayer, RenderLayer) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_AddRenderLayer::RenderLayer' has a wrong offset!");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_AddRenderLayer, ReturnValue) == 0x000008, "Member 'MoviePipelineRenderLayerSubsystem_AddRenderLayer::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.GetRenderLayers
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_GetRenderLayers final
{
public:
	TArray<class UMoviePipelineRenderLayer*>      ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_GetRenderLayers) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_GetRenderLayers");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_GetRenderLayers) == 0x000010, "Wrong size on MoviePipelineRenderLayerSubsystem_GetRenderLayers");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_GetRenderLayers, ReturnValue) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_GetRenderLayers::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.PreviewCollection
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_PreviewCollection final
{
public:
	class UMoviePipelineCollection*               Collection;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_PreviewCollection) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_PreviewCollection");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_PreviewCollection) == 0x000008, "Wrong size on MoviePipelineRenderLayerSubsystem_PreviewCollection");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_PreviewCollection, Collection) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_PreviewCollection::Collection' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.PreviewModifier
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_PreviewModifier final
{
public:
	class UMoviePipelineCollectionModifier*       Modifier;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_PreviewModifier) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_PreviewModifier");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_PreviewModifier) == 0x000008, "Wrong size on MoviePipelineRenderLayerSubsystem_PreviewModifier");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_PreviewModifier, Modifier) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_PreviewModifier::Modifier' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.RemoveRenderLayer
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_RemoveRenderLayer final
{
public:
	class FString                                 RenderLayerName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_RemoveRenderLayer) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_RemoveRenderLayer");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_RemoveRenderLayer) == 0x000010, "Wrong size on MoviePipelineRenderLayerSubsystem_RemoveRenderLayer");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_RemoveRenderLayer, RenderLayerName) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_RemoveRenderLayer::RenderLayerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.SetActiveRenderLayerByName
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName final
{
public:
	class FString                                 RenderLayerName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName) == 0x000010, "Wrong size on MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName, RenderLayerName) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByName::RenderLayerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.SetActiveRenderLayerByObj
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj final
{
public:
	class UMoviePipelineRenderLayer*              RenderLayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj) == 0x000008, "Wrong size on MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj, RenderLayer) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_SetActiveRenderLayerByObj::RenderLayer' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineRenderLayerSubsystem.GetActiveRenderLayer
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer final
{
public:
	class UMoviePipelineRenderLayer*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer) == 0x000008, "Wrong alignment on MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer");
static_assert(sizeof(MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer) == 0x000008, "Wrong size on MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer");
static_assert(offsetof(MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer, ReturnValue) == 0x000000, "Member 'MoviePipelineRenderLayerSubsystem_GetActiveRenderLayer::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveSetupForPipelineImpl
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl final
{
public:
	class UMoviePipeline*                         InPipeline;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl) == 0x000008, "Wrong alignment on MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl");
static_assert(sizeof(MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl) == 0x000008, "Wrong size on MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl, InPipeline) == 0x000000, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl::InPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveTeardownForPipelineImpl
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl final
{
public:
	class UMoviePipeline*                         InPipeline;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl) == 0x000008, "Wrong alignment on MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl");
static_assert(sizeof(MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl) == 0x000008, "Wrong size on MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl, InPipeline) == 0x000000, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl::InPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveGetFormatArguments
// 0x0150 (0x0150 - 0x0000)
struct MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments final
{
public:
	struct FMoviePipelineFormatArgs               InOutFormatArgs;                                   // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FMoviePipelineFormatArgs               ReturnValue;                                       // 0x00A8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments) == 0x000008, "Wrong alignment on MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments");
static_assert(sizeof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments) == 0x000150, "Wrong size on MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments, InOutFormatArgs) == 0x000000, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments::InOutFormatArgs' has a wrong offset!");
static_assert(offsetof(MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments, ReturnValue) == 0x0000A8, "Member 'MoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MovieRenderDebugWidget.OnInitializedForPipeline
// 0x0008 (0x0008 - 0x0000)
struct MovieRenderDebugWidget_OnInitializedForPipeline final
{
public:
	class UMoviePipeline*                         ForPipeline;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieRenderDebugWidget_OnInitializedForPipeline) == 0x000008, "Wrong alignment on MovieRenderDebugWidget_OnInitializedForPipeline");
static_assert(sizeof(MovieRenderDebugWidget_OnInitializedForPipeline) == 0x000008, "Wrong size on MovieRenderDebugWidget_OnInitializedForPipeline");
static_assert(offsetof(MovieRenderDebugWidget_OnInitializedForPipeline, ForPipeline) == 0x000000, "Member 'MovieRenderDebugWidget_OnInitializedForPipeline::ForPipeline' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.Initialize
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_Initialize final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_Initialize) == 0x000008, "Wrong alignment on MoviePipeline_Initialize");
static_assert(sizeof(MoviePipeline_Initialize) == 0x000008, "Wrong size on MoviePipeline_Initialize");
static_assert(offsetof(MoviePipeline_Initialize, InJob) == 0x000000, "Member 'MoviePipeline_Initialize::InJob' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.SetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_SetInitializationTime final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_SetInitializationTime) == 0x000008, "Wrong alignment on MoviePipeline_SetInitializationTime");
static_assert(sizeof(MoviePipeline_SetInitializationTime) == 0x000008, "Wrong size on MoviePipeline_SetInitializationTime");
static_assert(offsetof(MoviePipeline_SetInitializationTime, InDateTime) == 0x000000, "Member 'MoviePipeline_SetInitializationTime::InDateTime' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetCurrentJob
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetCurrentJob final
{
public:
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetCurrentJob) == 0x000008, "Wrong alignment on MoviePipeline_GetCurrentJob");
static_assert(sizeof(MoviePipeline_GetCurrentJob) == 0x000008, "Wrong size on MoviePipeline_GetCurrentJob");
static_assert(offsetof(MoviePipeline_GetCurrentJob, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetCurrentJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetInitializationTime
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetInitializationTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetInitializationTime) == 0x000008, "Wrong alignment on MoviePipeline_GetInitializationTime");
static_assert(sizeof(MoviePipeline_GetInitializationTime) == 0x000008, "Wrong size on MoviePipeline_GetInitializationTime");
static_assert(offsetof(MoviePipeline_GetInitializationTime, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetPipelineMasterConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetPipelineMasterConfig final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetPipelineMasterConfig) == 0x000008, "Wrong alignment on MoviePipeline_GetPipelineMasterConfig");
static_assert(sizeof(MoviePipeline_GetPipelineMasterConfig) == 0x000008, "Wrong size on MoviePipeline_GetPipelineMasterConfig");
static_assert(offsetof(MoviePipeline_GetPipelineMasterConfig, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetPipelineMasterConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetPipelinePrimaryConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetPipelinePrimaryConfig final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetPipelinePrimaryConfig) == 0x000008, "Wrong alignment on MoviePipeline_GetPipelinePrimaryConfig");
static_assert(sizeof(MoviePipeline_GetPipelinePrimaryConfig) == 0x000008, "Wrong size on MoviePipeline_GetPipelinePrimaryConfig");
static_assert(offsetof(MoviePipeline_GetPipelinePrimaryConfig, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetPipelinePrimaryConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipeline.GetPreviewTexture
// 0x0008 (0x0008 - 0x0000)
struct MoviePipeline_GetPreviewTexture final
{
public:
	class UTexture*                               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipeline_GetPreviewTexture) == 0x000008, "Wrong alignment on MoviePipeline_GetPreviewTexture");
static_assert(sizeof(MoviePipeline_GetPreviewTexture) == 0x000008, "Wrong size on MoviePipeline_GetPreviewTexture");
static_assert(offsetof(MoviePipeline_GetPreviewTexture, ReturnValue) == 0x000000, "Member 'MoviePipeline_GetPreviewTexture::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.DuplicateSequence
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_DuplicateSequence final
{
public:
	class UObject*                                Outer_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieSceneSequence*                    InSequence;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMovieSceneSequence*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_DuplicateSequence) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_DuplicateSequence");
static_assert(sizeof(MoviePipelineBlueprintLibrary_DuplicateSequence) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_DuplicateSequence");
static_assert(offsetof(MoviePipelineBlueprintLibrary_DuplicateSequence, Outer_0) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_DuplicateSequence::Outer_0' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_DuplicateSequence, InSequence) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_DuplicateSequence::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_DuplicateSequence, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_DuplicateSequence::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.FindOrGetDefaultSettingForShot
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InSettingType;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UMoviePipelinePrimaryConfig*      InPrimaryConfig;                                   // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UMoviePipelineExecutorShot*       InShot;                                            // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineSetting*                  ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot");
static_assert(sizeof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, InSettingType) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::InSettingType' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, InPrimaryConfig) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::InPrimaryConfig' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, InShot) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::InShot' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot, ReturnValue) == 0x000018, "Member 'MoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCompletionPercentage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCompletionPercentage final
{
public:
	const class UMoviePipeline*                   InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCompletionPercentage) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCompletionPercentage");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCompletionPercentage) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCompletionPercentage");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCompletionPercentage, InPipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCompletionPercentage::InPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCompletionPercentage, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCompletionPercentage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentAperture
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentAperture final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentAperture) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentAperture");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentAperture) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentAperture");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentAperture, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentAperture::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentAperture, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentAperture::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentExecutorShot
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentExecutorShot final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorShot*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentExecutorShot");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentExecutorShot");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentExecutorShot::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentExecutorShot, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentExecutorShot::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocalLength
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentFocalLength final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentFocalLength");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentFocalLength");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocalLength::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocalLength, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocalLength::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocusDistance
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentFocusDistance final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentFocusDistance");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentFocusDistance");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocusDistance::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentFocusDistance, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentFocusDistance::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentName
// 0x0038 (0x0038 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSegmentName final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutOuterName;                                      // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   OutInnerName;                                      // 0x0020(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSegmentName");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName) == 0x000038, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSegmentName");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentName::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName, OutOuterName) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentName::OutOuterName' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentName, OutInnerName) == 0x000020, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentName::OutInnerName' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentState
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSegmentState final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieRenderShotState                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSegmentState");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSegmentState");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentState::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentState, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentWorkMetrics
// 0x0030 (0x0030 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineSegmentWorkMetrics       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics) == 0x000030, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSequence
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentSequence final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentSequence) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentSequence");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentSequence) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentSequence");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSequence, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSequence::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentSequence, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentSequence::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotTimecode
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetCurrentShotTimecode final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetCurrentShotTimecode");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetCurrentShotTimecode");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotTimecode::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetCurrentShotTimecode, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetCurrentShotTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEffectiveOutputResolution
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution final
{
public:
	class UMoviePipelinePrimaryConfig*            InPrimaryConfig;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorShot*             InPipelineExecutorShot;                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution, InPrimaryConfig) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution::InPrimaryConfig' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution, InPipelineExecutorShot) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution::InPipelineExecutorShot' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_GetEffectiveOutputResolution::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEstimatedTimeRemaining
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining final
{
public:
	const class UMoviePipeline*                   InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              OutEstimate;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining, InPipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining::InPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining, OutEstimate) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining::OutEstimate' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobAuthor
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetJobAuthor final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetJobAuthor) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetJobAuthor");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetJobAuthor) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetJobAuthor");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobAuthor, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetJobAuthor::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobAuthor, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetJobAuthor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobInitializationTime
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetJobInitializationTime final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetJobInitializationTime) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetJobInitializationTime");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetJobInitializationTime) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetJobInitializationTime");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobInitializationTime, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetJobInitializationTime::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobInitializationTime, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetJobInitializationTime::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobName
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetJobName final
{
public:
	class UMoviePipeline*                         InMoviePipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetJobName) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetJobName");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetJobName) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetJobName");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobName, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetJobName::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetJobName, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetJobName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMapPackageName
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMapPackageName final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMapPackageName) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMapPackageName");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMapPackageName) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_GetMapPackageName");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMapPackageName, InJob) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMapPackageName::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMapPackageName, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMapPackageName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMasterFrameNumber final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMasterFrameNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetMasterFrameNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMasterFrameNumber::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterFrameNumber, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMasterFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterTimecode
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMasterTimecode final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMasterTimecode) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMasterTimecode");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMasterTimecode) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetMasterTimecode");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterTimecode, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMasterTimecode::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMasterTimecode, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMasterTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMoviePipelineEngineChangelistLabel
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallOutputFrames
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetOverallOutputFrames final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCurrentIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTotalCount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetOverallOutputFrames");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetOverallOutputFrames");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetOverallOutputFrames::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames, OutCurrentIndex) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetOverallOutputFrames::OutCurrentIndex' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallOutputFrames, OutTotalCount) == 0x00000C, "Member 'MoviePipelineBlueprintLibrary_GetOverallOutputFrames::OutTotalCount' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallSegmentCounts
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetOverallSegmentCounts final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCurrentIndex;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTotalCount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetOverallSegmentCounts");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetOverallSegmentCounts");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetOverallSegmentCounts::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts, OutCurrentIndex) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetOverallSegmentCounts::OutCurrentIndex' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetOverallSegmentCounts, OutTotalCount) == 0x00000C, "Member 'MoviePipelineBlueprintLibrary_GetOverallSegmentCounts::OutTotalCount' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetPipelineState
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetPipelineState final
{
public:
	const class UMoviePipeline*                   InPipeline;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieRenderPipelineState                     ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetPipelineState) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetPipelineState");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetPipelineState) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetPipelineState");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetPipelineState, InPipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetPipelineState::InPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetPipelineState, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetPipelineState::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootFrameNumber
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetRootFrameNumber final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetRootFrameNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetRootFrameNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetRootFrameNumber) == 0x000010, "Wrong size on MoviePipelineBlueprintLibrary_GetRootFrameNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootFrameNumber, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetRootFrameNumber::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootFrameNumber, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetRootFrameNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootTimecode
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineBlueprintLibrary_GetRootTimecode final
{
public:
	const class UMoviePipeline*                   InMoviePipeline;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimecode                              ReturnValue;                                       // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_GetRootTimecode) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_GetRootTimecode");
static_assert(sizeof(MoviePipelineBlueprintLibrary_GetRootTimecode) == 0x000020, "Wrong size on MoviePipelineBlueprintLibrary_GetRootTimecode");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootTimecode, InMoviePipeline) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_GetRootTimecode::InMoviePipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_GetRootTimecode, ReturnValue) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_GetRootTimecode::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.LoadManifestFileFromString
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_LoadManifestFileFromString final
{
public:
	class FString                                 InManifestFilePath;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineQueue*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_LoadManifestFileFromString");
static_assert(sizeof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_LoadManifestFileFromString");
static_assert(offsetof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString, InManifestFilePath) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_LoadManifestFileFromString::InManifestFilePath' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_LoadManifestFileFromString, ReturnValue) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_LoadManifestFileFromString::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveFilenameFormatArguments
// 0x01E0 (0x01E0 - 0x0000)
struct MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments final
{
public:
	class FString                                 InFormatString;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineFilenameResolveParams    InParams;                                          // 0x0010(0x0118)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OutFinalPath;                                      // 0x0128(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMoviePipelineFormatArgs               OutMergedFormatArgs;                               // 0x0138(0x00A8)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(sizeof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments) == 0x0001E0, "Wrong size on MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, InFormatString) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::InFormatString' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, InParams) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::InParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, OutFinalPath) == 0x000128, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::OutFinalPath' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments, OutMergedFormatArgs) == 0x000138, "Member 'MoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments::OutMergedFormatArgs' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveVersionNumber
// 0x0120 (0x0120 - 0x0000)
struct MoviePipelineBlueprintLibrary_ResolveVersionNumber final
{
public:
	struct FMoviePipelineFilenameResolveParams    InParams;                                          // 0x0000(0x0118)(Parm, NativeAccessSpecifierPublic)
	bool                                          bGetNextVersion;                                   // 0x0118(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x011C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineBlueprintLibrary_ResolveVersionNumber) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_ResolveVersionNumber");
static_assert(sizeof(MoviePipelineBlueprintLibrary_ResolveVersionNumber) == 0x000120, "Wrong size on MoviePipelineBlueprintLibrary_ResolveVersionNumber");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveVersionNumber, InParams) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_ResolveVersionNumber::InParams' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveVersionNumber, bGetNextVersion) == 0x000118, "Member 'MoviePipelineBlueprintLibrary_ResolveVersionNumber::bGetNextVersion' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_ResolveVersionNumber, ReturnValue) == 0x00011C, "Member 'MoviePipelineBlueprintLibrary_ResolveVersionNumber::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.UpdateJobShotListFromSequence
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence final
{
public:
	class ULevelSequence*                         InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShotsChanged;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence) == 0x000008, "Wrong alignment on MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence");
static_assert(sizeof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence) == 0x000018, "Wrong size on MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence");
static_assert(offsetof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence, InSequence) == 0x000000, "Member 'MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence, InJob) == 0x000008, "Member 'MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence, bShotsChanged) == 0x000010, "Member 'MoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence::bShotsChanged' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.CopyFrom
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_CopyFrom final
{
public:
	class UMoviePipelineConfigBase*               InConfig;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_CopyFrom) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_CopyFrom");
static_assert(sizeof(MoviePipelineConfigBase_CopyFrom) == 0x000008, "Wrong size on MoviePipelineConfigBase_CopyFrom");
static_assert(offsetof(MoviePipelineConfigBase_CopyFrom, InConfig) == 0x000000, "Member 'MoviePipelineConfigBase_CopyFrom::InConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.FindOrAddSettingByClass
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineConfigBase_FindOrAddSettingByClass final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDisabledSettings;                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoviePipelineSetting*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_FindOrAddSettingByClass) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_FindOrAddSettingByClass");
static_assert(sizeof(MoviePipelineConfigBase_FindOrAddSettingByClass) == 0x000018, "Wrong size on MoviePipelineConfigBase_FindOrAddSettingByClass");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, InClass) == 0x000000, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::InClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, bIncludeDisabledSettings) == 0x000008, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, bExactMatch) == 0x000009, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::bExactMatch' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindOrAddSettingByClass, ReturnValue) == 0x000010, "Member 'MoviePipelineConfigBase_FindOrAddSettingByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.RemoveSetting
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_RemoveSetting final
{
public:
	class UMoviePipelineSetting*                  InSetting;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_RemoveSetting) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_RemoveSetting");
static_assert(sizeof(MoviePipelineConfigBase_RemoveSetting) == 0x000008, "Wrong size on MoviePipelineConfigBase_RemoveSetting");
static_assert(offsetof(MoviePipelineConfigBase_RemoveSetting, InSetting) == 0x000000, "Member 'MoviePipelineConfigBase_RemoveSetting::InSetting' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.SetConfigOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_SetConfigOrigin final
{
public:
	class UMoviePipelineConfigBase*               InConfig;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_SetConfigOrigin) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_SetConfigOrigin");
static_assert(sizeof(MoviePipelineConfigBase_SetConfigOrigin) == 0x000008, "Wrong size on MoviePipelineConfigBase_SetConfigOrigin");
static_assert(offsetof(MoviePipelineConfigBase_SetConfigOrigin, InConfig) == 0x000000, "Member 'MoviePipelineConfigBase_SetConfigOrigin::InConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingByClass
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineConfigBase_FindSettingByClass final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDisabledSettings;                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMoviePipelineSetting*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_FindSettingByClass) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_FindSettingByClass");
static_assert(sizeof(MoviePipelineConfigBase_FindSettingByClass) == 0x000018, "Wrong size on MoviePipelineConfigBase_FindSettingByClass");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, InClass) == 0x000000, "Member 'MoviePipelineConfigBase_FindSettingByClass::InClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, bIncludeDisabledSettings) == 0x000008, "Member 'MoviePipelineConfigBase_FindSettingByClass::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, bExactMatch) == 0x000009, "Member 'MoviePipelineConfigBase_FindSettingByClass::bExactMatch' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingByClass, ReturnValue) == 0x000010, "Member 'MoviePipelineConfigBase_FindSettingByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingsByClass
// 0x0020 (0x0020 - 0x0000)
struct MoviePipelineConfigBase_FindSettingsByClass final
{
public:
	TSubclassOf<class UMoviePipelineSetting>      InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDisabledSettings;                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_FindSettingsByClass) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_FindSettingsByClass");
static_assert(sizeof(MoviePipelineConfigBase_FindSettingsByClass) == 0x000020, "Wrong size on MoviePipelineConfigBase_FindSettingsByClass");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, InClass) == 0x000000, "Member 'MoviePipelineConfigBase_FindSettingsByClass::InClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, bIncludeDisabledSettings) == 0x000008, "Member 'MoviePipelineConfigBase_FindSettingsByClass::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, bExactMatch) == 0x000009, "Member 'MoviePipelineConfigBase_FindSettingsByClass::bExactMatch' has a wrong offset!");
static_assert(offsetof(MoviePipelineConfigBase_FindSettingsByClass, ReturnValue) == 0x000010, "Member 'MoviePipelineConfigBase_FindSettingsByClass::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.GetConfigOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineConfigBase_GetConfigOrigin final
{
public:
	class UMoviePipelineConfigBase*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_GetConfigOrigin) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_GetConfigOrigin");
static_assert(sizeof(MoviePipelineConfigBase_GetConfigOrigin) == 0x000008, "Wrong size on MoviePipelineConfigBase_GetConfigOrigin");
static_assert(offsetof(MoviePipelineConfigBase_GetConfigOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineConfigBase_GetConfigOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineConfigBase.GetUserSettings
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineConfigBase_GetUserSettings final
{
public:
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineConfigBase_GetUserSettings) == 0x000008, "Wrong alignment on MoviePipelineConfigBase_GetUserSettings");
static_assert(sizeof(MoviePipelineConfigBase_GetUserSettings) == 0x000010, "Wrong size on MoviePipelineConfigBase_GetUserSettings");
static_assert(offsetof(MoviePipelineConfigBase_GetUserSettings, ReturnValue) == 0x000000, "Member 'MoviePipelineConfigBase_GetUserSettings::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.ConnectSocket
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorBase_ConnectSocket final
{
public:
	class FString                                 InHostName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InPort;                                            // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorBase_ConnectSocket) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_ConnectSocket");
static_assert(sizeof(MoviePipelineExecutorBase_ConnectSocket) == 0x000018, "Wrong size on MoviePipelineExecutorBase_ConnectSocket");
static_assert(offsetof(MoviePipelineExecutorBase_ConnectSocket, InHostName) == 0x000000, "Member 'MoviePipelineExecutorBase_ConnectSocket::InHostName' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_ConnectSocket, InPort) == 0x000010, "Member 'MoviePipelineExecutorBase_ConnectSocket::InPort' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_ConnectSocket, ReturnValue) == 0x000014, "Member 'MoviePipelineExecutorBase_ConnectSocket::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.Execute
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorBase_Execute final
{
public:
	class UMoviePipelineQueue*                    InPipelineQueue;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_Execute) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_Execute");
static_assert(sizeof(MoviePipelineExecutorBase_Execute) == 0x000008, "Wrong size on MoviePipelineExecutorBase_Execute");
static_assert(offsetof(MoviePipelineExecutorBase_Execute, InPipelineQueue) == 0x000000, "Member 'MoviePipelineExecutorBase_Execute::InPipelineQueue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.OnExecutorErroredImpl
// 0x0028 (0x0028 - 0x0000)
struct MoviePipelineExecutorBase_OnExecutorErroredImpl final
{
public:
	class UMoviePipeline*                         ErroredPipeline;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFatal;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ErrorReason;                                       // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_OnExecutorErroredImpl) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_OnExecutorErroredImpl");
static_assert(sizeof(MoviePipelineExecutorBase_OnExecutorErroredImpl) == 0x000028, "Wrong size on MoviePipelineExecutorBase_OnExecutorErroredImpl");
static_assert(offsetof(MoviePipelineExecutorBase_OnExecutorErroredImpl, ErroredPipeline) == 0x000000, "Member 'MoviePipelineExecutorBase_OnExecutorErroredImpl::ErroredPipeline' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_OnExecutorErroredImpl, bFatal) == 0x000008, "Member 'MoviePipelineExecutorBase_OnExecutorErroredImpl::bFatal' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_OnExecutorErroredImpl, ErrorReason) == 0x000010, "Member 'MoviePipelineExecutorBase_OnExecutorErroredImpl::ErrorReason' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SendHTTPRequest
// 0x0088 (0x0088 - 0x0000)
struct MoviePipelineExecutorBase_SendHTTPRequest final
{
public:
	class FString                                 InURL;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InVerb;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InMessage;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            InHeaders;                                         // 0x0030(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0080(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorBase_SendHTTPRequest) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SendHTTPRequest");
static_assert(sizeof(MoviePipelineExecutorBase_SendHTTPRequest) == 0x000088, "Wrong size on MoviePipelineExecutorBase_SendHTTPRequest");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InURL) == 0x000000, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InURL' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InVerb) == 0x000010, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InVerb' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InMessage) == 0x000020, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InMessage' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, InHeaders) == 0x000030, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::InHeaders' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendHTTPRequest, ReturnValue) == 0x000080, "Member 'MoviePipelineExecutorBase_SendHTTPRequest::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SendSocketMessage
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorBase_SendSocketMessage final
{
public:
	class FString                                 InMessage;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineExecutorBase_SendSocketMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SendSocketMessage");
static_assert(sizeof(MoviePipelineExecutorBase_SendSocketMessage) == 0x000018, "Wrong size on MoviePipelineExecutorBase_SendSocketMessage");
static_assert(offsetof(MoviePipelineExecutorBase_SendSocketMessage, InMessage) == 0x000000, "Member 'MoviePipelineExecutorBase_SendSocketMessage::InMessage' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorBase_SendSocketMessage, ReturnValue) == 0x000010, "Member 'MoviePipelineExecutorBase_SendSocketMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SetMoviePipelineClass
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorBase_SetMoviePipelineClass final
{
public:
	class UClass*                                 InPipelineClass;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_SetMoviePipelineClass) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SetMoviePipelineClass");
static_assert(sizeof(MoviePipelineExecutorBase_SetMoviePipelineClass) == 0x000008, "Wrong size on MoviePipelineExecutorBase_SetMoviePipelineClass");
static_assert(offsetof(MoviePipelineExecutorBase_SetMoviePipelineClass, InPipelineClass) == 0x000000, "Member 'MoviePipelineExecutorBase_SetMoviePipelineClass::InPipelineClass' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorBase_SetStatusMessage final
{
public:
	class FString                                 InStatus;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_SetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_SetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorBase_SetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorBase_SetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorBase_SetStatusMessage, InStatus) == 0x000000, "Member 'MoviePipelineExecutorBase_SetStatusMessage::InStatus' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorBase_SetStatusProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_SetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorBase_SetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorBase_SetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorBase_SetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorBase_SetStatusProgress, InProgress) == 0x000000, "Member 'MoviePipelineExecutorBase_SetStatusProgress::InProgress' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorBase_GetStatusMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_GetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorBase_GetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorBase_GetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorBase_GetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorBase_GetStatusMessage, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_GetStatusMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorBase_GetStatusProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_GetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorBase_GetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorBase_GetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorBase_GetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorBase_GetStatusProgress, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_GetStatusProgress::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.IsRendering
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorBase_IsRendering final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_IsRendering) == 0x000001, "Wrong alignment on MoviePipelineExecutorBase_IsRendering");
static_assert(sizeof(MoviePipelineExecutorBase_IsRendering) == 0x000001, "Wrong size on MoviePipelineExecutorBase_IsRendering");
static_assert(offsetof(MoviePipelineExecutorBase_IsRendering, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_IsRendering::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorBase.IsSocketConnected
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorBase_IsSocketConnected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorBase_IsSocketConnected) == 0x000001, "Wrong alignment on MoviePipelineExecutorBase_IsSocketConnected");
static_assert(sizeof(MoviePipelineExecutorBase_IsSocketConnected) == 0x000001, "Wrong size on MoviePipelineExecutorBase_IsSocketConnected");
static_assert(offsetof(MoviePipelineExecutorBase_IsSocketConnected, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorBase_IsSocketConnected::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetAllSettings
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelinePrimaryConfig_GetAllSettings final
{
public:
	bool                                          bIncludeDisabledSettings;                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeTransientSettings;                         // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePrimaryConfig_GetAllSettings) == 0x000008, "Wrong alignment on MoviePipelinePrimaryConfig_GetAllSettings");
static_assert(sizeof(MoviePipelinePrimaryConfig_GetAllSettings) == 0x000018, "Wrong size on MoviePipelinePrimaryConfig_GetAllSettings");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetAllSettings, bIncludeDisabledSettings) == 0x000000, "Member 'MoviePipelinePrimaryConfig_GetAllSettings::bIncludeDisabledSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetAllSettings, bIncludeTransientSettings) == 0x000001, "Member 'MoviePipelinePrimaryConfig_GetAllSettings::bIncludeTransientSettings' has a wrong offset!");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetAllSettings, ReturnValue) == 0x000008, "Member 'MoviePipelinePrimaryConfig_GetAllSettings::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetEffectiveFrameRate
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelinePrimaryConfig_GetEffectiveFrameRate final
{
public:
	const class ULevelSequence*                   InSequence;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRate                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate) == 0x000008, "Wrong alignment on MoviePipelinePrimaryConfig_GetEffectiveFrameRate");
static_assert(sizeof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate) == 0x000010, "Wrong size on MoviePipelinePrimaryConfig_GetEffectiveFrameRate");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate, InSequence) == 0x000000, "Member 'MoviePipelinePrimaryConfig_GetEffectiveFrameRate::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetEffectiveFrameRate, ReturnValue) == 0x000008, "Member 'MoviePipelinePrimaryConfig_GetEffectiveFrameRate::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetTransientSettings
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelinePrimaryConfig_GetTransientSettings final
{
public:
	TArray<class UMoviePipelineSetting*>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePrimaryConfig_GetTransientSettings) == 0x000008, "Wrong alignment on MoviePipelinePrimaryConfig_GetTransientSettings");
static_assert(sizeof(MoviePipelinePrimaryConfig_GetTransientSettings) == 0x000010, "Wrong size on MoviePipelinePrimaryConfig_GetTransientSettings");
static_assert(offsetof(MoviePipelinePrimaryConfig_GetTransientSettings, ReturnValue) == 0x000000, "Member 'MoviePipelinePrimaryConfig_GetTransientSettings::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.ExecuteDelayed
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelinePythonHostExecutor_ExecuteDelayed final
{
public:
	class UMoviePipelineQueue*                    InPipelineQueue;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePythonHostExecutor_ExecuteDelayed) == 0x000008, "Wrong alignment on MoviePipelinePythonHostExecutor_ExecuteDelayed");
static_assert(sizeof(MoviePipelinePythonHostExecutor_ExecuteDelayed) == 0x000008, "Wrong size on MoviePipelinePythonHostExecutor_ExecuteDelayed");
static_assert(offsetof(MoviePipelinePythonHostExecutor_ExecuteDelayed, InPipelineQueue) == 0x000000, "Member 'MoviePipelinePythonHostExecutor_ExecuteDelayed::InPipelineQueue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.OnMapLoad
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelinePythonHostExecutor_OnMapLoad final
{
public:
	class UWorld*                                 InWorld;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePythonHostExecutor_OnMapLoad) == 0x000008, "Wrong alignment on MoviePipelinePythonHostExecutor_OnMapLoad");
static_assert(sizeof(MoviePipelinePythonHostExecutor_OnMapLoad) == 0x000008, "Wrong size on MoviePipelinePythonHostExecutor_OnMapLoad");
static_assert(offsetof(MoviePipelinePythonHostExecutor_OnMapLoad, InWorld) == 0x000000, "Member 'MoviePipelinePythonHostExecutor_OnMapLoad::InWorld' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.GetLastLoadedWorld
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelinePythonHostExecutor_GetLastLoadedWorld final
{
public:
	class UWorld*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelinePythonHostExecutor_GetLastLoadedWorld) == 0x000008, "Wrong alignment on MoviePipelinePythonHostExecutor_GetLastLoadedWorld");
static_assert(sizeof(MoviePipelinePythonHostExecutor_GetLastLoadedWorld) == 0x000008, "Wrong size on MoviePipelinePythonHostExecutor_GetLastLoadedWorld");
static_assert(offsetof(MoviePipelinePythonHostExecutor_GetLastLoadedWorld, ReturnValue) == 0x000000, "Member 'MoviePipelinePythonHostExecutor_GetLastLoadedWorld::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.AllocateNewShotOverrideConfig
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_AllocateNewShotOverrideConfig final
{
public:
	TSubclassOf<class UMoviePipelineShotConfig>   InConfigType;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineShotConfig*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_AllocateNewShotOverrideConfig");
static_assert(sizeof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig) == 0x000010, "Wrong size on MoviePipelineExecutorShot_AllocateNewShotOverrideConfig");
static_assert(offsetof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig, InConfigType) == 0x000000, "Member 'MoviePipelineExecutorShot_AllocateNewShotOverrideConfig::InConfigType' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_AllocateNewShotOverrideConfig, ReturnValue) == 0x000008, "Member 'MoviePipelineExecutorShot_AllocateNewShotOverrideConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetGraphConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_SetGraphConfig final
{
public:
	class UMovieGraphConfig*                      InGraphConfig;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetGraphConfig) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetGraphConfig");
static_assert(sizeof(MoviePipelineExecutorShot_SetGraphConfig) == 0x000008, "Wrong size on MoviePipelineExecutorShot_SetGraphConfig");
static_assert(offsetof(MoviePipelineExecutorShot_SetGraphConfig, InGraphConfig) == 0x000000, "Member 'MoviePipelineExecutorShot_SetGraphConfig::InGraphConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetGraphPreset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_SetGraphPreset final
{
public:
	const class UMovieGraphConfig*                InGraphPreset;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorShot_SetGraphPreset) == 0x000008, "Wrong size on MoviePipelineExecutorShot_SetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorShot_SetGraphPreset, InGraphPreset) == 0x000000, "Member 'MoviePipelineExecutorShot_SetGraphPreset::InGraphPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverrideConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_SetShotOverrideConfiguration final
{
public:
	class UMoviePipelineShotConfig*               InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetShotOverrideConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetShotOverrideConfiguration");
static_assert(sizeof(MoviePipelineExecutorShot_SetShotOverrideConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorShot_SetShotOverrideConfiguration");
static_assert(offsetof(MoviePipelineExecutorShot_SetShotOverrideConfiguration, InPreset) == 0x000000, "Member 'MoviePipelineExecutorShot_SetShotOverrideConfiguration::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverridePresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_SetShotOverridePresetOrigin final
{
public:
	class UMoviePipelineShotConfig*               InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetShotOverridePresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetShotOverridePresetOrigin");
static_assert(sizeof(MoviePipelineExecutorShot_SetShotOverridePresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorShot_SetShotOverridePresetOrigin");
static_assert(offsetof(MoviePipelineExecutorShot_SetShotOverridePresetOrigin, InPreset) == 0x000000, "Member 'MoviePipelineExecutorShot_SetShotOverridePresetOrigin::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_SetStatusMessage final
{
public:
	class FString                                 InStatus;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_SetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorShot_SetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorShot_SetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorShot_SetStatusMessage, InStatus) == 0x000000, "Member 'MoviePipelineExecutorShot_SetStatusMessage::InStatus' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorShot_SetStatusProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_SetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorShot_SetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorShot_SetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorShot_SetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorShot_SetStatusProgress, InProgress) == 0x000000, "Member 'MoviePipelineExecutorShot_SetStatusProgress::InProgress' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetCameraName
// 0x0018 (0x0018 - 0x0000)
struct MoviePipelineExecutorShot_GetCameraName final
{
public:
	int32                                         InCameraIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetCameraName) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetCameraName");
static_assert(sizeof(MoviePipelineExecutorShot_GetCameraName) == 0x000018, "Wrong size on MoviePipelineExecutorShot_GetCameraName");
static_assert(offsetof(MoviePipelineExecutorShot_GetCameraName, InCameraIndex) == 0x000000, "Member 'MoviePipelineExecutorShot_GetCameraName::InCameraIndex' has a wrong offset!");
static_assert(offsetof(MoviePipelineExecutorShot_GetCameraName, ReturnValue) == 0x000008, "Member 'MoviePipelineExecutorShot_GetCameraName::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetGraphConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetGraphConfig final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetGraphConfig) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetGraphConfig");
static_assert(sizeof(MoviePipelineExecutorShot_GetGraphConfig) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetGraphConfig");
static_assert(offsetof(MoviePipelineExecutorShot_GetGraphConfig, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetGraphConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetGraphPreset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetGraphPreset final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorShot_GetGraphPreset) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorShot_GetGraphPreset, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetGraphPreset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverrideConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetShotOverrideConfiguration final
{
public:
	class UMoviePipelineShotConfig*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetShotOverrideConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetShotOverrideConfiguration");
static_assert(sizeof(MoviePipelineExecutorShot_GetShotOverrideConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetShotOverrideConfiguration");
static_assert(offsetof(MoviePipelineExecutorShot_GetShotOverrideConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetShotOverrideConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverridePresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorShot_GetShotOverridePresetOrigin final
{
public:
	class UMoviePipelineShotConfig*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetShotOverridePresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetShotOverridePresetOrigin");
static_assert(sizeof(MoviePipelineExecutorShot_GetShotOverridePresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorShot_GetShotOverridePresetOrigin");
static_assert(offsetof(MoviePipelineExecutorShot_GetShotOverridePresetOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetShotOverridePresetOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorShot_GetStatusMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorShot_GetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorShot_GetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorShot_GetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorShot_GetStatusMessage, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetStatusMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorShot_GetStatusProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_GetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorShot_GetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorShot_GetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorShot_GetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorShot_GetStatusProgress, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_GetStatusProgress::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.IsUsingGraphConfiguration
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorShot_IsUsingGraphConfiguration final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_IsUsingGraphConfiguration) == 0x000001, "Wrong alignment on MoviePipelineExecutorShot_IsUsingGraphConfiguration");
static_assert(sizeof(MoviePipelineExecutorShot_IsUsingGraphConfiguration) == 0x000001, "Wrong size on MoviePipelineExecutorShot_IsUsingGraphConfiguration");
static_assert(offsetof(MoviePipelineExecutorShot_IsUsingGraphConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_IsUsingGraphConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorShot.ShouldRender
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorShot_ShouldRender final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorShot_ShouldRender) == 0x000001, "Wrong alignment on MoviePipelineExecutorShot_ShouldRender");
static_assert(sizeof(MoviePipelineExecutorShot_ShouldRender) == 0x000001, "Wrong size on MoviePipelineExecutorShot_ShouldRender");
static_assert(offsetof(MoviePipelineExecutorShot_ShouldRender, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorShot_ShouldRender::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_SetConfiguration final
{
public:
	class UMoviePipelinePrimaryConfig*            InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetConfiguration");
static_assert(sizeof(MoviePipelineExecutorJob_SetConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorJob_SetConfiguration");
static_assert(offsetof(MoviePipelineExecutorJob_SetConfiguration, InPreset) == 0x000000, "Member 'MoviePipelineExecutorJob_SetConfiguration::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConsumed
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_SetConsumed final
{
public:
	bool                                          bInConsumed;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetConsumed) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_SetConsumed");
static_assert(sizeof(MoviePipelineExecutorJob_SetConsumed) == 0x000001, "Wrong size on MoviePipelineExecutorJob_SetConsumed");
static_assert(offsetof(MoviePipelineExecutorJob_SetConsumed, bInConsumed) == 0x000000, "Member 'MoviePipelineExecutorJob_SetConsumed::bInConsumed' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetGraphConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_SetGraphConfig final
{
public:
	class UMovieGraphConfig*                      InGraphConfig;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetGraphConfig) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetGraphConfig");
static_assert(sizeof(MoviePipelineExecutorJob_SetGraphConfig) == 0x000008, "Wrong size on MoviePipelineExecutorJob_SetGraphConfig");
static_assert(offsetof(MoviePipelineExecutorJob_SetGraphConfig, InGraphConfig) == 0x000000, "Member 'MoviePipelineExecutorJob_SetGraphConfig::InGraphConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetGraphPreset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_SetGraphPreset final
{
public:
	const class UMovieGraphConfig*                InGraphPreset;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorJob_SetGraphPreset) == 0x000008, "Wrong size on MoviePipelineExecutorJob_SetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorJob_SetGraphPreset, InGraphPreset) == 0x000000, "Member 'MoviePipelineExecutorJob_SetGraphPreset::InGraphPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_SetIsEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetIsEnabled) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_SetIsEnabled");
static_assert(sizeof(MoviePipelineExecutorJob_SetIsEnabled) == 0x000001, "Wrong size on MoviePipelineExecutorJob_SetIsEnabled");
static_assert(offsetof(MoviePipelineExecutorJob_SetIsEnabled, bInEnabled) == 0x000000, "Member 'MoviePipelineExecutorJob_SetIsEnabled::bInEnabled' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetPresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_SetPresetOrigin final
{
public:
	class UMoviePipelinePrimaryConfig*            InPreset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetPresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetPresetOrigin");
static_assert(sizeof(MoviePipelineExecutorJob_SetPresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorJob_SetPresetOrigin");
static_assert(offsetof(MoviePipelineExecutorJob_SetPresetOrigin, InPreset) == 0x000000, "Member 'MoviePipelineExecutorJob_SetPresetOrigin::InPreset' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetSequence
// 0x0028 (0x0028 - 0x0000)
struct MoviePipelineExecutorJob_SetSequence final
{
public:
	struct FSoftObjectPath                        InSequence;                                        // 0x0000(0x0028)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetSequence) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetSequence");
static_assert(sizeof(MoviePipelineExecutorJob_SetSequence) == 0x000028, "Wrong size on MoviePipelineExecutorJob_SetSequence");
static_assert(offsetof(MoviePipelineExecutorJob_SetSequence, InSequence) == 0x000000, "Member 'MoviePipelineExecutorJob_SetSequence::InSequence' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorJob_SetStatusMessage final
{
public:
	class FString                                 InStatus;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_SetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorJob_SetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorJob_SetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorJob_SetStatusMessage, InStatus) == 0x000000, "Member 'MoviePipelineExecutorJob_SetStatusMessage::InStatus' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorJob_SetStatusProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_SetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorJob_SetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorJob_SetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorJob_SetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorJob_SetStatusProgress, InProgress) == 0x000000, "Member 'MoviePipelineExecutorJob_SetStatusProgress::InProgress' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetConfiguration
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetConfiguration final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetConfiguration) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetConfiguration");
static_assert(sizeof(MoviePipelineExecutorJob_GetConfiguration) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetConfiguration");
static_assert(offsetof(MoviePipelineExecutorJob_GetConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetGraphConfig
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetGraphConfig final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetGraphConfig) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetGraphConfig");
static_assert(sizeof(MoviePipelineExecutorJob_GetGraphConfig) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetGraphConfig");
static_assert(offsetof(MoviePipelineExecutorJob_GetGraphConfig, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetGraphConfig::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetGraphPreset
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetGraphPreset final
{
public:
	class UMovieGraphConfig*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetGraphPreset) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetGraphPreset");
static_assert(sizeof(MoviePipelineExecutorJob_GetGraphPreset) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetGraphPreset");
static_assert(offsetof(MoviePipelineExecutorJob_GetGraphPreset, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetGraphPreset::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetPresetOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineExecutorJob_GetPresetOrigin final
{
public:
	class UMoviePipelinePrimaryConfig*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetPresetOrigin) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetPresetOrigin");
static_assert(sizeof(MoviePipelineExecutorJob_GetPresetOrigin) == 0x000008, "Wrong size on MoviePipelineExecutorJob_GetPresetOrigin");
static_assert(offsetof(MoviePipelineExecutorJob_GetPresetOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetPresetOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusMessage
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineExecutorJob_GetStatusMessage final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetStatusMessage) == 0x000008, "Wrong alignment on MoviePipelineExecutorJob_GetStatusMessage");
static_assert(sizeof(MoviePipelineExecutorJob_GetStatusMessage) == 0x000010, "Wrong size on MoviePipelineExecutorJob_GetStatusMessage");
static_assert(offsetof(MoviePipelineExecutorJob_GetStatusMessage, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetStatusMessage::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusProgress
// 0x0004 (0x0004 - 0x0000)
struct MoviePipelineExecutorJob_GetStatusProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_GetStatusProgress) == 0x000004, "Wrong alignment on MoviePipelineExecutorJob_GetStatusProgress");
static_assert(sizeof(MoviePipelineExecutorJob_GetStatusProgress) == 0x000004, "Wrong size on MoviePipelineExecutorJob_GetStatusProgress");
static_assert(offsetof(MoviePipelineExecutorJob_GetStatusProgress, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_GetStatusProgress::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.IsConsumed
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_IsConsumed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_IsConsumed) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_IsConsumed");
static_assert(sizeof(MoviePipelineExecutorJob_IsConsumed) == 0x000001, "Wrong size on MoviePipelineExecutorJob_IsConsumed");
static_assert(offsetof(MoviePipelineExecutorJob_IsConsumed, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_IsConsumed::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_IsEnabled) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_IsEnabled");
static_assert(sizeof(MoviePipelineExecutorJob_IsEnabled) == 0x000001, "Wrong size on MoviePipelineExecutorJob_IsEnabled");
static_assert(offsetof(MoviePipelineExecutorJob_IsEnabled, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_IsEnabled::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineExecutorJob.IsUsingGraphConfiguration
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineExecutorJob_IsUsingGraphConfiguration final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineExecutorJob_IsUsingGraphConfiguration) == 0x000001, "Wrong alignment on MoviePipelineExecutorJob_IsUsingGraphConfiguration");
static_assert(sizeof(MoviePipelineExecutorJob_IsUsingGraphConfiguration) == 0x000001, "Wrong size on MoviePipelineExecutorJob_IsUsingGraphConfiguration");
static_assert(offsetof(MoviePipelineExecutorJob_IsUsingGraphConfiguration, ReturnValue) == 0x000000, "Member 'MoviePipelineExecutorJob_IsUsingGraphConfiguration::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.AllocateNewJob
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_AllocateNewJob final
{
public:
	TSubclassOf<class UMoviePipelineExecutorJob>  InJobType;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_AllocateNewJob) == 0x000008, "Wrong alignment on MoviePipelineQueue_AllocateNewJob");
static_assert(sizeof(MoviePipelineQueue_AllocateNewJob) == 0x000010, "Wrong size on MoviePipelineQueue_AllocateNewJob");
static_assert(offsetof(MoviePipelineQueue_AllocateNewJob, InJobType) == 0x000000, "Member 'MoviePipelineQueue_AllocateNewJob::InJobType' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueue_AllocateNewJob, ReturnValue) == 0x000008, "Member 'MoviePipelineQueue_AllocateNewJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.CopyFrom
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_CopyFrom final
{
public:
	class UMoviePipelineQueue*                    InQueue;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_CopyFrom) == 0x000008, "Wrong alignment on MoviePipelineQueue_CopyFrom");
static_assert(sizeof(MoviePipelineQueue_CopyFrom) == 0x000008, "Wrong size on MoviePipelineQueue_CopyFrom");
static_assert(offsetof(MoviePipelineQueue_CopyFrom, InQueue) == 0x000000, "Member 'MoviePipelineQueue_CopyFrom::InQueue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.DeleteJob
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_DeleteJob final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_DeleteJob) == 0x000008, "Wrong alignment on MoviePipelineQueue_DeleteJob");
static_assert(sizeof(MoviePipelineQueue_DeleteJob) == 0x000008, "Wrong size on MoviePipelineQueue_DeleteJob");
static_assert(offsetof(MoviePipelineQueue_DeleteJob, InJob) == 0x000000, "Member 'MoviePipelineQueue_DeleteJob::InJob' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.DuplicateJob
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_DuplicateJob final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_DuplicateJob) == 0x000008, "Wrong alignment on MoviePipelineQueue_DuplicateJob");
static_assert(sizeof(MoviePipelineQueue_DuplicateJob) == 0x000010, "Wrong size on MoviePipelineQueue_DuplicateJob");
static_assert(offsetof(MoviePipelineQueue_DuplicateJob, InJob) == 0x000000, "Member 'MoviePipelineQueue_DuplicateJob::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueue_DuplicateJob, ReturnValue) == 0x000008, "Member 'MoviePipelineQueue_DuplicateJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.SetJobIndex
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_SetJobIndex final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineQueue_SetJobIndex) == 0x000008, "Wrong alignment on MoviePipelineQueue_SetJobIndex");
static_assert(sizeof(MoviePipelineQueue_SetJobIndex) == 0x000010, "Wrong size on MoviePipelineQueue_SetJobIndex");
static_assert(offsetof(MoviePipelineQueue_SetJobIndex, InJob) == 0x000000, "Member 'MoviePipelineQueue_SetJobIndex::InJob' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueue_SetJobIndex, Index_0) == 0x000008, "Member 'MoviePipelineQueue_SetJobIndex::Index_0' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.SetQueueOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_SetQueueOrigin final
{
public:
	class UMoviePipelineQueue*                    InConfig;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_SetQueueOrigin) == 0x000008, "Wrong alignment on MoviePipelineQueue_SetQueueOrigin");
static_assert(sizeof(MoviePipelineQueue_SetQueueOrigin) == 0x000008, "Wrong size on MoviePipelineQueue_SetQueueOrigin");
static_assert(offsetof(MoviePipelineQueue_SetQueueOrigin, InConfig) == 0x000000, "Member 'MoviePipelineQueue_SetQueueOrigin::InConfig' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.GetJobs
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueue_GetJobs final
{
public:
	TArray<class UMoviePipelineExecutorJob*>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_GetJobs) == 0x000008, "Wrong alignment on MoviePipelineQueue_GetJobs");
static_assert(sizeof(MoviePipelineQueue_GetJobs) == 0x000010, "Wrong size on MoviePipelineQueue_GetJobs");
static_assert(offsetof(MoviePipelineQueue_GetJobs, ReturnValue) == 0x000000, "Member 'MoviePipelineQueue_GetJobs::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueue.GetQueueOrigin
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueue_GetQueueOrigin final
{
public:
	class UMoviePipelineQueue*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueue_GetQueueOrigin) == 0x000008, "Wrong alignment on MoviePipelineQueue_GetQueueOrigin");
static_assert(sizeof(MoviePipelineQueue_GetQueueOrigin) == 0x000008, "Wrong size on MoviePipelineQueue_GetQueueOrigin");
static_assert(offsetof(MoviePipelineQueue_GetQueueOrigin, ReturnValue) == 0x000000, "Member 'MoviePipelineQueue_GetQueueOrigin::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.AllocateJob
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_AllocateJob final
{
public:
	class ULevelSequence*                         InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorJob*              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_AllocateJob) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_AllocateJob");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_AllocateJob) == 0x000010, "Wrong size on MoviePipelineQueueEngineSubsystem_AllocateJob");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_AllocateJob, InSequence) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_AllocateJob::InSequence' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_AllocateJob, ReturnValue) == 0x000008, "Member 'MoviePipelineQueueEngineSubsystem_AllocateJob::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderJob
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_RenderJob final
{
public:
	class UMoviePipelineExecutorJob*              InJob;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_RenderJob) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_RenderJob");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_RenderJob) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_RenderJob");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderJob, InJob) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_RenderJob::InJob' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutor
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor final
{
public:
	TSubclassOf<class UMoviePipelineExecutorBase> InExecutorType;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMoviePipelineExecutorBase*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor) == 0x000010, "Wrong size on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor, InExecutorType) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor::InExecutorType' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor, ReturnValue) == 0x000008, "Member 'MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutorInstance
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance final
{
public:
	class UMoviePipelineExecutorBase*             InExecutor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance, InExecutor) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance::InExecutor' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.SetConfiguration
// 0x0010 (0x0010 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_SetConfiguration final
{
public:
	TSubclassOf<class UMovieRenderDebugWidget>    InProgressWidgetClass;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderPlayerViewport;                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_SetConfiguration) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_SetConfiguration");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_SetConfiguration) == 0x000010, "Wrong size on MoviePipelineQueueEngineSubsystem_SetConfiguration");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_SetConfiguration, InProgressWidgetClass) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_SetConfiguration::InProgressWidgetClass' has a wrong offset!");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_SetConfiguration, bRenderPlayerViewport) == 0x000008, "Member 'MoviePipelineQueueEngineSubsystem_SetConfiguration::bRenderPlayerViewport' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetActiveExecutor
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_GetActiveExecutor final
{
public:
	class UMoviePipelineExecutorBase*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_GetActiveExecutor) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_GetActiveExecutor");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_GetActiveExecutor) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_GetActiveExecutor");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_GetActiveExecutor, ReturnValue) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_GetActiveExecutor::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetQueue
// 0x0008 (0x0008 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_GetQueue final
{
public:
	class UMoviePipelineQueue*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_GetQueue) == 0x000008, "Wrong alignment on MoviePipelineQueueEngineSubsystem_GetQueue");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_GetQueue) == 0x000008, "Wrong size on MoviePipelineQueueEngineSubsystem_GetQueue");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_GetQueue, ReturnValue) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_GetQueue::ReturnValue' has a wrong offset!");

// Function MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.IsRendering
// 0x0001 (0x0001 - 0x0000)
struct MoviePipelineQueueEngineSubsystem_IsRendering final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MoviePipelineQueueEngineSubsystem_IsRendering) == 0x000001, "Wrong alignment on MoviePipelineQueueEngineSubsystem_IsRendering");
static_assert(sizeof(MoviePipelineQueueEngineSubsystem_IsRendering) == 0x000001, "Wrong size on MoviePipelineQueueEngineSubsystem_IsRendering");
static_assert(offsetof(MoviePipelineQueueEngineSubsystem_IsRendering, ReturnValue) == 0x000000, "Member 'MoviePipelineQueueEngineSubsystem_IsRendering::ReturnValue' has a wrong offset!");

}


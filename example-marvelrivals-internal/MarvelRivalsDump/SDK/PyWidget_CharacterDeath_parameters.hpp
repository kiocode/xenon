#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_CharacterDeath

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_CharacterDeath.PyWidget3D_RespawnCountdown.PlayerRespawnStart
// 0x0004 (0x0004 - 0x0000)
struct PyWidget3D_RespawnCountdown_PlayerRespawnStart final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget3D_RespawnCountdown_PlayerRespawnStart) == 0x000004, "Wrong alignment on PyWidget3D_RespawnCountdown_PlayerRespawnStart");
static_assert(sizeof(PyWidget3D_RespawnCountdown_PlayerRespawnStart) == 0x000004, "Wrong size on PyWidget3D_RespawnCountdown_PlayerRespawnStart");
static_assert(offsetof(PyWidget3D_RespawnCountdown_PlayerRespawnStart, Time) == 0x000000, "Member 'PyWidget3D_RespawnCountdown_PlayerRespawnStart::Time' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget3D_RespawnCountdown.SetRespawnTime
// 0x0004 (0x0004 - 0x0000)
struct PyWidget3D_RespawnCountdown_SetRespawnTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget3D_RespawnCountdown_SetRespawnTime) == 0x000004, "Wrong alignment on PyWidget3D_RespawnCountdown_SetRespawnTime");
static_assert(sizeof(PyWidget3D_RespawnCountdown_SetRespawnTime) == 0x000004, "Wrong size on PyWidget3D_RespawnCountdown_SetRespawnTime");
static_assert(offsetof(PyWidget3D_RespawnCountdown_SetRespawnTime, Time) == 0x000000, "Member 'PyWidget3D_RespawnCountdown_SetRespawnTime::Time' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget3D_RespawnCountdown.SetCanBeResurrected
// 0x0001 (0x0001 - 0x0000)
struct PyWidget3D_RespawnCountdown_SetCanBeResurrected final
{
public:
	bool                                          CanBeResurrected;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget3D_RespawnCountdown_SetCanBeResurrected) == 0x000001, "Wrong alignment on PyWidget3D_RespawnCountdown_SetCanBeResurrected");
static_assert(sizeof(PyWidget3D_RespawnCountdown_SetCanBeResurrected) == 0x000001, "Wrong size on PyWidget3D_RespawnCountdown_SetCanBeResurrected");
static_assert(offsetof(PyWidget3D_RespawnCountdown_SetCanBeResurrected, CanBeResurrected) == 0x000000, "Member 'PyWidget3D_RespawnCountdown_SetCanBeResurrected::CanBeResurrected' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget3D_RespawnCountdown.SetProgressBarColor
// 0x0010 (0x0010 - 0x0000)
struct PyWidget3D_RespawnCountdown_SetProgressBarColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget3D_RespawnCountdown_SetProgressBarColor) == 0x000004, "Wrong alignment on PyWidget3D_RespawnCountdown_SetProgressBarColor");
static_assert(sizeof(PyWidget3D_RespawnCountdown_SetProgressBarColor) == 0x000010, "Wrong size on PyWidget3D_RespawnCountdown_SetProgressBarColor");
static_assert(offsetof(PyWidget3D_RespawnCountdown_SetProgressBarColor, Color) == 0x000000, "Member 'PyWidget3D_RespawnCountdown_SetProgressBarColor::Color' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget3D_RespawnCountdown.ShouldBeVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget3D_RespawnCountdown_ShouldBeVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget3D_RespawnCountdown_ShouldBeVisible) == 0x000001, "Wrong alignment on PyWidget3D_RespawnCountdown_ShouldBeVisible");
static_assert(sizeof(PyWidget3D_RespawnCountdown_ShouldBeVisible) == 0x000001, "Wrong size on PyWidget3D_RespawnCountdown_ShouldBeVisible");
static_assert(offsetof(PyWidget3D_RespawnCountdown_ShouldBeVisible, ReturnValue) == 0x000000, "Member 'PyWidget3D_RespawnCountdown_ShouldBeVisible::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget3D_RespawnCountdown.OnAnimationStarted
// 0x0008 (0x0008 - 0x0000)
struct PyWidget3D_RespawnCountdown_OnAnimationStarted final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget3D_RespawnCountdown_OnAnimationStarted) == 0x000008, "Wrong alignment on PyWidget3D_RespawnCountdown_OnAnimationStarted");
static_assert(sizeof(PyWidget3D_RespawnCountdown_OnAnimationStarted) == 0x000008, "Wrong size on PyWidget3D_RespawnCountdown_OnAnimationStarted");
static_assert(offsetof(PyWidget3D_RespawnCountdown_OnAnimationStarted, Animation) == 0x000000, "Member 'PyWidget3D_RespawnCountdown_OnAnimationStarted::Animation' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget_Warning.SetWidgetComponentOwner
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Warning_SetWidgetComponentOwner final
{
public:
	class UWidgetComponent*                       InWidgetComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Warning_SetWidgetComponentOwner) == 0x000008, "Wrong alignment on PyWidget_Warning_SetWidgetComponentOwner");
static_assert(sizeof(PyWidget_Warning_SetWidgetComponentOwner) == 0x000008, "Wrong size on PyWidget_Warning_SetWidgetComponentOwner");
static_assert(offsetof(PyWidget_Warning_SetWidgetComponentOwner, InWidgetComponent) == 0x000000, "Member 'PyWidget_Warning_SetWidgetComponentOwner::InWidgetComponent' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget_Warning.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Warning_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Warning_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_Warning_OnAnimationFinished");
static_assert(sizeof(PyWidget_Warning_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_Warning_OnAnimationFinished");
static_assert(offsetof(PyWidget_Warning_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_Warning_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_CharacterDeath.PyWidget_AbilityWarningIndicator.ShouldBeVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_AbilityWarningIndicator_ShouldBeVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_AbilityWarningIndicator_ShouldBeVisible) == 0x000001, "Wrong alignment on PyWidget_AbilityWarningIndicator_ShouldBeVisible");
static_assert(sizeof(PyWidget_AbilityWarningIndicator_ShouldBeVisible) == 0x000001, "Wrong size on PyWidget_AbilityWarningIndicator_ShouldBeVisible");
static_assert(offsetof(PyWidget_AbilityWarningIndicator_ShouldBeVisible, ReturnValue) == 0x000000, "Member 'PyWidget_AbilityWarningIndicator_ShouldBeVisible::ReturnValue' has a wrong offset!");

}


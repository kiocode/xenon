#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101483

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Hero_1014_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_101483.PyConfig_101483
// 0x0FE8 (0x1080 - 0x0098)
class UPyConfig_101483 final : public UMarvelAbilityConfig
{
public:
	float                                         FirstFireRocketDelay;                              // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireRocketDelay;                                   // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetryFireRocketDelay;                              // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             DetectTarceContext;                                // 0x00B0(0x0F90)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         AmmoInterval;                                      // 0x1040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1044[0x4];                                     // 0x1044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         WeaponSockets;                                     // 0x1048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         AmmoCount;                                         // 0x1058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalAmmoCount;                                    // 0x105C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StartRotRandom;                                    // 0x1060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1061[0x3];                                     // 0x1061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartPitchDefaultOffset;                           // 0x1064(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartPitchMaxOffset;                               // 0x1068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartYawDefaultOffset;                             // 0x106C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartYawMaxOffset;                                 // 0x1070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RocketWeaponIndex;                                 // 0x1074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParentAbilityId;                                   // 0x1078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_101483">();
	}
	static class UPyConfig_101483* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_101483>();
	}
};
static_assert(alignof(UPyConfig_101483) == 0x000010, "Wrong alignment on UPyConfig_101483");
static_assert(sizeof(UPyConfig_101483) == 0x001080, "Wrong size on UPyConfig_101483");
static_assert(offsetof(UPyConfig_101483, FirstFireRocketDelay) == 0x000098, "Member 'UPyConfig_101483::FirstFireRocketDelay' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, FireRocketDelay) == 0x00009C, "Member 'UPyConfig_101483::FireRocketDelay' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, RetryFireRocketDelay) == 0x0000A0, "Member 'UPyConfig_101483::RetryFireRocketDelay' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, DetectTarceContext) == 0x0000B0, "Member 'UPyConfig_101483::DetectTarceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, AmmoInterval) == 0x001040, "Member 'UPyConfig_101483::AmmoInterval' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, WeaponSockets) == 0x001048, "Member 'UPyConfig_101483::WeaponSockets' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, AmmoCount) == 0x001058, "Member 'UPyConfig_101483::AmmoCount' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, TotalAmmoCount) == 0x00105C, "Member 'UPyConfig_101483::TotalAmmoCount' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, StartRotRandom) == 0x001060, "Member 'UPyConfig_101483::StartRotRandom' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, StartPitchDefaultOffset) == 0x001064, "Member 'UPyConfig_101483::StartPitchDefaultOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, StartPitchMaxOffset) == 0x001068, "Member 'UPyConfig_101483::StartPitchMaxOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, StartYawDefaultOffset) == 0x00106C, "Member 'UPyConfig_101483::StartYawDefaultOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, StartYawMaxOffset) == 0x001070, "Member 'UPyConfig_101483::StartYawMaxOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, RocketWeaponIndex) == 0x001074, "Member 'UPyConfig_101483::RocketWeaponIndex' has a wrong offset!");
static_assert(offsetof(UPyConfig_101483, ParentAbilityId) == 0x001078, "Member 'UPyConfig_101483::ParentAbilityId' has a wrong offset!");

// PythonClass PyAbility_101483.PyWeapon_101483
// 0x0000 (0x0C90 - 0x0C90)
class APyWeapon_101483 : public AShootingWeapon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWeapon_101483">();
	}
	static class APyWeapon_101483* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyWeapon_101483>();
	}
};
static_assert(alignof(APyWeapon_101483) == 0x000008, "Wrong alignment on APyWeapon_101483");
static_assert(sizeof(APyWeapon_101483) == 0x000C90, "Wrong size on APyWeapon_101483");

// PythonClass PyAbility_101483.PyAbility_101483
// 0x0000 (0x2580 - 0x2580)
class UPyAbility_101483 : public UMarvelGameplayAbility
{
public:
	void BeginPlay();
	void ParentAbilityChange(EState_101481 State);
	void EndPlay();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool Cancel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_101483">();
	}
	static class UPyAbility_101483* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_101483>();
	}
};
static_assert(alignof(UPyAbility_101483) == 0x000008, "Wrong alignment on UPyAbility_101483");
static_assert(sizeof(UPyAbility_101483) == 0x002580, "Wrong size on UPyAbility_101483");

// PythonClass PyAbility_101483.PyProjectile_101483
// 0x0010 (0x3060 - 0x3050)
class APyProjectile_101483 : public AMarvelAbilityTargetActor_Projectile
{
public:
	class UProjectileHomingComponent*             HomingComponent;                                   // 0x3050(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void K2_OnBeginAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_101483">();
	}
	static class APyProjectile_101483* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_101483>();
	}
};
static_assert(alignof(APyProjectile_101483) == 0x000010, "Wrong alignment on APyProjectile_101483");
static_assert(sizeof(APyProjectile_101483) == 0x003060, "Wrong size on APyProjectile_101483");
static_assert(offsetof(APyProjectile_101483, HomingComponent) == 0x003050, "Member 'APyProjectile_101483::HomingComponent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_105233

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "PyAbility_105232_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_105233.PyConfig_105233
// 0x5358 (0x53F0 - 0x0098)
class UPyConfig_105233 final : public UMarvelAbilityConfig
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSelectAndDashInfo                     InInfo;                                            // 0x00A0(0x2C40)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         MaskDistance;                                      // 0x2CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CE4[0x4];                                     // 0x2CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDashAbilityInfo                       BaseDash;                                          // 0x2CE8(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMarvelTraceRule                       ScopeTraceRule;                                    // 0x3890(0x0390)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         FirstScopeID;                                      // 0x3C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScopeId;                                           // 0x3C24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScopeID2;                                          // 0x3C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndBuffID;                                         // 0x3C2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  BlockDashTag;                                      // 0x3C30(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDashAbilityInfo                       DashInfo;                                          // 0x3C98(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDashAbilityInfo                       DashInfoLocation;                                  // 0x4840(0x0BA8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         CSLocationDiffMax;                                 // 0x53E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DelayTimes;                                        // 0x53EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_105233">();
	}
	static class UPyConfig_105233* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_105233>();
	}
};
static_assert(alignof(UPyConfig_105233) == 0x000010, "Wrong alignment on UPyConfig_105233");
static_assert(sizeof(UPyConfig_105233) == 0x0053F0, "Wrong size on UPyConfig_105233");
static_assert(offsetof(UPyConfig_105233, InInfo) == 0x0000A0, "Member 'UPyConfig_105233::InInfo' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, MaskDistance) == 0x002CE0, "Member 'UPyConfig_105233::MaskDistance' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, BaseDash) == 0x002CE8, "Member 'UPyConfig_105233::BaseDash' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, ScopeTraceRule) == 0x003890, "Member 'UPyConfig_105233::ScopeTraceRule' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, FirstScopeID) == 0x003C20, "Member 'UPyConfig_105233::FirstScopeID' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, ScopeId) == 0x003C24, "Member 'UPyConfig_105233::ScopeId' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, ScopeID2) == 0x003C28, "Member 'UPyConfig_105233::ScopeID2' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, EndBuffID) == 0x003C2C, "Member 'UPyConfig_105233::EndBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, BlockDashTag) == 0x003C30, "Member 'UPyConfig_105233::BlockDashTag' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, DashInfo) == 0x003C98, "Member 'UPyConfig_105233::DashInfo' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, DashInfoLocation) == 0x004840, "Member 'UPyConfig_105233::DashInfoLocation' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, CSLocationDiffMax) == 0x0053E8, "Member 'UPyConfig_105233::CSLocationDiffMax' has a wrong offset!");
static_assert(offsetof(UPyConfig_105233, DelayTimes) == 0x0053EC, "Member 'UPyConfig_105233::DelayTimes' has a wrong offset!");

// PythonClass PyAbility_105233.PyAbility_105233
// 0x0000 (0x2628 - 0x2628)
class UPyAbility_105233 : public UPyAbility_105232
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_105233">();
	}
	static class UPyAbility_105233* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_105233>();
	}
};
static_assert(alignof(UPyAbility_105233) == 0x000008, "Wrong alignment on UPyAbility_105233");
static_assert(sizeof(UPyAbility_105233) == 0x002628, "Wrong size on UPyAbility_105233");

}


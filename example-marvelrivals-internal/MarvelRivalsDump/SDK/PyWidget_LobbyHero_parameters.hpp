#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_LobbyHero

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// DelegateFunction PyWidget_LobbyHero.PyWidget_Hero_Button.OnHoveredPosition__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature final
{
public:
	int32                                         HeroID_0;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Circle;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Target;                                            // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_R;                                             // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature");
static_assert(sizeof(PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature) == 0x000030, "Wrong size on PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature");
static_assert(offsetof(PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature, HeroID_0) == 0x000000, "Member 'PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature::HeroID_0' has a wrong offset!");
static_assert(offsetof(PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature, Circle) == 0x000008, "Member 'PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature::Circle' has a wrong offset!");
static_assert(offsetof(PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature, Target) == 0x000018, "Member 'PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature::Target' has a wrong offset!");
static_assert(offsetof(PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature, Max_R) == 0x000028, "Member 'PyWidget_Hero_Button_OnHoveredPosition__DelegateSignature::Max_R' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetHeroData
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Hero_Button_SetHeroData final
{
public:
	int32                                         HeroID_0;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkinID_0;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetHeroData) == 0x000004, "Wrong alignment on PyWidget_Hero_Button_SetHeroData");
static_assert(sizeof(PyWidget_Hero_Button_SetHeroData) == 0x000008, "Wrong size on PyWidget_Hero_Button_SetHeroData");
static_assert(offsetof(PyWidget_Hero_Button_SetHeroData, HeroID_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetHeroData::HeroID_0' has a wrong offset!");
static_assert(offsetof(PyWidget_Hero_Button_SetHeroData, SkinID_0) == 0x000004, "Member 'PyWidget_Hero_Button_SetHeroData::SkinID_0' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetCardName
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_Hero_Button_SetCardName final
{
public:
	class FText                                   CardName_0;                                        // 0x0000(0x0018)(Parm)
};
static_assert(alignof(PyWidget_Hero_Button_SetCardName) == 0x000008, "Wrong alignment on PyWidget_Hero_Button_SetCardName");
static_assert(sizeof(PyWidget_Hero_Button_SetCardName) == 0x000018, "Wrong size on PyWidget_Hero_Button_SetCardName");
static_assert(offsetof(PyWidget_Hero_Button_SetCardName, CardName_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetCardName::CardName_0' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetIsUnlock
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Hero_Button_SetIsUnlock final
{
public:
	bool                                          IsUnlock_0;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetIsUnlock) == 0x000001, "Wrong alignment on PyWidget_Hero_Button_SetIsUnlock");
static_assert(sizeof(PyWidget_Hero_Button_SetIsUnlock) == 0x000001, "Wrong size on PyWidget_Hero_Button_SetIsUnlock");
static_assert(offsetof(PyWidget_Hero_Button_SetIsUnlock, IsUnlock_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetIsUnlock::IsUnlock_0' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetIsEquip
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Hero_Button_SetIsEquip final
{
public:
	bool                                          IsEquip_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetIsEquip) == 0x000001, "Wrong alignment on PyWidget_Hero_Button_SetIsEquip");
static_assert(sizeof(PyWidget_Hero_Button_SetIsEquip) == 0x000001, "Wrong size on PyWidget_Hero_Button_SetIsEquip");
static_assert(offsetof(PyWidget_Hero_Button_SetIsEquip, IsEquip_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetIsEquip::IsEquip_0' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetIsNew
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Hero_Button_SetIsNew final
{
public:
	bool                                          IsNew_0;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetIsNew) == 0x000001, "Wrong alignment on PyWidget_Hero_Button_SetIsNew");
static_assert(sizeof(PyWidget_Hero_Button_SetIsNew) == 0x000001, "Wrong size on PyWidget_Hero_Button_SetIsNew");
static_assert(offsetof(PyWidget_Hero_Button_SetIsNew, IsNew_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetIsNew::IsNew_0' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetIsHeroCard
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Hero_Button_SetIsHeroCard final
{
public:
	bool                                          IsHeroCard_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetIsHeroCard) == 0x000001, "Wrong alignment on PyWidget_Hero_Button_SetIsHeroCard");
static_assert(sizeof(PyWidget_Hero_Button_SetIsHeroCard) == 0x000001, "Wrong size on PyWidget_Hero_Button_SetIsHeroCard");
static_assert(offsetof(PyWidget_Hero_Button_SetIsHeroCard, IsHeroCard_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetIsHeroCard::IsHeroCard_0' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetIsDefaultHero
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Hero_Button_SetIsDefaultHero final
{
public:
	bool                                          IsDefaultHero;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetIsDefaultHero) == 0x000001, "Wrong alignment on PyWidget_Hero_Button_SetIsDefaultHero");
static_assert(sizeof(PyWidget_Hero_Button_SetIsDefaultHero) == 0x000001, "Wrong size on PyWidget_Hero_Button_SetIsDefaultHero");
static_assert(offsetof(PyWidget_Hero_Button_SetIsDefaultHero, IsDefaultHero) == 0x000000, "Member 'PyWidget_Hero_Button_SetIsDefaultHero::IsDefaultHero' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.SetHeroAvarat
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_Hero_Button_SetHeroAvarat final
{
public:
	int32                                         HeroID_0;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShapeID_0;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_SetHeroAvarat) == 0x000008, "Wrong alignment on PyWidget_Hero_Button_SetHeroAvarat");
static_assert(sizeof(PyWidget_Hero_Button_SetHeroAvarat) == 0x000010, "Wrong size on PyWidget_Hero_Button_SetHeroAvarat");
static_assert(offsetof(PyWidget_Hero_Button_SetHeroAvarat, HeroID_0) == 0x000000, "Member 'PyWidget_Hero_Button_SetHeroAvarat::HeroID_0' has a wrong offset!");
static_assert(offsetof(PyWidget_Hero_Button_SetHeroAvarat, ShapeID_0) == 0x000004, "Member 'PyWidget_Hero_Button_SetHeroAvarat::ShapeID_0' has a wrong offset!");
static_assert(offsetof(PyWidget_Hero_Button_SetHeroAvarat, Image) == 0x000008, "Member 'PyWidget_Hero_Button_SetHeroAvarat::Image' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Hero_Button.OnSetHovered
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Hero_Button_OnSetHovered final
{
public:
	bool                                          Is_hovered;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Hero_Button_OnSetHovered) == 0x000001, "Wrong alignment on PyWidget_Hero_Button_OnSetHovered");
static_assert(sizeof(PyWidget_Hero_Button_OnSetHovered) == 0x000001, "Wrong size on PyWidget_Hero_Button_OnSetHovered");
static_assert(offsetof(PyWidget_Hero_Button_OnSetHovered, Is_hovered) == 0x000000, "Member 'PyWidget_Hero_Button_OnSetHovered::Is_hovered' has a wrong offset!");

// PythonFunction PyWidget_LobbyHero.PyWidget_Skill_Button.SetAbilityData
// 0x0068 (0x0068 - 0x0000)
struct PyWidget_Skill_Button_SetAbilityData final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Parm)
	class FText                                   Desc;                                              // 0x0018(0x0018)(Parm)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0030(0x0030)(Parm, UObjectWrapper, HasGetValueTypeHash)
	EAbilityInputBinds                            InptuAction;                                       // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Skill_Button_SetAbilityData) == 0x000008, "Wrong alignment on PyWidget_Skill_Button_SetAbilityData");
static_assert(sizeof(PyWidget_Skill_Button_SetAbilityData) == 0x000068, "Wrong size on PyWidget_Skill_Button_SetAbilityData");
static_assert(offsetof(PyWidget_Skill_Button_SetAbilityData, Name_0) == 0x000000, "Member 'PyWidget_Skill_Button_SetAbilityData::Name_0' has a wrong offset!");
static_assert(offsetof(PyWidget_Skill_Button_SetAbilityData, Desc) == 0x000018, "Member 'PyWidget_Skill_Button_SetAbilityData::Desc' has a wrong offset!");
static_assert(offsetof(PyWidget_Skill_Button_SetAbilityData, Icon) == 0x000030, "Member 'PyWidget_Skill_Button_SetAbilityData::Icon' has a wrong offset!");
static_assert(offsetof(PyWidget_Skill_Button_SetAbilityData, InptuAction) == 0x000060, "Member 'PyWidget_Skill_Button_SetAbilityData::InptuAction' has a wrong offset!");

}


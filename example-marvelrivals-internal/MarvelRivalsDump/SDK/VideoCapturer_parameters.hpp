#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VideoCapturer

#include "Basic.hpp"


namespace SDK::Params
{

// Function VideoCapturer.VideoCapturerFunctionLibrary.CaptureVideoAndSave
// 0x0008 (0x0008 - 0x0000)
struct VideoCapturerFunctionLibrary_CaptureVideoAndSave final
{
public:
	int32                                         Milliseconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(VideoCapturerFunctionLibrary_CaptureVideoAndSave) == 0x000004, "Wrong alignment on VideoCapturerFunctionLibrary_CaptureVideoAndSave");
//static_assert(sizeof(VideoCapturerFunctionLibrary_CaptureVideoAndSave) == 0x000008, "Wrong size on VideoCapturerFunctionLibrary_CaptureVideoAndSave");
//static_assert(offsetof(VideoCapturerFunctionLibrary_CaptureVideoAndSave, Milliseconds) == 0x000000, "Member 'VideoCapturerFunctionLibrary_CaptureVideoAndSave::Milliseconds' has a wrong offset!");
//static_assert(offsetof(VideoCapturerFunctionLibrary_CaptureVideoAndSave, ReturnValue) == 0x000004, "Member 'VideoCapturerFunctionLibrary_CaptureVideoAndSave::ReturnValue' has a wrong offset!");

// Function VideoCapturer.VideoCapturerFunctionLibrary.LaunchCapturer
// 0x0030 (0x0030 - 0x0000)
struct VideoCapturerFunctionLibrary_LaunchCapturer final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetDirectory;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourceDirectory;                                   // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(VideoCapturerFunctionLibrary_LaunchCapturer) == 0x000008, "Wrong alignment on VideoCapturerFunctionLibrary_LaunchCapturer");
//static_assert(sizeof(VideoCapturerFunctionLibrary_LaunchCapturer) == 0x000030, "Wrong size on VideoCapturerFunctionLibrary_LaunchCapturer");
//static_assert(offsetof(VideoCapturerFunctionLibrary_LaunchCapturer, Filename) == 0x000000, "Member 'VideoCapturerFunctionLibrary_LaunchCapturer::Filename' has a wrong offset!");
//static_assert(offsetof(VideoCapturerFunctionLibrary_LaunchCapturer, TargetDirectory) == 0x000010, "Member 'VideoCapturerFunctionLibrary_LaunchCapturer::TargetDirectory' has a wrong offset!");
//static_assert(offsetof(VideoCapturerFunctionLibrary_LaunchCapturer, SourceDirectory) == 0x000020, "Member 'VideoCapturerFunctionLibrary_LaunchCapturer::SourceDirectory' has a wrong offset!");

}


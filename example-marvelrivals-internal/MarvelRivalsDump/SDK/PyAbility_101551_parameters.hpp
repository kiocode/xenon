#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101551

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_101551.PyAbility_101551.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101551_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101551_CanActivate) == 0x000001, "Wrong alignment on PyAbility_101551_CanActivate");
static_assert(sizeof(PyAbility_101551_CanActivate) == 0x000001, "Wrong size on PyAbility_101551_CanActivate");
static_assert(offsetof(PyAbility_101551_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_101551_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101551.PyAbility_101551.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101551_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101551_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_101551_K2_OnEndAbility");
static_assert(sizeof(PyAbility_101551_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_101551_K2_OnEndAbility");
static_assert(offsetof(PyAbility_101551_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_101551_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_101551.PyAbility_101551.OnTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101551_OnTagUpdate final
{
public:
	struct FGameplayTag                           TagUpdated;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExists;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101551_OnTagUpdate) == 0x000004, "Wrong alignment on PyAbility_101551_OnTagUpdate");
static_assert(sizeof(PyAbility_101551_OnTagUpdate) == 0x000010, "Wrong size on PyAbility_101551_OnTagUpdate");
static_assert(offsetof(PyAbility_101551_OnTagUpdate, TagUpdated) == 0x000000, "Member 'PyAbility_101551_OnTagUpdate::TagUpdated' has a wrong offset!");
static_assert(offsetof(PyAbility_101551_OnTagUpdate, TagExists) == 0x00000C, "Member 'PyAbility_101551_OnTagUpdate::TagExists' has a wrong offset!");

// PythonFunction PyAbility_101551.PyAbility_101551.OnPlayerApplyDamage
// 0x0028 (0x0028 - 0x0000)
struct PyAbility_101551_OnPlayerApplyDamage final
{
public:
	class AActor*                                 InDamageCauser;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParameterHandle;                                   // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101551_OnPlayerApplyDamage) == 0x000008, "Wrong alignment on PyAbility_101551_OnPlayerApplyDamage");
static_assert(sizeof(PyAbility_101551_OnPlayerApplyDamage) == 0x000028, "Wrong size on PyAbility_101551_OnPlayerApplyDamage");
static_assert(offsetof(PyAbility_101551_OnPlayerApplyDamage, InDamageCauser) == 0x000000, "Member 'PyAbility_101551_OnPlayerApplyDamage::InDamageCauser' has a wrong offset!");
static_assert(offsetof(PyAbility_101551_OnPlayerApplyDamage, TargetActor) == 0x000008, "Member 'PyAbility_101551_OnPlayerApplyDamage::TargetActor' has a wrong offset!");
static_assert(offsetof(PyAbility_101551_OnPlayerApplyDamage, ParameterHandle) == 0x000010, "Member 'PyAbility_101551_OnPlayerApplyDamage::ParameterHandle' has a wrong offset!");

// PythonFunction PyAbility_101551.PyUIController_101551.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_101551_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_101551_SetAbility) == 0x000008, "Wrong alignment on PyUIController_101551_SetAbility");
static_assert(sizeof(PyUIController_101551_SetAbility) == 0x000010, "Wrong size on PyUIController_101551_SetAbility");
static_assert(offsetof(PyUIController_101551_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_101551_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_101551_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_101551_SetAbility::InAbility' has a wrong offset!");

// PythonFunction PyAbility_101551.PyUIController_101551.OnOwnedTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_101551_OnOwnedTagUpdate final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bInExist;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_101551_OnOwnedTagUpdate) == 0x000004, "Wrong alignment on PyUIController_101551_OnOwnedTagUpdate");
static_assert(sizeof(PyUIController_101551_OnOwnedTagUpdate) == 0x000010, "Wrong size on PyUIController_101551_OnOwnedTagUpdate");
static_assert(offsetof(PyUIController_101551_OnOwnedTagUpdate, InTag) == 0x000000, "Member 'PyUIController_101551_OnOwnedTagUpdate::InTag' has a wrong offset!");
static_assert(offsetof(PyUIController_101551_OnOwnedTagUpdate, bInExist) == 0x00000C, "Member 'PyUIController_101551_OnOwnedTagUpdate::bInExist' has a wrong offset!");

// PythonFunction PyAbility_101551.PyCue_Ability_Loop_10155102.OnActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10155102_OnActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10155102_OnActiveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10155102_OnActiveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10155102_OnActiveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10155102_OnActiveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10155102_OnActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10155102_OnActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10155102_OnActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10155102_OnActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_101551.PyCue_Ability_Loop_10155102.OnRemoveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10155102_OnRemoveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10155102_OnRemoveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10155102_OnRemoveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10155102_OnRemoveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10155102_OnRemoveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10155102_OnRemoveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10155102_OnRemoveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10155102_OnRemoveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10155102_OnRemoveAudio::Parameters' has a wrong offset!");

}


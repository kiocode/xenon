#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_ModeBase

#include "Basic.hpp"

#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_ModeBase.PyWidget_SpecialInfoBase
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_SpecialInfoBase : public UPyMarvelUserWidget
{
public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void Construct();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SpecialInfoBase">();
	}
	static class UPyWidget_SpecialInfoBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SpecialInfoBase>();
	}
};
static_assert(alignof(UPyWidget_SpecialInfoBase) == 0x000008, "Wrong alignment on UPyWidget_SpecialInfoBase");
static_assert(sizeof(UPyWidget_SpecialInfoBase) == 0x0005F0, "Wrong size on UPyWidget_SpecialInfoBase");

// PythonClass PyWidget_ModeBase.PyWidget_KillStreakInfo
// 0x0018 (0x0608 - 0x05F0)
class UPyWidget_KillStreakInfo : public UPyWidget_SpecialInfoBase
{
public:
	class UTextBlock*                             Text_KillOutline;                                  // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             Text_Kill;                                         // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent;                                           // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void Construct();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_KillStreakInfo">();
	}
	static class UPyWidget_KillStreakInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_KillStreakInfo>();
	}
};
static_assert(alignof(UPyWidget_KillStreakInfo) == 0x000008, "Wrong alignment on UPyWidget_KillStreakInfo");
static_assert(sizeof(UPyWidget_KillStreakInfo) == 0x000608, "Wrong size on UPyWidget_KillStreakInfo");
static_assert(offsetof(UPyWidget_KillStreakInfo, Text_KillOutline) == 0x0005F0, "Member 'UPyWidget_KillStreakInfo::Text_KillOutline' has a wrong offset!");
static_assert(offsetof(UPyWidget_KillStreakInfo, Text_Kill) == 0x0005F8, "Member 'UPyWidget_KillStreakInfo::Text_Kill' has a wrong offset!");
static_assert(offsetof(UPyWidget_KillStreakInfo, AkEvent) == 0x000600, "Member 'UPyWidget_KillStreakInfo::AkEvent' has a wrong offset!");

// PythonClass PyWidget_ModeBase.PyWidget_Overtime
// 0x0010 (0x0600 - 0x05F0)
class UPyWidget_Overtime final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Anim_LineLoop;                                     // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Percent;                                      // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void SetPercent(float Percent);
	void SetOvertimeVisible(bool IsVisible_0);
	void Destruct();
	void Construct();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Overtime">();
	}
	static class UPyWidget_Overtime* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Overtime>();
	}
};
static_assert(alignof(UPyWidget_Overtime) == 0x000008, "Wrong alignment on UPyWidget_Overtime");
static_assert(sizeof(UPyWidget_Overtime) == 0x000600, "Wrong size on UPyWidget_Overtime");
static_assert(offsetof(UPyWidget_Overtime, Anim_LineLoop) == 0x0005F0, "Member 'UPyWidget_Overtime::Anim_LineLoop' has a wrong offset!");
static_assert(offsetof(UPyWidget_Overtime, Anim_Percent) == 0x0005F8, "Member 'UPyWidget_Overtime::Anim_Percent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102743

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102743.PyAbility_102743.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102743_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102743_CanActivate) == 0x000001, "Wrong alignment on PyAbility_102743_CanActivate");
static_assert(sizeof(PyAbility_102743_CanActivate) == 0x000001, "Wrong size on PyAbility_102743_CanActivate");
static_assert(offsetof(PyAbility_102743_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_102743_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102743.PyAbility_102743.OnAbilityBlocked
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102743_OnAbilityBlocked final
{
public:
	bool                                          IsBlocked_0;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102743_OnAbilityBlocked) == 0x000001, "Wrong alignment on PyAbility_102743_OnAbilityBlocked");
static_assert(sizeof(PyAbility_102743_OnAbilityBlocked) == 0x000001, "Wrong size on PyAbility_102743_OnAbilityBlocked");
static_assert(offsetof(PyAbility_102743_OnAbilityBlocked, IsBlocked_0) == 0x000000, "Member 'PyAbility_102743_OnAbilityBlocked::IsBlocked_0' has a wrong offset!");

// PythonFunction PyAbility_102743.PyAbility_102743.OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102743_OnEndAbility final
{
public:
	bool                                          bCanceled;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102743_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_102743_OnEndAbility");
static_assert(sizeof(PyAbility_102743_OnEndAbility) == 0x000001, "Wrong size on PyAbility_102743_OnEndAbility");
static_assert(offsetof(PyAbility_102743_OnEndAbility, bCanceled) == 0x000000, "Member 'PyAbility_102743_OnEndAbility::bCanceled' has a wrong offset!");

// PythonFunction PyAbility_102743.PyAbility_102743.OnScopeSpawnSuccess
// 0x0170 (0x0170 - 0x0000)
struct PyAbility_102743_OnScopeSpawnSuccess final
{
public:
	class AActor*                                 SpawnActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0008(0x0168)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_102743_OnScopeSpawnSuccess) == 0x000008, "Wrong alignment on PyAbility_102743_OnScopeSpawnSuccess");
static_assert(sizeof(PyAbility_102743_OnScopeSpawnSuccess) == 0x000170, "Wrong size on PyAbility_102743_OnScopeSpawnSuccess");
static_assert(offsetof(PyAbility_102743_OnScopeSpawnSuccess, SpawnActor) == 0x000000, "Member 'PyAbility_102743_OnScopeSpawnSuccess::SpawnActor' has a wrong offset!");
static_assert(offsetof(PyAbility_102743_OnScopeSpawnSuccess, Data) == 0x000008, "Member 'PyAbility_102743_OnScopeSpawnSuccess::Data' has a wrong offset!");

}


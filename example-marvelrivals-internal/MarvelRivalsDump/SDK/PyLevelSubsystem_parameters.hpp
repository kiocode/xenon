#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelSubsystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.S_on_player_exit
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_S_on_player_exit final
{
public:
	class AMarvelPlayerState*                     Player_state;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_S_on_player_exit) == 0x000008, "Wrong alignment on PyLevelSubsystem_S_on_player_exit");
static_assert(sizeof(PyLevelSubsystem_S_on_player_exit) == 0x000008, "Wrong size on PyLevelSubsystem_S_on_player_exit");
static_assert(offsetof(PyLevelSubsystem_S_on_player_exit, Player_state) == 0x000000, "Member 'PyLevelSubsystem_S_on_player_exit::Player_state' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPayload
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_GetPayload final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetPayload) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetPayload");
static_assert(sizeof(PyLevelSubsystem_GetPayload) == 0x000008, "Wrong size on PyLevelSubsystem_GetPayload");
static_assert(offsetof(PyLevelSubsystem_GetPayload, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetPayload::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPayloadShowActorBase
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_GetPayloadShowActorBase final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetPayloadShowActorBase) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetPayloadShowActorBase");
static_assert(sizeof(PyLevelSubsystem_GetPayloadShowActorBase) == 0x000008, "Wrong size on PyLevelSubsystem_GetPayloadShowActorBase");
static_assert(offsetof(PyLevelSubsystem_GetPayloadShowActorBase, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetPayloadShowActorBase::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetControl
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_GetControl final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetControl) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetControl");
static_assert(sizeof(PyLevelSubsystem_GetControl) == 0x000008, "Wrong size on PyLevelSubsystem_GetControl");
static_assert(offsetof(PyLevelSubsystem_GetControl, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetControl::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetCurrentObjective
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_GetCurrentObjective final
{
public:
	class APyObjective*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetCurrentObjective) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetCurrentObjective");
static_assert(sizeof(PyLevelSubsystem_GetCurrentObjective) == 0x000008, "Wrong size on PyLevelSubsystem_GetCurrentObjective");
static_assert(offsetof(PyLevelSubsystem_GetCurrentObjective, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetCurrentObjective::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPreparingRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetPreparingRemainingTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetPreparingRemainingTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetPreparingRemainingTime");
static_assert(sizeof(PyLevelSubsystem_GetPreparingRemainingTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetPreparingRemainingTime");
static_assert(offsetof(PyLevelSubsystem_GetPreparingRemainingTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetPreparingRemainingTime::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetTimeOfRespawn
// 0x0010 (0x0010 - 0x0000)
struct PyLevelSubsystem_GetTimeOfRespawn final
{
public:
	class APlayerState*                           Player_state;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetTimeOfRespawn) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetTimeOfRespawn");
static_assert(sizeof(PyLevelSubsystem_GetTimeOfRespawn) == 0x000010, "Wrong size on PyLevelSubsystem_GetTimeOfRespawn");
static_assert(offsetof(PyLevelSubsystem_GetTimeOfRespawn, Player_state) == 0x000000, "Member 'PyLevelSubsystem_GetTimeOfRespawn::Player_state' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_GetTimeOfRespawn, ReturnValue) == 0x000008, "Member 'PyLevelSubsystem_GetTimeOfRespawn::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetCampInsideCharacterList
// 0x0010 (0x0010 - 0x0000)
struct PyLevelSubsystem_GetCampInsideCharacterList final
{
public:
	TArray<class AActor*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyLevelSubsystem_GetCampInsideCharacterList) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetCampInsideCharacterList");
static_assert(sizeof(PyLevelSubsystem_GetCampInsideCharacterList) == 0x000010, "Wrong size on PyLevelSubsystem_GetCampInsideCharacterList");
static_assert(offsetof(PyLevelSubsystem_GetCampInsideCharacterList, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetCampInsideCharacterList::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetRemainTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetRemainTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetRemainTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetRemainTime");
static_assert(sizeof(PyLevelSubsystem_GetRemainTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetRemainTime");
static_assert(offsetof(PyLevelSubsystem_GetRemainTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetRemainTime::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetCurrentRoundWinnerSide
// 0x0001 (0x0001 - 0x0000)
struct PyLevelSubsystem_GetCurrentRoundWinnerSide final
{
public:
	EBattleSide                                   ReturnValue;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetCurrentRoundWinnerSide) == 0x000001, "Wrong alignment on PyLevelSubsystem_GetCurrentRoundWinnerSide");
static_assert(sizeof(PyLevelSubsystem_GetCurrentRoundWinnerSide) == 0x000001, "Wrong size on PyLevelSubsystem_GetCurrentRoundWinnerSide");
static_assert(offsetof(PyLevelSubsystem_GetCurrentRoundWinnerSide, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetCurrentRoundWinnerSide::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetCurrentPartIndex
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetCurrentPartIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetCurrentPartIndex) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetCurrentPartIndex");
static_assert(sizeof(PyLevelSubsystem_GetCurrentPartIndex) == 0x000004, "Wrong size on PyLevelSubsystem_GetCurrentPartIndex");
static_assert(offsetof(PyLevelSubsystem_GetCurrentPartIndex, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetCurrentPartIndex::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPayloadTraceList
// 0x0010 (0x0010 - 0x0000)
struct PyLevelSubsystem_GetPayloadTraceList final
{
public:
	TArray<class AActor*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyLevelSubsystem_GetPayloadTraceList) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetPayloadTraceList");
static_assert(sizeof(PyLevelSubsystem_GetPayloadTraceList) == 0x000010, "Wrong size on PyLevelSubsystem_GetPayloadTraceList");
static_assert(offsetof(PyLevelSubsystem_GetPayloadTraceList, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetPayloadTraceList::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetBattleSideByTeamID
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_GetBattleSideByTeamID final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetBattleSideByTeamID) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetBattleSideByTeamID");
static_assert(sizeof(PyLevelSubsystem_GetBattleSideByTeamID) == 0x000008, "Wrong size on PyLevelSubsystem_GetBattleSideByTeamID");
static_assert(offsetof(PyLevelSubsystem_GetBattleSideByTeamID, TeamID) == 0x000000, "Member 'PyLevelSubsystem_GetBattleSideByTeamID::TeamID' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_GetBattleSideByTeamID, ReturnValue) == 0x000004, "Member 'PyLevelSubsystem_GetBattleSideByTeamID::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.PyGetBirthBasesByTeam
// 0x0018 (0x0018 - 0x0000)
struct PyLevelSubsystem_PyGetBirthBasesByTeam final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyLevelSubsystem_PyGetBirthBasesByTeam) == 0x000008, "Wrong alignment on PyLevelSubsystem_PyGetBirthBasesByTeam");
static_assert(sizeof(PyLevelSubsystem_PyGetBirthBasesByTeam) == 0x000018, "Wrong size on PyLevelSubsystem_PyGetBirthBasesByTeam");
static_assert(offsetof(PyLevelSubsystem_PyGetBirthBasesByTeam, TeamID) == 0x000000, "Member 'PyLevelSubsystem_PyGetBirthBasesByTeam::TeamID' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_PyGetBirthBasesByTeam, ReturnValue) == 0x000008, "Member 'PyLevelSubsystem_PyGetBirthBasesByTeam::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.PyGetBirthDoorsByTeam
// 0x0018 (0x0018 - 0x0000)
struct PyLevelSubsystem_PyGetBirthDoorsByTeam final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyLevelSubsystem_PyGetBirthDoorsByTeam) == 0x000008, "Wrong alignment on PyLevelSubsystem_PyGetBirthDoorsByTeam");
static_assert(sizeof(PyLevelSubsystem_PyGetBirthDoorsByTeam) == 0x000018, "Wrong size on PyLevelSubsystem_PyGetBirthDoorsByTeam");
static_assert(offsetof(PyLevelSubsystem_PyGetBirthDoorsByTeam, TeamID) == 0x000000, "Member 'PyLevelSubsystem_PyGetBirthDoorsByTeam::TeamID' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_PyGetBirthDoorsByTeam, ReturnValue) == 0x000008, "Member 'PyLevelSubsystem_PyGetBirthDoorsByTeam::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPayloadIndexAndProgress
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetPayloadIndexAndProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetPayloadIndexAndProgress) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetPayloadIndexAndProgress");
static_assert(sizeof(PyLevelSubsystem_GetPayloadIndexAndProgress) == 0x000004, "Wrong size on PyLevelSubsystem_GetPayloadIndexAndProgress");
static_assert(offsetof(PyLevelSubsystem_GetPayloadIndexAndProgress, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetPayloadIndexAndProgress::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetStageIndex
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetStageIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetStageIndex) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetStageIndex");
static_assert(sizeof(PyLevelSubsystem_GetStageIndex) == 0x000004, "Wrong size on PyLevelSubsystem_GetStageIndex");
static_assert(offsetof(PyLevelSubsystem_GetStageIndex, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetStageIndex::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPositionInPayloadTrace
// 0x0020 (0x0020 - 0x0000)
struct PyLevelSubsystem_GetPositionInPayloadTrace final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetPositionInPayloadTrace) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetPositionInPayloadTrace");
static_assert(sizeof(PyLevelSubsystem_GetPositionInPayloadTrace) == 0x000020, "Wrong size on PyLevelSubsystem_GetPositionInPayloadTrace");
static_assert(offsetof(PyLevelSubsystem_GetPositionInPayloadTrace, Distance) == 0x000000, "Member 'PyLevelSubsystem_GetPositionInPayloadTrace::Distance' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_GetPositionInPayloadTrace, ReturnValue) == 0x000008, "Member 'PyLevelSubsystem_GetPositionInPayloadTrace::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.ForceKillPlayer
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_ForceKillPlayer final
{
public:
	class AMarvelBaseCharacter*                   Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_ForceKillPlayer) == 0x000008, "Wrong alignment on PyLevelSubsystem_ForceKillPlayer");
static_assert(sizeof(PyLevelSubsystem_ForceKillPlayer) == 0x000008, "Wrong size on PyLevelSubsystem_ForceKillPlayer");
static_assert(offsetof(PyLevelSubsystem_ForceKillPlayer, Target) == 0x000000, "Member 'PyLevelSubsystem_ForceKillPlayer::Target' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.PyIsInBorder
// 0x0020 (0x0020 - 0x0000)
struct PyLevelSubsystem_PyIsInBorder final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_PyIsInBorder) == 0x000008, "Wrong alignment on PyLevelSubsystem_PyIsInBorder");
static_assert(sizeof(PyLevelSubsystem_PyIsInBorder) == 0x000020, "Wrong size on PyLevelSubsystem_PyIsInBorder");
static_assert(offsetof(PyLevelSubsystem_PyIsInBorder, InLocation) == 0x000000, "Member 'PyLevelSubsystem_PyIsInBorder::InLocation' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_PyIsInBorder, ReturnValue) == 0x000018, "Member 'PyLevelSubsystem_PyIsInBorder::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.TrySpawnPlayer
// 0x06C8 (0x06C8 - 0x0000)
struct PyLevelSubsystem_TrySpawnPlayer final
{
public:
	class AMarvelPlayerState*                     PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceSpawn;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnMethod                                  Method;                                            // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HeroID;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierParameter            ModifierParam;                                     // 0x0010(0x06B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelSubsystem_TrySpawnPlayer) == 0x000008, "Wrong alignment on PyLevelSubsystem_TrySpawnPlayer");
static_assert(sizeof(PyLevelSubsystem_TrySpawnPlayer) == 0x0006C8, "Wrong size on PyLevelSubsystem_TrySpawnPlayer");
static_assert(offsetof(PyLevelSubsystem_TrySpawnPlayer, PlayerState) == 0x000000, "Member 'PyLevelSubsystem_TrySpawnPlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_TrySpawnPlayer, ForceSpawn) == 0x000008, "Member 'PyLevelSubsystem_TrySpawnPlayer::ForceSpawn' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_TrySpawnPlayer, Method) == 0x000009, "Member 'PyLevelSubsystem_TrySpawnPlayer::Method' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_TrySpawnPlayer, HeroID) == 0x00000C, "Member 'PyLevelSubsystem_TrySpawnPlayer::HeroID' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_TrySpawnPlayer, ModifierParam) == 0x000010, "Member 'PyLevelSubsystem_TrySpawnPlayer::ModifierParam' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetBirthBase
// 0x0002 (0x0002 - 0x0000)
struct PyLevelSubsystem_GetBirthBase final
{
public:
	EBattleSide                                   battle_side;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Acitve;                                            // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetBirthBase) == 0x000001, "Wrong alignment on PyLevelSubsystem_GetBirthBase");
static_assert(sizeof(PyLevelSubsystem_GetBirthBase) == 0x000002, "Wrong size on PyLevelSubsystem_GetBirthBase");
static_assert(offsetof(PyLevelSubsystem_GetBirthBase, battle_side) == 0x000000, "Member 'PyLevelSubsystem_GetBirthBase::battle_side' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_GetBirthBase, Acitve) == 0x000001, "Member 'PyLevelSubsystem_GetBirthBase::Acitve' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.SetMarvelSplineColor
// 0x0020 (0x0020 - 0x0000)
struct PyLevelSubsystem_SetMarvelSplineColor final
{
public:
	class UMarvelSplineComponent*                 MarvelSpline;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Color;                                             // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_SetMarvelSplineColor) == 0x000008, "Wrong alignment on PyLevelSubsystem_SetMarvelSplineColor");
static_assert(sizeof(PyLevelSubsystem_SetMarvelSplineColor) == 0x000020, "Wrong size on PyLevelSubsystem_SetMarvelSplineColor");
static_assert(offsetof(PyLevelSubsystem_SetMarvelSplineColor, MarvelSpline) == 0x000000, "Member 'PyLevelSubsystem_SetMarvelSplineColor::MarvelSpline' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_SetMarvelSplineColor, Color) == 0x000008, "Member 'PyLevelSubsystem_SetMarvelSplineColor::Color' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetHeroPreviewTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetHeroPreviewTime final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetHeroPreviewTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetHeroPreviewTime");
static_assert(sizeof(PyLevelSubsystem_GetHeroPreviewTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetHeroPreviewTime");
static_assert(offsetof(PyLevelSubsystem_GetHeroPreviewTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetHeroPreviewTime::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetHeroChooseTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetHeroChooseTime final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetHeroChooseTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetHeroChooseTime");
static_assert(sizeof(PyLevelSubsystem_GetHeroChooseTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetHeroChooseTime");
static_assert(offsetof(PyLevelSubsystem_GetHeroChooseTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetHeroChooseTime::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.RecoverHeroChoosable
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_RecoverHeroChoosable final
{
public:
	class APlayerState*                           PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_RecoverHeroChoosable) == 0x000008, "Wrong alignment on PyLevelSubsystem_RecoverHeroChoosable");
static_assert(sizeof(PyLevelSubsystem_RecoverHeroChoosable) == 0x000008, "Wrong size on PyLevelSubsystem_RecoverHeroChoosable");
static_assert(offsetof(PyLevelSubsystem_RecoverHeroChoosable, PS) == 0x000000, "Member 'PyLevelSubsystem_RecoverHeroChoosable::PS' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.PreCharacterDestroy
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_PreCharacterDestroy final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_PreCharacterDestroy) == 0x000008, "Wrong alignment on PyLevelSubsystem_PreCharacterDestroy");
static_assert(sizeof(PyLevelSubsystem_PreCharacterDestroy) == 0x000008, "Wrong size on PyLevelSubsystem_PreCharacterDestroy");
static_assert(offsetof(PyLevelSubsystem_PreCharacterDestroy, Character) == 0x000000, "Member 'PyLevelSubsystem_PreCharacterDestroy::Character' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetHeroAllAbilityByLevel
// 0x0018 (0x0018 - 0x0000)
struct PyLevelSubsystem_GetHeroAllAbilityByLevel final
{
public:
	int32                                         Hero_id;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyLevelSubsystem_GetHeroAllAbilityByLevel) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetHeroAllAbilityByLevel");
static_assert(sizeof(PyLevelSubsystem_GetHeroAllAbilityByLevel) == 0x000018, "Wrong size on PyLevelSubsystem_GetHeroAllAbilityByLevel");
static_assert(offsetof(PyLevelSubsystem_GetHeroAllAbilityByLevel, Hero_id) == 0x000000, "Member 'PyLevelSubsystem_GetHeroAllAbilityByLevel::Hero_id' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_GetHeroAllAbilityByLevel, ReturnValue) == 0x000008, "Member 'PyLevelSubsystem_GetHeroAllAbilityByLevel::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.RequestTrainComputer
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_RequestTrainComputer final
{
public:
	int32                                         Train_num;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_RequestTrainComputer) == 0x000004, "Wrong alignment on PyLevelSubsystem_RequestTrainComputer");
static_assert(sizeof(PyLevelSubsystem_RequestTrainComputer) == 0x000004, "Wrong size on PyLevelSubsystem_RequestTrainComputer");
static_assert(offsetof(PyLevelSubsystem_RequestTrainComputer, Train_num) == 0x000000, "Member 'PyLevelSubsystem_RequestTrainComputer::Train_num' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetCurrentShipType
// 0x0001 (0x0001 - 0x0000)
struct PyLevelSubsystem_GetCurrentShipType final
{
public:
	EOwnershipType                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetCurrentShipType) == 0x000001, "Wrong alignment on PyLevelSubsystem_GetCurrentShipType");
static_assert(sizeof(PyLevelSubsystem_GetCurrentShipType) == 0x000001, "Wrong size on PyLevelSubsystem_GetCurrentShipType");
static_assert(offsetof(PyLevelSubsystem_GetCurrentShipType, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetCurrentShipType::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetFrontierActor
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_GetFrontierActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetFrontierActor) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetFrontierActor");
static_assert(sizeof(PyLevelSubsystem_GetFrontierActor) == 0x000008, "Wrong size on PyLevelSubsystem_GetFrontierActor");
static_assert(offsetof(PyLevelSubsystem_GetFrontierActor, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetFrontierActor::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.HasDeathCameraZone
// 0x0001 (0x0001 - 0x0000)
struct PyLevelSubsystem_HasDeathCameraZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_HasDeathCameraZone) == 0x000001, "Wrong alignment on PyLevelSubsystem_HasDeathCameraZone");
static_assert(sizeof(PyLevelSubsystem_HasDeathCameraZone) == 0x000001, "Wrong size on PyLevelSubsystem_HasDeathCameraZone");
static_assert(offsetof(PyLevelSubsystem_HasDeathCameraZone, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_HasDeathCameraZone::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetDeathCameraPoint
// 0x0010 (0x0010 - 0x0000)
struct PyLevelSubsystem_GetDeathCameraPoint final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetDeathCameraPoint) == 0x000008, "Wrong alignment on PyLevelSubsystem_GetDeathCameraPoint");
static_assert(sizeof(PyLevelSubsystem_GetDeathCameraPoint) == 0x000010, "Wrong size on PyLevelSubsystem_GetDeathCameraPoint");
static_assert(offsetof(PyLevelSubsystem_GetDeathCameraPoint, Character) == 0x000000, "Member 'PyLevelSubsystem_GetDeathCameraPoint::Character' has a wrong offset!");
static_assert(offsetof(PyLevelSubsystem_GetDeathCameraPoint, ReturnValue) == 0x000008, "Member 'PyLevelSubsystem_GetDeathCameraPoint::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.TeleportToBirthBase
// 0x0008 (0x0008 - 0x0000)
struct PyLevelSubsystem_TeleportToBirthBase final
{
public:
	class AMarvelBaseCharacter*                   Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_TeleportToBirthBase) == 0x000008, "Wrong alignment on PyLevelSubsystem_TeleportToBirthBase");
static_assert(sizeof(PyLevelSubsystem_TeleportToBirthBase) == 0x000008, "Wrong size on PyLevelSubsystem_TeleportToBirthBase");
static_assert(offsetof(PyLevelSubsystem_TeleportToBirthBase, Character) == 0x000000, "Member 'PyLevelSubsystem_TeleportToBirthBase::Character' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.IsNoviceMode
// 0x0001 (0x0001 - 0x0000)
struct PyLevelSubsystem_IsNoviceMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_IsNoviceMode) == 0x000001, "Wrong alignment on PyLevelSubsystem_IsNoviceMode");
static_assert(sizeof(PyLevelSubsystem_IsNoviceMode) == 0x000001, "Wrong size on PyLevelSubsystem_IsNoviceMode");
static_assert(offsetof(PyLevelSubsystem_IsNoviceMode, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_IsNoviceMode::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.IsFormalTrainMode
// 0x0001 (0x0001 - 0x0000)
struct PyLevelSubsystem_IsFormalTrainMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_IsFormalTrainMode) == 0x000001, "Wrong alignment on PyLevelSubsystem_IsFormalTrainMode");
static_assert(sizeof(PyLevelSubsystem_IsFormalTrainMode) == 0x000001, "Wrong size on PyLevelSubsystem_IsFormalTrainMode");
static_assert(offsetof(PyLevelSubsystem_IsFormalTrainMode, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_IsFormalTrainMode::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetPreSelectRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetPreSelectRemainingTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetPreSelectRemainingTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetPreSelectRemainingTime");
static_assert(sizeof(PyLevelSubsystem_GetPreSelectRemainingTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetPreSelectRemainingTime");
static_assert(offsetof(PyLevelSubsystem_GetPreSelectRemainingTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetPreSelectRemainingTime::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetBanPickRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetBanPickRemainingTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetBanPickRemainingTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetBanPickRemainingTime");
static_assert(sizeof(PyLevelSubsystem_GetBanPickRemainingTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetBanPickRemainingTime");
static_assert(offsetof(PyLevelSubsystem_GetBanPickRemainingTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetBanPickRemainingTime::ReturnValue' has a wrong offset!");

// PythonFunction PyLevelSubsystem.PyLevelSubsystem.GetAnnouncementRemainingTime
// 0x0004 (0x0004 - 0x0000)
struct PyLevelSubsystem_GetAnnouncementRemainingTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelSubsystem_GetAnnouncementRemainingTime) == 0x000004, "Wrong alignment on PyLevelSubsystem_GetAnnouncementRemainingTime");
static_assert(sizeof(PyLevelSubsystem_GetAnnouncementRemainingTime) == 0x000004, "Wrong size on PyLevelSubsystem_GetAnnouncementRemainingTime");
static_assert(offsetof(PyLevelSubsystem_GetAnnouncementRemainingTime, ReturnValue) == 0x000000, "Member 'PyLevelSubsystem_GetAnnouncementRemainingTime::ReturnValue' has a wrong offset!");

}


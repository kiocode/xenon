#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102235

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Hero_1022_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_102235.PyUIController_102235_v3
// 0x0008 (0x0C90 - 0x0C88)
class UPyUIController_102235_v3 final : public UUIC_Controller_102235
{
public:
	int32                                         BuffID;                                            // 0x0C88(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void OnDestruct();
	void OnAbilityCountUpdate(const struct FGameplayTag& Tag, int32 Count);
	void OnBuffTagUpdate(const struct FGameplayTag& Tag, int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_102235_v3">();
	}
	static class UPyUIController_102235_v3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_102235_v3>();
	}
};
static_assert(alignof(UPyUIController_102235_v3) == 0x000008, "Wrong alignment on UPyUIController_102235_v3");
static_assert(sizeof(UPyUIController_102235_v3) == 0x000C90, "Wrong size on UPyUIController_102235_v3");
static_assert(offsetof(UPyUIController_102235_v3, BuffID) == 0x000C88, "Member 'UPyUIController_102235_v3::BuffID' has a wrong offset!");

// PythonClass PyAbility_102235.PyAbility_102235
// 0x0000 (0x2580 - 0x2580)
class UPyAbility_102235 : public UMarvelGameplayAbility
{
public:
	void BeginPlay();
	void OnTagUpdate(const struct FGameplayTag& TagUpdated, bool TagExists);
	void OnAbilityInitialize(int32 AbilityID);
	void OnAbilityCanActivateChanged(bool CanActivate_0);
	bool CanPreActivate();
	void K2_ActivateAbility();
	void MissileEventNotify();
	void BreakEventNotify();
	void K2_OnEndAbility(bool bWasCancelled);
	void NativeOnMontageCompleted(const class FString& Tag);
	void NativeOnMontageInterrupted(const class FString& Tag);
	void NativeOnMontageCancelled(const class FString& Tag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_102235">();
	}
	static class UPyAbility_102235* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_102235>();
	}
};
static_assert(alignof(UPyAbility_102235) == 0x000008, "Wrong alignment on UPyAbility_102235");
static_assert(sizeof(UPyAbility_102235) == 0x002580, "Wrong size on UPyAbility_102235");

// PythonClass PyAbility_102235.PyCue_Ability_Loop_10225501
// 0x0068 (0x0EB8 - 0x0E50)
class APyCue_Ability_Loop_10225501 final : public AMarvelCueNotify_Ability
{
public:
	struct FGameplayTag                           ThrowTag;                                          // 0x0E50(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           FightTag;                                          // 0x0E5C(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            FadeOutCurve;                                      // 0x0E68(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            FadeInCurve;                                       // 0x0E70(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         ReleaseFX;                                         // 0x0E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReleaseFXSocket;                                   // 0x0E80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoopPlayID;                                        // 0x0E90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           EnemyShieldColor;                                  // 0x0E94(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ShieldColor;                                       // 0x0EA4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnTagUpdate(const struct FGameplayTag& TagUpdated, bool TagExists);
	void K2_UpdateTeamVisualEffect(const struct FTeamVisual& NewTeamVisual);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_10225501">();
	}
	static class APyCue_Ability_Loop_10225501* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_10225501>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_10225501) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_10225501");
static_assert(sizeof(APyCue_Ability_Loop_10225501) == 0x000EB8, "Wrong size on APyCue_Ability_Loop_10225501");
static_assert(offsetof(APyCue_Ability_Loop_10225501, ThrowTag) == 0x000E50, "Member 'APyCue_Ability_Loop_10225501::ThrowTag' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, FightTag) == 0x000E5C, "Member 'APyCue_Ability_Loop_10225501::FightTag' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, FadeOutCurve) == 0x000E68, "Member 'APyCue_Ability_Loop_10225501::FadeOutCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, FadeInCurve) == 0x000E70, "Member 'APyCue_Ability_Loop_10225501::FadeInCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, ReleaseFX) == 0x000E78, "Member 'APyCue_Ability_Loop_10225501::ReleaseFX' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, ReleaseFXSocket) == 0x000E80, "Member 'APyCue_Ability_Loop_10225501::ReleaseFXSocket' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, LoopPlayID) == 0x000E90, "Member 'APyCue_Ability_Loop_10225501::LoopPlayID' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, EnemyShieldColor) == 0x000E94, "Member 'APyCue_Ability_Loop_10225501::EnemyShieldColor' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10225501, ShieldColor) == 0x000EA4, "Member 'APyCue_Ability_Loop_10225501::ShieldColor' has a wrong offset!");

// PythonClass PyAbility_102235.PyConfig_102235
// 0x0FB0 (0x2FF0 - 0x2040)
class UPyConfig_102235 final : public UConfig_102235
{
public:
	int32                                         BuffID;                                            // 0x2040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProjectileID;                                      // 0x2044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GenerateSocket;                                    // 0x2048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CameraForwardExtendDistance;                       // 0x2058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_205C[0x4];                                     // 0x205C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             CameraTraceContext;                                // 0x2060(0x0F90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_102235">();
	}
	static class UPyConfig_102235* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_102235>();
	}
};
static_assert(alignof(UPyConfig_102235) == 0x000010, "Wrong alignment on UPyConfig_102235");
static_assert(sizeof(UPyConfig_102235) == 0x002FF0, "Wrong size on UPyConfig_102235");
static_assert(offsetof(UPyConfig_102235, BuffID) == 0x002040, "Member 'UPyConfig_102235::BuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102235, ProjectileID) == 0x002044, "Member 'UPyConfig_102235::ProjectileID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102235, GenerateSocket) == 0x002048, "Member 'UPyConfig_102235::GenerateSocket' has a wrong offset!");
static_assert(offsetof(UPyConfig_102235, CameraForwardExtendDistance) == 0x002058, "Member 'UPyConfig_102235::CameraForwardExtendDistance' has a wrong offset!");
static_assert(offsetof(UPyConfig_102235, CameraTraceContext) == 0x002060, "Member 'UPyConfig_102235::CameraTraceContext' has a wrong offset!");

}


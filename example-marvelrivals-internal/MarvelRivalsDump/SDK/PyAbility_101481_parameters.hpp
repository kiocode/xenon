#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101481

#include "Basic.hpp"

#include "Hero_1014_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// DelegateFunction PyAbility_101481.PyAbility_101481.OnAbilityStateChangedDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature final
{
public:
	EState_101481                                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature) == 0x000001, "Wrong alignment on PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature");
static_assert(sizeof(PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature) == 0x000001, "Wrong size on PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature");
static_assert(offsetof(PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature, NewState) == 0x000000, "Member 'PyAbility_101481_OnAbilityStateChangedDelegate__DelegateSignature::NewState' has a wrong offset!");

// PythonFunction PyAbility_101481.PyAbility_101481.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101481_K2_OnEndAbility final
{
public:
	bool                                          Cancel;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101481_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_101481_K2_OnEndAbility");
static_assert(sizeof(PyAbility_101481_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_101481_K2_OnEndAbility");
static_assert(offsetof(PyAbility_101481_K2_OnEndAbility, Cancel) == 0x000000, "Member 'PyAbility_101481_K2_OnEndAbility::Cancel' has a wrong offset!");

// PythonFunction PyAbility_101481.PyAbility_101481.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101481_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101481_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_101481_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_101481_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_101481_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_101481_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_101481_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101481.PyAbility_101481.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101481_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101481_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_101481_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_101481_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_101481_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_101481_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_101481_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101481.PyAbility_101481.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101481_NativeOnMontageCancelled final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101481_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_101481_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_101481_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_101481_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_101481_NativeOnMontageCancelled, Tag) == 0x000000, "Member 'PyAbility_101481_NativeOnMontageCancelled::Tag' has a wrong offset!");

// PythonFunction PyAbility_101481.PyAbility_101481.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101481_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101481_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_101481_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_101481_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_101481_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_101481_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_101481_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_101481.PyCue_Ability_Loop_10148101.OnUpdateState
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Ability_Loop_10148101_OnUpdateState final
{
public:
	EState_101481                                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10148101_OnUpdateState) == 0x000001, "Wrong alignment on PyCue_Ability_Loop_10148101_OnUpdateState");
static_assert(sizeof(PyCue_Ability_Loop_10148101_OnUpdateState) == 0x000001, "Wrong size on PyCue_Ability_Loop_10148101_OnUpdateState");
static_assert(offsetof(PyCue_Ability_Loop_10148101_OnUpdateState, NewState) == 0x000000, "Member 'PyCue_Ability_Loop_10148101_OnUpdateState::NewState' has a wrong offset!");

// PythonFunction PyAbility_101481.PyCue_Ability_Loop_10148101.PostShowGatling
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Ability_Loop_10148101_PostShowGatling final
{
public:
	bool                                          IsShow;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10148101_PostShowGatling) == 0x000001, "Wrong alignment on PyCue_Ability_Loop_10148101_PostShowGatling");
static_assert(sizeof(PyCue_Ability_Loop_10148101_PostShowGatling) == 0x000001, "Wrong size on PyCue_Ability_Loop_10148101_PostShowGatling");
static_assert(offsetof(PyCue_Ability_Loop_10148101_PostShowGatling, IsShow) == 0x000000, "Member 'PyCue_Ability_Loop_10148101_PostShowGatling::IsShow' has a wrong offset!");

// PythonFunction PyAbility_101481.PyCue_Ability_Loop_10148101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10148101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10148101_WhileActive) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10148101_WhileActive");
static_assert(sizeof(PyCue_Ability_Loop_10148101_WhileActive) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10148101_WhileActive");
static_assert(offsetof(PyCue_Ability_Loop_10148101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10148101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10148101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10148101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10148101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10148101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101481.PyCue_Ability_Loop_10148101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10148101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10148101_OnRemove) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10148101_OnRemove");
static_assert(sizeof(PyCue_Ability_Loop_10148101_OnRemove) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10148101_OnRemove");
static_assert(offsetof(PyCue_Ability_Loop_10148101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10148101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10148101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10148101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10148101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10148101_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101481.PyCue_Ability_Loop_10148101.WhileActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10148101_WhileActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10148101_WhileActiveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10148101_WhileActiveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10148101_WhileActiveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10148101_WhileActiveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10148101_WhileActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10148101_WhileActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10148101_WhileActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10148101_WhileActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_101481.PyCue_Ability_Loop_10148101.OnRemoveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10148101_OnRemoveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10148101_OnRemoveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10148101_OnRemoveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10148101_OnRemoveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10148101_OnRemoveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10148101_OnRemoveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10148101_OnRemoveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10148101_OnRemoveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10148101_OnRemoveAudio::Parameters' has a wrong offset!");

}


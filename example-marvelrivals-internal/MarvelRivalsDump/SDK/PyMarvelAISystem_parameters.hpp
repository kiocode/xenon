#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyMarvelAISystem

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "MarvelAI_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyMarvelAISystem.PyMarvelAISystem.AddAICustom
// 0x00B0 (0x00B0 - 0x0000)
struct PyMarvelAISystem_AddAICustom final
{
public:
	struct FAISpawnParam                          Spawn_param;                                       // 0x0000(0x00A8)(Parm)
	class AMarvelAIController*                    ReturnValue;                                       // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAISystem_AddAICustom) == 0x000008, "Wrong alignment on PyMarvelAISystem_AddAICustom");
static_assert(sizeof(PyMarvelAISystem_AddAICustom) == 0x0000B0, "Wrong size on PyMarvelAISystem_AddAICustom");
static_assert(offsetof(PyMarvelAISystem_AddAICustom, Spawn_param) == 0x000000, "Member 'PyMarvelAISystem_AddAICustom::Spawn_param' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAICustom, ReturnValue) == 0x0000A8, "Member 'PyMarvelAISystem_AddAICustom::ReturnValue' has a wrong offset!");

// PythonFunction PyMarvelAISystem.PyMarvelAISystem.RemoveAIByUID
// 0x0008 (0x0008 - 0x0000)
struct PyMarvelAISystem_RemoveAIByUID final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAISystem_RemoveAIByUID) == 0x000004, "Wrong alignment on PyMarvelAISystem_RemoveAIByUID");
static_assert(sizeof(PyMarvelAISystem_RemoveAIByUID) == 0x000008, "Wrong size on PyMarvelAISystem_RemoveAIByUID");
static_assert(offsetof(PyMarvelAISystem_RemoveAIByUID, UID) == 0x000000, "Member 'PyMarvelAISystem_RemoveAIByUID::UID' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_RemoveAIByUID, ReturnValue) == 0x000004, "Member 'PyMarvelAISystem_RemoveAIByUID::ReturnValue' has a wrong offset!");

// PythonFunction PyMarvelAISystem.PyMarvelAISystem.AddAI
// 0x0030 (0x0030 - 0x0000)
struct PyMarvelAISystem_AddAI final
{
public:
	int32                                         UID;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hero_id;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSide                                   battle_side;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Difficulty_mode;                                   // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Difficulty_level;                                  // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarvelAIControllerBase*                ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAISystem_AddAI) == 0x000008, "Wrong alignment on PyMarvelAISystem_AddAI");
static_assert(sizeof(PyMarvelAISystem_AddAI) == 0x000030, "Wrong size on PyMarvelAISystem_AddAI");
static_assert(offsetof(PyMarvelAISystem_AddAI, UID) == 0x000000, "Member 'PyMarvelAISystem_AddAI::UID' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAI, Hero_id) == 0x000004, "Member 'PyMarvelAISystem_AddAI::Hero_id' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAI, battle_side) == 0x000008, "Member 'PyMarvelAISystem_AddAI::battle_side' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAI, Name_0) == 0x000010, "Member 'PyMarvelAISystem_AddAI::Name_0' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAI, Difficulty_mode) == 0x000020, "Member 'PyMarvelAISystem_AddAI::Difficulty_mode' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAI, Difficulty_level) == 0x000024, "Member 'PyMarvelAISystem_AddAI::Difficulty_level' has a wrong offset!");
static_assert(offsetof(PyMarvelAISystem_AddAI, ReturnValue) == 0x000028, "Member 'PyMarvelAISystem_AddAI::ReturnValue' has a wrong offset!");

}


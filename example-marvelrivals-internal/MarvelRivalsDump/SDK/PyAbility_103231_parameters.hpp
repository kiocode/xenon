#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103231

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103231.PyAbility_103231.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103231_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103231_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_103231_K2_OnEndAbility");
static_assert(sizeof(PyAbility_103231_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_103231_K2_OnEndAbility");
static_assert(offsetof(PyAbility_103231_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_103231_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// DelegateFunction PyAbility_103231.PyAbility_103231.JumpDistanceDelegate__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103231_JumpDistanceDelegate__DelegateSignature final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103231_JumpDistanceDelegate__DelegateSignature) == 0x000004, "Wrong alignment on PyAbility_103231_JumpDistanceDelegate__DelegateSignature");
static_assert(sizeof(PyAbility_103231_JumpDistanceDelegate__DelegateSignature) == 0x000004, "Wrong size on PyAbility_103231_JumpDistanceDelegate__DelegateSignature");
static_assert(offsetof(PyAbility_103231_JumpDistanceDelegate__DelegateSignature, Distance) == 0x000000, "Member 'PyAbility_103231_JumpDistanceDelegate__DelegateSignature::Distance' has a wrong offset!");

// PythonFunction PyAbility_103231.PyCue_Buff_10323105.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Buff_10323105_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Buff_10323105_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Buff_10323105_WhileActiveFX");
static_assert(sizeof(PyCue_Buff_10323105_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Buff_10323105_WhileActiveFX");
static_assert(offsetof(PyCue_Buff_10323105_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Buff_10323105_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10323105_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Buff_10323105_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103231.PyCue_Ability_Loop_10323101.OnActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10323101_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10323101_OnActive) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10323101_OnActive");
static_assert(sizeof(PyCue_Ability_Loop_10323101_OnActive) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10323101_OnActive");
static_assert(offsetof(PyCue_Ability_Loop_10323101_OnActive, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10323101_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10323101_OnActive, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10323101_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10323101_OnActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10323101_OnActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103231.PyCue_Ability_Loop_10323101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Ability_Loop_10323101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Ability_Loop_10323101_WhileActive) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10323101_WhileActive");
static_assert(sizeof(PyCue_Ability_Loop_10323101_WhileActive) == 0x0001C8, "Wrong size on PyCue_Ability_Loop_10323101_WhileActive");
static_assert(offsetof(PyCue_Ability_Loop_10323101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10323101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10323101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10323101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10323101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Ability_Loop_10323101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103231.PyCue_Ability_Loop_10323101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10323101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10323101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10323101_OnRemoveFX");
static_assert(sizeof(PyCue_Ability_Loop_10323101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10323101_OnRemoveFX");
static_assert(offsetof(PyCue_Ability_Loop_10323101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10323101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10323101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10323101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103231.PyEffectAbility_103231.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyEffectAbility_103231_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyEffectAbility_103231_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyEffectAbility_103231_K2_OnEndAbility");
static_assert(sizeof(PyEffectAbility_103231_K2_OnEndAbility) == 0x000001, "Wrong size on PyEffectAbility_103231_K2_OnEndAbility");
static_assert(offsetof(PyEffectAbility_103231_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyEffectAbility_103231_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}


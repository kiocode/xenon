#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyBTNodeBase

#include "Basic.hpp"


namespace SDK::Params
{

// PythonFunction PyBTNodeBase.BTDecorator_PyBase.PerformConditionCheckAI
// 0x0018 (0x0018 - 0x0000)
struct BTDecorator_PyBase_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorator_PyBase_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTDecorator_PyBase_PerformConditionCheckAI");
static_assert(sizeof(BTDecorator_PyBase_PerformConditionCheckAI) == 0x000018, "Wrong size on BTDecorator_PyBase_PerformConditionCheckAI");
static_assert(offsetof(BTDecorator_PyBase_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTDecorator_PyBase_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorator_PyBase_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTDecorator_PyBase_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTDecorator_PyBase_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTDecorator_PyBase_PerformConditionCheckAI::ReturnValue' has a wrong offset!");

// PythonFunction PyBTNodeBase.BTDecorator_PyBase.GetBTNodeDescription
// 0x0010 (0x0010 - 0x0000)
struct BTDecorator_PyBase_GetBTNodeDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorator_PyBase_GetBTNodeDescription) == 0x000008, "Wrong alignment on BTDecorator_PyBase_GetBTNodeDescription");
static_assert(sizeof(BTDecorator_PyBase_GetBTNodeDescription) == 0x000010, "Wrong size on BTDecorator_PyBase_GetBTNodeDescription");
static_assert(offsetof(BTDecorator_PyBase_GetBTNodeDescription, ReturnValue) == 0x000000, "Member 'BTDecorator_PyBase_GetBTNodeDescription::ReturnValue' has a wrong offset!");

// PythonFunction PyBTNodeBase.BTTask_PyBase.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_PyBase_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_PyBase_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTTask_PyBase_ReceiveAbortAI");
static_assert(sizeof(BTTask_PyBase_ReceiveAbortAI) == 0x000010, "Wrong size on BTTask_PyBase_ReceiveAbortAI");
static_assert(offsetof(BTTask_PyBase_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTTask_PyBase_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_PyBase_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTTask_PyBase_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// PythonFunction PyBTNodeBase.BTTask_PyBase.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_PyBase_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_PyBase_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_PyBase_ReceiveExecuteAI");
static_assert(sizeof(BTTask_PyBase_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_PyBase_ReceiveExecuteAI");
static_assert(offsetof(BTTask_PyBase_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_PyBase_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_PyBase_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_PyBase_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// PythonFunction PyBTNodeBase.BTTask_PyBase.GetBTNodeDescription
// 0x0010 (0x0010 - 0x0000)
struct BTTask_PyBase_GetBTNodeDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_PyBase_GetBTNodeDescription) == 0x000008, "Wrong alignment on BTTask_PyBase_GetBTNodeDescription");
static_assert(sizeof(BTTask_PyBase_GetBTNodeDescription) == 0x000010, "Wrong size on BTTask_PyBase_GetBTNodeDescription");
static_assert(offsetof(BTTask_PyBase_GetBTNodeDescription, ReturnValue) == 0x000000, "Member 'BTTask_PyBase_GetBTNodeDescription::ReturnValue' has a wrong offset!");

// PythonFunction PyBTNodeBase.BTService_PyBase.GetBTNodeDescription
// 0x0010 (0x0010 - 0x0000)
struct BTService_PyBase_GetBTNodeDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BTService_PyBase_GetBTNodeDescription) == 0x000008, "Wrong alignment on BTService_PyBase_GetBTNodeDescription");
static_assert(sizeof(BTService_PyBase_GetBTNodeDescription) == 0x000010, "Wrong size on BTService_PyBase_GetBTNodeDescription");
static_assert(offsetof(BTService_PyBase_GetBTNodeDescription, ReturnValue) == 0x000000, "Member 'BTService_PyBase_GetBTNodeDescription::ReturnValue' has a wrong offset!");

}


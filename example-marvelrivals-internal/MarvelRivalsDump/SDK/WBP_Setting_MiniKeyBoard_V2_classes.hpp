#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Setting_MiniKeyBoard_V2

#include "Basic.hpp"

#include "PyWidget_SettingMiniKeyboard_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Setting_MiniKeyBoard_V2.WBP_Setting_MiniKeyBoard_V2_C
// 0x0250 (0x0848 - 0x05F8)
class UWBP_Setting_MiniKeyBoard_V2_C final : public UPyWidget_SettingMiniKeyBoard
{
public:
	class UMarvelVerticalBox*                     HBox_MiniKeyBoard;                                 // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_0;                                             // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_1;                                             // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_2;                                             // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_3;                                             // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_4;                                             // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_5;                                             // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_6;                                             // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_7;                                             // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_8;                                             // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_9;                                             // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_A;                                             // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_AltLeft;                                       // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_AltRight;                                      // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Apostrophe;                                    // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_B;                                             // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Backslash;                                     // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Backspace;                                     // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_BracketsLeft;                                  // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_BracketsRight;                                 // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_C;                                             // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Caps;                                          // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Comma;                                         // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_CtrlLeft;                                      // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_CtrlRight;                                     // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_D;                                             // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_E;                                             // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Equals;                                        // 0x06D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_ESC;                                           // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F;                                             // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F1;                                            // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F10;                                           // 0x06F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F11;                                           // 0x06F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F12;                                           // 0x0700(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F2;                                            // 0x0708(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F3;                                            // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F4;                                            // 0x0718(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F5;                                            // 0x0720(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F6;                                            // 0x0728(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F7;                                            // 0x0730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F8;                                            // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_F9;                                            // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_G;                                             // 0x0748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_H;                                             // 0x0750(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Hyphen;                                        // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_I;                                             // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_J;                                             // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_K;                                             // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_L;                                             // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_M;                                             // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_N;                                             // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_O;                                             // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_P;                                             // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Period;                                        // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Q;                                             // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_R;                                             // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_S;                                             // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Semicolon;                                     // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_ShiftLeft;                                     // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_ShiftRight;                                    // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Slash;                                         // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Spacebar;                                      // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_T;                                             // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Tab;                                           // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Tilde;                                         // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_U;                                             // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_V;                                             // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_W;                                             // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_WinLeft;                                       // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_WinRight;                                      // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_X;                                             // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Y;                                             // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_Key_V2_C*     Key_Z;                                             // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Setting_MiniKeyBoard_EnterKey_V2_C* WBP_MiniKeyBoard_Enter;                            // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Setting_MiniKeyBoard_V2_C">();
	}
	static class UWBP_Setting_MiniKeyBoard_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Setting_MiniKeyBoard_V2_C>();
	}
};
////static_assert(alignof(UWBP_Setting_MiniKeyBoard_V2_C) == 0x000008, "Wrong alignment on UWBP_Setting_MiniKeyBoard_V2_C");
////static_assert(sizeof(UWBP_Setting_MiniKeyBoard_V2_C) == 0x000848, "Wrong size on UWBP_Setting_MiniKeyBoard_V2_C");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, HBox_MiniKeyBoard) == 0x0005F8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::HBox_MiniKeyBoard' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_0) == 0x000600, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_0' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_1) == 0x000608, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_1' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_2) == 0x000610, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_2' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_3) == 0x000618, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_3' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_4) == 0x000620, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_4' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_5) == 0x000628, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_5' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_6) == 0x000630, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_6' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_7) == 0x000638, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_7' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_8) == 0x000640, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_8' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_9) == 0x000648, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_9' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_A) == 0x000650, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_A' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_AltLeft) == 0x000658, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_AltLeft' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_AltRight) == 0x000660, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_AltRight' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Apostrophe) == 0x000668, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Apostrophe' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_B) == 0x000670, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_B' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Backslash) == 0x000678, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Backslash' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Backspace) == 0x000680, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Backspace' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_BracketsLeft) == 0x000688, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_BracketsLeft' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_BracketsRight) == 0x000690, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_BracketsRight' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_C) == 0x000698, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_C' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Caps) == 0x0006A0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Caps' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Comma) == 0x0006A8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Comma' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_CtrlLeft) == 0x0006B0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_CtrlLeft' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_CtrlRight) == 0x0006B8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_CtrlRight' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_D) == 0x0006C0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_D' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_E) == 0x0006C8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_E' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Equals) == 0x0006D0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Equals' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_ESC) == 0x0006D8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_ESC' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F) == 0x0006E0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F1) == 0x0006E8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F1' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F10) == 0x0006F0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F10' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F11) == 0x0006F8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F11' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F12) == 0x000700, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F12' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F2) == 0x000708, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F2' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F3) == 0x000710, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F3' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F4) == 0x000718, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F4' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F5) == 0x000720, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F5' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F6) == 0x000728, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F6' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F7) == 0x000730, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F7' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F8) == 0x000738, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F8' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_F9) == 0x000740, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_F9' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_G) == 0x000748, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_G' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_H) == 0x000750, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_H' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Hyphen) == 0x000758, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Hyphen' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_I) == 0x000760, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_I' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_J) == 0x000768, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_J' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_K) == 0x000770, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_K' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_L) == 0x000778, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_L' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_M) == 0x000780, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_M' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_N) == 0x000788, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_N' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_O) == 0x000790, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_O' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_P) == 0x000798, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_P' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Period) == 0x0007A0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Period' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Q) == 0x0007A8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Q' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_R) == 0x0007B0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_R' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_S) == 0x0007B8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_S' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Semicolon) == 0x0007C0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Semicolon' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_ShiftLeft) == 0x0007C8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_ShiftLeft' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_ShiftRight) == 0x0007D0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_ShiftRight' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Slash) == 0x0007D8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Slash' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Spacebar) == 0x0007E0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Spacebar' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_T) == 0x0007E8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_T' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Tab) == 0x0007F0, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Tab' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Tilde) == 0x0007F8, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Tilde' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_U) == 0x000800, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_U' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_V) == 0x000808, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_V' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_W) == 0x000810, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_W' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_WinLeft) == 0x000818, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_WinLeft' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_WinRight) == 0x000820, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_WinRight' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_X) == 0x000828, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_X' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Y) == 0x000830, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Y' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, Key_Z) == 0x000838, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::Key_Z' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_MiniKeyBoard_V2_C, WBP_MiniKeyBoard_Enter) == 0x000840, "Member 'UWBP_Setting_MiniKeyBoard_V2_C::WBP_MiniKeyBoard_Enter' has a wrong offset!");

}


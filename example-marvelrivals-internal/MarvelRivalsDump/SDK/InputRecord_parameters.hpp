#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputRecord

#include "Basic.hpp"

#include "InputRecord_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function InputRecord.InputRecordComponent.Client_LoadRecord
// 0x0018 (0x0018 - 0x0000)
struct InputRecordComponent_Client_LoadRecord final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputRecordPath                              RecordPath;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputRecordComponent_Client_LoadRecord) == 0x000008, "Wrong alignment on InputRecordComponent_Client_LoadRecord");
static_assert(sizeof(InputRecordComponent_Client_LoadRecord) == 0x000018, "Wrong size on InputRecordComponent_Client_LoadRecord");
static_assert(offsetof(InputRecordComponent_Client_LoadRecord, RecordName) == 0x000000, "Member 'InputRecordComponent_Client_LoadRecord::RecordName' has a wrong offset!");
static_assert(offsetof(InputRecordComponent_Client_LoadRecord, RecordPath) == 0x000010, "Member 'InputRecordComponent_Client_LoadRecord::RecordPath' has a wrong offset!");

// Function InputRecord.InputRecordComponent.Client_LockDeltaTime
// 0x0010 (0x0010 - 0x0000)
struct InputRecordComponent_Client_LockDeltaTime final
{
public:
	class FString                                 InDeltaTime;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_Client_LockDeltaTime) == 0x000008, "Wrong alignment on InputRecordComponent_Client_LockDeltaTime");
static_assert(sizeof(InputRecordComponent_Client_LockDeltaTime) == 0x000010, "Wrong size on InputRecordComponent_Client_LockDeltaTime");
static_assert(offsetof(InputRecordComponent_Client_LockDeltaTime, InDeltaTime) == 0x000000, "Member 'InputRecordComponent_Client_LockDeltaTime::InDeltaTime' has a wrong offset!");

// Function InputRecord.InputRecordComponent.Client_LockFPS
// 0x0010 (0x0010 - 0x0000)
struct InputRecordComponent_Client_LockFPS final
{
public:
	class FString                                 InFPS;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_Client_LockFPS) == 0x000008, "Wrong alignment on InputRecordComponent_Client_LockFPS");
static_assert(sizeof(InputRecordComponent_Client_LockFPS) == 0x000010, "Wrong size on InputRecordComponent_Client_LockFPS");
static_assert(offsetof(InputRecordComponent_Client_LockFPS, InFPS) == 0x000000, "Member 'InputRecordComponent_Client_LockFPS::InFPS' has a wrong offset!");

// Function InputRecord.InputRecordComponent.Client_LoopPlay
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_Client_LoopPlay final
{
public:
	bool                                          InLoopPlay;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_Client_LoopPlay) == 0x000001, "Wrong alignment on InputRecordComponent_Client_LoopPlay");
static_assert(sizeof(InputRecordComponent_Client_LoopPlay) == 0x000001, "Wrong size on InputRecordComponent_Client_LoopPlay");
static_assert(offsetof(InputRecordComponent_Client_LoopPlay, InLoopPlay) == 0x000000, "Member 'InputRecordComponent_Client_LoopPlay::InLoopPlay' has a wrong offset!");

// Function InputRecord.InputRecordComponent.Client_SaveRecord
// 0x0018 (0x0018 - 0x0000)
struct InputRecordComponent_Client_SaveRecord final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputRecordPath                              RecordPath;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputRecordComponent_Client_SaveRecord) == 0x000008, "Wrong alignment on InputRecordComponent_Client_SaveRecord");
static_assert(sizeof(InputRecordComponent_Client_SaveRecord) == 0x000018, "Wrong size on InputRecordComponent_Client_SaveRecord");
static_assert(offsetof(InputRecordComponent_Client_SaveRecord, RecordName) == 0x000000, "Member 'InputRecordComponent_Client_SaveRecord::RecordName' has a wrong offset!");
static_assert(offsetof(InputRecordComponent_Client_SaveRecord, RecordPath) == 0x000010, "Member 'InputRecordComponent_Client_SaveRecord::RecordPath' has a wrong offset!");

// Function InputRecord.InputRecordComponent.Client_Setting
// 0x0005 (0x0005 - 0x0000)
struct InputRecordComponent_Client_Setting final
{
public:
	struct FInputRecordSetting                    Setting;                                           // 0x0000(0x0005)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_Client_Setting) == 0x000001, "Wrong alignment on InputRecordComponent_Client_Setting");
static_assert(sizeof(InputRecordComponent_Client_Setting) == 0x000005, "Wrong size on InputRecordComponent_Client_Setting");
static_assert(offsetof(InputRecordComponent_Client_Setting, Setting) == 0x000000, "Member 'InputRecordComponent_Client_Setting::Setting' has a wrong offset!");

// Function InputRecord.InputRecordComponent.Client_ToggleCorrection
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_Client_ToggleCorrection final
{
public:
	bool                                          bCorrection;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_Client_ToggleCorrection) == 0x000001, "Wrong alignment on InputRecordComponent_Client_ToggleCorrection");
static_assert(sizeof(InputRecordComponent_Client_ToggleCorrection) == 0x000001, "Wrong size on InputRecordComponent_Client_ToggleCorrection");
static_assert(offsetof(InputRecordComponent_Client_ToggleCorrection, bCorrection) == 0x000000, "Member 'InputRecordComponent_Client_ToggleCorrection::bCorrection' has a wrong offset!");

// Function InputRecord.InputRecordComponent.DiscardAILocationCorrection
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_DiscardAILocationCorrection final
{
public:
	bool                                          bDiscard;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_DiscardAILocationCorrection) == 0x000001, "Wrong alignment on InputRecordComponent_DiscardAILocationCorrection");
static_assert(sizeof(InputRecordComponent_DiscardAILocationCorrection) == 0x000001, "Wrong size on InputRecordComponent_DiscardAILocationCorrection");
static_assert(offsetof(InputRecordComponent_DiscardAILocationCorrection, bDiscard) == 0x000000, "Member 'InputRecordComponent_DiscardAILocationCorrection::bDiscard' has a wrong offset!");

// Function InputRecord.InputRecordComponent.GetCurrentLockDeltaTime
// 0x0004 (0x0004 - 0x0000)
struct InputRecordComponent_GetCurrentLockDeltaTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_GetCurrentLockDeltaTime) == 0x000004, "Wrong alignment on InputRecordComponent_GetCurrentLockDeltaTime");
static_assert(sizeof(InputRecordComponent_GetCurrentLockDeltaTime) == 0x000004, "Wrong size on InputRecordComponent_GetCurrentLockDeltaTime");
static_assert(offsetof(InputRecordComponent_GetCurrentLockDeltaTime, ReturnValue) == 0x000000, "Member 'InputRecordComponent_GetCurrentLockDeltaTime::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.HasFrameCounterData
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_HasFrameCounterData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_HasFrameCounterData) == 0x000001, "Wrong alignment on InputRecordComponent_HasFrameCounterData");
static_assert(sizeof(InputRecordComponent_HasFrameCounterData) == 0x000001, "Wrong size on InputRecordComponent_HasFrameCounterData");
static_assert(offsetof(InputRecordComponent_HasFrameCounterData, ReturnValue) == 0x000000, "Member 'InputRecordComponent_HasFrameCounterData::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsUseFrameCounter
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsUseFrameCounter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsUseFrameCounter) == 0x000001, "Wrong alignment on InputRecordComponent_IsUseFrameCounter");
static_assert(sizeof(InputRecordComponent_IsUseFrameCounter) == 0x000001, "Wrong size on InputRecordComponent_IsUseFrameCounter");
static_assert(offsetof(InputRecordComponent_IsUseFrameCounter, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsUseFrameCounter::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.LoadRecord
// 0x0018 (0x0018 - 0x0000)
struct InputRecordComponent_LoadRecord final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputRecordPath                              RecordPath;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputRecordComponent_LoadRecord) == 0x000008, "Wrong alignment on InputRecordComponent_LoadRecord");
static_assert(sizeof(InputRecordComponent_LoadRecord) == 0x000018, "Wrong size on InputRecordComponent_LoadRecord");
static_assert(offsetof(InputRecordComponent_LoadRecord, RecordName) == 0x000000, "Member 'InputRecordComponent_LoadRecord::RecordName' has a wrong offset!");
static_assert(offsetof(InputRecordComponent_LoadRecord, RecordPath) == 0x000010, "Member 'InputRecordComponent_LoadRecord::RecordPath' has a wrong offset!");

// Function InputRecord.InputRecordComponent.LockDeltaTime
// 0x0004 (0x0004 - 0x0000)
struct InputRecordComponent_LockDeltaTime final
{
public:
	float                                         InDeltaTime;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_LockDeltaTime) == 0x000004, "Wrong alignment on InputRecordComponent_LockDeltaTime");
static_assert(sizeof(InputRecordComponent_LockDeltaTime) == 0x000004, "Wrong size on InputRecordComponent_LockDeltaTime");
static_assert(offsetof(InputRecordComponent_LockDeltaTime, InDeltaTime) == 0x000000, "Member 'InputRecordComponent_LockDeltaTime::InDeltaTime' has a wrong offset!");

// Function InputRecord.InputRecordComponent.PawnPossessed
// 0x0010 (0x0010 - 0x0000)
struct InputRecordComponent_PawnPossessed final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_PawnPossessed) == 0x000008, "Wrong alignment on InputRecordComponent_PawnPossessed");
static_assert(sizeof(InputRecordComponent_PawnPossessed) == 0x000010, "Wrong size on InputRecordComponent_PawnPossessed");
static_assert(offsetof(InputRecordComponent_PawnPossessed, OldPawn) == 0x000000, "Member 'InputRecordComponent_PawnPossessed::OldPawn' has a wrong offset!");
static_assert(offsetof(InputRecordComponent_PawnPossessed, NewPawn) == 0x000008, "Member 'InputRecordComponent_PawnPossessed::NewPawn' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SaveRecord
// 0x0018 (0x0018 - 0x0000)
struct InputRecordComponent_SaveRecord final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputRecordPath                              RecordPath;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputRecordComponent_SaveRecord) == 0x000008, "Wrong alignment on InputRecordComponent_SaveRecord");
static_assert(sizeof(InputRecordComponent_SaveRecord) == 0x000018, "Wrong size on InputRecordComponent_SaveRecord");
static_assert(offsetof(InputRecordComponent_SaveRecord, RecordName) == 0x000000, "Member 'InputRecordComponent_SaveRecord::RecordName' has a wrong offset!");
static_assert(offsetof(InputRecordComponent_SaveRecord, RecordPath) == 0x000010, "Member 'InputRecordComponent_SaveRecord::RecordPath' has a wrong offset!");

// Function InputRecord.InputRecordComponent.ServerSetActorTransform
// 0x0060 (0x0060 - 0x0000)
struct InputRecordComponent_ServerSetActorTransform final
{
public:
	struct FTransform                             NewTransform;                                      // 0x0000(0x0060)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_ServerSetActorTransform) == 0x000010, "Wrong alignment on InputRecordComponent_ServerSetActorTransform");
static_assert(sizeof(InputRecordComponent_ServerSetActorTransform) == 0x000060, "Wrong size on InputRecordComponent_ServerSetActorTransform");
static_assert(offsetof(InputRecordComponent_ServerSetActorTransform, NewTransform) == 0x000000, "Member 'InputRecordComponent_ServerSetActorTransform::NewTransform' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetEnableCorrectionWhenLockDeltaTime
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime) == 0x000001, "Wrong alignment on InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime");
static_assert(sizeof(InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime) == 0x000001, "Wrong size on InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime");
static_assert(offsetof(InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime, bEnable) == 0x000000, "Member 'InputRecordComponent_SetEnableCorrectionWhenLockDeltaTime::bEnable' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetLockActorTickDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetLockActorTickDeltaTimeEnabled final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetLockActorTickDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_SetLockActorTickDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_SetLockActorTickDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_SetLockActorTickDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_SetLockActorTickDeltaTimeEnabled, bLock) == 0x000000, "Member 'InputRecordComponent_SetLockActorTickDeltaTimeEnabled::bLock' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetLockCompTickDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetLockCompTickDeltaTimeEnabled final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetLockCompTickDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_SetLockCompTickDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_SetLockCompTickDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_SetLockCompTickDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_SetLockCompTickDeltaTimeEnabled, bLock) == 0x000000, "Member 'InputRecordComponent_SetLockCompTickDeltaTimeEnabled::bLock' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetLockCoreTickerDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled, bLock) == 0x000000, "Member 'InputRecordComponent_SetLockCoreTickerDeltaTimeEnabled::bLock' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetLockDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetLockDeltaTimeEnabled final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetLockDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_SetLockDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_SetLockDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_SetLockDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_SetLockDeltaTimeEnabled, bLock) == 0x000000, "Member 'InputRecordComponent_SetLockDeltaTimeEnabled::bLock' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetLockFPSEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetLockFPSEnabled final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetLockFPSEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_SetLockFPSEnabled");
static_assert(sizeof(InputRecordComponent_SetLockFPSEnabled) == 0x000001, "Wrong size on InputRecordComponent_SetLockFPSEnabled");
static_assert(offsetof(InputRecordComponent_SetLockFPSEnabled, bLock) == 0x000000, "Member 'InputRecordComponent_SetLockFPSEnabled::bLock' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetLockInputDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_SetLockInputDeltaTimeEnabled final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetLockInputDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_SetLockInputDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_SetLockInputDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_SetLockInputDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_SetLockInputDeltaTimeEnabled, bLock) == 0x000000, "Member 'InputRecordComponent_SetLockInputDeltaTimeEnabled::bLock' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetRecordPath
// 0x0018 (0x0018 - 0x0000)
struct InputRecordComponent_SetRecordPath final
{
public:
	EInputRecordPath                              InPathType;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InNewPath;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetRecordPath) == 0x000008, "Wrong alignment on InputRecordComponent_SetRecordPath");
static_assert(sizeof(InputRecordComponent_SetRecordPath) == 0x000018, "Wrong size on InputRecordComponent_SetRecordPath");
static_assert(offsetof(InputRecordComponent_SetRecordPath, InPathType) == 0x000000, "Member 'InputRecordComponent_SetRecordPath::InPathType' has a wrong offset!");
static_assert(offsetof(InputRecordComponent_SetRecordPath, InNewPath) == 0x000008, "Member 'InputRecordComponent_SetRecordPath::InNewPath' has a wrong offset!");

// Function InputRecord.InputRecordComponent.SetRecordSetting
// 0x0005 (0x0005 - 0x0000)
struct InputRecordComponent_SetRecordSetting final
{
public:
	struct FInputRecordSetting                    InRecordSetting;                                   // 0x0000(0x0005)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_SetRecordSetting) == 0x000001, "Wrong alignment on InputRecordComponent_SetRecordSetting");
static_assert(sizeof(InputRecordComponent_SetRecordSetting) == 0x000005, "Wrong size on InputRecordComponent_SetRecordSetting");
static_assert(offsetof(InputRecordComponent_SetRecordSetting, InRecordSetting) == 0x000000, "Member 'InputRecordComponent_SetRecordSetting::InRecordSetting' has a wrong offset!");

// Function InputRecord.InputRecordComponent.ToggleCorrection
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_ToggleCorrection final
{
public:
	bool                                          bCorrection;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_ToggleCorrection) == 0x000001, "Wrong alignment on InputRecordComponent_ToggleCorrection");
static_assert(sizeof(InputRecordComponent_ToggleCorrection) == 0x000001, "Wrong size on InputRecordComponent_ToggleCorrection");
static_assert(offsetof(InputRecordComponent_ToggleCorrection, bCorrection) == 0x000000, "Member 'InputRecordComponent_ToggleCorrection::bCorrection' has a wrong offset!");

// Function InputRecord.InputRecordComponent.ToggleLoopPlay
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_ToggleLoopPlay final
{
public:
	bool                                          InLoopPlay;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_ToggleLoopPlay) == 0x000001, "Wrong alignment on InputRecordComponent_ToggleLoopPlay");
static_assert(sizeof(InputRecordComponent_ToggleLoopPlay) == 0x000001, "Wrong size on InputRecordComponent_ToggleLoopPlay");
static_assert(offsetof(InputRecordComponent_ToggleLoopPlay, InLoopPlay) == 0x000000, "Member 'InputRecordComponent_ToggleLoopPlay::InLoopPlay' has a wrong offset!");

// Function InputRecord.InputRecordComponent.GetRecordFileName
// 0x0010 (0x0010 - 0x0000)
struct InputRecordComponent_GetRecordFileName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_GetRecordFileName) == 0x000008, "Wrong alignment on InputRecordComponent_GetRecordFileName");
static_assert(sizeof(InputRecordComponent_GetRecordFileName) == 0x000010, "Wrong size on InputRecordComponent_GetRecordFileName");
static_assert(offsetof(InputRecordComponent_GetRecordFileName, ReturnValue) == 0x000000, "Member 'InputRecordComponent_GetRecordFileName::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.GetRecordMaxTime
// 0x0004 (0x0004 - 0x0000)
struct InputRecordComponent_GetRecordMaxTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_GetRecordMaxTime) == 0x000004, "Wrong alignment on InputRecordComponent_GetRecordMaxTime");
static_assert(sizeof(InputRecordComponent_GetRecordMaxTime) == 0x000004, "Wrong size on InputRecordComponent_GetRecordMaxTime");
static_assert(offsetof(InputRecordComponent_GetRecordMaxTime, ReturnValue) == 0x000000, "Member 'InputRecordComponent_GetRecordMaxTime::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.GetRecordPlayTime
// 0x0004 (0x0004 - 0x0000)
struct InputRecordComponent_GetRecordPlayTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_GetRecordPlayTime) == 0x000004, "Wrong alignment on InputRecordComponent_GetRecordPlayTime");
static_assert(sizeof(InputRecordComponent_GetRecordPlayTime) == 0x000004, "Wrong size on InputRecordComponent_GetRecordPlayTime");
static_assert(offsetof(InputRecordComponent_GetRecordPlayTime, ReturnValue) == 0x000000, "Member 'InputRecordComponent_GetRecordPlayTime::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.GetRecordSetting
// 0x0005 (0x0005 - 0x0000)
struct InputRecordComponent_GetRecordSetting final
{
public:
	struct FInputRecordSetting                    ReturnValue;                                       // 0x0000(0x0005)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_GetRecordSetting) == 0x000001, "Wrong alignment on InputRecordComponent_GetRecordSetting");
static_assert(sizeof(InputRecordComponent_GetRecordSetting) == 0x000005, "Wrong size on InputRecordComponent_GetRecordSetting");
static_assert(offsetof(InputRecordComponent_GetRecordSetting, ReturnValue) == 0x000000, "Member 'InputRecordComponent_GetRecordSetting::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsCorrection
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsCorrection final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsCorrection) == 0x000001, "Wrong alignment on InputRecordComponent_IsCorrection");
static_assert(sizeof(InputRecordComponent_IsCorrection) == 0x000001, "Wrong size on InputRecordComponent_IsCorrection");
static_assert(offsetof(InputRecordComponent_IsCorrection, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsCorrection::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsEnableCorrectionWhenLockDeltaTime
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime) == 0x000001, "Wrong alignment on InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime");
static_assert(sizeof(InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime) == 0x000001, "Wrong size on InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime");
static_assert(offsetof(InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsEnableCorrectionWhenLockDeltaTime::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsInitialize
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsInitialize final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsInitialize) == 0x000001, "Wrong alignment on InputRecordComponent_IsInitialize");
static_assert(sizeof(InputRecordComponent_IsInitialize) == 0x000001, "Wrong size on InputRecordComponent_IsInitialize");
static_assert(offsetof(InputRecordComponent_IsInitialize, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsInitialize::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLoading) == 0x000001, "Wrong alignment on InputRecordComponent_IsLoading");
static_assert(sizeof(InputRecordComponent_IsLoading) == 0x000001, "Wrong size on InputRecordComponent_IsLoading");
static_assert(offsetof(InputRecordComponent_IsLoading, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLoading::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLockActorTickDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLockActorTickDeltaTimeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLockActorTickDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_IsLockActorTickDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_IsLockActorTickDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_IsLockActorTickDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_IsLockActorTickDeltaTimeEnabled, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLockActorTickDeltaTimeEnabled::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLockCompTickDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLockCompTickDeltaTimeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLockCompTickDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_IsLockCompTickDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_IsLockCompTickDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_IsLockCompTickDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_IsLockCompTickDeltaTimeEnabled, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLockCompTickDeltaTimeEnabled::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLockCoreTickerDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLockCoreTickerDeltaTimeEnabled::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLockDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLockDeltaTimeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLockDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_IsLockDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_IsLockDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_IsLockDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_IsLockDeltaTimeEnabled, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLockDeltaTimeEnabled::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLockFPSEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLockFPSEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLockFPSEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_IsLockFPSEnabled");
static_assert(sizeof(InputRecordComponent_IsLockFPSEnabled) == 0x000001, "Wrong size on InputRecordComponent_IsLockFPSEnabled");
static_assert(offsetof(InputRecordComponent_IsLockFPSEnabled, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLockFPSEnabled::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsLockInputDeltaTimeEnabled
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsLockInputDeltaTimeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsLockInputDeltaTimeEnabled) == 0x000001, "Wrong alignment on InputRecordComponent_IsLockInputDeltaTimeEnabled");
static_assert(sizeof(InputRecordComponent_IsLockInputDeltaTimeEnabled) == 0x000001, "Wrong size on InputRecordComponent_IsLockInputDeltaTimeEnabled");
static_assert(offsetof(InputRecordComponent_IsLockInputDeltaTimeEnabled, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsLockInputDeltaTimeEnabled::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsPlaying) == 0x000001, "Wrong alignment on InputRecordComponent_IsPlaying");
static_assert(sizeof(InputRecordComponent_IsPlaying) == 0x000001, "Wrong size on InputRecordComponent_IsPlaying");
static_assert(offsetof(InputRecordComponent_IsPlaying, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsPlaying::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordComponent.IsRecording
// 0x0001 (0x0001 - 0x0000)
struct InputRecordComponent_IsRecording final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordComponent_IsRecording) == 0x000001, "Wrong alignment on InputRecordComponent_IsRecording");
static_assert(sizeof(InputRecordComponent_IsRecording) == 0x000001, "Wrong size on InputRecordComponent_IsRecording");
static_assert(offsetof(InputRecordComponent_IsRecording, ReturnValue) == 0x000000, "Member 'InputRecordComponent_IsRecording::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordLibrary.GetPlayerControllers
// 0x0018 (0x0018 - 0x0000)
struct InputRecordLibrary_GetPlayerControllers final
{
public:
	class UWorld*                                 WC;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AMarvelPlayerController*>        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordLibrary_GetPlayerControllers) == 0x000008, "Wrong alignment on InputRecordLibrary_GetPlayerControllers");
static_assert(sizeof(InputRecordLibrary_GetPlayerControllers) == 0x000018, "Wrong size on InputRecordLibrary_GetPlayerControllers");
static_assert(offsetof(InputRecordLibrary_GetPlayerControllers, WC) == 0x000000, "Member 'InputRecordLibrary_GetPlayerControllers::WC' has a wrong offset!");
static_assert(offsetof(InputRecordLibrary_GetPlayerControllers, ReturnValue) == 0x000008, "Member 'InputRecordLibrary_GetPlayerControllers::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordLibrary.NewRecordComponent
// 0x0010 (0x0010 - 0x0000)
struct InputRecordLibrary_NewRecordComponent final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputRecordComponent*                  ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordLibrary_NewRecordComponent) == 0x000008, "Wrong alignment on InputRecordLibrary_NewRecordComponent");
static_assert(sizeof(InputRecordLibrary_NewRecordComponent) == 0x000010, "Wrong size on InputRecordLibrary_NewRecordComponent");
static_assert(offsetof(InputRecordLibrary_NewRecordComponent, Owner) == 0x000000, "Member 'InputRecordLibrary_NewRecordComponent::Owner' has a wrong offset!");
static_assert(offsetof(InputRecordLibrary_NewRecordComponent, ReturnValue) == 0x000008, "Member 'InputRecordLibrary_NewRecordComponent::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.Get
// 0x0008 (0x0008 - 0x0000)
struct InputRecordSubsystem_Get final
{
public:
	class UInputRecordSubsystem*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_Get) == 0x000008, "Wrong alignment on InputRecordSubsystem_Get");
static_assert(sizeof(InputRecordSubsystem_Get) == 0x000008, "Wrong size on InputRecordSubsystem_Get");
static_assert(offsetof(InputRecordSubsystem_Get, ReturnValue) == 0x000000, "Member 'InputRecordSubsystem_Get::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.GetCurRecordPath
// 0x0010 (0x0010 - 0x0000)
struct InputRecordSubsystem_GetCurRecordPath final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_GetCurRecordPath) == 0x000008, "Wrong alignment on InputRecordSubsystem_GetCurRecordPath");
static_assert(sizeof(InputRecordSubsystem_GetCurRecordPath) == 0x000010, "Wrong size on InputRecordSubsystem_GetCurRecordPath");
static_assert(offsetof(InputRecordSubsystem_GetCurRecordPath, ReturnValue) == 0x000000, "Member 'InputRecordSubsystem_GetCurRecordPath::ReturnValue' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.LoadRecord
// 0x0010 (0x0010 - 0x0000)
struct InputRecordSubsystem_LoadRecord final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_LoadRecord) == 0x000008, "Wrong alignment on InputRecordSubsystem_LoadRecord");
static_assert(sizeof(InputRecordSubsystem_LoadRecord) == 0x000010, "Wrong size on InputRecordSubsystem_LoadRecord");
static_assert(offsetof(InputRecordSubsystem_LoadRecord, RecordName) == 0x000000, "Member 'InputRecordSubsystem_LoadRecord::RecordName' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.LoadRecordSync
// 0x0010 (0x0010 - 0x0000)
struct InputRecordSubsystem_LoadRecordSync final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_LoadRecordSync) == 0x000008, "Wrong alignment on InputRecordSubsystem_LoadRecordSync");
static_assert(sizeof(InputRecordSubsystem_LoadRecordSync) == 0x000010, "Wrong size on InputRecordSubsystem_LoadRecordSync");
static_assert(offsetof(InputRecordSubsystem_LoadRecordSync, RecordName) == 0x000000, "Member 'InputRecordSubsystem_LoadRecordSync::RecordName' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.SaveRecord
// 0x0010 (0x0010 - 0x0000)
struct InputRecordSubsystem_SaveRecord final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_SaveRecord) == 0x000008, "Wrong alignment on InputRecordSubsystem_SaveRecord");
static_assert(sizeof(InputRecordSubsystem_SaveRecord) == 0x000010, "Wrong size on InputRecordSubsystem_SaveRecord");
static_assert(offsetof(InputRecordSubsystem_SaveRecord, RecordName) == 0x000000, "Member 'InputRecordSubsystem_SaveRecord::RecordName' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.SaveRecordSync
// 0x0010 (0x0010 - 0x0000)
struct InputRecordSubsystem_SaveRecordSync final
{
public:
	class FString                                 RecordName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_SaveRecordSync) == 0x000008, "Wrong alignment on InputRecordSubsystem_SaveRecordSync");
static_assert(sizeof(InputRecordSubsystem_SaveRecordSync) == 0x000010, "Wrong size on InputRecordSubsystem_SaveRecordSync");
static_assert(offsetof(InputRecordSubsystem_SaveRecordSync, RecordName) == 0x000000, "Member 'InputRecordSubsystem_SaveRecordSync::RecordName' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.SetRecordPath
// 0x0018 (0x0018 - 0x0000)
struct InputRecordSubsystem_SetRecordPath final
{
public:
	EInputRecordPath                              InPathType;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InNewPath;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_SetRecordPath) == 0x000008, "Wrong alignment on InputRecordSubsystem_SetRecordPath");
static_assert(sizeof(InputRecordSubsystem_SetRecordPath) == 0x000018, "Wrong size on InputRecordSubsystem_SetRecordPath");
static_assert(offsetof(InputRecordSubsystem_SetRecordPath, InPathType) == 0x000000, "Member 'InputRecordSubsystem_SetRecordPath::InPathType' has a wrong offset!");
static_assert(offsetof(InputRecordSubsystem_SetRecordPath, InNewPath) == 0x000008, "Member 'InputRecordSubsystem_SetRecordPath::InNewPath' has a wrong offset!");

// Function InputRecord.InputRecordSubsystem.SetRecordPathType
// 0x0001 (0x0001 - 0x0000)
struct InputRecordSubsystem_SetRecordPathType final
{
public:
	EInputRecordPath                              InRecordType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputRecordSubsystem_SetRecordPathType) == 0x000001, "Wrong alignment on InputRecordSubsystem_SetRecordPathType");
static_assert(sizeof(InputRecordSubsystem_SetRecordPathType) == 0x000001, "Wrong size on InputRecordSubsystem_SetRecordPathType");
static_assert(offsetof(InputRecordSubsystem_SetRecordPathType, InRecordType) == 0x000000, "Member 'InputRecordSubsystem_SetRecordPathType::InRecordType' has a wrong offset!");

}


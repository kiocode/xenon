#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LimitTimeTrainMonitorBP

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LimitTimeTrainMonitorBP.LimitTimeTrainMonitorBP_C
// 0x0018 (0x04A8 - 0x0490)
class ALimitTimeTrainMonitorBP_C final : public AActor
{
public:
	class UAmbientAudioComponent*                 AmbientAudio;                                      // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AK;                                                // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWC_Training_MonitorBP_C*               WC_Training_MonitorBP;                             // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LimitTimeTrainMonitorBP_C">();
	}
	static class ALimitTimeTrainMonitorBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALimitTimeTrainMonitorBP_C>();
	}
};
static_assert(alignof(ALimitTimeTrainMonitorBP_C) == 0x000008, "Wrong alignment on ALimitTimeTrainMonitorBP_C");
static_assert(sizeof(ALimitTimeTrainMonitorBP_C) == 0x0004A8, "Wrong size on ALimitTimeTrainMonitorBP_C");
static_assert(offsetof(ALimitTimeTrainMonitorBP_C, AmbientAudio) == 0x000490, "Member 'ALimitTimeTrainMonitorBP_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(ALimitTimeTrainMonitorBP_C, AK) == 0x000498, "Member 'ALimitTimeTrainMonitorBP_C::AK' has a wrong offset!");
static_assert(offsetof(ALimitTimeTrainMonitorBP_C, WC_Training_MonitorBP) == 0x0004A0, "Member 'ALimitTimeTrainMonitorBP_C::WC_Training_MonitorBP' has a wrong offset!");

}


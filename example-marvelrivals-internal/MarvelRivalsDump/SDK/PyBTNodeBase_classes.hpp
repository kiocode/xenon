#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyBTNodeBase

#include "Basic.hpp"

#include "MarvelAI_classes.hpp"


namespace SDK
{

// PythonClass PyBTNodeBase.BTDecorator_PyBase
// 0x0000 (0x00B8 - 0x00B8)
class UBTDecorator_PyBase : public UBTDecorator_MarvelInstancedBase
{
public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

	class FString GetBTNodeDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTDecorator_PyBase">();
	}
	static class UBTDecorator_PyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_PyBase>();
	}
};
static_assert(alignof(UBTDecorator_PyBase) == 0x000008, "Wrong alignment on UBTDecorator_PyBase");
static_assert(sizeof(UBTDecorator_PyBase) == 0x0000B8, "Wrong size on UBTDecorator_PyBase");

// PythonClass PyBTNodeBase.BTTask_PyBase
// 0x0000 (0x00C0 - 0x00C0)
class UBTTask_PyBase : public UBTTask_MarvelInstancedBase
{
public:
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

	class FString GetBTNodeDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTTask_PyBase">();
	}
	static class UBTTask_PyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_PyBase>();
	}
};
static_assert(alignof(UBTTask_PyBase) == 0x000008, "Wrong alignment on UBTTask_PyBase");
static_assert(sizeof(UBTTask_PyBase) == 0x0000C0, "Wrong size on UBTTask_PyBase");

// PythonClass PyBTNodeBase.BTService_PyBase
// 0x0000 (0x00A8 - 0x00A8)
class UBTService_PyBase : public UBTService_MarvelInstancedBase
{
public:
	class FString GetBTNodeDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTService_PyBase">();
	}
	static class UBTService_PyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_PyBase>();
	}
};
static_assert(alignof(UBTService_PyBase) == 0x000008, "Wrong alignment on UBTService_PyBase");
static_assert(sizeof(UBTService_PyBase) == 0x0000A8, "Wrong size on UBTService_PyBase");

}


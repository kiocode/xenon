#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HitIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PyWidget_HitIndicator_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HitIndicator.WBP_HitIndicator_C
// 0x0050 (0x0730 - 0x06E0)
class UWBP_HitIndicator_C final : public UPyWidget_HitIndicator
{
public:
	class UWBP_Reticle_FeedBackUI_V2_C*           Reticle_FeedBack;                                  // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Reticle_Healing_C*                 Reticle_Treat;                                     // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEquipComponent*                        EquipComponent;                                    // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_Damage;                                      // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Critical_Hit_Scale;                                // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Combo_Scale;                                       // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NormalIndicatorSize;                               // 0x0710(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ComboInterval;                                     // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComboThreshold;                                    // 0x0728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HitIndicator_C">();
	}
	static class UWBP_HitIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HitIndicator_C>();
	}
};
////static_assert(alignof(UWBP_HitIndicator_C) == 0x000008, "Wrong alignment on UWBP_HitIndicator_C");
////static_assert(sizeof(UWBP_HitIndicator_C) == 0x000730, "Wrong size on UWBP_HitIndicator_C");
////static_assert(offsetof(UWBP_HitIndicator_C, Reticle_FeedBack) == 0x0006E0, "Member 'UWBP_HitIndicator_C::Reticle_FeedBack' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, Reticle_Treat) == 0x0006E8, "Member 'UWBP_HitIndicator_C::Reticle_Treat' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, EquipComponent) == 0x0006F0, "Member 'UWBP_HitIndicator_C::EquipComponent' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, Curve_Damage) == 0x0006F8, "Member 'UWBP_HitIndicator_C::Curve_Damage' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, Critical_Hit_Scale) == 0x000700, "Member 'UWBP_HitIndicator_C::Critical_Hit_Scale' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, Combo_Scale) == 0x000708, "Member 'UWBP_HitIndicator_C::Combo_Scale' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, NormalIndicatorSize) == 0x000710, "Member 'UWBP_HitIndicator_C::NormalIndicatorSize' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, ComboInterval) == 0x000720, "Member 'UWBP_HitIndicator_C::ComboInterval' has a wrong offset!");
////static_assert(offsetof(UWBP_HitIndicator_C, ComboThreshold) == 0x000728, "Member 'UWBP_HitIndicator_C::ComboThreshold' has a wrong offset!");

}


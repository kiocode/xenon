#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyControlAudioComponent

#include "Basic.hpp"

#include "MarvelLevel_structs.hpp"
#include "MarvelLevel_classes.hpp"
#include "Marvel_structs.hpp"
#include "PyModeAudioComponent_classes.hpp"


namespace SDK
{

// PythonClass PyControlAudioComponent.PyLevelControlAudioItem
// 0x0110 (0x0148 - 0x0038)
class UPyLevelControlAudioItem final : public UMarvelLevelAudioItem
{
public:
	TArray<struct FLevelAudioContent>             SelectStage;                                       // 0x0038(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             PrepareStage;                                      // 0x0048(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             RpcFightStart;                                     // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             FightStage;                                        // 0x0068(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             OverTimeStage;                                     // 0x0078(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             GameResult;                                        // 0x0088(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             DrawResult;                                        // 0x0098(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             CampLockStage;                                     // 0x00A8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             CampLockFinish;                                    // 0x00B8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlGrowStage;                                  // 0x00C8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlBothStage;                                  // 0x00D8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlOccupiedOneSide;                            // 0x00E8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlOccupiedFirst;                              // 0x00F8(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlVictoryInCrease;                            // 0x0108(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlVictoryProgress50;                          // 0x0118(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlVictoryProgress80;                          // 0x0128(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FLevelAudioContent>             ControlVictoryProgress90;                          // 0x0138(0x0010)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyLevelControlAudioItem">();
	}
	static class UPyLevelControlAudioItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyLevelControlAudioItem>();
	}
};
static_assert(alignof(UPyLevelControlAudioItem) == 0x000008, "Wrong alignment on UPyLevelControlAudioItem");
static_assert(sizeof(UPyLevelControlAudioItem) == 0x000148, "Wrong size on UPyLevelControlAudioItem");
static_assert(offsetof(UPyLevelControlAudioItem, SelectStage) == 0x000038, "Member 'UPyLevelControlAudioItem::SelectStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, PrepareStage) == 0x000048, "Member 'UPyLevelControlAudioItem::PrepareStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, RpcFightStart) == 0x000058, "Member 'UPyLevelControlAudioItem::RpcFightStart' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, FightStage) == 0x000068, "Member 'UPyLevelControlAudioItem::FightStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, OverTimeStage) == 0x000078, "Member 'UPyLevelControlAudioItem::OverTimeStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, GameResult) == 0x000088, "Member 'UPyLevelControlAudioItem::GameResult' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, DrawResult) == 0x000098, "Member 'UPyLevelControlAudioItem::DrawResult' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, CampLockStage) == 0x0000A8, "Member 'UPyLevelControlAudioItem::CampLockStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, CampLockFinish) == 0x0000B8, "Member 'UPyLevelControlAudioItem::CampLockFinish' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlGrowStage) == 0x0000C8, "Member 'UPyLevelControlAudioItem::ControlGrowStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlBothStage) == 0x0000D8, "Member 'UPyLevelControlAudioItem::ControlBothStage' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlOccupiedOneSide) == 0x0000E8, "Member 'UPyLevelControlAudioItem::ControlOccupiedOneSide' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlOccupiedFirst) == 0x0000F8, "Member 'UPyLevelControlAudioItem::ControlOccupiedFirst' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlVictoryInCrease) == 0x000108, "Member 'UPyLevelControlAudioItem::ControlVictoryInCrease' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlVictoryProgress50) == 0x000118, "Member 'UPyLevelControlAudioItem::ControlVictoryProgress50' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlVictoryProgress80) == 0x000128, "Member 'UPyLevelControlAudioItem::ControlVictoryProgress80' has a wrong offset!");
static_assert(offsetof(UPyLevelControlAudioItem, ControlVictoryProgress90) == 0x000138, "Member 'UPyLevelControlAudioItem::ControlVictoryProgress90' has a wrong offset!");

// PythonClass PyControlAudioComponent.PyControlAudioComponent
// 0x0000 (0x0108 - 0x0108)
class UPyControlAudioComponent final : public UPyModeAudioComponent
{
public:
	void ReceiveBeginPlay();
	void BroadCastControlOccupiedFirst(EBattleSide battle_side);
	void BroadCastControlOccupiedOneSide(EBattleSide battle_side);
	void BroadCastControlVictoryProgress50();
	void BroadCastControlVictoryProgress80();
	void BroadCastInOverTimeVictoryProgress90();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyControlAudioComponent">();
	}
	static class UPyControlAudioComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyControlAudioComponent>();
	}
};
static_assert(alignof(UPyControlAudioComponent) == 0x000008, "Wrong alignment on UPyControlAudioComponent");
static_assert(sizeof(UPyControlAudioComponent) == 0x000108, "Wrong size on UPyControlAudioComponent");

}


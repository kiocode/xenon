#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RemoteControlLogic

#include "Basic.hpp"


namespace SDK::Params
{

// Function RemoteControlLogic.RCBehaviourBindNode.Execute
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourBindNode_Execute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourBindNode_Execute) == 0x000008, "Wrong alignment on RCBehaviourBindNode_Execute");
//static_assert(sizeof(RCBehaviourBindNode_Execute) == 0x000010, "Wrong size on RCBehaviourBindNode_Execute");
//static_assert(offsetof(RCBehaviourBindNode_Execute, InBehaviour) == 0x000000, "Member 'RCBehaviourBindNode_Execute::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourBindNode_Execute, ReturnValue) == 0x000008, "Member 'RCBehaviourBindNode_Execute::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourBindNode.IsSupported
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourBindNode_IsSupported final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourBindNode_IsSupported) == 0x000008, "Wrong alignment on RCBehaviourBindNode_IsSupported");
//static_assert(sizeof(RCBehaviourBindNode_IsSupported) == 0x000010, "Wrong size on RCBehaviourBindNode_IsSupported");
//static_assert(offsetof(RCBehaviourBindNode_IsSupported, InBehaviour) == 0x000000, "Member 'RCBehaviourBindNode_IsSupported::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourBindNode_IsSupported, ReturnValue) == 0x000008, "Member 'RCBehaviourBindNode_IsSupported::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourBindNode.OnPassed
// 0x0008 (0x0008 - 0x0000)
struct RCBehaviourBindNode_OnPassed final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(RCBehaviourBindNode_OnPassed) == 0x000008, "Wrong alignment on RCBehaviourBindNode_OnPassed");
//static_assert(sizeof(RCBehaviourBindNode_OnPassed) == 0x000008, "Wrong size on RCBehaviourBindNode_OnPassed");
//static_assert(offsetof(RCBehaviourBindNode_OnPassed, InBehaviour) == 0x000000, "Member 'RCBehaviourBindNode_OnPassed::InBehaviour' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourBlueprintNode.Execute
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourBlueprintNode_Execute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourBlueprintNode_Execute) == 0x000008, "Wrong alignment on RCBehaviourBlueprintNode_Execute");
//static_assert(sizeof(RCBehaviourBlueprintNode_Execute) == 0x000010, "Wrong size on RCBehaviourBlueprintNode_Execute");
//static_assert(offsetof(RCBehaviourBlueprintNode_Execute, InBehaviour) == 0x000000, "Member 'RCBehaviourBlueprintNode_Execute::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourBlueprintNode_Execute, ReturnValue) == 0x000008, "Member 'RCBehaviourBlueprintNode_Execute::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourBlueprintNode.IsSupported
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourBlueprintNode_IsSupported final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourBlueprintNode_IsSupported) == 0x000008, "Wrong alignment on RCBehaviourBlueprintNode_IsSupported");
//static_assert(sizeof(RCBehaviourBlueprintNode_IsSupported) == 0x000010, "Wrong size on RCBehaviourBlueprintNode_IsSupported");
//static_assert(offsetof(RCBehaviourBlueprintNode_IsSupported, InBehaviour) == 0x000000, "Member 'RCBehaviourBlueprintNode_IsSupported::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourBlueprintNode_IsSupported, ReturnValue) == 0x000008, "Member 'RCBehaviourBlueprintNode_IsSupported::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourBlueprintNode.OnPassed
// 0x0008 (0x0008 - 0x0000)
struct RCBehaviourBlueprintNode_OnPassed final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(RCBehaviourBlueprintNode_OnPassed) == 0x000008, "Wrong alignment on RCBehaviourBlueprintNode_OnPassed");
//static_assert(sizeof(RCBehaviourBlueprintNode_OnPassed) == 0x000008, "Wrong size on RCBehaviourBlueprintNode_OnPassed");
//static_assert(offsetof(RCBehaviourBlueprintNode_OnPassed, InBehaviour) == 0x000000, "Member 'RCBehaviourBlueprintNode_OnPassed::InBehaviour' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourBlueprintNode.PreExecute
// 0x0008 (0x0008 - 0x0000)
struct RCBehaviourBlueprintNode_PreExecute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(RCBehaviourBlueprintNode_PreExecute) == 0x000008, "Wrong alignment on RCBehaviourBlueprintNode_PreExecute");
//static_assert(sizeof(RCBehaviourBlueprintNode_PreExecute) == 0x000008, "Wrong size on RCBehaviourBlueprintNode_PreExecute");
//static_assert(offsetof(RCBehaviourBlueprintNode_PreExecute, InBehaviour) == 0x000000, "Member 'RCBehaviourBlueprintNode_PreExecute::InBehaviour' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourConditionalNode.Execute
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourConditionalNode_Execute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourConditionalNode_Execute) == 0x000008, "Wrong alignment on RCBehaviourConditionalNode_Execute");
//static_assert(sizeof(RCBehaviourConditionalNode_Execute) == 0x000010, "Wrong size on RCBehaviourConditionalNode_Execute");
//static_assert(offsetof(RCBehaviourConditionalNode_Execute, InBehaviour) == 0x000000, "Member 'RCBehaviourConditionalNode_Execute::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourConditionalNode_Execute, ReturnValue) == 0x000008, "Member 'RCBehaviourConditionalNode_Execute::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourConditionalNode.IsSupported
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourConditionalNode_IsSupported final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourConditionalNode_IsSupported) == 0x000008, "Wrong alignment on RCBehaviourConditionalNode_IsSupported");
//static_assert(sizeof(RCBehaviourConditionalNode_IsSupported) == 0x000010, "Wrong size on RCBehaviourConditionalNode_IsSupported");
//static_assert(offsetof(RCBehaviourConditionalNode_IsSupported, InBehaviour) == 0x000000, "Member 'RCBehaviourConditionalNode_IsSupported::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourConditionalNode_IsSupported, ReturnValue) == 0x000008, "Member 'RCBehaviourConditionalNode_IsSupported::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourConditionalNode.OnPassed
// 0x0008 (0x0008 - 0x0000)
struct RCBehaviourConditionalNode_OnPassed final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(RCBehaviourConditionalNode_OnPassed) == 0x000008, "Wrong alignment on RCBehaviourConditionalNode_OnPassed");
//static_assert(sizeof(RCBehaviourConditionalNode_OnPassed) == 0x000008, "Wrong size on RCBehaviourConditionalNode_OnPassed");
//static_assert(offsetof(RCBehaviourConditionalNode_OnPassed, InBehaviour) == 0x000000, "Member 'RCBehaviourConditionalNode_OnPassed::InBehaviour' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourOnValueChangedNode.Execute
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourOnValueChangedNode_Execute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourOnValueChangedNode_Execute) == 0x000008, "Wrong alignment on RCBehaviourOnValueChangedNode_Execute");
//static_assert(sizeof(RCBehaviourOnValueChangedNode_Execute) == 0x000010, "Wrong size on RCBehaviourOnValueChangedNode_Execute");
//static_assert(offsetof(RCBehaviourOnValueChangedNode_Execute, InBehaviour) == 0x000000, "Member 'RCBehaviourOnValueChangedNode_Execute::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourOnValueChangedNode_Execute, ReturnValue) == 0x000008, "Member 'RCBehaviourOnValueChangedNode_Execute::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourOnValueChangedNode.IsSupported
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourOnValueChangedNode_IsSupported final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourOnValueChangedNode_IsSupported) == 0x000008, "Wrong alignment on RCBehaviourOnValueChangedNode_IsSupported");
//static_assert(sizeof(RCBehaviourOnValueChangedNode_IsSupported) == 0x000010, "Wrong size on RCBehaviourOnValueChangedNode_IsSupported");
//static_assert(offsetof(RCBehaviourOnValueChangedNode_IsSupported, InBehaviour) == 0x000000, "Member 'RCBehaviourOnValueChangedNode_IsSupported::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourOnValueChangedNode_IsSupported, ReturnValue) == 0x000008, "Member 'RCBehaviourOnValueChangedNode_IsSupported::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourRangeMapNode.Execute
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourRangeMapNode_Execute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourRangeMapNode_Execute) == 0x000008, "Wrong alignment on RCBehaviourRangeMapNode_Execute");
//static_assert(sizeof(RCBehaviourRangeMapNode_Execute) == 0x000010, "Wrong size on RCBehaviourRangeMapNode_Execute");
//static_assert(offsetof(RCBehaviourRangeMapNode_Execute, InBehaviour) == 0x000000, "Member 'RCBehaviourRangeMapNode_Execute::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourRangeMapNode_Execute, ReturnValue) == 0x000008, "Member 'RCBehaviourRangeMapNode_Execute::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourRangeMapNode.IsSupported
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourRangeMapNode_IsSupported final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourRangeMapNode_IsSupported) == 0x000008, "Wrong alignment on RCBehaviourRangeMapNode_IsSupported");
//static_assert(sizeof(RCBehaviourRangeMapNode_IsSupported) == 0x000010, "Wrong size on RCBehaviourRangeMapNode_IsSupported");
//static_assert(offsetof(RCBehaviourRangeMapNode_IsSupported, InBehaviour) == 0x000000, "Member 'RCBehaviourRangeMapNode_IsSupported::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourRangeMapNode_IsSupported, ReturnValue) == 0x000008, "Member 'RCBehaviourRangeMapNode_IsSupported::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourRangeMapNode.OnPassed
// 0x0008 (0x0008 - 0x0000)
struct RCBehaviourRangeMapNode_OnPassed final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(RCBehaviourRangeMapNode_OnPassed) == 0x000008, "Wrong alignment on RCBehaviourRangeMapNode_OnPassed");
//static_assert(sizeof(RCBehaviourRangeMapNode_OnPassed) == 0x000008, "Wrong size on RCBehaviourRangeMapNode_OnPassed");
//static_assert(offsetof(RCBehaviourRangeMapNode_OnPassed, InBehaviour) == 0x000000, "Member 'RCBehaviourRangeMapNode_OnPassed::InBehaviour' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourSetAssetByPathNode.Execute
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourSetAssetByPathNode_Execute final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourSetAssetByPathNode_Execute) == 0x000008, "Wrong alignment on RCBehaviourSetAssetByPathNode_Execute");
//static_assert(sizeof(RCBehaviourSetAssetByPathNode_Execute) == 0x000010, "Wrong size on RCBehaviourSetAssetByPathNode_Execute");
//static_assert(offsetof(RCBehaviourSetAssetByPathNode_Execute, InBehaviour) == 0x000000, "Member 'RCBehaviourSetAssetByPathNode_Execute::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourSetAssetByPathNode_Execute, ReturnValue) == 0x000008, "Member 'RCBehaviourSetAssetByPathNode_Execute::ReturnValue' has a wrong offset!");

// Function RemoteControlLogic.RCBehaviourSetAssetByPathNode.IsSupported
// 0x0010 (0x0010 - 0x0000)
struct RCBehaviourSetAssetByPathNode_IsSupported final
{
public:
	class URCBehaviour*                           InBehaviour;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(RCBehaviourSetAssetByPathNode_IsSupported) == 0x000008, "Wrong alignment on RCBehaviourSetAssetByPathNode_IsSupported");
//static_assert(sizeof(RCBehaviourSetAssetByPathNode_IsSupported) == 0x000010, "Wrong size on RCBehaviourSetAssetByPathNode_IsSupported");
//static_assert(offsetof(RCBehaviourSetAssetByPathNode_IsSupported, InBehaviour) == 0x000000, "Member 'RCBehaviourSetAssetByPathNode_IsSupported::InBehaviour' has a wrong offset!");
//static_assert(offsetof(RCBehaviourSetAssetByPathNode_IsSupported, ReturnValue) == 0x000008, "Member 'RCBehaviourSetAssetByPathNode_IsSupported::ReturnValue' has a wrong offset!");

}


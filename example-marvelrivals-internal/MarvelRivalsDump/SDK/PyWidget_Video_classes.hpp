#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_Video

#include "Basic.hpp"

#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_Video.PyWidget_Video
// 0x0140 (0x0730 - 0x05F0)
class UPyWidget_Video final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMediaOpened;                                     // 0x05F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnEndReached;                                      // 0x0600(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMediaOpenFailed;                                 // 0x0610(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMediaPlayed;                                     // 0x0620(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMediaClosed;                                     // 0x0630(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMediaPaused;                                     // 0x0640(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnVideoSwitchAnimFinished;                         // 0x0650(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMediaResumed;                                    // 0x0660(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FText                                   Text_Loading;                                      // 0x0670(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Text_Failed;                                       // 0x0688(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Text_NoExist;                                      // 0x06A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          AutoClear;                                         // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoSize;                                          // 0x06B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6BA[0x6];                                      // 0x06BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SaveFolder;                                        // 0x06C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedPlayVideoSound;                                // 0x06D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMediaPlayer*                           VideoMediaPlayer;                                  // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                           DefaultMediaSource;                                // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     MediaSoundBPCls;                                   // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                MI_Video;                                          // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableInteract;                                    // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedShowTips;                                      // 0x06F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6FA[0x6];                                      // 0x06FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture_Pause;                                     // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture_Play;                                      // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture_PlayHover;                                 // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture_Refresh;                                   // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture_RefreshHover;                              // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedResetEndTimerWhenResumed;                      // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnMediaOpened__DelegateSignature(const class FString& URL);
	void OnEndReached__DelegateSignature(const class FString& VideoName);
	void OnMediaOpenFailed__DelegateSignature(const class FString& URL);
	void OnMediaPlayed__DelegateSignature();
	void OnMediaClosed__DelegateSignature(const class FString& VideoName);
	void OnMediaPaused__DelegateSignature();
	void OnVideoSwitchAnimFinished__DelegateSignature();
	void OnMediaResumed__DelegateSignature();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Destruct();
	void ReplayVideo();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Video">();
	}
	static class UPyWidget_Video* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Video>();
	}
};
static_assert(alignof(UPyWidget_Video) == 0x000008, "Wrong alignment on UPyWidget_Video");
static_assert(sizeof(UPyWidget_Video) == 0x000730, "Wrong size on UPyWidget_Video");
static_assert(offsetof(UPyWidget_Video, OnMediaOpened) == 0x0005F0, "Member 'UPyWidget_Video::OnMediaOpened' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnEndReached) == 0x000600, "Member 'UPyWidget_Video::OnEndReached' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnMediaOpenFailed) == 0x000610, "Member 'UPyWidget_Video::OnMediaOpenFailed' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnMediaPlayed) == 0x000620, "Member 'UPyWidget_Video::OnMediaPlayed' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnMediaClosed) == 0x000630, "Member 'UPyWidget_Video::OnMediaClosed' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnMediaPaused) == 0x000640, "Member 'UPyWidget_Video::OnMediaPaused' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnVideoSwitchAnimFinished) == 0x000650, "Member 'UPyWidget_Video::OnVideoSwitchAnimFinished' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, OnMediaResumed) == 0x000660, "Member 'UPyWidget_Video::OnMediaResumed' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Text_Loading) == 0x000670, "Member 'UPyWidget_Video::Text_Loading' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Text_Failed) == 0x000688, "Member 'UPyWidget_Video::Text_Failed' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Text_NoExist) == 0x0006A0, "Member 'UPyWidget_Video::Text_NoExist' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, AutoClear) == 0x0006B8, "Member 'UPyWidget_Video::AutoClear' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, AutoSize) == 0x0006B9, "Member 'UPyWidget_Video::AutoSize' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, SaveFolder) == 0x0006C0, "Member 'UPyWidget_Video::SaveFolder' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, NeedPlayVideoSound) == 0x0006D0, "Member 'UPyWidget_Video::NeedPlayVideoSound' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, VideoMediaPlayer) == 0x0006D8, "Member 'UPyWidget_Video::VideoMediaPlayer' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, DefaultMediaSource) == 0x0006E0, "Member 'UPyWidget_Video::DefaultMediaSource' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, MediaSoundBPCls) == 0x0006E8, "Member 'UPyWidget_Video::MediaSoundBPCls' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, MI_Video) == 0x0006F0, "Member 'UPyWidget_Video::MI_Video' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, EnableInteract) == 0x0006F8, "Member 'UPyWidget_Video::EnableInteract' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, NeedShowTips) == 0x0006F9, "Member 'UPyWidget_Video::NeedShowTips' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Texture_Pause) == 0x000700, "Member 'UPyWidget_Video::Texture_Pause' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Texture_Play) == 0x000708, "Member 'UPyWidget_Video::Texture_Play' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Texture_PlayHover) == 0x000710, "Member 'UPyWidget_Video::Texture_PlayHover' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Texture_Refresh) == 0x000718, "Member 'UPyWidget_Video::Texture_Refresh' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, Texture_RefreshHover) == 0x000720, "Member 'UPyWidget_Video::Texture_RefreshHover' has a wrong offset!");
static_assert(offsetof(UPyWidget_Video, NeedResetEndTimerWhenResumed) == 0x000728, "Member 'UPyWidget_Video::NeedResetEndTimerWhenResumed' has a wrong offset!");

}


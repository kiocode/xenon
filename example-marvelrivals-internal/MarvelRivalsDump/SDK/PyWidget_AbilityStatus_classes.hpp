#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_AbilityStatus

#include "Basic.hpp"

#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "Engine_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// PythonClass PyWidget_AbilityStatus.PyWidget_AbilityRelationIcon
// 0x0000 (0x03B8 - 0x03B8)
class UPyWidget_AbilityRelationIcon : public UUserWidget
{
public:
	void SetIcon(TSoftObjectPtr<class UTexture2D> InIcon);
	void SetIconBg(TSoftObjectPtr<class UTexture2D> InIconBg);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_AbilityRelationIcon">();
	}
	static class UPyWidget_AbilityRelationIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_AbilityRelationIcon>();
	}
};
static_assert(alignof(UPyWidget_AbilityRelationIcon) == 0x000008, "Wrong alignment on UPyWidget_AbilityRelationIcon");
static_assert(sizeof(UPyWidget_AbilityRelationIcon) == 0x0003B8, "Wrong size on UPyWidget_AbilityRelationIcon");

// PythonClass PyWidget_AbilityStatus.PyWidget_AbilityStatus_UltimateIcon
// 0x0000 (0x05A8 - 0x05A8)
class UPyWidget_AbilityStatus_UltimateIcon final : public UMarvelUserWidget
{
public:
	void SetReady(bool InReady);
	void SetIcon(TSoftObjectPtr<class UTexture2D> InIcon);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_AbilityStatus_UltimateIcon">();
	}
	static class UPyWidget_AbilityStatus_UltimateIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_AbilityStatus_UltimateIcon>();
	}
};
static_assert(alignof(UPyWidget_AbilityStatus_UltimateIcon) == 0x000008, "Wrong alignment on UPyWidget_AbilityStatus_UltimateIcon");
static_assert(sizeof(UPyWidget_AbilityStatus_UltimateIcon) == 0x0005A8, "Wrong size on UPyWidget_AbilityStatus_UltimateIcon");

// PythonClass PyWidget_AbilityStatus.PyWidgetStyle_PhysicsAbilityStatus
// 0x0010 (0x0048 - 0x0038)
class UPyWidgetStyle_PhysicsAbilityStatus final : public UPrimaryDataAsset
{
public:
	struct FLinearColor                           IconColor_Ability_Disable;                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidgetStyle_PhysicsAbilityStatus">();
	}
	static class UPyWidgetStyle_PhysicsAbilityStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidgetStyle_PhysicsAbilityStatus>();
	}
};
static_assert(alignof(UPyWidgetStyle_PhysicsAbilityStatus) == 0x000008, "Wrong alignment on UPyWidgetStyle_PhysicsAbilityStatus");
static_assert(sizeof(UPyWidgetStyle_PhysicsAbilityStatus) == 0x000048, "Wrong size on UPyWidgetStyle_PhysicsAbilityStatus");
static_assert(offsetof(UPyWidgetStyle_PhysicsAbilityStatus, IconColor_Ability_Disable) == 0x000038, "Member 'UPyWidgetStyle_PhysicsAbilityStatus::IconColor_Ability_Disable' has a wrong offset!");

// PythonClass PyWidget_AbilityStatus.PyWidget_AbilityStatus_Normal
// 0x0078 (0x0820 - 0x07A8)
class UPyWidget_AbilityStatus_Normal : public UWidget_AbilityStatus_Normal
{
public:
	class UAkAudioEvent*                          Audio_CooldownEnd;                                 // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                Class_RelationIcon;                                // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableBondAbilityNormal;                           // 0x07B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ColorProgressTop;                                  // 0x07BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorProgressBottom;                               // 0x07CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomColorPreview;                               // 0x07DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomColorPreview_Cooling;                       // 0x07DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7DE[0x2];                                      // 0x07DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomColorPreview_CoolingTotal;                   // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomColorPreview_CoolingRemain;                  // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CustomColorPreview_AbilityTexture;                 // 0x07E8(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomColorPreview_Charge;                        // 0x0818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnSecondaryWidgetCreated(class UUserWidget* Widget);
	bool UIBlocked();
	bool UICooling();
	bool UIActive();
	void EndCooldown();
	void SetRelationIcon(int32 Num, TSoftObjectPtr<class UTexture2D> InIcon, TSoftObjectPtr<class UTexture2D> InIconBg);
	void SwitchAbilityIcon(TSoftObjectPtr<class UTexture2D> InIcon, bool bNeedAnim);
	void SetAbilityIconFromSoftObject(const TSoftObjectPtr<class UTexture2D>& InAbilityIcon);
	void SetEnergyCur(float InEnergyCur);
	void SetCooldownPassedPercent(float InPercent);
	void UpdateStyle();
	void Init();
	void InitFakeAbilityUI();
	void SetAbility(class UMarvelGameplayAbility* Ability_0);
	bool ShouldBeVisible();
	void Destruct();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_AbilityStatus_Normal">();
	}
	static class UPyWidget_AbilityStatus_Normal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_AbilityStatus_Normal>();
	}
};
static_assert(alignof(UPyWidget_AbilityStatus_Normal) == 0x000008, "Wrong alignment on UPyWidget_AbilityStatus_Normal");
static_assert(sizeof(UPyWidget_AbilityStatus_Normal) == 0x000820, "Wrong size on UPyWidget_AbilityStatus_Normal");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, Audio_CooldownEnd) == 0x0007A8, "Member 'UPyWidget_AbilityStatus_Normal::Audio_CooldownEnd' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, Class_RelationIcon) == 0x0007B0, "Member 'UPyWidget_AbilityStatus_Normal::Class_RelationIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, EnableBondAbilityNormal) == 0x0007B8, "Member 'UPyWidget_AbilityStatus_Normal::EnableBondAbilityNormal' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, ColorProgressTop) == 0x0007BC, "Member 'UPyWidget_AbilityStatus_Normal::ColorProgressTop' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, ColorProgressBottom) == 0x0007CC, "Member 'UPyWidget_AbilityStatus_Normal::ColorProgressBottom' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, bCustomColorPreview) == 0x0007DC, "Member 'UPyWidget_AbilityStatus_Normal::bCustomColorPreview' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, bCustomColorPreview_Cooling) == 0x0007DD, "Member 'UPyWidget_AbilityStatus_Normal::bCustomColorPreview_Cooling' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, CustomColorPreview_CoolingTotal) == 0x0007E0, "Member 'UPyWidget_AbilityStatus_Normal::CustomColorPreview_CoolingTotal' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, CustomColorPreview_CoolingRemain) == 0x0007E4, "Member 'UPyWidget_AbilityStatus_Normal::CustomColorPreview_CoolingRemain' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, CustomColorPreview_AbilityTexture) == 0x0007E8, "Member 'UPyWidget_AbilityStatus_Normal::CustomColorPreview_AbilityTexture' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Normal, bCustomColorPreview_Charge) == 0x000818, "Member 'UPyWidget_AbilityStatus_Normal::bCustomColorPreview_Charge' has a wrong offset!");

// PythonClass PyWidget_AbilityStatus.PyWidget_AbilityWeaponStatusPanel
// 0x0068 (0x0610 - 0x05A8)
class UPyWidget_AbilityWeaponStatusPanel : public UMarvelUserWidget
{
public:
	class UMarvelKeyUIAsset*                      KeyAsset;                                          // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                NormalAbilityMargin;                               // 0x05B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                PhysicsAbilityMargin;                              // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnchors                               UltimateWidgetAnchors;                             // 0x05D0(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                UltimateWidgetOffsets;                             // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AnimAbsorbSpeed;                                   // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Audio_Absorb;                                      // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Reset();
	void RemoveWeaponWidget(class UWidget_WeaponStatus* InWidget);
	void AddItemAbility(class UUserWidget* InWidget);
	void AddUltimateAbility(class UUserWidget* InWidget);
	void UpdateInputType();
	void AddWeaponWidget(class UUserWidget* InWidget, int32 Index_0);
	void AddAbilityWidget(class UUserWidget* InWidget, int32 Index_0);
	void Destruct();
	void Construct();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_AbilityWeaponStatusPanel">();
	}
	static class UPyWidget_AbilityWeaponStatusPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_AbilityWeaponStatusPanel>();
	}
};
static_assert(alignof(UPyWidget_AbilityWeaponStatusPanel) == 0x000008, "Wrong alignment on UPyWidget_AbilityWeaponStatusPanel");
static_assert(sizeof(UPyWidget_AbilityWeaponStatusPanel) == 0x000610, "Wrong size on UPyWidget_AbilityWeaponStatusPanel");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, KeyAsset) == 0x0005A8, "Member 'UPyWidget_AbilityWeaponStatusPanel::KeyAsset' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, NormalAbilityMargin) == 0x0005B0, "Member 'UPyWidget_AbilityWeaponStatusPanel::NormalAbilityMargin' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, PhysicsAbilityMargin) == 0x0005C0, "Member 'UPyWidget_AbilityWeaponStatusPanel::PhysicsAbilityMargin' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, UltimateWidgetAnchors) == 0x0005D0, "Member 'UPyWidget_AbilityWeaponStatusPanel::UltimateWidgetAnchors' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, UltimateWidgetOffsets) == 0x0005F0, "Member 'UPyWidget_AbilityWeaponStatusPanel::UltimateWidgetOffsets' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, AnimAbsorbSpeed) == 0x000600, "Member 'UPyWidget_AbilityWeaponStatusPanel::AnimAbsorbSpeed' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityWeaponStatusPanel, Audio_Absorb) == 0x000608, "Member 'UPyWidget_AbilityWeaponStatusPanel::Audio_Absorb' has a wrong offset!");

// PythonClass PyWidget_AbilityStatus.PyWidget_AbilityStatus_Ultimate
// 0x0038 (0x06A0 - 0x0668)
class UPyWidget_AbilityStatus_Ultimate : public UWidget_AbilityStatus_Ultimate
{
public:
	class UAkAudioEvent*                          Audio_Ready;                                       // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KeyOpacity_Usable;                                 // 0x0670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KeyOpacity_Unusable;                               // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorProgressTop;                                  // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorProgressBottom;                               // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomColorPreview;                               // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_699[0x3];                                      // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomColorPreview_EnergyPercent;                  // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool UIBlocked();
	bool UIActive();
	void SetReady(bool bInReady);
	void SetPercent(float InPercent);
	void UpdateStyle();
	void SetAbility(class UMarvelGameplayAbility* Ability_0);
	void UpdateInputType();
	void Destruct();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Reset();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_AbilityStatus_Ultimate">();
	}
	static class UPyWidget_AbilityStatus_Ultimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_AbilityStatus_Ultimate>();
	}
};
static_assert(alignof(UPyWidget_AbilityStatus_Ultimate) == 0x000008, "Wrong alignment on UPyWidget_AbilityStatus_Ultimate");
static_assert(sizeof(UPyWidget_AbilityStatus_Ultimate) == 0x0006A0, "Wrong size on UPyWidget_AbilityStatus_Ultimate");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, Audio_Ready) == 0x000668, "Member 'UPyWidget_AbilityStatus_Ultimate::Audio_Ready' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, KeyOpacity_Usable) == 0x000670, "Member 'UPyWidget_AbilityStatus_Ultimate::KeyOpacity_Usable' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, KeyOpacity_Unusable) == 0x000674, "Member 'UPyWidget_AbilityStatus_Ultimate::KeyOpacity_Unusable' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, ColorProgressTop) == 0x000678, "Member 'UPyWidget_AbilityStatus_Ultimate::ColorProgressTop' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, ColorProgressBottom) == 0x000688, "Member 'UPyWidget_AbilityStatus_Ultimate::ColorProgressBottom' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, bCustomColorPreview) == 0x000698, "Member 'UPyWidget_AbilityStatus_Ultimate::bCustomColorPreview' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Ultimate, CustomColorPreview_EnergyPercent) == 0x00069C, "Member 'UPyWidget_AbilityStatus_Ultimate::CustomColorPreview_EnergyPercent' has a wrong offset!");

// PythonClass PyWidget_AbilityStatus.PyWidget_AbilityStatus_Charge
// 0x0028 (0x05E8 - 0x05C0)
class UPyWidget_AbilityStatus_Charge : public UWidget_AbilityCharge
{
public:
	struct FSlateColor                            TextColor_Charging;                                // 0x05C0(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            TextColor_Full;                                    // 0x05D4(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void SetChargePercent(float InPercent);
	void UpdateStyle();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_AbilityStatus_Charge">();
	}
	static class UPyWidget_AbilityStatus_Charge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_AbilityStatus_Charge>();
	}
};
static_assert(alignof(UPyWidget_AbilityStatus_Charge) == 0x000008, "Wrong alignment on UPyWidget_AbilityStatus_Charge");
static_assert(sizeof(UPyWidget_AbilityStatus_Charge) == 0x0005E8, "Wrong size on UPyWidget_AbilityStatus_Charge");
static_assert(offsetof(UPyWidget_AbilityStatus_Charge, TextColor_Charging) == 0x0005C0, "Member 'UPyWidget_AbilityStatus_Charge::TextColor_Charging' has a wrong offset!");
static_assert(offsetof(UPyWidget_AbilityStatus_Charge, TextColor_Full) == 0x0005D4, "Member 'UPyWidget_AbilityStatus_Charge::TextColor_Full' has a wrong offset!");

}


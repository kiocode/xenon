#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Reticle

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass Reticle.UISettingReticleTreatHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingReticleTreatHandler final : public UUISettingEntrySettingHandler
{
public:
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	float BP_GetDefaultValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	float BP_GetRevertValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingReticleTreatHandler">();
	}
	static class UUISettingReticleTreatHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingReticleTreatHandler>();
	}
};
//static_assert(alignof(UUISettingReticleTreatHandler) == 0x000008, "Wrong alignment on UUISettingReticleTreatHandler");
//static_assert(sizeof(UUISettingReticleTreatHandler) == 0x000030, "Wrong size on UUISettingReticleTreatHandler");

// PythonClass Reticle.UISettingReticleSettingHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingReticleSettingHandler final : public UUISettingEntrySettingHandler
{
public:
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	float BP_GetDefaultValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	bool BP_IsShowStar(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingReticleSettingHandler">();
	}
	static class UUISettingReticleSettingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingReticleSettingHandler>();
	}
};
//static_assert(alignof(UUISettingReticleSettingHandler) == 0x000008, "Wrong alignment on UUISettingReticleSettingHandler");
//static_assert(sizeof(UUISettingReticleSettingHandler) == 0x000030, "Wrong size on UUISettingReticleSettingHandler");

// PythonClass Reticle.UISettingReticleColorSettingHandler
// 0x0008 (0x0038 - 0x0030)
class UUISettingReticleColorSettingHandler : public UUISettingEntrySettingHandler
{
public:
	class UMaterialParameterCollection*           MPC_Slider;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class FString BP_GetCurrentStrValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnStrValueChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, const class FString& Value, const TMap<class FString, int32>& Tags);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	bool BP_IsShowStar(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingReticleColorSettingHandler">();
	}
	static class UUISettingReticleColorSettingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingReticleColorSettingHandler>();
	}
};
//static_assert(alignof(UUISettingReticleColorSettingHandler) == 0x000008, "Wrong alignment on UUISettingReticleColorSettingHandler");
//static_assert(sizeof(UUISettingReticleColorSettingHandler) == 0x000038, "Wrong size on UUISettingReticleColorSettingHandler");
//static_assert(offsetof(UUISettingReticleColorSettingHandler, MPC_Slider) == 0x000030, "Member 'UUISettingReticleColorSettingHandler::MPC_Slider' has a wrong offset!");

// PythonClass Reticle.UISettingReticleTypeSettingHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingReticleTypeSettingHandler final : public UUISettingEntrySettingHandler
{
public:
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	bool BP_IsShowStar(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingReticleTypeSettingHandler">();
	}
	static class UUISettingReticleTypeSettingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingReticleTypeSettingHandler>();
	}
};
//static_assert(alignof(UUISettingReticleTypeSettingHandler) == 0x000008, "Wrong alignment on UUISettingReticleTypeSettingHandler");
//static_assert(sizeof(UUISettingReticleTypeSettingHandler) == 0x000030, "Wrong size on UUISettingReticleTypeSettingHandler");

// PythonClass Reticle.UISettingReticleAnimSettingHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingReticleAnimSettingHandler final : public UUISettingEntrySettingHandler
{
public:
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	bool BP_IsShowStar(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingReticleAnimSettingHandler">();
	}
	static class UUISettingReticleAnimSettingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingReticleAnimSettingHandler>();
	}
};
//static_assert(alignof(UUISettingReticleAnimSettingHandler) == 0x000008, "Wrong alignment on UUISettingReticleAnimSettingHandler");
//static_assert(sizeof(UUISettingReticleAnimSettingHandler) == 0x000030, "Wrong size on UUISettingReticleAnimSettingHandler");

// PythonClass Reticle.UISettingEntrySaveHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntrySaveHandler final : public UUISettingEntrySettingHandler
{
public:
	TMap<class FString, int32> BP_OnBtnClicked(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	bool BP_IsShowStar(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntrySaveHandler">();
	}
	static class UUISettingEntrySaveHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntrySaveHandler>();
	}
};
//static_assert(alignof(UUISettingEntrySaveHandler) == 0x000008, "Wrong alignment on UUISettingEntrySaveHandler");
//static_assert(sizeof(UUISettingEntrySaveHandler) == 0x000030, "Wrong size on UUISettingEntrySaveHandler");

// PythonClass Reticle.UISettingEntryReticleSaveSettingHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryReticleSaveSettingHandler final : public UUISettingEntrySettingHandler
{
public:
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);
	TMap<class FString, int32> BP_OnBtnClicked(class UObject* Obj, const class FString& Key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryReticleSaveSettingHandler">();
	}
	static class UUISettingEntryReticleSaveSettingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryReticleSaveSettingHandler>();
	}
};
//static_assert(alignof(UUISettingEntryReticleSaveSettingHandler) == 0x000008, "Wrong alignment on UUISettingEntryReticleSaveSettingHandler");
//static_assert(sizeof(UUISettingEntryReticleSaveSettingHandler) == 0x000030, "Wrong size on UUISettingEntryReticleSaveSettingHandler");

// PythonClass Reticle.UISettingEntryReticleSaveOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryReticleSaveOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& Setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryReticleSaveOptionsGenerator">();
	}
	static class UUISettingEntryReticleSaveOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryReticleSaveOptionsGenerator>();
	}
};
//static_assert(alignof(UUISettingEntryReticleSaveOptionsGenerator) == 0x000008, "Wrong alignment on UUISettingEntryReticleSaveOptionsGenerator");
//static_assert(sizeof(UUISettingEntryReticleSaveOptionsGenerator) == 0x000030, "Wrong size on UUISettingEntryReticleSaveOptionsGenerator");

}


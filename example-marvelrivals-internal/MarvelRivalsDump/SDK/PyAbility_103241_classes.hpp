#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103241

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_103241.PyCue_Ability_Loop_10324101
// 0x0000 (0x0E50 - 0x0E50)
class APyCue_Ability_Loop_10324101 final : public AMarvelCueNotify_Ability
{
public:
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_10324101">();
	}
	static class APyCue_Ability_Loop_10324101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_10324101>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_10324101) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_10324101");
static_assert(sizeof(APyCue_Ability_Loop_10324101) == 0x000E50, "Wrong size on APyCue_Ability_Loop_10324101");

// PythonClass PyAbility_103241.PyCue_Ability_Loop_10324103
// 0x0008 (0x0E58 - 0x0E50)
class APyCue_Ability_Loop_10324103 final : public AMarvelCueNotify_Ability
{
public:
	float                                         FadeTime;                                          // 0x0E50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void FadeOut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_10324103">();
	}
	static class APyCue_Ability_Loop_10324103* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_10324103>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_10324103) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_10324103");
static_assert(sizeof(APyCue_Ability_Loop_10324103) == 0x000E58, "Wrong size on APyCue_Ability_Loop_10324103");
static_assert(offsetof(APyCue_Ability_Loop_10324103, FadeTime) == 0x000E50, "Member 'APyCue_Ability_Loop_10324103::FadeTime' has a wrong offset!");

// PythonClass PyAbility_103241.PyConfig_103241
// 0x0068 (0x0100 - 0x0098)
class UPyConfig_103241 final : public UMarvelAbilityConfig
{
public:
	float                                         Duration;                                          // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FString>                    AbilitiesId;                                       // 0x00A0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 InterruptId;                                       // 0x00F0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_103241">();
	}
	static class UPyConfig_103241* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_103241>();
	}
};
static_assert(alignof(UPyConfig_103241) == 0x000008, "Wrong alignment on UPyConfig_103241");
static_assert(sizeof(UPyConfig_103241) == 0x000100, "Wrong size on UPyConfig_103241");
static_assert(offsetof(UPyConfig_103241, Duration) == 0x000098, "Member 'UPyConfig_103241::Duration' has a wrong offset!");
static_assert(offsetof(UPyConfig_103241, AbilitiesId) == 0x0000A0, "Member 'UPyConfig_103241::AbilitiesId' has a wrong offset!");
static_assert(offsetof(UPyConfig_103241, InterruptId) == 0x0000F0, "Member 'UPyConfig_103241::InterruptId' has a wrong offset!");

// PythonClass PyAbility_103241.PyAbility_103241
// 0x0010 (0x2598 - 0x2588)
class UPyAbility_103241 : public UAbility_108
{
public:
	FMulticastInlineDelegateProperty_             OnRefreshAbility;                                  // 0x2588(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	void K2_ActivateAbility();
	float GetAbilityDuration();
	void OnDurationEnd();
	void OnCooldownTagUpdated(const struct FGameplayTag& TagUpdated, bool TagExists);
	void OnActivatedAbilityEnd(int32 AbilityID);
	void K2_EndAbilityWithChecked();
	void K2_OnEndAbility(bool bWasCancelled);
	void NativeOnMontageEvent(const class FString& Tag);
	void OnRefreshAbility__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_103241">();
	}
	static class UPyAbility_103241* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_103241>();
	}
};
static_assert(alignof(UPyAbility_103241) == 0x000008, "Wrong alignment on UPyAbility_103241");
static_assert(sizeof(UPyAbility_103241) == 0x002598, "Wrong size on UPyAbility_103241");
static_assert(offsetof(UPyAbility_103241, OnRefreshAbility) == 0x002588, "Member 'UPyAbility_103241::OnRefreshAbility' has a wrong offset!");

// PythonClass PyAbility_103241.PyUIController_103241
// 0x0000 (0x0C60 - 0x0C60)
class UPyUIController_103241 final : public UUIC_Ability
{
public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void OnCharacterAbilityTagChange(const struct FGameplayTag& CallbackTag, int32 NewCount);
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_103241">();
	}
	static class UPyUIController_103241* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_103241>();
	}
};
static_assert(alignof(UPyUIController_103241) == 0x000008, "Wrong alignment on UPyUIController_103241");
static_assert(sizeof(UPyUIController_103241) == 0x000C60, "Wrong size on UPyUIController_103241");

}


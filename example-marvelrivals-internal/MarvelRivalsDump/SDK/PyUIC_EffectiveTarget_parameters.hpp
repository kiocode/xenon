#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyUIC_EffectiveTarget

#include "Basic.hpp"

#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyUIC_EffectiveTarget.PyWidget_EffectiveTarget.ShouldBeVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_EffectiveTarget_ShouldBeVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_EffectiveTarget_ShouldBeVisible) == 0x000001, "Wrong alignment on PyWidget_EffectiveTarget_ShouldBeVisible");
static_assert(sizeof(PyWidget_EffectiveTarget_ShouldBeVisible) == 0x000001, "Wrong size on PyWidget_EffectiveTarget_ShouldBeVisible");
static_assert(offsetof(PyWidget_EffectiveTarget_ShouldBeVisible, ReturnValue) == 0x000000, "Member 'PyWidget_EffectiveTarget_ShouldBeVisible::ReturnValue' has a wrong offset!");

// PythonFunction PyUIC_EffectiveTarget.PyUIController_EffectiveTargetBase.OnTargetTakeTreat
// 0x0028 (0x0028 - 0x0000)
struct PyUIController_EffectiveTargetBase_OnTargetTakeTreat final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_EffectiveTargetBase_OnTargetTakeTreat) == 0x000008, "Wrong alignment on PyUIController_EffectiveTargetBase_OnTargetTakeTreat");
static_assert(sizeof(PyUIController_EffectiveTargetBase_OnTargetTakeTreat) == 0x000028, "Wrong size on PyUIController_EffectiveTargetBase_OnTargetTakeTreat");
static_assert(offsetof(PyUIController_EffectiveTargetBase_OnTargetTakeTreat, Source) == 0x000000, "Member 'PyUIController_EffectiveTargetBase_OnTargetTakeTreat::Source' has a wrong offset!");
static_assert(offsetof(PyUIController_EffectiveTargetBase_OnTargetTakeTreat, Target) == 0x000008, "Member 'PyUIController_EffectiveTargetBase_OnTargetTakeTreat::Target' has a wrong offset!");
static_assert(offsetof(PyUIController_EffectiveTargetBase_OnTargetTakeTreat, ModifierParameterHandle) == 0x000010, "Member 'PyUIController_EffectiveTargetBase_OnTargetTakeTreat::ModifierParameterHandle' has a wrong offset!");

// PythonFunction PyUIC_EffectiveTarget.PyUIController_EffectiveTargetBase.OnTargetAttrChanged
// 0x0020 (0x0020 - 0x0000)
struct PyUIController_EffectiveTargetBase_OnTargetAttrChanged final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierParameterHandle;                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_EffectiveTargetBase_OnTargetAttrChanged) == 0x000008, "Wrong alignment on PyUIController_EffectiveTargetBase_OnTargetAttrChanged");
static_assert(sizeof(PyUIController_EffectiveTargetBase_OnTargetAttrChanged) == 0x000020, "Wrong size on PyUIController_EffectiveTargetBase_OnTargetAttrChanged");
static_assert(offsetof(PyUIController_EffectiveTargetBase_OnTargetAttrChanged, SourceActor) == 0x000000, "Member 'PyUIController_EffectiveTargetBase_OnTargetAttrChanged::SourceActor' has a wrong offset!");
static_assert(offsetof(PyUIController_EffectiveTargetBase_OnTargetAttrChanged, ModifierParameterHandle) == 0x000008, "Member 'PyUIController_EffectiveTargetBase_OnTargetAttrChanged::ModifierParameterHandle' has a wrong offset!");

// PythonFunction PyUIC_EffectiveTarget.PyUIController_EffectiveTargetBase.OnTargetSculptChanged
// 0x0004 (0x0004 - 0x0000)
struct PyUIController_EffectiveTargetBase_OnTargetSculptChanged final
{
public:
	int32                                         Sculpt_id;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_EffectiveTargetBase_OnTargetSculptChanged) == 0x000004, "Wrong alignment on PyUIController_EffectiveTargetBase_OnTargetSculptChanged");
static_assert(sizeof(PyUIController_EffectiveTargetBase_OnTargetSculptChanged) == 0x000004, "Wrong size on PyUIController_EffectiveTargetBase_OnTargetSculptChanged");
static_assert(offsetof(PyUIController_EffectiveTargetBase_OnTargetSculptChanged, Sculpt_id) == 0x000000, "Member 'PyUIController_EffectiveTargetBase_OnTargetSculptChanged::Sculpt_id' has a wrong offset!");

// PythonFunction PyUIC_EffectiveTarget.PyUIController_EffectiveTargetBase.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_EffectiveTargetBase_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_EffectiveTargetBase_SetAbility) == 0x000008, "Wrong alignment on PyUIController_EffectiveTargetBase_SetAbility");
static_assert(sizeof(PyUIController_EffectiveTargetBase_SetAbility) == 0x000010, "Wrong size on PyUIController_EffectiveTargetBase_SetAbility");
static_assert(offsetof(PyUIController_EffectiveTargetBase_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_EffectiveTargetBase_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_EffectiveTargetBase_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_EffectiveTargetBase_SetAbility::InAbility' has a wrong offset!");

}


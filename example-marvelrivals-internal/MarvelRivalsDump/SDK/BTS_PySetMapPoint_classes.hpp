#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_PySetMapPoint

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "PyBTNodeBase_classes.hpp"


namespace SDK
{

// PythonClass BTS_PySetMapPoint.BTS_PySetMapPoint
// 0x01B8 (0x0260 - 0x00A8)
class UBTS_PySetMapPoint : public UBTService_PyBase
{
public:
	struct FBlackboardKeySelector                 Frontier;                                          // 0x00A8(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 EnemyPlayerStart;                                  // 0x00D8(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 AllyPlayerStart;                                   // 0x0108(0x0030)(Edit, NativeAccessSpecifierPublic)
	float                                         SuppressDist;                                      // 0x0138(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetreatDist;                                       // 0x013C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 SuppressPoint;                                     // 0x0140(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 RetreatPoint;                                      // 0x0170(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 InMatchStateInput;                                 // 0x01A0(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 OutSuppressArea;                                   // 0x01D0(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 OutRetreatArea;                                    // 0x0200(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                 OutHotArea;                                        // 0x0230(0x0030)(Edit, NativeAccessSpecifierPublic)

public:
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTS_PySetMapPoint">();
	}
	static class UBTS_PySetMapPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_PySetMapPoint>();
	}
};
//static_assert(alignof(UBTS_PySetMapPoint) == 0x000008, "Wrong alignment on UBTS_PySetMapPoint");
//static_assert(sizeof(UBTS_PySetMapPoint) == 0x000260, "Wrong size on UBTS_PySetMapPoint");
//static_assert(offsetof(UBTS_PySetMapPoint, Frontier) == 0x0000A8, "Member 'UBTS_PySetMapPoint::Frontier' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, EnemyPlayerStart) == 0x0000D8, "Member 'UBTS_PySetMapPoint::EnemyPlayerStart' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, AllyPlayerStart) == 0x000108, "Member 'UBTS_PySetMapPoint::AllyPlayerStart' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, SuppressDist) == 0x000138, "Member 'UBTS_PySetMapPoint::SuppressDist' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, RetreatDist) == 0x00013C, "Member 'UBTS_PySetMapPoint::RetreatDist' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, SuppressPoint) == 0x000140, "Member 'UBTS_PySetMapPoint::SuppressPoint' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, RetreatPoint) == 0x000170, "Member 'UBTS_PySetMapPoint::RetreatPoint' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, InMatchStateInput) == 0x0001A0, "Member 'UBTS_PySetMapPoint::InMatchStateInput' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, OutSuppressArea) == 0x0001D0, "Member 'UBTS_PySetMapPoint::OutSuppressArea' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, OutRetreatArea) == 0x000200, "Member 'UBTS_PySetMapPoint::OutRetreatArea' has a wrong offset!");
//static_assert(offsetof(UBTS_PySetMapPoint, OutHotArea) == 0x000230, "Member 'UBTS_PySetMapPoint::OutHotArea' has a wrong offset!");

}


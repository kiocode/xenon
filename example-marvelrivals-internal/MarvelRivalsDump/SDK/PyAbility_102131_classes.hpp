#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102131

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_102131.PyAbility_102131
// 0x0038 (0x25B8 - 0x2580)
class UPyAbility_102131 : public UMarvelGameplayAbility
{
public:
	bool                                          IsLooseBow;                                        // 0x2580(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2581[0x7];                                     // 0x2581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPreShootingDelegate;                             // 0x2588(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLooseBow;                                        // 0x2598(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             QATestArrowData;                                   // 0x25A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnPreShootingDelegate__DelegateSignature();
	void BeginPlay();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void NativeOnMontageCompleted(const class FString& Tag);
	void NativeOnMontageCancelled(const class FString& Tag);
	void NativeOnMontageInterrupted(const class FString& Tag);
	void NativeOnMontageEvent(const class FString& Tag);
	void MissileEventNotify();
	void OnApplyDamage(class AActor* Instigator, class AActor* Target, const struct FAttributeModifierHandle& ParamterHandle);
	void OnRep_IsLooseBow();
	void OnLooseBow__DelegateSignature();
	void QATestArrowData__DelegateSignature(const struct FHawkeyeArrowData& ArrowData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_102131">();
	}
	static class UPyAbility_102131* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_102131>();
	}
};
static_assert(alignof(UPyAbility_102131) == 0x000008, "Wrong alignment on UPyAbility_102131");
static_assert(sizeof(UPyAbility_102131) == 0x0025B8, "Wrong size on UPyAbility_102131");
static_assert(offsetof(UPyAbility_102131, IsLooseBow) == 0x002580, "Member 'UPyAbility_102131::IsLooseBow' has a wrong offset!");
static_assert(offsetof(UPyAbility_102131, OnPreShootingDelegate) == 0x002588, "Member 'UPyAbility_102131::OnPreShootingDelegate' has a wrong offset!");
static_assert(offsetof(UPyAbility_102131, OnLooseBow) == 0x002598, "Member 'UPyAbility_102131::OnLooseBow' has a wrong offset!");
static_assert(offsetof(UPyAbility_102131, QATestArrowData) == 0x0025A8, "Member 'UPyAbility_102131::QATestArrowData' has a wrong offset!");

// PythonClass PyAbility_102131.PyConfig_102131
// 0x0068 (0x0100 - 0x0098)
class UPyConfig_102131 final : public UMarvelAbilityConfig
{
public:
	int32                                         SlowDownBuffId;                                    // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChargeAccelerateScale;                             // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProjectileID;                                      // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DamageWithEnergy;                                  // 0x00A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ProjectileStartOffset;                             // 0x00A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           ChargeCurveSingle;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TripleArrowLaunchAngle;                            // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TripleArrowSpeedBase;                              // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TripleArrowGravityBase;                            // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           ChargeCurveTriple;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ScopeEffectOncePerActor;                           // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HiddenArrowTimeAfterShoot;                         // 0x00E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OpenProjLog;                                       // 0x00E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AActor>>             HideArrowMeshTypes;                                // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_102131">();
	}
	static class UPyConfig_102131* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_102131>();
	}
};
static_assert(alignof(UPyConfig_102131) == 0x000008, "Wrong alignment on UPyConfig_102131");
static_assert(sizeof(UPyConfig_102131) == 0x000100, "Wrong size on UPyConfig_102131");
static_assert(offsetof(UPyConfig_102131, SlowDownBuffId) == 0x000098, "Member 'UPyConfig_102131::SlowDownBuffId' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, ChargeAccelerateScale) == 0x00009C, "Member 'UPyConfig_102131::ChargeAccelerateScale' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, ProjectileID) == 0x0000A0, "Member 'UPyConfig_102131::ProjectileID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, DamageWithEnergy) == 0x0000A4, "Member 'UPyConfig_102131::DamageWithEnergy' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, ProjectileStartOffset) == 0x0000A8, "Member 'UPyConfig_102131::ProjectileStartOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, ChargeCurveSingle) == 0x0000C0, "Member 'UPyConfig_102131::ChargeCurveSingle' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, TripleArrowLaunchAngle) == 0x0000C8, "Member 'UPyConfig_102131::TripleArrowLaunchAngle' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, TripleArrowSpeedBase) == 0x0000CC, "Member 'UPyConfig_102131::TripleArrowSpeedBase' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, TripleArrowGravityBase) == 0x0000D0, "Member 'UPyConfig_102131::TripleArrowGravityBase' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, ChargeCurveTriple) == 0x0000D8, "Member 'UPyConfig_102131::ChargeCurveTriple' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, ScopeEffectOncePerActor) == 0x0000E0, "Member 'UPyConfig_102131::ScopeEffectOncePerActor' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, HiddenArrowTimeAfterShoot) == 0x0000E4, "Member 'UPyConfig_102131::HiddenArrowTimeAfterShoot' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, OpenProjLog) == 0x0000E8, "Member 'UPyConfig_102131::OpenProjLog' has a wrong offset!");
static_assert(offsetof(UPyConfig_102131, HideArrowMeshTypes) == 0x0000F0, "Member 'UPyConfig_102131::HideArrowMeshTypes' has a wrong offset!");

// PythonClass PyAbility_102131.PyCue_Projectile_Loop_10213101
// 0x0048 (0x0DF8 - 0x0DB0)
class APyCue_Projectile_Loop_10213101 final : public AMarvelCueNotify_Projectile
{
public:
	bool                                          bIsAttach;                                         // 0x0DB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DB1[0x3];                                      // 0x0DB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReleaseFxPoint;                                    // 0x0DB4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         ReleaseFX;                                         // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ArrowFxCDOLoc;                                     // 0x0DC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ArrowFxCDORot;                                     // 0x0DE0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void UpdateArrowMesh(bool NeedHidden, const struct FHitResult& ImpactResult);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void AdjustArrowTransform(const struct FHitResult& ImpactResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Projectile_Loop_10213101">();
	}
	static class APyCue_Projectile_Loop_10213101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Projectile_Loop_10213101>();
	}
};
static_assert(alignof(APyCue_Projectile_Loop_10213101) == 0x000008, "Wrong alignment on APyCue_Projectile_Loop_10213101");
static_assert(sizeof(APyCue_Projectile_Loop_10213101) == 0x000DF8, "Wrong size on APyCue_Projectile_Loop_10213101");
static_assert(offsetof(APyCue_Projectile_Loop_10213101, bIsAttach) == 0x000DB0, "Member 'APyCue_Projectile_Loop_10213101::bIsAttach' has a wrong offset!");
static_assert(offsetof(APyCue_Projectile_Loop_10213101, ReleaseFxPoint) == 0x000DB4, "Member 'APyCue_Projectile_Loop_10213101::ReleaseFxPoint' has a wrong offset!");
static_assert(offsetof(APyCue_Projectile_Loop_10213101, ReleaseFX) == 0x000DC0, "Member 'APyCue_Projectile_Loop_10213101::ReleaseFX' has a wrong offset!");
static_assert(offsetof(APyCue_Projectile_Loop_10213101, ArrowFxCDOLoc) == 0x000DC8, "Member 'APyCue_Projectile_Loop_10213101::ArrowFxCDOLoc' has a wrong offset!");
static_assert(offsetof(APyCue_Projectile_Loop_10213101, ArrowFxCDORot) == 0x000DE0, "Member 'APyCue_Projectile_Loop_10213101::ArrowFxCDORot' has a wrong offset!");

// PythonClass PyAbility_102131.PyProjectile_10213101
// 0x0020 (0x3070 - 0x3050)
class APyProjectile_10213101 : public AMarvelAbilityTargetActor_Projectile
{
public:
	float                                         ChargeTime;                                        // 0x3050(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3054[0x4];                                     // 0x3054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             DelegateShowArrowMesh;                             // 0x3058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void K2_OnBeginAgentTask();
	void K2_OnRecycleAgentTask();
	void K2_OnInitializeData();
	void InitData();
	void K2_OnEndAgentTask();
	void K2_OnProcessHit(const struct FHitResult& ImpactResult);
	void DelegateShowArrowMesh__DelegateSignature(bool Is_hidden, const struct FHitResult& ImpactResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10213101">();
	}
	static class APyProjectile_10213101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10213101>();
	}
};
static_assert(alignof(APyProjectile_10213101) == 0x000010, "Wrong alignment on APyProjectile_10213101");
static_assert(sizeof(APyProjectile_10213101) == 0x003070, "Wrong size on APyProjectile_10213101");
static_assert(offsetof(APyProjectile_10213101, ChargeTime) == 0x003050, "Member 'APyProjectile_10213101::ChargeTime' has a wrong offset!");
static_assert(offsetof(APyProjectile_10213101, DelegateShowArrowMesh) == 0x003058, "Member 'APyProjectile_10213101::DelegateShowArrowMesh' has a wrong offset!");

// PythonClass PyAbility_102131.PyUIController_102131
// 0x00D0 (0x0D30 - 0x0C60)
class UPyUIController_102131 final : public UUIC_Ability
{
public:
	class UTexture2D*                             ThumpArrowIcon;                                    // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             BurstArrowIcon;                                    // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                WeaponWidget;                                      // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUIActionData                          ThumpActionData;                                   // 0x0C78(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIActionData                          BurstActionData;                                   // 0x0CD0(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         MaxAccumulateNeedTime;                             // 0x0D28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void OnDestruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_102131">();
	}
	static class UPyUIController_102131* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_102131>();
	}
};
static_assert(alignof(UPyUIController_102131) == 0x000008, "Wrong alignment on UPyUIController_102131");
static_assert(sizeof(UPyUIController_102131) == 0x000D30, "Wrong size on UPyUIController_102131");
static_assert(offsetof(UPyUIController_102131, ThumpArrowIcon) == 0x000C60, "Member 'UPyUIController_102131::ThumpArrowIcon' has a wrong offset!");
static_assert(offsetof(UPyUIController_102131, BurstArrowIcon) == 0x000C68, "Member 'UPyUIController_102131::BurstArrowIcon' has a wrong offset!");
static_assert(offsetof(UPyUIController_102131, WeaponWidget) == 0x000C70, "Member 'UPyUIController_102131::WeaponWidget' has a wrong offset!");
static_assert(offsetof(UPyUIController_102131, ThumpActionData) == 0x000C78, "Member 'UPyUIController_102131::ThumpActionData' has a wrong offset!");
static_assert(offsetof(UPyUIController_102131, BurstActionData) == 0x000CD0, "Member 'UPyUIController_102131::BurstActionData' has a wrong offset!");
static_assert(offsetof(UPyUIController_102131, MaxAccumulateNeedTime) == 0x000D28, "Member 'UPyUIController_102131::MaxAccumulateNeedTime' has a wrong offset!");

// PythonClass PyAbility_102131.PyCue_Ability_Loop_10213101
// 0x0008 (0x0E58 - 0x0E50)
class APyCue_Ability_Loop_10213101 final : public AMarvelCueNotify_Ability
{
public:
	int32                                         AbilityID;                                         // 0x0E50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbilityAudioID;                                    // 0x0E54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void WhileActiveAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void PlayLooseAudio();
	void OnRemoveAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_10213101">();
	}
	static class APyCue_Ability_Loop_10213101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_10213101>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_10213101) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_10213101");
static_assert(sizeof(APyCue_Ability_Loop_10213101) == 0x000E58, "Wrong size on APyCue_Ability_Loop_10213101");
static_assert(offsetof(APyCue_Ability_Loop_10213101, AbilityID) == 0x000E50, "Member 'APyCue_Ability_Loop_10213101::AbilityID' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_10213101, AbilityAudioID) == 0x000E54, "Member 'APyCue_Ability_Loop_10213101::AbilityAudioID' has a wrong offset!");

}


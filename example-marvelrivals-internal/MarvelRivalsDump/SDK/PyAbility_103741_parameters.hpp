#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103741

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103741.PyAbility_103741.CheckTarget
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_103741_CheckTarget final
{
public:
	const class AActor*                           InTarget;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103741_CheckTarget) == 0x000008, "Wrong alignment on PyAbility_103741_CheckTarget");
static_assert(sizeof(PyAbility_103741_CheckTarget) == 0x000010, "Wrong size on PyAbility_103741_CheckTarget");
static_assert(offsetof(PyAbility_103741_CheckTarget, InTarget) == 0x000000, "Member 'PyAbility_103741_CheckTarget::InTarget' has a wrong offset!");
static_assert(offsetof(PyAbility_103741_CheckTarget, ReturnValue) == 0x000008, "Member 'PyAbility_103741_CheckTarget::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103741.PyAbility_103741.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103741_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103741_CanActivate) == 0x000001, "Wrong alignment on PyAbility_103741_CanActivate");
static_assert(sizeof(PyAbility_103741_CanActivate) == 0x000001, "Wrong size on PyAbility_103741_CanActivate");
static_assert(offsetof(PyAbility_103741_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_103741_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103741.PyAbility_103741.K2_TryMakeTriggerContext
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_103741_K2_TryMakeTriggerContext final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(Parm, OutParm)
};
static_assert(alignof(PyAbility_103741_K2_TryMakeTriggerContext) == 0x000008, "Wrong alignment on PyAbility_103741_K2_TryMakeTriggerContext");
static_assert(sizeof(PyAbility_103741_K2_TryMakeTriggerContext) == 0x000290, "Wrong size on PyAbility_103741_K2_TryMakeTriggerContext");
static_assert(offsetof(PyAbility_103741_K2_TryMakeTriggerContext, EventData) == 0x000000, "Member 'PyAbility_103741_K2_TryMakeTriggerContext::EventData' has a wrong offset!");

// PythonFunction PyAbility_103741.PyAbility_103741.K2_ActivateAbilityFromEvent
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_103741_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_103741_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on PyAbility_103741_K2_ActivateAbilityFromEvent");
static_assert(sizeof(PyAbility_103741_K2_ActivateAbilityFromEvent) == 0x000290, "Wrong size on PyAbility_103741_K2_ActivateAbilityFromEvent");
static_assert(offsetof(PyAbility_103741_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'PyAbility_103741_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// PythonFunction PyAbility_103741.PyAbility_103741.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103741_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103741_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_103741_K2_OnEndAbility");
static_assert(sizeof(PyAbility_103741_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_103741_K2_OnEndAbility");
static_assert(offsetof(PyAbility_103741_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_103741_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_103741.PyAbility_103741.MulticastAddIronByValueEvent
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103741_MulticastAddIronByValueEvent final
{
public:
	float                                         RecoverValue;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103741_MulticastAddIronByValueEvent) == 0x000004, "Wrong alignment on PyAbility_103741_MulticastAddIronByValueEvent");
static_assert(sizeof(PyAbility_103741_MulticastAddIronByValueEvent) == 0x000004, "Wrong size on PyAbility_103741_MulticastAddIronByValueEvent");
static_assert(offsetof(PyAbility_103741_MulticastAddIronByValueEvent, RecoverValue) == 0x000000, "Member 'PyAbility_103741_MulticastAddIronByValueEvent::RecoverValue' has a wrong offset!");

// PythonFunction PyAbility_103741.PySummoned_10374101.OnInstigatorDeath
// 0x0028 (0x0028 - 0x0000)
struct PySummoned_10374101_OnInstigatorDeath final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParamHandle;                                       // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PySummoned_10374101_OnInstigatorDeath) == 0x000008, "Wrong alignment on PySummoned_10374101_OnInstigatorDeath");
static_assert(sizeof(PySummoned_10374101_OnInstigatorDeath) == 0x000028, "Wrong size on PySummoned_10374101_OnInstigatorDeath");
static_assert(offsetof(PySummoned_10374101_OnInstigatorDeath, InSourceAvatar) == 0x000000, "Member 'PySummoned_10374101_OnInstigatorDeath::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PySummoned_10374101_OnInstigatorDeath, InTargetAvatar) == 0x000008, "Member 'PySummoned_10374101_OnInstigatorDeath::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PySummoned_10374101_OnInstigatorDeath, ParamHandle) == 0x000010, "Member 'PySummoned_10374101_OnInstigatorDeath::ParamHandle' has a wrong offset!");

// DelegateFunction PyAbility_103741.PySummoned_10374101.OnSummonedScaleChange__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PySummoned_10374101_OnSummonedScaleChange__DelegateSignature final
{
public:
	float                                         New_scale;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummoned_10374101_OnSummonedScaleChange__DelegateSignature) == 0x000004, "Wrong alignment on PySummoned_10374101_OnSummonedScaleChange__DelegateSignature");
static_assert(sizeof(PySummoned_10374101_OnSummonedScaleChange__DelegateSignature) == 0x000004, "Wrong size on PySummoned_10374101_OnSummonedScaleChange__DelegateSignature");
static_assert(offsetof(PySummoned_10374101_OnSummonedScaleChange__DelegateSignature, New_scale) == 0x000000, "Member 'PySummoned_10374101_OnSummonedScaleChange__DelegateSignature::New_scale' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.WhileActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10374101_WhileActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_WhileActiveAudio) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_WhileActiveAudio");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_WhileActiveAudio) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10374101_WhileActiveAudio");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_WhileActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_WhileActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_WhileActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_WhileActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.OnRemoveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10374101_OnRemoveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_OnRemoveAudio) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_OnRemoveAudio");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_OnRemoveAudio) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10374101_OnRemoveAudio");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnRemoveAudio, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_OnRemoveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnRemoveAudio, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_OnRemoveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.OnTakeDamage
// 0x0028 (0x0028 - 0x0000)
struct PyCue_Summoner_Loop_10374101_OnTakeDamage final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParamHandle;                                       // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_OnTakeDamage) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_OnTakeDamage");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_OnTakeDamage) == 0x000028, "Wrong size on PyCue_Summoner_Loop_10374101_OnTakeDamage");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnTakeDamage, InSourceAvatar) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_OnTakeDamage::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnTakeDamage, InTargetAvatar) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_OnTakeDamage::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnTakeDamage, ParamHandle) == 0x000010, "Member 'PyCue_Summoner_Loop_10374101_OnTakeDamage::ParamHandle' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.OnActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10374101_OnActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_OnActiveFX) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_OnActiveFX");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_OnActiveFX) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10374101_OnActiveFX");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_OnActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnActiveFX, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_OnActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10374101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_WhileActiveFX");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10374101_WhileActiveFX");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.OnAttributeChange
// 0x0020 (0x0020 - 0x0000)
struct PyCue_Summoner_Loop_10374101_OnAttributeChange final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParamHandle;                                       // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_OnAttributeChange) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_OnAttributeChange");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_OnAttributeChange) == 0x000020, "Wrong size on PyCue_Summoner_Loop_10374101_OnAttributeChange");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnAttributeChange, SourceActor) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_OnAttributeChange::SourceActor' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnAttributeChange, ParamHandle) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_OnAttributeChange::ParamHandle' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.OnExecute
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10374101_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_OnExecute) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_OnExecute");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_OnExecute) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10374101_OnExecute");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnExecute, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnExecute, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnExecute, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10374101_OnExecute::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103741.PyCue_Summoner_Loop_10374101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10374101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10374101_OnRemove) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10374101_OnRemove");
static_assert(sizeof(PyCue_Summoner_Loop_10374101_OnRemove) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10374101_OnRemove");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10374101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10374101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10374101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10374101_OnRemove::ReturnValue' has a wrong offset!");

}


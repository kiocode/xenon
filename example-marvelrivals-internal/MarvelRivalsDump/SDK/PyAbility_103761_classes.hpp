#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103761

#include "Basic.hpp"

#include "Hero_1037_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_103761.PyTraceComponent_10376102
// 0x0000 (0x1710 - 0x1710)
class UPyTraceComponent_10376102 final : public UMarvelAgentTraceComponent
{
public:
	void K2_Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTraceComponent_10376102">();
	}
	static class UPyTraceComponent_10376102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTraceComponent_10376102>();
	}
};
static_assert(alignof(UPyTraceComponent_10376102) == 0x000010, "Wrong alignment on UPyTraceComponent_10376102");
static_assert(sizeof(UPyTraceComponent_10376102) == 0x001710, "Wrong size on UPyTraceComponent_10376102");

// PythonClass PyAbility_103761.PySummoned_10376101
// 0x0010 (0x0950 - 0x0940)
class APySummoned_10376101 : public ASummoned_10376101
{
public:
	FMulticastInlineDelegateProperty_             OnSummonedLaunch;                                  // 0x0940(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void SummonedLaunched();
	void OnSummonedLaunch__DelegateSignature();
	void MulticastEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoned_10376101">();
	}
	static class APySummoned_10376101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoned_10376101>();
	}
};
static_assert(alignof(APySummoned_10376101) == 0x000010, "Wrong alignment on APySummoned_10376101");
static_assert(sizeof(APySummoned_10376101) == 0x000950, "Wrong size on APySummoned_10376101");
static_assert(offsetof(APySummoned_10376101, OnSummonedLaunch) == 0x000940, "Member 'APySummoned_10376101::OnSummonedLaunch' has a wrong offset!");

// PythonClass PyAbility_103761.PyProjectile_10376105
// 0x0010 (0x3060 - 0x3050)
class APyProjectile_10376105 final : public AMarvelAbilityTargetActor_Projectile
{
public:
	class AActor*                                 SourceSummoned;                                    // 0x3050(0x0008)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void K2_OnInitializeData();
	void K2_OnBeginAgentTask();
	void K2_OnForceEndAgentTask();
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10376105">();
	}
	static class APyProjectile_10376105* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10376105>();
	}
};
static_assert(alignof(APyProjectile_10376105) == 0x000010, "Wrong alignment on APyProjectile_10376105");
static_assert(sizeof(APyProjectile_10376105) == 0x003060, "Wrong size on APyProjectile_10376105");
static_assert(offsetof(APyProjectile_10376105, SourceSummoned) == 0x003050, "Member 'APyProjectile_10376105::SourceSummoned' has a wrong offset!");

// PythonClass PyAbility_103761.PySummonedComp_10376101
// 0x0010 (0x0DB0 - 0x0DA0)
class UPySummonedComp_10376101 final : public USummonedComp_10376101
{
public:
	bool                                          bForceEndAgentTask;                                // 0x0DA0(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void K2_OnInitializeData();
	void K2_OnBeginAgentTask();
	void OnAttributeChange(class AActor* SourceActor_0, const struct FAttributeModifierHandle& ParamHandle);
	void OnShellSummonedSpawned(class AActor* InActor);
	void K2_OnEndAgentTask();
	void K2_OnCacheReset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10376101">();
	}
	static class UPySummonedComp_10376101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10376101>();
	}
};
static_assert(alignof(UPySummonedComp_10376101) == 0x000010, "Wrong alignment on UPySummonedComp_10376101");
static_assert(sizeof(UPySummonedComp_10376101) == 0x000DB0, "Wrong size on UPySummonedComp_10376101");
static_assert(offsetof(UPySummonedComp_10376101, bForceEndAgentTask) == 0x000DA0, "Member 'UPySummonedComp_10376101::bForceEndAgentTask' has a wrong offset!");

// PythonClass PyAbility_103761.PySummonedComp_10376102
// 0x0000 (0x0CC0 - 0x0CC0)
class UPySummonedComp_10376102 final : public USummonedComp_10376102
{
public:
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10376102">();
	}
	static class UPySummonedComp_10376102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10376102>();
	}
};
static_assert(alignof(UPySummonedComp_10376102) == 0x000010, "Wrong alignment on UPySummonedComp_10376102");
static_assert(sizeof(UPySummonedComp_10376102) == 0x000CC0, "Wrong size on UPySummonedComp_10376102");

// PythonClass PyAbility_103761.PyEffectiveComponent_10376101
// 0x0000 (0x1C00 - 0x1C00)
class UPyEffectiveComponent_10376101 final : public UMarvelAgentEffectiveComponent
{
public:
	void K2_Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyEffectiveComponent_10376101">();
	}
	static class UPyEffectiveComponent_10376101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyEffectiveComponent_10376101>();
	}
};
static_assert(alignof(UPyEffectiveComponent_10376101) == 0x000010, "Wrong alignment on UPyEffectiveComponent_10376101");
static_assert(sizeof(UPyEffectiveComponent_10376101) == 0x001C00, "Wrong size on UPyEffectiveComponent_10376101");

// PythonClass PyAbility_103761.PyEffectiveComponent_10376102
// 0x0000 (0x1C00 - 0x1C00)
class UPyEffectiveComponent_10376102 final : public UEffectiveComponent_10376102
{
public:
	void K2_Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyEffectiveComponent_10376102">();
	}
	static class UPyEffectiveComponent_10376102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyEffectiveComponent_10376102>();
	}
};
static_assert(alignof(UPyEffectiveComponent_10376102) == 0x000010, "Wrong alignment on UPyEffectiveComponent_10376102");
static_assert(sizeof(UPyEffectiveComponent_10376102) == 0x001C00, "Wrong size on UPyEffectiveComponent_10376102");

// PythonClass PyAbility_103761.PyConfig_103761
// 0x2480 (0x4C00 - 0x2780)
class UPyConfig_103761 final : public UConfig_103761
{
public:
	class UCurveFloat*                            ScopeDamageCurve;                                  // 0x2780(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ScopeRadiusCurve;                                  // 0x2788(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PowerRatio;                                        // 0x2790(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SummonedFlySpeed;                                  // 0x2794(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SummonedGravity;                                   // 0x2798(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GenPhysicsRadius;                                  // 0x279C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GenProjectileRadius;                               // 0x27A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27A4[0x4];                                     // 0x27A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTargetFilter             Filter;                                            // 0x27A8(0x0500)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         ProjectileOffsetZ;                                 // 0x2CA8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CAC[0x4];                                     // 0x2CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             SceneTraceContext;                                 // 0x2CB0(0x0F90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         UIWarningPercent;                                  // 0x3C40(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C44[0xC];                                     // 0x3C44(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             SummonedSpawnTraceContext;                         // 0x3C50(0x0F90)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         MinThrowTime;                                      // 0x4BE0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BE4[0x4];                                     // 0x4BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAbilityInputBinds>                    BlockInputBinds;                                   // 0x4BE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_103761">();
	}
	static class UPyConfig_103761* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_103761>();
	}
};
static_assert(alignof(UPyConfig_103761) == 0x000010, "Wrong alignment on UPyConfig_103761");
static_assert(sizeof(UPyConfig_103761) == 0x004C00, "Wrong size on UPyConfig_103761");
static_assert(offsetof(UPyConfig_103761, ScopeDamageCurve) == 0x002780, "Member 'UPyConfig_103761::ScopeDamageCurve' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, ScopeRadiusCurve) == 0x002788, "Member 'UPyConfig_103761::ScopeRadiusCurve' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, PowerRatio) == 0x002790, "Member 'UPyConfig_103761::PowerRatio' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, SummonedFlySpeed) == 0x002794, "Member 'UPyConfig_103761::SummonedFlySpeed' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, SummonedGravity) == 0x002798, "Member 'UPyConfig_103761::SummonedGravity' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, GenPhysicsRadius) == 0x00279C, "Member 'UPyConfig_103761::GenPhysicsRadius' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, GenProjectileRadius) == 0x0027A0, "Member 'UPyConfig_103761::GenProjectileRadius' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, Filter) == 0x0027A8, "Member 'UPyConfig_103761::Filter' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, ProjectileOffsetZ) == 0x002CA8, "Member 'UPyConfig_103761::ProjectileOffsetZ' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, SceneTraceContext) == 0x002CB0, "Member 'UPyConfig_103761::SceneTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, UIWarningPercent) == 0x003C40, "Member 'UPyConfig_103761::UIWarningPercent' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, SummonedSpawnTraceContext) == 0x003C50, "Member 'UPyConfig_103761::SummonedSpawnTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, MinThrowTime) == 0x004BE0, "Member 'UPyConfig_103761::MinThrowTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_103761, BlockInputBinds) == 0x004BE8, "Member 'UPyConfig_103761::BlockInputBinds' has a wrong offset!");

// PythonClass PyAbility_103761.PyAbility_103761
// 0x0090 (0x26A0 - 0x2610)
class UPyAbility_103761 : public UAbility_103761
{
public:
	bool                                          EnterThrowState;                                   // 0x2610(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2611[0x7];                                     // 0x2611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LaunchVel;                                         // 0x2618(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SummonedLocation;                                  // 0x2630(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountNum;                                          // 0x2648(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_264C[0x4];                                     // 0x264C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSummonExploded;                                  // 0x2650(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnOwnerSummonedRepDelegate;                        // 0x2660(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnInputPress;                                      // 0x2670(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnThrowSummoner;                                   // 0x2680(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBeginBindInputPress;                             // 0x2690(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSummonExploded__DelegateSignature();
	void BeginPlay();
	bool CanActivate();
	void K2_ActivateAbility();
	void OnRep_CountNum();
	void K2_OnRepOwnerSummoned();
	void OnOwnerSummonedRepDelegate__DelegateSignature();
	void OnMainSummonedEndTask(class AActor* Summoner);
	void OnMovementModeChanged(class ACharacter* Actor, EMovementMode PreMode, uint8 NewMode);
	void OnInputPress__DelegateSignature();
	void OnThrowSummoner__DelegateSignature(bool bIsThrow);
	void OnTargetTaskValidData(const struct FGameplayAbilityTargetDataHandle& Data);
	void OnTargetTaskTimeOut();
	void SpawnSummonedProjectile(const struct FMarvelAbilitySocketInfo& SocketInfo);
	void PreMissileEventNotify();
	float GetAbilityDuration();
	void HandleAnimSocketInfo(int32 SocketId, const struct FMarvelAbilitySocketInfo& SocketInfo);
	void OnMainSummonedSpawned(class AActor* Summoned);
	void OnBeginBindInputPress__DelegateSignature();
	void InitSummoned(class AActor* Summoned);
	void BreakEventNotify();
	void K2_OnEndAbility(bool bWasCancelled);
	void JumpEndCancelSection();
	void NativeOnMontageCompleted(const class FString& Tag);
	void NativeOnMontageBlendOut(const class FString& Tag);
	void NativeOnMontageInterrupted(const class FString& Tag);
	void NativeOnMontageCancelled(const class FString& Tag);
	void NativeOnMontageEvent(const class FString& Tag);
	void OnDurationEnd();
	void EndPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_103761">();
	}
	static class UPyAbility_103761* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_103761>();
	}
};
static_assert(alignof(UPyAbility_103761) == 0x000008, "Wrong alignment on UPyAbility_103761");
static_assert(sizeof(UPyAbility_103761) == 0x0026A0, "Wrong size on UPyAbility_103761");
static_assert(offsetof(UPyAbility_103761, EnterThrowState) == 0x002610, "Member 'UPyAbility_103761::EnterThrowState' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, LaunchVel) == 0x002618, "Member 'UPyAbility_103761::LaunchVel' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, SummonedLocation) == 0x002630, "Member 'UPyAbility_103761::SummonedLocation' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, CountNum) == 0x002648, "Member 'UPyAbility_103761::CountNum' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, OnSummonExploded) == 0x002650, "Member 'UPyAbility_103761::OnSummonExploded' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, OnOwnerSummonedRepDelegate) == 0x002660, "Member 'UPyAbility_103761::OnOwnerSummonedRepDelegate' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, OnInputPress) == 0x002670, "Member 'UPyAbility_103761::OnInputPress' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, OnThrowSummoner) == 0x002680, "Member 'UPyAbility_103761::OnThrowSummoner' has a wrong offset!");
static_assert(offsetof(UPyAbility_103761, OnBeginBindInputPress) == 0x002690, "Member 'UPyAbility_103761::OnBeginBindInputPress' has a wrong offset!");

// PythonClass PyAbility_103761.PyWidget3D_SummonedWarning_10376101
// 0x0000 (0x08A0 - 0x08A0)
class UPyWidget3D_SummonedWarning_10376101 final : public UMarvel3DWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget3D_SummonedWarning_10376101">();
	}
	static class UPyWidget3D_SummonedWarning_10376101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget3D_SummonedWarning_10376101>();
	}
};
static_assert(alignof(UPyWidget3D_SummonedWarning_10376101) == 0x000010, "Wrong alignment on UPyWidget3D_SummonedWarning_10376101");
static_assert(sizeof(UPyWidget3D_SummonedWarning_10376101) == 0x0008A0, "Wrong size on UPyWidget3D_SummonedWarning_10376101");

// PythonClass PyAbility_103761.PyCue_Summoner_Loop_10376101
// 0x0038 (0x0F28 - 0x0EF0)
class APyCue_Summoner_Loop_10376101 final : public ACue_Summoner_Loop_10376101
{
public:
	class UFXSystemAsset*                         SmokeFXAsset;                                      // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SmokeOffsetLocation;                               // 0x0EF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SummonedExplodeAudioID;                            // 0x0F10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F14[0x4];                                      // 0x0F14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSummonedLanuch;                                  // 0x0F18(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSummonedLanuch__DelegateSignature();
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void K2_UpdateTeamVisualEffect(const struct FTeamVisual& NewTeamVisual);
	void UpdateSummonedFX();
	void OnAttributeChange(class AActor* SourceActor, const struct FAttributeModifierHandle& ParamHandle);
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Summoner_Loop_10376101">();
	}
	static class APyCue_Summoner_Loop_10376101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Summoner_Loop_10376101>();
	}
};
static_assert(alignof(APyCue_Summoner_Loop_10376101) == 0x000008, "Wrong alignment on APyCue_Summoner_Loop_10376101");
static_assert(sizeof(APyCue_Summoner_Loop_10376101) == 0x000F28, "Wrong size on APyCue_Summoner_Loop_10376101");
static_assert(offsetof(APyCue_Summoner_Loop_10376101, SmokeFXAsset) == 0x000EF0, "Member 'APyCue_Summoner_Loop_10376101::SmokeFXAsset' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10376101, SmokeOffsetLocation) == 0x000EF8, "Member 'APyCue_Summoner_Loop_10376101::SmokeOffsetLocation' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10376101, SummonedExplodeAudioID) == 0x000F10, "Member 'APyCue_Summoner_Loop_10376101::SummonedExplodeAudioID' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10376101, OnSummonedLanuch) == 0x000F18, "Member 'APyCue_Summoner_Loop_10376101::OnSummonedLanuch' has a wrong offset!");

// PythonClass PyAbility_103761.PyCue_Scope_HitImpact_10376102
// 0x0038 (0x0508 - 0x04D0)
class UPyCue_Scope_HitImpact_10376102 final : public UMarvelCueNotify_HitImpact
{
public:
	class FName                                   FXScaleParamName;                                  // 0x04D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FXEnergyParamName;                                 // 0x04DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            FXEnergeCurve;                                     // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DecalScaleCurve;                                   // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DecalEnergyCurve;                                  // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DecalStrengthCurve;                                // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	float GetDecalScale(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters) const;
	void SetDecalMaterialParameter(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, class UDecalComponent* DecalComp) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Scope_HitImpact_10376102">();
	}
	static class UPyCue_Scope_HitImpact_10376102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCue_Scope_HitImpact_10376102>();
	}
};
static_assert(alignof(UPyCue_Scope_HitImpact_10376102) == 0x000008, "Wrong alignment on UPyCue_Scope_HitImpact_10376102");
static_assert(sizeof(UPyCue_Scope_HitImpact_10376102) == 0x000508, "Wrong size on UPyCue_Scope_HitImpact_10376102");
static_assert(offsetof(UPyCue_Scope_HitImpact_10376102, FXScaleParamName) == 0x0004D0, "Member 'UPyCue_Scope_HitImpact_10376102::FXScaleParamName' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_HitImpact_10376102, FXEnergyParamName) == 0x0004DC, "Member 'UPyCue_Scope_HitImpact_10376102::FXEnergyParamName' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_HitImpact_10376102, FXEnergeCurve) == 0x0004E8, "Member 'UPyCue_Scope_HitImpact_10376102::FXEnergeCurve' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_HitImpact_10376102, DecalScaleCurve) == 0x0004F0, "Member 'UPyCue_Scope_HitImpact_10376102::DecalScaleCurve' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_HitImpact_10376102, DecalEnergyCurve) == 0x0004F8, "Member 'UPyCue_Scope_HitImpact_10376102::DecalEnergyCurve' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_HitImpact_10376102, DecalStrengthCurve) == 0x000500, "Member 'UPyCue_Scope_HitImpact_10376102::DecalStrengthCurve' has a wrong offset!");

// PythonClass PyAbility_103761.PyCue_Projectile_Loop_10376105
// 0x0008 (0x0DB8 - 0x0DB0)
class APyCue_Projectile_Loop_10376105 final : public AMarvelCueNotify_Projectile
{
public:
	class UCurveFloat*                            CameraShakeScale;                                  // 0x0DB0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnActorPostForceChanged(class AActor* SourceActor, const struct FMarvelTargetActorGenerateInfo& GenerateInfo, ETargetActorType TargetActorType, int32 AbilityID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Projectile_Loop_10376105">();
	}
	static class APyCue_Projectile_Loop_10376105* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Projectile_Loop_10376105>();
	}
};
static_assert(alignof(APyCue_Projectile_Loop_10376105) == 0x000008, "Wrong alignment on APyCue_Projectile_Loop_10376105");
static_assert(sizeof(APyCue_Projectile_Loop_10376105) == 0x000DB8, "Wrong size on APyCue_Projectile_Loop_10376105");
static_assert(offsetof(APyCue_Projectile_Loop_10376105, CameraShakeScale) == 0x000DB0, "Member 'APyCue_Projectile_Loop_10376105::CameraShakeScale' has a wrong offset!");

// PythonClass PyAbility_103761.PyCue_Scope_Start_10376102
// 0x0060 (0x03C8 - 0x0368)
class UPyCue_Scope_Start_10376102 final : public UMarvelCueNotify_Base
{
public:
	class FName                                   FXEnergyParamName;                                 // 0x0368(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FXEnergeCurve;                                     // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCueNiagaraInfo_Custom                 CustomHitSceneNiagara;                             // 0x0380(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void OnScopeNiagaraSpawned(class UNiagaraComponent* InNiagaraComponent, class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnHitSceneNiagaraSpawned(class UNiagaraComponent* InNiagaraComponent, class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Scope_Start_10376102">();
	}
	static class UPyCue_Scope_Start_10376102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCue_Scope_Start_10376102>();
	}
};
static_assert(alignof(UPyCue_Scope_Start_10376102) == 0x000008, "Wrong alignment on UPyCue_Scope_Start_10376102");
static_assert(sizeof(UPyCue_Scope_Start_10376102) == 0x0003C8, "Wrong size on UPyCue_Scope_Start_10376102");
static_assert(offsetof(UPyCue_Scope_Start_10376102, FXEnergyParamName) == 0x000368, "Member 'UPyCue_Scope_Start_10376102::FXEnergyParamName' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_Start_10376102, FXEnergeCurve) == 0x000378, "Member 'UPyCue_Scope_Start_10376102::FXEnergeCurve' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_Start_10376102, CustomHitSceneNiagara) == 0x000380, "Member 'UPyCue_Scope_Start_10376102::CustomHitSceneNiagara' has a wrong offset!");

// PythonClass PyAbility_103761.PyUIController_103761
// 0x0000 (0x0C60 - 0x0C60)
class UPyUIController_103761 final : public UUIC_Ability
{
public:
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void OnDestruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_103761">();
	}
	static class UPyUIController_103761* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_103761>();
	}
};
static_assert(alignof(UPyUIController_103761) == 0x000008, "Wrong alignment on UPyUIController_103761");
static_assert(sizeof(UPyUIController_103761) == 0x000C60, "Wrong size on UPyUIController_103761");

}


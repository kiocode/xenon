#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102121

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_classes.hpp"
#include "Hero_1021_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_102121.PyConfig_102121
// 0x0068 (0x0100 - 0x0098)
class UPyConfig_102121 final : public UMarvelAbilityConfig
{
public:
	struct FGameplayTagContainer                  BlockTags;                                         // 0x0098(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_102121">();
	}
	static class UPyConfig_102121* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_102121>();
	}
};
static_assert(alignof(UPyConfig_102121) == 0x000008, "Wrong alignment on UPyConfig_102121");
static_assert(sizeof(UPyConfig_102121) == 0x000100, "Wrong size on UPyConfig_102121");
static_assert(offsetof(UPyConfig_102121, BlockTags) == 0x000098, "Member 'UPyConfig_102121::BlockTags' has a wrong offset!");

// PythonClass PyAbility_102121.PyAbility_102121
// 0x0000 (0x2580 - 0x2580)
class UPyAbility_102121 : public UMarvelGameplayAbility
{
public:
	void BeginPlay();
	void OnPressOne(float Useless);
	void OnPressTwo(float Useless);
	void OnScrollMouseWheel(float Useless);
	void TryChangeArrow(EHawkeyeArrowType Target_arrow_type);
	void ServerExternalChangeArrow();
	void ExternalChangeArrow();
	bool CanActivate();
	void K2_ActivateAbility();
	void MissileEventNotify();
	void BreakEventNotify();
	void K2_OnEndAbility(bool Cancel);
	void NativeOnMontageCompleted(const class FString& Tag);
	void NativeOnMontageInterrupted(const class FString& Tag);
	void NativeOnMontageCancelled(const class FString& Tag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_102121">();
	}
	static class UPyAbility_102121* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_102121>();
	}
};
static_assert(alignof(UPyAbility_102121) == 0x000008, "Wrong alignment on UPyAbility_102121");
static_assert(sizeof(UPyAbility_102121) == 0x002580, "Wrong size on UPyAbility_102121");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConstraintEmitter

#include "Basic.hpp"

#include "BP_ConstraintEmitter_classes.hpp"
#include "BP_ConstraintEmitter_parameters.hpp"


namespace SDK
{

// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.öôt__UpdateFunc
// (BlueprintEvent)

void ABP_ConstraintEmitter_C::__t__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "öôt__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.öôt__FinishedFunc
// (BlueprintEvent)

void ABP_ConstraintEmitter_C::__t__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "öôt__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.öôt_1__UpdateFunc
// (BlueprintEvent)

void ABP_ConstraintEmitter_C::__t_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "öôt_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.öôt_1__FinishedFunc
// (BlueprintEvent)

void ABP_ConstraintEmitter_C::__t_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "öôt_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.öôt_0__UpdateFunc
// (BlueprintEvent)

void ABP_ConstraintEmitter_C::__t_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "öôt_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.öôt_0__FinishedFunc
// (BlueprintEvent)

void ABP_ConstraintEmitter_C::__t_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "öôt_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.SetWebRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ConstraintEmitter_C::SetWebRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "SetWebRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.SetLimit
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ConstraintEmitter_C::SetLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "SetLimit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ConstraintEmitter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "ReceiveTick");

	Params::BP_ConstraintEmitter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ConstraintEmitter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.GetAimRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_ConstraintEmitter_C::GetAimRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "GetAimRotation");

	Params::BP_ConstraintEmitter_C_GetAimRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.GetAimLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_ConstraintEmitter_C::GetAimLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "GetAimLength");

	Params::BP_ConstraintEmitter_C_GetAimLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.ExecuteUbergraph_BP_ConstraintEmitter
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ConstraintEmitter_C::ExecuteUbergraph_BP_ConstraintEmitter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "ExecuteUbergraph_BP_ConstraintEmitter");

	Params::BP_ConstraintEmitter_C_ExecuteUbergraph_BP_ConstraintEmitter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConstraintEmitter.BP_ConstraintEmitter_C.BreakWeb
// (BlueprintCallable, BlueprintEvent)

void ABP_ConstraintEmitter_C::BreakWeb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConstraintEmitter_C", "BreakWeb");

	UObject::ProcessEvent(Func, nullptr);
}

}


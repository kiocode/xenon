#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AISelectTarget_MoveDirect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MarvelAI_structs.hpp"


namespace SDK::Params
{

// Function AISelectTarget_MoveDirect.AISelectTarget_MoveDirect_C.SelectTargetOrLocation
// 0x0220 (0x0220 - 0x0000)
struct AISelectTarget_MoveDirect_C_SelectTargetOrLocation final
{
public:
	class AMarvelAIController*                    AIController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMarvelAITarget                        OutAITarget;                                       // 0x0008(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FAIAbilityUsage                        AbilityUsage;                                      // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0150(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentMoveDirection_ReturnValue;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMarvelAITarget                        K2Node_MakeStruct_MarvelAITarget;                  // 0x01C0(0x0060)(NoDestructor)
};
//static_assert(alignof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation) == 0x000008, "Wrong alignment on AISelectTarget_MoveDirect_C_SelectTargetOrLocation");
//static_assert(sizeof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation) == 0x000220, "Wrong size on AISelectTarget_MoveDirect_C_SelectTargetOrLocation");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, AIController) == 0x000000, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::AIController' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, OutAITarget) == 0x000008, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::OutAITarget' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, AbilityUsage) == 0x000068, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::AbilityUsage' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, ReturnValue) == 0x000150, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::ReturnValue' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000158, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, CallFunc_GetCurrentMoveDirection_ReturnValue) == 0x000160, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::CallFunc_GetCurrentMoveDirection_ReturnValue' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000178, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000190, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A8, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
//static_assert(offsetof(AISelectTarget_MoveDirect_C_SelectTargetOrLocation, K2Node_MakeStruct_MarvelAITarget) == 0x0001C0, "Member 'AISelectTarget_MoveDirect_C_SelectTargetOrLocation::K2Node_MakeStruct_MarvelAITarget' has a wrong offset!");

}


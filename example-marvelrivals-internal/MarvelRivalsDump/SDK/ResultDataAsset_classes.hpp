#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ResultDataAsset

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass ResultDataAsset.ResultDataAsset
// 0x01B8 (0x01F0 - 0x0038)
class UResultDataAsset final : public UPrimaryDataAsset
{
public:
	struct FVector                                OriginPosition;                                    // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     SmallPositions;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     LargePositions;                                    // 0x0060(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTransform                             SmallCameras;                                      // 0x0070(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MiddleCameras;                                     // 0x00D0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             LargeCameras;                                      // 0x0130(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        OneScales;                                         // 0x0190(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        TwoScales;                                         // 0x01A0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        ThreeScales;                                       // 0x01B0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        FourScales;                                        // 0x01C0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        FiveScales;                                        // 0x01D0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        SixScales;                                         // 0x01E0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultDataAsset">();
	}
	static class UResultDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultDataAsset>();
	}
};
//static_assert(alignof(UResultDataAsset) == 0x000010, "Wrong alignment on UResultDataAsset");
//static_assert(sizeof(UResultDataAsset) == 0x0001F0, "Wrong size on UResultDataAsset");
//static_assert(offsetof(UResultDataAsset, OriginPosition) == 0x000038, "Member 'UResultDataAsset::OriginPosition' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, SmallPositions) == 0x000050, "Member 'UResultDataAsset::SmallPositions' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, LargePositions) == 0x000060, "Member 'UResultDataAsset::LargePositions' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, SmallCameras) == 0x000070, "Member 'UResultDataAsset::SmallCameras' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, MiddleCameras) == 0x0000D0, "Member 'UResultDataAsset::MiddleCameras' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, LargeCameras) == 0x000130, "Member 'UResultDataAsset::LargeCameras' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, OneScales) == 0x000190, "Member 'UResultDataAsset::OneScales' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, TwoScales) == 0x0001A0, "Member 'UResultDataAsset::TwoScales' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, ThreeScales) == 0x0001B0, "Member 'UResultDataAsset::ThreeScales' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, FourScales) == 0x0001C0, "Member 'UResultDataAsset::FourScales' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, FiveScales) == 0x0001D0, "Member 'UResultDataAsset::FiveScales' has a wrong offset!");
//static_assert(offsetof(UResultDataAsset, SixScales) == 0x0001E0, "Member 'UResultDataAsset::SixScales' has a wrong offset!");

}


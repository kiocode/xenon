#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelSequenceActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PyLevelSequenceActor.PyLevelSequenceActor
// 0x0068 (0x04F8 - 0x0490)
class APyLevelSequenceActor : public AActor
{
public:
	float                                         CurrentTime;                                       // 0x0490(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentPlayDirection;                              // 0x0494(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         Sequence;                                          // 0x0498(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         SequenceActorCls;                                  // 0x04A0(0x0028)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 CacheSqCls;                                        // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALevelSequenceActor*                    SequenceInstance;                                  // 0x04D0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoPlay;                                          // 0x04D8(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayReverse;                                      // 0x04D9(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayLooping;                                      // 0x04DA(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4DB[0x1];                                      // 0x04DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x04DC(0x0004)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRankReset;                                        // 0x04E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPlayFinished;                                    // 0x04E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnRep_PlayRate();
	void S_payload_reach(const struct FGameplayTag& Event_name, float Event_args);
	void OnRep_CurrentPlayDirection();
	void OnRep_CurrentTime();
	void PostRewindForReplay();
	void ReceiveTick(float DeltaSeconds);
	void ResetToStart();
	void PlayReverseFromCurrentTime();
	void PlayReverseFromTime(float Time);
	void PlayReverseFromEnd();
	void PlayFromCurrentTime();
	void PlayFromTime(float Time);
	void PlayFromStart();
	void GetPlayRate();
	void SetPlayRate(float Rate, bool Double_end);
	void OnFinished();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void ReceiveInit();
	void OnPlayFinished__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyLevelSequenceActor">();
	}
	static class APyLevelSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyLevelSequenceActor>();
	}
};
static_assert(alignof(APyLevelSequenceActor) == 0x000008, "Wrong alignment on APyLevelSequenceActor");
static_assert(sizeof(APyLevelSequenceActor) == 0x0004F8, "Wrong size on APyLevelSequenceActor");
static_assert(offsetof(APyLevelSequenceActor, CurrentTime) == 0x000490, "Member 'APyLevelSequenceActor::CurrentTime' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, CurrentPlayDirection) == 0x000494, "Member 'APyLevelSequenceActor::CurrentPlayDirection' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, Sequence) == 0x000498, "Member 'APyLevelSequenceActor::Sequence' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, SequenceActorCls) == 0x0004A0, "Member 'APyLevelSequenceActor::SequenceActorCls' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, CacheSqCls) == 0x0004C8, "Member 'APyLevelSequenceActor::CacheSqCls' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, SequenceInstance) == 0x0004D0, "Member 'APyLevelSequenceActor::SequenceInstance' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, AutoPlay) == 0x0004D8, "Member 'APyLevelSequenceActor::AutoPlay' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, bPlayReverse) == 0x0004D9, "Member 'APyLevelSequenceActor::bPlayReverse' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, bPlayLooping) == 0x0004DA, "Member 'APyLevelSequenceActor::bPlayLooping' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, PlayRate) == 0x0004DC, "Member 'APyLevelSequenceActor::PlayRate' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, bRankReset) == 0x0004E0, "Member 'APyLevelSequenceActor::bRankReset' has a wrong offset!");
static_assert(offsetof(APyLevelSequenceActor, OnPlayFinished) == 0x0004E8, "Member 'APyLevelSequenceActor::OnPlayFinished' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_SelectModeMain

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeItem.Tick
// 0x003C (0x003C - 0x0000)
struct PyWidget_SelectModeItem_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeItem_Tick) == 0x000004, "Wrong alignment on PyWidget_SelectModeItem_Tick");
static_assert(sizeof(PyWidget_SelectModeItem_Tick) == 0x00003C, "Wrong size on PyWidget_SelectModeItem_Tick");
static_assert(offsetof(PyWidget_SelectModeItem_Tick, MyGeometry) == 0x000000, "Member 'PyWidget_SelectModeItem_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PyWidget_SelectModeItem_Tick, InDeltaTime) == 0x000038, "Member 'PyWidget_SelectModeItem_Tick::InDeltaTime' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeItem.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_SelectModeItem_SetIsHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeItem_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_SelectModeItem_SetIsHover");
static_assert(sizeof(PyWidget_SelectModeItem_SetIsHover) == 0x000001, "Wrong size on PyWidget_SelectModeItem_SetIsHover");
static_assert(offsetof(PyWidget_SelectModeItem_SetIsHover, IsHover_0) == 0x000000, "Member 'PyWidget_SelectModeItem_SetIsHover::IsHover_0' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeItem.SetBtnIsLock
// 0x0002 (0x0002 - 0x0000)
struct PyWidget_SelectModeItem_SetBtnIsLock final
{
public:
	bool                                          IsLock_0;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWarning;                                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeItem_SetBtnIsLock) == 0x000001, "Wrong alignment on PyWidget_SelectModeItem_SetBtnIsLock");
static_assert(sizeof(PyWidget_SelectModeItem_SetBtnIsLock) == 0x000002, "Wrong size on PyWidget_SelectModeItem_SetBtnIsLock");
static_assert(offsetof(PyWidget_SelectModeItem_SetBtnIsLock, IsLock_0) == 0x000000, "Member 'PyWidget_SelectModeItem_SetBtnIsLock::IsLock_0' has a wrong offset!");
static_assert(offsetof(PyWidget_SelectModeItem_SetBtnIsLock, IsWarning) == 0x000001, "Member 'PyWidget_SelectModeItem_SetBtnIsLock::IsWarning' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeItem.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_SelectModeItem_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeItem_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_SelectModeItem_OnAnimationFinished");
static_assert(sizeof(PyWidget_SelectModeItem_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_SelectModeItem_OnAnimationFinished");
static_assert(offsetof(PyWidget_SelectModeItem_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_SelectModeItem_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeItem.OnReceiveInputAction
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_SelectModeItem_OnReceiveInputAction final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputEvent                                   EventType;                                         // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeItem_OnReceiveInputAction) == 0x000004, "Wrong alignment on PyWidget_SelectModeItem_OnReceiveInputAction");
static_assert(sizeof(PyWidget_SelectModeItem_OnReceiveInputAction) == 0x000010, "Wrong size on PyWidget_SelectModeItem_OnReceiveInputAction");
static_assert(offsetof(PyWidget_SelectModeItem_OnReceiveInputAction, ActionName) == 0x000000, "Member 'PyWidget_SelectModeItem_OnReceiveInputAction::ActionName' has a wrong offset!");
static_assert(offsetof(PyWidget_SelectModeItem_OnReceiveInputAction, EventType) == 0x00000C, "Member 'PyWidget_SelectModeItem_OnReceiveInputAction::EventType' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeMain.ShouldEnableInput
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_SelectModeMain_ShouldEnableInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeMain_ShouldEnableInput) == 0x000001, "Wrong alignment on PyWidget_SelectModeMain_ShouldEnableInput");
static_assert(sizeof(PyWidget_SelectModeMain_ShouldEnableInput) == 0x000001, "Wrong size on PyWidget_SelectModeMain_ShouldEnableInput");
static_assert(offsetof(PyWidget_SelectModeMain_ShouldEnableInput, ReturnValue) == 0x000000, "Member 'PyWidget_SelectModeMain_ShouldEnableInput::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeMain.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_SelectModeMain_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeMain_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_SelectModeMain_MarvelSetVisible");
static_assert(sizeof(PyWidget_SelectModeMain_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_SelectModeMain_MarvelSetVisible");
static_assert(offsetof(PyWidget_SelectModeMain_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_SelectModeMain_MarvelSetVisible::Visible' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeMain.OnReceiveInputAction
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_SelectModeMain_OnReceiveInputAction final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputEvent                                   EventType;                                         // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeMain_OnReceiveInputAction) == 0x000004, "Wrong alignment on PyWidget_SelectModeMain_OnReceiveInputAction");
static_assert(sizeof(PyWidget_SelectModeMain_OnReceiveInputAction) == 0x000010, "Wrong size on PyWidget_SelectModeMain_OnReceiveInputAction");
static_assert(offsetof(PyWidget_SelectModeMain_OnReceiveInputAction, ActionName) == 0x000000, "Member 'PyWidget_SelectModeMain_OnReceiveInputAction::ActionName' has a wrong offset!");
static_assert(offsetof(PyWidget_SelectModeMain_OnReceiveInputAction, EventType) == 0x00000C, "Member 'PyWidget_SelectModeMain_OnReceiveInputAction::EventType' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeMain.OnTriggerEvent
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_SelectModeMain_OnTriggerEvent final
{
public:
	class UUserWidget*                            NavUserWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeMain_OnTriggerEvent) == 0x000008, "Wrong alignment on PyWidget_SelectModeMain_OnTriggerEvent");
static_assert(sizeof(PyWidget_SelectModeMain_OnTriggerEvent) == 0x000008, "Wrong size on PyWidget_SelectModeMain_OnTriggerEvent");
static_assert(offsetof(PyWidget_SelectModeMain_OnTriggerEvent, NavUserWidget) == 0x000000, "Member 'PyWidget_SelectModeMain_OnTriggerEvent::NavUserWidget' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModeMain.WrapBox_Map_List_Left_Or_Right_Navigation
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation) == 0x000008, "Wrong alignment on PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation");
static_assert(sizeof(PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation) == 0x000010, "Wrong size on PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation");
static_assert(offsetof(PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation, Navigation_0) == 0x000000, "Member 'PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation, ReturnValue) == 0x000008, "Member 'PyWidget_SelectModeMain_WrapBox_Map_List_Left_Or_Right_Navigation::ReturnValue' has a wrong offset!");

// DelegateFunction PyWidget_SelectModeMain.PyWiget_SelectModeAIDiff.AIDiffChange__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature final
{
public:
	int32                                         Ai_diff;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature) == 0x000004, "Wrong alignment on PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature");
static_assert(sizeof(PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature) == 0x000004, "Wrong size on PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature");
static_assert(offsetof(PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature, Ai_diff) == 0x000000, "Member 'PyWiget_SelectModeAIDiff_AIDiffChange__DelegateSignature::Ai_diff' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWiget_SelectModeAIDiff.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWiget_SelectModeAIDiff_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWiget_SelectModeAIDiff_PreConstruct) == 0x000001, "Wrong alignment on PyWiget_SelectModeAIDiff_PreConstruct");
static_assert(sizeof(PyWiget_SelectModeAIDiff_PreConstruct) == 0x000001, "Wrong size on PyWiget_SelectModeAIDiff_PreConstruct");
static_assert(offsetof(PyWiget_SelectModeAIDiff_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWiget_SelectModeAIDiff_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWiget_SelectModeAIDiff.OnMouseEnter
// 0x00B8 (0x00B8 - 0x0000)
struct PyWiget_SelectModeAIDiff_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0080)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWiget_SelectModeAIDiff_OnMouseEnter) == 0x000008, "Wrong alignment on PyWiget_SelectModeAIDiff_OnMouseEnter");
static_assert(sizeof(PyWiget_SelectModeAIDiff_OnMouseEnter) == 0x0000B8, "Wrong size on PyWiget_SelectModeAIDiff_OnMouseEnter");
static_assert(offsetof(PyWiget_SelectModeAIDiff_OnMouseEnter, MyGeometry) == 0x000000, "Member 'PyWiget_SelectModeAIDiff_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(PyWiget_SelectModeAIDiff_OnMouseEnter, MouseEvent) == 0x000038, "Member 'PyWiget_SelectModeAIDiff_OnMouseEnter::MouseEvent' has a wrong offset!");

// PythonFunction PyWidget_SelectModeMain.PyWidget_SelectModePageCuttingButton.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_SelectModePageCuttingButton_SetIsHover final
{
public:
	bool                                          Is_hover;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SelectModePageCuttingButton_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_SelectModePageCuttingButton_SetIsHover");
static_assert(sizeof(PyWidget_SelectModePageCuttingButton_SetIsHover) == 0x000001, "Wrong size on PyWidget_SelectModePageCuttingButton_SetIsHover");
static_assert(offsetof(PyWidget_SelectModePageCuttingButton_SetIsHover, Is_hover) == 0x000000, "Member 'PyWidget_SelectModePageCuttingButton_SetIsHover::Is_hover' has a wrong offset!");

}


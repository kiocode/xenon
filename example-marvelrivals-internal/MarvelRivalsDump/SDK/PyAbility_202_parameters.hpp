#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_202

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// DelegateFunction PyAbility_202.PyAbility_202.OnSendSignalSuccess__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_202_OnSendSignalSuccess__DelegateSignature final
{
public:
	int32                                         SignalID;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarvelBaseCharacter*                   ResonseTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_202_OnSendSignalSuccess__DelegateSignature) == 0x000008, "Wrong alignment on PyAbility_202_OnSendSignalSuccess__DelegateSignature");
static_assert(sizeof(PyAbility_202_OnSendSignalSuccess__DelegateSignature) == 0x000010, "Wrong size on PyAbility_202_OnSendSignalSuccess__DelegateSignature");
static_assert(offsetof(PyAbility_202_OnSendSignalSuccess__DelegateSignature, SignalID) == 0x000000, "Member 'PyAbility_202_OnSendSignalSuccess__DelegateSignature::SignalID' has a wrong offset!");
static_assert(offsetof(PyAbility_202_OnSendSignalSuccess__DelegateSignature, ResonseTarget) == 0x000008, "Member 'PyAbility_202_OnSendSignalSuccess__DelegateSignature::ResonseTarget' has a wrong offset!");

// DelegateFunction PyAbility_202.PyAbility_202.OnSignalBeResponded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_202_OnSignalBeResponded__DelegateSignature final
{
public:
	int32                                         SignalID;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarvelBaseCharacter*                   SourceActor;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_202_OnSignalBeResponded__DelegateSignature) == 0x000008, "Wrong alignment on PyAbility_202_OnSignalBeResponded__DelegateSignature");
static_assert(sizeof(PyAbility_202_OnSignalBeResponded__DelegateSignature) == 0x000010, "Wrong size on PyAbility_202_OnSignalBeResponded__DelegateSignature");
static_assert(offsetof(PyAbility_202_OnSignalBeResponded__DelegateSignature, SignalID) == 0x000000, "Member 'PyAbility_202_OnSignalBeResponded__DelegateSignature::SignalID' has a wrong offset!");
static_assert(offsetof(PyAbility_202_OnSignalBeResponded__DelegateSignature, SourceActor) == 0x000008, "Member 'PyAbility_202_OnSignalBeResponded__DelegateSignature::SourceActor' has a wrong offset!");

// PythonFunction PyAbility_202.PyAbility_202.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_202_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_202_CanActivate) == 0x000001, "Wrong alignment on PyAbility_202_CanActivate");
static_assert(sizeof(PyAbility_202_CanActivate) == 0x000001, "Wrong size on PyAbility_202_CanActivate");
static_assert(offsetof(PyAbility_202_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_202_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_202.PyAbility_202.K2_ActivateAbilityFromEvent
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_202_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_202_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on PyAbility_202_K2_ActivateAbilityFromEvent");
static_assert(sizeof(PyAbility_202_K2_ActivateAbilityFromEvent) == 0x000290, "Wrong size on PyAbility_202_K2_ActivateAbilityFromEvent");
static_assert(offsetof(PyAbility_202_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'PyAbility_202_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

}


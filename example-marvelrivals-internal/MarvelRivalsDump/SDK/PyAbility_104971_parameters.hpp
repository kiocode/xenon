#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104971

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_104971.PyEffectiveComponent_10497101.K2_OnPreApplyContainer
// 0x0020 (0x0020 - 0x0000)
struct PyEffectiveComponent_10497101_K2_OnPreApplyContainer final
{
public:
	TArray<struct FHitResult>                     HitResults;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FHitResult>                     ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyEffectiveComponent_10497101_K2_OnPreApplyContainer) == 0x000008, "Wrong alignment on PyEffectiveComponent_10497101_K2_OnPreApplyContainer");
static_assert(sizeof(PyEffectiveComponent_10497101_K2_OnPreApplyContainer) == 0x000020, "Wrong size on PyEffectiveComponent_10497101_K2_OnPreApplyContainer");
static_assert(offsetof(PyEffectiveComponent_10497101_K2_OnPreApplyContainer, HitResults) == 0x000000, "Member 'PyEffectiveComponent_10497101_K2_OnPreApplyContainer::HitResults' has a wrong offset!");
static_assert(offsetof(PyEffectiveComponent_10497101_K2_OnPreApplyContainer, ReturnValue) == 0x000010, "Member 'PyEffectiveComponent_10497101_K2_OnPreApplyContainer::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104971_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_CanActivate) == 0x000001, "Wrong alignment on PyAbility_104971_CanActivate");
static_assert(sizeof(PyAbility_104971_CanActivate) == 0x000001, "Wrong size on PyAbility_104971_CanActivate");
static_assert(offsetof(PyAbility_104971_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_104971_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.HandleAnimSocketInfo
// 0x00B0 (0x00B0 - 0x0000)
struct PyAbility_104971_HandleAnimSocketInfo final
{
public:
	int32                                         SocketId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilitySocketInfo               SocketInfo;                                        // 0x0010(0x00A0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyAbility_104971_HandleAnimSocketInfo) == 0x000010, "Wrong alignment on PyAbility_104971_HandleAnimSocketInfo");
static_assert(sizeof(PyAbility_104971_HandleAnimSocketInfo) == 0x0000B0, "Wrong size on PyAbility_104971_HandleAnimSocketInfo");
static_assert(offsetof(PyAbility_104971_HandleAnimSocketInfo, SocketId) == 0x000000, "Member 'PyAbility_104971_HandleAnimSocketInfo::SocketId' has a wrong offset!");
static_assert(offsetof(PyAbility_104971_HandleAnimSocketInfo, SocketInfo) == 0x000010, "Member 'PyAbility_104971_HandleAnimSocketInfo::SocketInfo' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.OnTraceResults
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104971_OnTraceResults final
{
public:
	TArray<struct FHitResult>                     HitResults;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104971_OnTraceResults) == 0x000008, "Wrong alignment on PyAbility_104971_OnTraceResults");
static_assert(sizeof(PyAbility_104971_OnTraceResults) == 0x000010, "Wrong size on PyAbility_104971_OnTraceResults");
static_assert(offsetof(PyAbility_104971_OnTraceResults, HitResults) == 0x000000, "Member 'PyAbility_104971_OnTraceResults::HitResults' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.TryGrabTarget
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_104971_TryGrabTarget final
{
public:
	class ACharacter*                             Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_TryGrabTarget) == 0x000008, "Wrong alignment on PyAbility_104971_TryGrabTarget");
static_assert(sizeof(PyAbility_104971_TryGrabTarget) == 0x000008, "Wrong size on PyAbility_104971_TryGrabTarget");
static_assert(offsetof(PyAbility_104971_TryGrabTarget, Target) == 0x000000, "Member 'PyAbility_104971_TryGrabTarget::Target' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.GetCollideKnockDownDamage
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104971_GetCollideKnockDownDamage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_GetCollideKnockDownDamage) == 0x000004, "Wrong alignment on PyAbility_104971_GetCollideKnockDownDamage");
static_assert(sizeof(PyAbility_104971_GetCollideKnockDownDamage) == 0x000004, "Wrong size on PyAbility_104971_GetCollideKnockDownDamage");
static_assert(offsetof(PyAbility_104971_GetCollideKnockDownDamage, ReturnValue) == 0x000000, "Member 'PyAbility_104971_GetCollideKnockDownDamage::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.InternalGrabTarget
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_104971_InternalGrabTarget final
{
public:
	class ACharacter*                             Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_InternalGrabTarget) == 0x000008, "Wrong alignment on PyAbility_104971_InternalGrabTarget");
static_assert(sizeof(PyAbility_104971_InternalGrabTarget) == 0x000008, "Wrong size on PyAbility_104971_InternalGrabTarget");
static_assert(offsetof(PyAbility_104971_InternalGrabTarget, Target) == 0x000000, "Member 'PyAbility_104971_InternalGrabTarget::Target' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.K2_ShouldEndScope
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104971_K2_ShouldEndScope final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_K2_ShouldEndScope) == 0x000001, "Wrong alignment on PyAbility_104971_K2_ShouldEndScope");
static_assert(sizeof(PyAbility_104971_K2_ShouldEndScope) == 0x000001, "Wrong size on PyAbility_104971_K2_ShouldEndScope");
static_assert(offsetof(PyAbility_104971_K2_ShouldEndScope, ReturnValue) == 0x000000, "Member 'PyAbility_104971_K2_ShouldEndScope::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104971_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_104971_K2_OnEndAbility");
static_assert(sizeof(PyAbility_104971_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_104971_K2_OnEndAbility");
static_assert(offsetof(PyAbility_104971_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_104971_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104971_OnMovementModeChanged final
{
public:
	class ACharacter*                             Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PreMode;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewMode;                                           // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_OnMovementModeChanged) == 0x000008, "Wrong alignment on PyAbility_104971_OnMovementModeChanged");
static_assert(sizeof(PyAbility_104971_OnMovementModeChanged) == 0x000010, "Wrong size on PyAbility_104971_OnMovementModeChanged");
static_assert(offsetof(PyAbility_104971_OnMovementModeChanged, Actor) == 0x000000, "Member 'PyAbility_104971_OnMovementModeChanged::Actor' has a wrong offset!");
static_assert(offsetof(PyAbility_104971_OnMovementModeChanged, PreMode) == 0x000008, "Member 'PyAbility_104971_OnMovementModeChanged::PreMode' has a wrong offset!");
static_assert(offsetof(PyAbility_104971_OnMovementModeChanged, NewMode) == 0x000009, "Member 'PyAbility_104971_OnMovementModeChanged::NewMode' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.OnLanded
// 0x0170 (0x0170 - 0x0000)
struct PyAbility_104971_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104971_OnLanded) == 0x000008, "Wrong alignment on PyAbility_104971_OnLanded");
static_assert(sizeof(PyAbility_104971_OnLanded) == 0x000170, "Wrong size on PyAbility_104971_OnLanded");
static_assert(offsetof(PyAbility_104971_OnLanded, Hit) == 0x000000, "Member 'PyAbility_104971_OnLanded::Hit' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104971_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_104971_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_104971_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_104971_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_104971_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_104971_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104971_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_104971_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_104971_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_104971_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_104971_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_104971_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_104971.PyAbility_104971.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104971_NativeOnMontageCancelled final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104971_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_104971_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_104971_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_104971_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_104971_NativeOnMontageCancelled, Tag) == 0x000000, "Member 'PyAbility_104971_NativeOnMontageCancelled::Tag' has a wrong offset!");

}


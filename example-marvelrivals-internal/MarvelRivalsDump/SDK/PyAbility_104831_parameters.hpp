#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104831

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Hero_1048_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_104831.PyCue_Projectile_HitImpact_10483102.OnNiagaraSpawned
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned final
{
public:
	class UNiagaraComponent*                      InNiagaraComponent;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0010(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned) == 0x000008, "Wrong alignment on PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned");
static_assert(sizeof(PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned) == 0x0001C8, "Wrong size on PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned");
static_assert(offsetof(PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned, InNiagaraComponent) == 0x000000, "Member 'PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned::InNiagaraComponent' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned, MyTarget) == 0x000008, "Member 'PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned, Parameters) == 0x000010, "Member 'PyCue_Projectile_HitImpact_10483102_OnNiagaraSpawned::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104831_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104831_CanActivate) == 0x000001, "Wrong alignment on PyAbility_104831_CanActivate");
static_assert(sizeof(PyAbility_104831_CanActivate) == 0x000001, "Wrong size on PyAbility_104831_CanActivate");
static_assert(offsetof(PyAbility_104831_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_104831_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104831_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104831_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_104831_K2_OnEndAbility");
static_assert(sizeof(PyAbility_104831_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_104831_K2_OnEndAbility");
static_assert(offsetof(PyAbility_104831_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_104831_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.GetFirstHomingLocations
// 0x0018 (0x0018 - 0x0000)
struct PyAbility_104831_GetFirstHomingLocations final
{
public:
	EShurikenRecallType                           RecallType;                                        // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyAbility_104831_GetFirstHomingLocations) == 0x000008, "Wrong alignment on PyAbility_104831_GetFirstHomingLocations");
static_assert(sizeof(PyAbility_104831_GetFirstHomingLocations) == 0x000018, "Wrong size on PyAbility_104831_GetFirstHomingLocations");
static_assert(offsetof(PyAbility_104831_GetFirstHomingLocations, RecallType) == 0x000000, "Member 'PyAbility_104831_GetFirstHomingLocations::RecallType' has a wrong offset!");
static_assert(offsetof(PyAbility_104831_GetFirstHomingLocations, ReturnValue) == 0x000008, "Member 'PyAbility_104831_GetFirstHomingLocations::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104831_NativeOnMontageCompleted final
{
public:
	class FString                                 EventTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104831_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_104831_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_104831_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_104831_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_104831_NativeOnMontageCompleted, EventTag) == 0x000000, "Member 'PyAbility_104831_NativeOnMontageCompleted::EventTag' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104831_NativeOnMontageCancelled final
{
public:
	class FString                                 EventTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104831_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_104831_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_104831_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_104831_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_104831_NativeOnMontageCancelled, EventTag) == 0x000000, "Member 'PyAbility_104831_NativeOnMontageCancelled::EventTag' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.OnAbilityInputPress
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104831_OnAbilityInputPress final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104831_OnAbilityInputPress) == 0x000004, "Wrong alignment on PyAbility_104831_OnAbilityInputPress");
static_assert(sizeof(PyAbility_104831_OnAbilityInputPress) == 0x000004, "Wrong size on PyAbility_104831_OnAbilityInputPress");
static_assert(offsetof(PyAbility_104831_OnAbilityInputPress, TimeWaited) == 0x000000, "Member 'PyAbility_104831_OnAbilityInputPress::TimeWaited' has a wrong offset!");

// PythonFunction PyAbility_104831.PyAbility_104831.ActivateRecallAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104831_ActivateRecallAbility final
{
public:
	bool                                          bShouldCancel;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104831_ActivateRecallAbility) == 0x000001, "Wrong alignment on PyAbility_104831_ActivateRecallAbility");
static_assert(sizeof(PyAbility_104831_ActivateRecallAbility) == 0x000001, "Wrong size on PyAbility_104831_ActivateRecallAbility");
static_assert(offsetof(PyAbility_104831_ActivateRecallAbility, bShouldCancel) == 0x000000, "Member 'PyAbility_104831_ActivateRecallAbility::bShouldCancel' has a wrong offset!");

// PythonFunction PyAbility_104831.PyProjectile_10483101.K2_OnFlyOverMaxDistance
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10483101_K2_OnFlyOverMaxDistance final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10483101_K2_OnFlyOverMaxDistance) == 0x000008, "Wrong alignment on PyProjectile_10483101_K2_OnFlyOverMaxDistance");
static_assert(sizeof(PyProjectile_10483101_K2_OnFlyOverMaxDistance) == 0x000170, "Wrong size on PyProjectile_10483101_K2_OnFlyOverMaxDistance");
static_assert(offsetof(PyProjectile_10483101_K2_OnFlyOverMaxDistance, HitResult) == 0x000000, "Member 'PyProjectile_10483101_K2_OnFlyOverMaxDistance::HitResult' has a wrong offset!");

// PythonFunction PyAbility_104831.PyProjectile_10483101.ShouldEndTaskOverMaxDistance
// 0x0001 (0x0001 - 0x0000)
struct PyProjectile_10483101_ShouldEndTaskOverMaxDistance final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10483101_ShouldEndTaskOverMaxDistance) == 0x000001, "Wrong alignment on PyProjectile_10483101_ShouldEndTaskOverMaxDistance");
static_assert(sizeof(PyProjectile_10483101_ShouldEndTaskOverMaxDistance) == 0x000001, "Wrong size on PyProjectile_10483101_ShouldEndTaskOverMaxDistance");
static_assert(offsetof(PyProjectile_10483101_ShouldEndTaskOverMaxDistance, ReturnValue) == 0x000000, "Member 'PyProjectile_10483101_ShouldEndTaskOverMaxDistance::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104831.PyProjectile_10483101.K2_OnProcessHit
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10483101_K2_OnProcessHit final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10483101_K2_OnProcessHit) == 0x000008, "Wrong alignment on PyProjectile_10483101_K2_OnProcessHit");
static_assert(sizeof(PyProjectile_10483101_K2_OnProcessHit) == 0x000170, "Wrong size on PyProjectile_10483101_K2_OnProcessHit");
static_assert(offsetof(PyProjectile_10483101_K2_OnProcessHit, ImpactResult) == 0x000000, "Member 'PyProjectile_10483101_K2_OnProcessHit::ImpactResult' has a wrong offset!");

// PythonFunction PyAbility_104831.PyProjectile_10483102.K2_OnPenetrate
// 0x0188 (0x0188 - 0x0000)
struct PyProjectile_10483102_K2_OnPenetrate final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                ImpactVelocity;                                    // 0x0170(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10483102_K2_OnPenetrate) == 0x000008, "Wrong alignment on PyProjectile_10483102_K2_OnPenetrate");
static_assert(sizeof(PyProjectile_10483102_K2_OnPenetrate) == 0x000188, "Wrong size on PyProjectile_10483102_K2_OnPenetrate");
static_assert(offsetof(PyProjectile_10483102_K2_OnPenetrate, ImpactResult) == 0x000000, "Member 'PyProjectile_10483102_K2_OnPenetrate::ImpactResult' has a wrong offset!");
static_assert(offsetof(PyProjectile_10483102_K2_OnPenetrate, ImpactVelocity) == 0x000170, "Member 'PyProjectile_10483102_K2_OnPenetrate::ImpactVelocity' has a wrong offset!");

// PythonFunction PyAbility_104831.PyProjectile_10483102.K2_GetFirstSpeed
// 0x0004 (0x0004 - 0x0000)
struct PyProjectile_10483102_K2_GetFirstSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10483102_K2_GetFirstSpeed) == 0x000004, "Wrong alignment on PyProjectile_10483102_K2_GetFirstSpeed");
static_assert(sizeof(PyProjectile_10483102_K2_GetFirstSpeed) == 0x000004, "Wrong size on PyProjectile_10483102_K2_GetFirstSpeed");
static_assert(offsetof(PyProjectile_10483102_K2_GetFirstSpeed, ReturnValue) == 0x000000, "Member 'PyProjectile_10483102_K2_GetFirstSpeed::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104831.PyProjectile_10483102.K2_GetSecondSpeed
// 0x0004 (0x0004 - 0x0000)
struct PyProjectile_10483102_K2_GetSecondSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_10483102_K2_GetSecondSpeed) == 0x000004, "Wrong alignment on PyProjectile_10483102_K2_GetSecondSpeed");
static_assert(sizeof(PyProjectile_10483102_K2_GetSecondSpeed) == 0x000004, "Wrong size on PyProjectile_10483102_K2_GetSecondSpeed");
static_assert(offsetof(PyProjectile_10483102_K2_GetSecondSpeed, ReturnValue) == 0x000000, "Member 'PyProjectile_10483102_K2_GetSecondSpeed::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104831.PyCue_Projectile_Loop_10483101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10483101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10483101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10483101_WhileActiveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10483101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10483101_WhileActiveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10483101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10483101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104831.PyCue_Projectile_Loop_10483101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10483101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10483101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10483101_OnRemoveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10483101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10483101_OnRemoveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10483101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10483101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104831.PyCue_Projectile_Loop_10483101.DeactivateAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10483101_DeactivateAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10483101_DeactivateAudio) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10483101_DeactivateAudio");
static_assert(sizeof(PyCue_Projectile_Loop_10483101_DeactivateAudio) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10483101_DeactivateAudio");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_DeactivateAudio, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10483101_DeactivateAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_DeactivateAudio, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10483101_DeactivateAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104831.PyCue_Projectile_Loop_10483101.OnShurikenStateChange
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Projectile_Loop_10483101_OnShurikenStateChange final
{
public:
	EShurikenState                                NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Projectile_Loop_10483101_OnShurikenStateChange) == 0x000001, "Wrong alignment on PyCue_Projectile_Loop_10483101_OnShurikenStateChange");
static_assert(sizeof(PyCue_Projectile_Loop_10483101_OnShurikenStateChange) == 0x000001, "Wrong size on PyCue_Projectile_Loop_10483101_OnShurikenStateChange");
static_assert(offsetof(PyCue_Projectile_Loop_10483101_OnShurikenStateChange, NewState) == 0x000000, "Member 'PyCue_Projectile_Loop_10483101_OnShurikenStateChange::NewState' has a wrong offset!");

// PythonFunction PyAbility_104831.PyUIController_104831.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_104831_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_104831_SetAbility) == 0x000008, "Wrong alignment on PyUIController_104831_SetAbility");
static_assert(sizeof(PyUIController_104831_SetAbility) == 0x000010, "Wrong size on PyUIController_104831_SetAbility");
static_assert(offsetof(PyUIController_104831_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_104831_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_104831_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_104831_SetAbility::InAbility' has a wrong offset!");

// PythonFunction PyAbility_104831.PyUIController_104831.OnAbilityTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_104831_OnAbilityTagUpdate final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bExists;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_104831_OnAbilityTagUpdate) == 0x000004, "Wrong alignment on PyUIController_104831_OnAbilityTagUpdate");
static_assert(sizeof(PyUIController_104831_OnAbilityTagUpdate) == 0x000010, "Wrong size on PyUIController_104831_OnAbilityTagUpdate");
static_assert(offsetof(PyUIController_104831_OnAbilityTagUpdate, InTag) == 0x000000, "Member 'PyUIController_104831_OnAbilityTagUpdate::InTag' has a wrong offset!");
static_assert(offsetof(PyUIController_104831_OnAbilityTagUpdate, bExists) == 0x00000C, "Member 'PyUIController_104831_OnAbilityTagUpdate::bExists' has a wrong offset!");

}


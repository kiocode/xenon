#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_SelectModeItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "PyWidget_Common_Button_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_SelectModeItem.PyWiget_SelectModeAIDiffV2
// 0x0040 (0x0930 - 0x08F0)
class UPyWiget_SelectModeAIDiffV2 final : public UPyWidget_BaseCommonButton
{
public:
	int32                                         AIDiff;                                            // 0x08E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            NormalColor;                                       // 0x08EC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            SelectedColor;                                     // 0x0900(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             AIDiffChange;                                      // 0x0918(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void AIDiffChange__DelegateSignature(int32 Ai_diff);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWiget_SelectModeAIDiffV2">();
	}
	static class UPyWiget_SelectModeAIDiffV2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWiget_SelectModeAIDiffV2>();
	}
};
static_assert(alignof(UPyWiget_SelectModeAIDiffV2) == 0x000010, "Wrong alignment on UPyWiget_SelectModeAIDiffV2");
static_assert(sizeof(UPyWiget_SelectModeAIDiffV2) == 0x000930, "Wrong size on UPyWiget_SelectModeAIDiffV2");
static_assert(offsetof(UPyWiget_SelectModeAIDiffV2, AIDiff) == 0x0008E8, "Member 'UPyWiget_SelectModeAIDiffV2::AIDiff' has a wrong offset!");
static_assert(offsetof(UPyWiget_SelectModeAIDiffV2, NormalColor) == 0x0008EC, "Member 'UPyWiget_SelectModeAIDiffV2::NormalColor' has a wrong offset!");
static_assert(offsetof(UPyWiget_SelectModeAIDiffV2, SelectedColor) == 0x000900, "Member 'UPyWiget_SelectModeAIDiffV2::SelectedColor' has a wrong offset!");
static_assert(offsetof(UPyWiget_SelectModeAIDiffV2, AIDiffChange) == 0x000918, "Member 'UPyWiget_SelectModeAIDiffV2::AIDiffChange' has a wrong offset!");

// PythonClass PyWidget_SelectModeItem.PyWidget_SelectModeItemV2
// 0x00C0 (0x09B0 - 0x08F0)
class UPyWidget_SelectModeItemV2 final : public UPyWidget_BaseCommonButton
{
public:
	bool                                          IsNormal;                                          // 0x08E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLock;                                            // 0x08E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8EA[0x2];                                      // 0x08EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            LightColor;                                        // 0x08EC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            DarkColor;                                         // 0x0900(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            LineColor;                                         // 0x0914(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                           TipsWarnColor;                                     // 0x0928(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TipsCommonColor;                                   // 0x0938(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                Tip_Normal_Padding;                                // 0x0948(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                Tip_Warn_Padding;                                  // 0x0958(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UInputAction*                           RuleKeyInputAction;                                // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                               Overlay_Hover_Vx;                                  // 0x0970(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            WBP_ModeSelection_Rank;                            // 0x0978(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                TopTipsPadding;                                    // 0x0980(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          TopTipsHorizontalAlignment;                        // 0x0990(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            TopTipsVerticalAlignment;                          // 0x0991(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_992[0x2];                                      // 0x0992(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                BottomTipsPadding;                                 // 0x0994(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          BottomTipsHorizontalAlignment;                     // 0x09A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            BottomTipsVerticalAlignment;                       // 0x09A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void SetBtnIsLock(bool IsLock_0, bool IsWarning);
	void SetIsHover(bool IsHover_0);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnReceiveInputAction(class FName ActionName, const EInputEvent EventType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SelectModeItemV2">();
	}
	static class UPyWidget_SelectModeItemV2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SelectModeItemV2>();
	}
};
static_assert(alignof(UPyWidget_SelectModeItemV2) == 0x000010, "Wrong alignment on UPyWidget_SelectModeItemV2");
static_assert(sizeof(UPyWidget_SelectModeItemV2) == 0x0009B0, "Wrong size on UPyWidget_SelectModeItemV2");
static_assert(offsetof(UPyWidget_SelectModeItemV2, IsNormal) == 0x0008E8, "Member 'UPyWidget_SelectModeItemV2::IsNormal' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, IsLock) == 0x0008E9, "Member 'UPyWidget_SelectModeItemV2::IsLock' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, LightColor) == 0x0008EC, "Member 'UPyWidget_SelectModeItemV2::LightColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, DarkColor) == 0x000900, "Member 'UPyWidget_SelectModeItemV2::DarkColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, LineColor) == 0x000914, "Member 'UPyWidget_SelectModeItemV2::LineColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, TipsWarnColor) == 0x000928, "Member 'UPyWidget_SelectModeItemV2::TipsWarnColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, TipsCommonColor) == 0x000938, "Member 'UPyWidget_SelectModeItemV2::TipsCommonColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, Tip_Normal_Padding) == 0x000948, "Member 'UPyWidget_SelectModeItemV2::Tip_Normal_Padding' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, Tip_Warn_Padding) == 0x000958, "Member 'UPyWidget_SelectModeItemV2::Tip_Warn_Padding' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, RuleKeyInputAction) == 0x000968, "Member 'UPyWidget_SelectModeItemV2::RuleKeyInputAction' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, Overlay_Hover_Vx) == 0x000970, "Member 'UPyWidget_SelectModeItemV2::Overlay_Hover_Vx' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, WBP_ModeSelection_Rank) == 0x000978, "Member 'UPyWidget_SelectModeItemV2::WBP_ModeSelection_Rank' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, TopTipsPadding) == 0x000980, "Member 'UPyWidget_SelectModeItemV2::TopTipsPadding' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, TopTipsHorizontalAlignment) == 0x000990, "Member 'UPyWidget_SelectModeItemV2::TopTipsHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, TopTipsVerticalAlignment) == 0x000991, "Member 'UPyWidget_SelectModeItemV2::TopTipsVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, BottomTipsPadding) == 0x000994, "Member 'UPyWidget_SelectModeItemV2::BottomTipsPadding' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, BottomTipsHorizontalAlignment) == 0x0009A4, "Member 'UPyWidget_SelectModeItemV2::BottomTipsHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectModeItemV2, BottomTipsVerticalAlignment) == 0x0009A5, "Member 'UPyWidget_SelectModeItemV2::BottomTipsVerticalAlignment' has a wrong offset!");

// PythonClass PyWidget_SelectModeItem.PyWidget_SelectModeBothItem
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_SelectModeBothItem final : public UPyMarvelUserWidget
{
public:
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SelectModeBothItem">();
	}
	static class UPyWidget_SelectModeBothItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SelectModeBothItem>();
	}
};
static_assert(alignof(UPyWidget_SelectModeBothItem) == 0x000008, "Wrong alignment on UPyWidget_SelectModeBothItem");
static_assert(sizeof(UPyWidget_SelectModeBothItem) == 0x0005F0, "Wrong size on UPyWidget_SelectModeBothItem");

}


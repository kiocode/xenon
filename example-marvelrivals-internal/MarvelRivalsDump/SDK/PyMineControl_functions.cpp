#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyMineControl

#include "Basic.hpp"

#include "PyMineControl_classes.hpp"
#include "PyMineControl_parameters.hpp"


namespace SDK
{

// DelegateFunction PyMineControl.PyMineControl.DispatchOnStorageNumChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APyControl*                       Mine_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Cur_num                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Changed_num                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMineControl::DispatchOnStorageNumChanged__DelegateSignature(class APyControl* Mine_obj, float Cur_num, float Changed_num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "DispatchOnStorageNumChanged__DelegateSignature");

	Params::PyMineControl_DispatchOnStorageNumChanged__DelegateSignature Parms{};

	Parms.Mine_obj = Mine_obj;
	Parms.Cur_num = Cur_num;
	Parms.Changed_num = Changed_num;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction PyMineControl.PyMineControl.DispatchOnStorageNumRunOut__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APyControl*                       Mine_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyMineControl::DispatchOnStorageNumRunOut__DelegateSignature(class APyControl* Mine_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "DispatchOnStorageNumRunOut__DelegateSignature");

	Params::PyMineControl_DispatchOnStorageNumRunOut__DelegateSignature Parms{};

	Parms.Mine_obj = Mine_obj;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction PyMineControl.PyMineControl.DispatchOnMineDeactivated__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APyControl*                       Mine_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyMineControl::DispatchOnMineDeactivated__DelegateSignature(class APyControl* Mine_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "DispatchOnMineDeactivated__DelegateSignature");

	Params::PyMineControl_DispatchOnMineDeactivated__DelegateSignature Parms{};

	Parms.Mine_obj = Mine_obj;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction PyMineControl.PyMineControl.DispatchOnPillageStageChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APyControl*                       Mine_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Stage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMineControl::DispatchOnPillageStageChanged__DelegateSignature(class APyControl* Mine_obj, int32 Stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "DispatchOnPillageStageChanged__DelegateSignature");

	Params::PyMineControl_DispatchOnPillageStageChanged__DelegateSignature Parms{};

	Parms.Mine_obj = Mine_obj;
	Parms.Stage = Stage;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction PyMineControl.PyMineControl.DispatchOnPillageFinished__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APyControl*                       Mine_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APyMineControl::DispatchOnPillageFinished__DelegateSignature(class APyControl* Mine_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "DispatchOnPillageFinished__DelegateSignature");

	Params::PyMineControl_DispatchOnPillageFinished__DelegateSignature Parms{};

	Parms.Mine_obj = Mine_obj;

	UObject::ProcessEvent(Func, &Parms);
}


// PythonFunction PyMineControl.PyMineControl.SetUIName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyMineControl::SetUIName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "SetUIName");

	Params::PyMineControl_SetUIName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.SetSceneHUDName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyMineControl::SetSceneHUDName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "SetSceneHUDName");

	Params::PyMineControl_SetSceneHUDName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.GetLastLeaveTime
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float APyMineControl::GetLastLeaveTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "GetLastLeaveTime");

	Params::PyMineControl_GetLastLeaveTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// PythonFunction PyMineControl.PyMineControl.SetSceneHUDVisible
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    With_normal_ui                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMineControl::SetSceneHUDVisible(bool Visible, bool With_normal_ui)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "SetSceneHUDVisible");

	Params::PyMineControl_SetSceneHUDVisible Parms{};

	Parms.Visible = Visible;
	Parms.With_normal_ui = With_normal_ui;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.S_Initialize
// (Native, Protected, BlueprintCallable)

void APyMineControl::S_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "S_Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.Update
// (Native, Protected, BlueprintCallable)

void APyMineControl::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.ReceiveInit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyMineControl::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "ReceiveInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.ReceiveBeginPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyMineControl::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.ReceiveEndPlay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyMineControl::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "ReceiveEndPlay");

	Params::PyMineControl_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.OnRep_CurCostSpeed
// (Native, Public, BlueprintCallable)

void APyMineControl::OnRep_CurCostSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "OnRep_CurCostSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.OnRep_CurChargeSpeed
// (Native, Public, BlueprintCallable)

void APyMineControl::OnRep_CurChargeSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "OnRep_CurChargeSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.OnRep_CurNum
// (Native, Public, BlueprintCallable)

void APyMineControl::OnRep_CurNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "OnRep_CurNum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.OnRep_MaxNum
// (Native, Public, BlueprintCallable)

void APyMineControl::OnRep_MaxNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "OnRep_MaxNum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.OnRep_IsOver
// (Native, Public, BlueprintCallable)

void APyMineControl::OnRep_IsOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "OnRep_IsOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyMineControl.PyMineControl.OnRep_IsRunning
// (Native, Public, BlueprintCallable)

void APyMineControl::OnRep_IsRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyMineControl", "OnRep_IsRunning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}


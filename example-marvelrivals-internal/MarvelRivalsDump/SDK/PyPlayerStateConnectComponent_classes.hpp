#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyPlayerStateConnectComponent

#include "Basic.hpp"

#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyPlayerStateConnectComponent.PyPlayerStateConnectComponent
// 0x0038 (0x0128 - 0x00F0)
class UPyPlayerStateConnectComponent final : public UMarvelActorComponentBase
{
public:
	int32                                         CommanderUID;                                      // 0x00F0(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DelegateCommand;                                   // 0x00F4(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 DelegatorUIDArray;                                 // 0x00F8(0x0010)(Net, RepNotify, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             CommanderChanged;                                  // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             DelegatorChanged;                                  // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void CommanderChanged__DelegateSignature(int32 CommanderUID_0);
	void DelegatorChanged__DelegateSignature(const TArray<int32>& DelegatorUIDArray_0);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnRep_DelegateCommandChange();
	void OnRep_CommanderChanged();
	void OnRep_DelegatorChange();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyPlayerStateConnectComponent">();
	}
	static class UPyPlayerStateConnectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyPlayerStateConnectComponent>();
	}
};
static_assert(alignof(UPyPlayerStateConnectComponent) == 0x000008, "Wrong alignment on UPyPlayerStateConnectComponent");
static_assert(sizeof(UPyPlayerStateConnectComponent) == 0x000128, "Wrong size on UPyPlayerStateConnectComponent");
static_assert(offsetof(UPyPlayerStateConnectComponent, CommanderUID) == 0x0000F0, "Member 'UPyPlayerStateConnectComponent::CommanderUID' has a wrong offset!");
static_assert(offsetof(UPyPlayerStateConnectComponent, DelegateCommand) == 0x0000F4, "Member 'UPyPlayerStateConnectComponent::DelegateCommand' has a wrong offset!");
static_assert(offsetof(UPyPlayerStateConnectComponent, DelegatorUIDArray) == 0x0000F8, "Member 'UPyPlayerStateConnectComponent::DelegatorUIDArray' has a wrong offset!");
static_assert(offsetof(UPyPlayerStateConnectComponent, CommanderChanged) == 0x000108, "Member 'UPyPlayerStateConnectComponent::CommanderChanged' has a wrong offset!");
static_assert(offsetof(UPyPlayerStateConnectComponent, DelegatorChanged) == 0x000118, "Member 'UPyPlayerStateConnectComponent::DelegatorChanged' has a wrong offset!");

}


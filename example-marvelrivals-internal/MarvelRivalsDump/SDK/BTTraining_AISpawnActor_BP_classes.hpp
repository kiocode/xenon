#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTraining_AISpawnActor_BP

#include "Basic.hpp"

#include "PyAIBTreeTrainingSpawnActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTraining_AISpawnActor_BP.BTTraining_AISpawnActor_BP_C
// 0x0018 (0x0530 - 0x0518)
class ABTTraining_AISpawnActor_BP_C final : public APyAIBtreeTestSpawnActor
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTTraining_AISpawnActor_BP_C">();
	}
	static class ABTTraining_AISpawnActor_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABTTraining_AISpawnActor_BP_C>();
	}
};
////static_assert(alignof(ABTTraining_AISpawnActor_BP_C) == 0x000008, "Wrong alignment on ABTTraining_AISpawnActor_BP_C");
////static_assert(sizeof(ABTTraining_AISpawnActor_BP_C) == 0x000530, "Wrong size on ABTTraining_AISpawnActor_BP_C");
////static_assert(offsetof(ABTTraining_AISpawnActor_BP_C, Arrow) == 0x000518, "Member 'ABTTraining_AISpawnActor_BP_C::Arrow' has a wrong offset!");
////static_assert(offsetof(ABTTraining_AISpawnActor_BP_C, Capsule) == 0x000520, "Member 'ABTTraining_AISpawnActor_BP_C::Capsule' has a wrong offset!");
////static_assert(offsetof(ABTTraining_AISpawnActor_BP_C, DefaultSceneRoot) == 0x000528, "Member 'ABTTraining_AISpawnActor_BP_C::DefaultSceneRoot' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_Rank_MySeason

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_Rank_MySeason.PyWidget_AwardsPerRank.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_AwardsPerRank_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_AwardsPerRank_OnListItemObjectSet) == 0x000008, "Wrong alignment on PyWidget_AwardsPerRank_OnListItemObjectSet");
static_assert(sizeof(PyWidget_AwardsPerRank_OnListItemObjectSet) == 0x000008, "Wrong size on PyWidget_AwardsPerRank_OnListItemObjectSet");
static_assert(offsetof(PyWidget_AwardsPerRank_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'PyWidget_AwardsPerRank_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// PythonFunction PyWidget_Rank_MySeason.PyWidget_AwardsPerRank.on_try_srcoll_when_next_focusable_child_change
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change final
{
public:
	int32                                         ChildIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusedChildDirection;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumItemsLine;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change) == 0x000008, "Wrong alignment on PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change");
static_assert(sizeof(PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change) == 0x000018, "Wrong size on PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change");
static_assert(offsetof(PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change, ChildIndex) == 0x000000, "Member 'PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change::ChildIndex' has a wrong offset!");
static_assert(offsetof(PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change, FocusedChildDirection) == 0x000004, "Member 'PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change::FocusedChildDirection' has a wrong offset!");
static_assert(offsetof(PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change, NumItemsLine) == 0x000008, "Member 'PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change::NumItemsLine' has a wrong offset!");
static_assert(offsetof(PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change, ReturnValue) == 0x000010, "Member 'PyWidget_AwardsPerRank_On_try_srcoll_when_next_focusable_child_change::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_Rank_MySeason.PyWidget_Rank_MySeason.Tick
// 0x003C (0x003C - 0x0000)
struct PyWidget_Rank_MySeason_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Rank_MySeason_Tick) == 0x000004, "Wrong alignment on PyWidget_Rank_MySeason_Tick");
static_assert(sizeof(PyWidget_Rank_MySeason_Tick) == 0x00003C, "Wrong size on PyWidget_Rank_MySeason_Tick");
static_assert(offsetof(PyWidget_Rank_MySeason_Tick, MyGeometry) == 0x000000, "Member 'PyWidget_Rank_MySeason_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PyWidget_Rank_MySeason_Tick, InDeltaTime) == 0x000038, "Member 'PyWidget_Rank_MySeason_Tick::InDeltaTime' has a wrong offset!");

}


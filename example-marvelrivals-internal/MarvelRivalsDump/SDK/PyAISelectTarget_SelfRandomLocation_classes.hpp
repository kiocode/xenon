#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAISelectTarget_SelfRandomLocation

#include "Basic.hpp"

#include "PyAISelectTargetLogicBase_classes.hpp"


namespace SDK
{

// PythonClass PyAISelectTarget_SelfRandomLocation.PyAISelectTarget_SelfRandomLocation
// 0x0010 (0x0080 - 0x0070)
class UPyAISelectTarget_SelfRandomLocation : public UPyAISelectTargetLogicBase
{
public:
	float                                         MinRadius;                                         // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRadius;                                         // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CheckTarget;                                       // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockTarget;                                       // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAISelectTarget_SelfRandomLocation">();
	}
	static class UPyAISelectTarget_SelfRandomLocation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAISelectTarget_SelfRandomLocation>();
	}
};
static_assert(alignof(UPyAISelectTarget_SelfRandomLocation) == 0x000008, "Wrong alignment on UPyAISelectTarget_SelfRandomLocation");
static_assert(sizeof(UPyAISelectTarget_SelfRandomLocation) == 0x000080, "Wrong size on UPyAISelectTarget_SelfRandomLocation");
static_assert(offsetof(UPyAISelectTarget_SelfRandomLocation, MinRadius) == 0x000070, "Member 'UPyAISelectTarget_SelfRandomLocation::MinRadius' has a wrong offset!");
static_assert(offsetof(UPyAISelectTarget_SelfRandomLocation, MaxRadius) == 0x000074, "Member 'UPyAISelectTarget_SelfRandomLocation::MaxRadius' has a wrong offset!");
static_assert(offsetof(UPyAISelectTarget_SelfRandomLocation, CheckTarget) == 0x000078, "Member 'UPyAISelectTarget_SelfRandomLocation::CheckTarget' has a wrong offset!");
static_assert(offsetof(UPyAISelectTarget_SelfRandomLocation, bLockTarget) == 0x000079, "Member 'UPyAISelectTarget_SelfRandomLocation::bLockTarget' has a wrong offset!");

}


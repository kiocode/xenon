#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_actions

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass task_actions.PyTaskAction_UseDataBase
// 0x0080 (0x00B8 - 0x0038)
class UPyTaskAction_UseDataBase final : public UMarvelTaskActionBase
{
public:
	bool                                          Is_one_game_limit;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETaskLimitCondType                            Limit_type;                                        // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Args;                                              // 0x0040(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, int32>                            Random_hero_weight;                                // 0x0050(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         Random_hero_count;                                 // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Instance_id;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class FString GetTaskInstanceKey();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_UseDataBase">();
	}
	static class UPyTaskAction_UseDataBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_UseDataBase>();
	}
};
//static_assert(alignof(UPyTaskAction_UseDataBase) == 0x000008, "Wrong alignment on UPyTaskAction_UseDataBase");
//static_assert(sizeof(UPyTaskAction_UseDataBase) == 0x0000B8, "Wrong size on UPyTaskAction_UseDataBase");
//static_assert(offsetof(UPyTaskAction_UseDataBase, Is_one_game_limit) == 0x000038, "Member 'UPyTaskAction_UseDataBase::Is_one_game_limit' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_UseDataBase, Limit_type) == 0x000039, "Member 'UPyTaskAction_UseDataBase::Limit_type' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_UseDataBase, Args) == 0x000040, "Member 'UPyTaskAction_UseDataBase::Args' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_UseDataBase, Random_hero_weight) == 0x000050, "Member 'UPyTaskAction_UseDataBase::Random_hero_weight' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_UseDataBase, Random_hero_count) == 0x0000A0, "Member 'UPyTaskAction_UseDataBase::Random_hero_count' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_UseDataBase, Instance_id) == 0x0000A8, "Member 'UPyTaskAction_UseDataBase::Instance_id' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_CompleteAchievements
// 0x0010 (0x0048 - 0x0038)
class UPyTaskAction_CompleteAchievements final : public UMarvelTaskActionBase
{
public:
	TArray<int32>                                 Spec_ids;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_CompleteAchievements">();
	}
	static class UPyTaskAction_CompleteAchievements* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_CompleteAchievements>();
	}
};
//static_assert(alignof(UPyTaskAction_CompleteAchievements) == 0x000008, "Wrong alignment on UPyTaskAction_CompleteAchievements");
//static_assert(sizeof(UPyTaskAction_CompleteAchievements) == 0x000048, "Wrong size on UPyTaskAction_CompleteAchievements");
//static_assert(offsetof(UPyTaskAction_CompleteAchievements, Spec_ids) == 0x000038, "Member 'UPyTaskAction_CompleteAchievements::Spec_ids' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_TaskUseDataBase
// 0x00C0 (0x00F8 - 0x0038)
class UPyTaskAction_TaskUseDataBase final : public UMarvelTaskActionBase
{
public:
	bool                                          Is_one_game_limit;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    Args;                                              // 0x0040(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, int32>                            Random_hero_weight;                                // 0x0090(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         Random_hero_count;                                 // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Instance_id;                                       // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_TaskUseDataBase">();
	}
	static class UPyTaskAction_TaskUseDataBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_TaskUseDataBase>();
	}
};
//static_assert(alignof(UPyTaskAction_TaskUseDataBase) == 0x000008, "Wrong alignment on UPyTaskAction_TaskUseDataBase");
//static_assert(sizeof(UPyTaskAction_TaskUseDataBase) == 0x0000F8, "Wrong size on UPyTaskAction_TaskUseDataBase");
//static_assert(offsetof(UPyTaskAction_TaskUseDataBase, Is_one_game_limit) == 0x000038, "Member 'UPyTaskAction_TaskUseDataBase::Is_one_game_limit' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_TaskUseDataBase, Args) == 0x000040, "Member 'UPyTaskAction_TaskUseDataBase::Args' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_TaskUseDataBase, Random_hero_weight) == 0x000090, "Member 'UPyTaskAction_TaskUseDataBase::Random_hero_weight' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_TaskUseDataBase, Random_hero_count) == 0x0000E0, "Member 'UPyTaskAction_TaskUseDataBase::Random_hero_count' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_TaskUseDataBase, Instance_id) == 0x0000E8, "Member 'UPyTaskAction_TaskUseDataBase::Instance_id' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_GainFriends
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_GainFriends final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_GainFriends">();
	}
	static class UPyTaskAction_GainFriends* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_GainFriends>();
	}
};
//static_assert(alignof(UPyTaskAction_GainFriends) == 0x000008, "Wrong alignment on UPyTaskAction_GainFriends");
//static_assert(sizeof(UPyTaskAction_GainFriends) == 0x000038, "Wrong size on UPyTaskAction_GainFriends");

// PythonClass task_actions.PyTaskAction_TaskCompleteGame
// 0x00A8 (0x00E0 - 0x0038)
class UPyTaskAction_TaskCompleteGame final : public UMarvelTaskActionBase
{
public:
	TMap<class FString, EGameModeType_Behavior>   Spec_game_modes;                                   // 0x0038(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FString, int32>                    Spec_heros;                                        // 0x0088(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          Is_require_win;                                    // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_TaskCompleteGame">();
	}
	static class UPyTaskAction_TaskCompleteGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_TaskCompleteGame>();
	}
};
//static_assert(alignof(UPyTaskAction_TaskCompleteGame) == 0x000008, "Wrong alignment on UPyTaskAction_TaskCompleteGame");
//static_assert(sizeof(UPyTaskAction_TaskCompleteGame) == 0x0000E0, "Wrong size on UPyTaskAction_TaskCompleteGame");
//static_assert(offsetof(UPyTaskAction_TaskCompleteGame, Spec_game_modes) == 0x000038, "Member 'UPyTaskAction_TaskCompleteGame::Spec_game_modes' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_TaskCompleteGame, Spec_heros) == 0x000088, "Member 'UPyTaskAction_TaskCompleteGame::Spec_heros' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_TaskCompleteGame, Is_require_win) == 0x0000D8, "Member 'UPyTaskAction_TaskCompleteGame::Is_require_win' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_GetVoteFromTeammate
// 0x0010 (0x0048 - 0x0038)
class UPyTaskAction_GetVoteFromTeammate final : public UMarvelTaskActionBase
{
public:
	TArray<int32>                                 Vote_cnt_one_match;                                // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_GetVoteFromTeammate">();
	}
	static class UPyTaskAction_GetVoteFromTeammate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_GetVoteFromTeammate>();
	}
};
//static_assert(alignof(UPyTaskAction_GetVoteFromTeammate) == 0x000008, "Wrong alignment on UPyTaskAction_GetVoteFromTeammate");
//static_assert(sizeof(UPyTaskAction_GetVoteFromTeammate) == 0x000048, "Wrong size on UPyTaskAction_GetVoteFromTeammate");
//static_assert(offsetof(UPyTaskAction_GetVoteFromTeammate, Vote_cnt_one_match) == 0x000038, "Member 'UPyTaskAction_GetVoteFromTeammate::Vote_cnt_one_match' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_UseAchievementAction
// 0x0008 (0x0040 - 0x0038)
class UPyTaskAction_UseAchievementAction final : public UMarvelTaskActionBase
{
public:
	int32                                         Instance_id;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_UseAchievementAction">();
	}
	static class UPyTaskAction_UseAchievementAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_UseAchievementAction>();
	}
};
//static_assert(alignof(UPyTaskAction_UseAchievementAction) == 0x000008, "Wrong alignment on UPyTaskAction_UseAchievementAction");
//static_assert(sizeof(UPyTaskAction_UseAchievementAction) == 0x000040, "Wrong size on UPyTaskAction_UseAchievementAction");
//static_assert(offsetof(UPyTaskAction_UseAchievementAction, Instance_id) == 0x000038, "Member 'UPyTaskAction_UseAchievementAction::Instance_id' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_CompleteGame
// 0x0048 (0x0080 - 0x0038)
class UPyTaskAction_CompleteGame final : public UMarvelTaskActionBase
{
public:
	TArray<EGameModeType_Behavior>                Spec_game_modes;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 Spec_game_play_modes;                              // 0x0048(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 Spec_heros;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 Spec_map_thems;                                    // 0x0068(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          Is_not_repeate_thems;                              // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_require_win;                                    // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_require_continue;                               // 0x007A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_CompleteGame">();
	}
	static class UPyTaskAction_CompleteGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_CompleteGame>();
	}
};
//static_assert(alignof(UPyTaskAction_CompleteGame) == 0x000008, "Wrong alignment on UPyTaskAction_CompleteGame");
//static_assert(sizeof(UPyTaskAction_CompleteGame) == 0x000080, "Wrong size on UPyTaskAction_CompleteGame");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Spec_game_modes) == 0x000038, "Member 'UPyTaskAction_CompleteGame::Spec_game_modes' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Spec_game_play_modes) == 0x000048, "Member 'UPyTaskAction_CompleteGame::Spec_game_play_modes' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Spec_heros) == 0x000058, "Member 'UPyTaskAction_CompleteGame::Spec_heros' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Spec_map_thems) == 0x000068, "Member 'UPyTaskAction_CompleteGame::Spec_map_thems' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Is_not_repeate_thems) == 0x000078, "Member 'UPyTaskAction_CompleteGame::Is_not_repeate_thems' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Is_require_win) == 0x000079, "Member 'UPyTaskAction_CompleteGame::Is_require_win' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteGame, Is_require_continue) == 0x00007A, "Member 'UPyTaskAction_CompleteGame::Is_require_continue' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_ContinueLoginDays
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_ContinueLoginDays final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_ContinueLoginDays">();
	}
	static class UPyTaskAction_ContinueLoginDays* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_ContinueLoginDays>();
	}
};
//static_assert(alignof(UPyTaskAction_ContinueLoginDays) == 0x000008, "Wrong alignment on UPyTaskAction_ContinueLoginDays");
//static_assert(sizeof(UPyTaskAction_ContinueLoginDays) == 0x000038, "Wrong size on UPyTaskAction_ContinueLoginDays");

// PythonClass task_actions.PyTaskAction_GainMvp
// 0x0008 (0x0040 - 0x0038)
class UPyTaskAction_GainMvp final : public UMarvelTaskActionBase
{
public:
	bool                                          Is_incluide_svp;                                   // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_GainMvp">();
	}
	static class UPyTaskAction_GainMvp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_GainMvp>();
	}
};
//static_assert(alignof(UPyTaskAction_GainMvp) == 0x000008, "Wrong alignment on UPyTaskAction_GainMvp");
//static_assert(sizeof(UPyTaskAction_GainMvp) == 0x000040, "Wrong size on UPyTaskAction_GainMvp");
//static_assert(offsetof(UPyTaskAction_GainMvp, Is_incluide_svp) == 0x000038, "Member 'UPyTaskAction_GainMvp::Is_incluide_svp' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_AccumulatePlayWithFriend
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_AccumulatePlayWithFriend final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_AccumulatePlayWithFriend">();
	}
	static class UPyTaskAction_AccumulatePlayWithFriend* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_AccumulatePlayWithFriend>();
	}
};
//static_assert(alignof(UPyTaskAction_AccumulatePlayWithFriend) == 0x000008, "Wrong alignment on UPyTaskAction_AccumulatePlayWithFriend");
//static_assert(sizeof(UPyTaskAction_AccumulatePlayWithFriend) == 0x000038, "Wrong size on UPyTaskAction_AccumulatePlayWithFriend");

// PythonClass task_actions.PyTaskAction_AccumulateVoteOther
// 0x0018 (0x0050 - 0x0038)
class UPyTaskAction_AccumulateVoteOther final : public UMarvelTaskActionBase
{
public:
	int32                                         Require_count_one_match;                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Accumulate_match_or_times;                         // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Is_include_self;                                   // 0x003D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Spec_heroes;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_AccumulateVoteOther">();
	}
	static class UPyTaskAction_AccumulateVoteOther* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_AccumulateVoteOther>();
	}
};
//static_assert(alignof(UPyTaskAction_AccumulateVoteOther) == 0x000008, "Wrong alignment on UPyTaskAction_AccumulateVoteOther");
//static_assert(sizeof(UPyTaskAction_AccumulateVoteOther) == 0x000050, "Wrong size on UPyTaskAction_AccumulateVoteOther");
//static_assert(offsetof(UPyTaskAction_AccumulateVoteOther, Require_count_one_match) == 0x000038, "Member 'UPyTaskAction_AccumulateVoteOther::Require_count_one_match' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_AccumulateVoteOther, Accumulate_match_or_times) == 0x00003C, "Member 'UPyTaskAction_AccumulateVoteOther::Accumulate_match_or_times' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_AccumulateVoteOther, Is_include_self) == 0x00003D, "Member 'UPyTaskAction_AccumulateVoteOther::Is_include_self' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_AccumulateVoteOther, Spec_heroes) == 0x000040, "Member 'UPyTaskAction_AccumulateVoteOther::Spec_heroes' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_GainSkins
// 0x0010 (0x0048 - 0x0038)
class UPyTaskAction_GainSkins final : public UMarvelTaskActionBase
{
public:
	TArray<int32>                                 Spec_skins;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_GainSkins">();
	}
	static class UPyTaskAction_GainSkins* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_GainSkins>();
	}
};
//static_assert(alignof(UPyTaskAction_GainSkins) == 0x000008, "Wrong alignment on UPyTaskAction_GainSkins");
//static_assert(sizeof(UPyTaskAction_GainSkins) == 0x000048, "Wrong size on UPyTaskAction_GainSkins");
//static_assert(offsetof(UPyTaskAction_GainSkins, Spec_skins) == 0x000038, "Member 'UPyTaskAction_GainSkins::Spec_skins' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_AccumulateLoginDays
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_AccumulateLoginDays final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_AccumulateLoginDays">();
	}
	static class UPyTaskAction_AccumulateLoginDays* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_AccumulateLoginDays>();
	}
};
//static_assert(alignof(UPyTaskAction_AccumulateLoginDays) == 0x000008, "Wrong alignment on UPyTaskAction_AccumulateLoginDays");
//static_assert(sizeof(UPyTaskAction_AccumulateLoginDays) == 0x000038, "Wrong size on UPyTaskAction_AccumulateLoginDays");

// PythonClass task_actions.PyTaskAction_CompleteCustomRoomGame
// 0x0008 (0x0040 - 0x0038)
class UPyTaskAction_CompleteCustomRoomGame final : public UMarvelTaskActionBase
{
public:
	bool                                          Is_require_win;                                    // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_CompleteCustomRoomGame">();
	}
	static class UPyTaskAction_CompleteCustomRoomGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_CompleteCustomRoomGame>();
	}
};
//static_assert(alignof(UPyTaskAction_CompleteCustomRoomGame) == 0x000008, "Wrong alignment on UPyTaskAction_CompleteCustomRoomGame");
//static_assert(sizeof(UPyTaskAction_CompleteCustomRoomGame) == 0x000040, "Wrong size on UPyTaskAction_CompleteCustomRoomGame");
//static_assert(offsetof(UPyTaskAction_CompleteCustomRoomGame, Is_require_win) == 0x000038, "Member 'UPyTaskAction_CompleteCustomRoomGame::Is_require_win' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_LevelUp
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_LevelUp final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_LevelUp">();
	}
	static class UPyTaskAction_LevelUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_LevelUp>();
	}
};
//static_assert(alignof(UPyTaskAction_LevelUp) == 0x000008, "Wrong alignment on UPyTaskAction_LevelUp");
//static_assert(sizeof(UPyTaskAction_LevelUp) == 0x000038, "Wrong size on UPyTaskAction_LevelUp");

// PythonClass task_actions.PyTaskAction_WatchVideoFinish
// 0x0018 (0x0050 - 0x0038)
class UPyTaskAction_WatchVideoFinish final : public UMarvelTaskActionBase
{
public:
	bool                                          Is_require_win;                                    // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Spec_video_names;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_WatchVideoFinish">();
	}
	static class UPyTaskAction_WatchVideoFinish* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_WatchVideoFinish>();
	}
};
//static_assert(alignof(UPyTaskAction_WatchVideoFinish) == 0x000008, "Wrong alignment on UPyTaskAction_WatchVideoFinish");
//static_assert(sizeof(UPyTaskAction_WatchVideoFinish) == 0x000050, "Wrong size on UPyTaskAction_WatchVideoFinish");
//static_assert(offsetof(UPyTaskAction_WatchVideoFinish, Is_require_win) == 0x000038, "Member 'UPyTaskAction_WatchVideoFinish::Is_require_win' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_WatchVideoFinish, Spec_video_names) == 0x000040, "Member 'UPyTaskAction_WatchVideoFinish::Spec_video_names' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_RankLevelUp
// 0x0008 (0x0040 - 0x0038)
class UPyTaskAction_RankLevelUp final : public UMarvelTaskActionBase
{
public:
	int32                                         Rank_level;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_RankLevelUp">();
	}
	static class UPyTaskAction_RankLevelUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_RankLevelUp>();
	}
};
//static_assert(alignof(UPyTaskAction_RankLevelUp) == 0x000008, "Wrong alignment on UPyTaskAction_RankLevelUp");
//static_assert(sizeof(UPyTaskAction_RankLevelUp) == 0x000040, "Wrong size on UPyTaskAction_RankLevelUp");
//static_assert(offsetof(UPyTaskAction_RankLevelUp, Rank_level) == 0x000038, "Member 'UPyTaskAction_RankLevelUp::Rank_level' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_ReadStories
// 0x0018 (0x0050 - 0x0038)
class UPyTaskAction_ReadStories final : public UMarvelTaskActionBase
{
public:
	TArray<int32>                                 Spec_heros;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          Is_bond_story;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_ReadStories">();
	}
	static class UPyTaskAction_ReadStories* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_ReadStories>();
	}
};
//static_assert(alignof(UPyTaskAction_ReadStories) == 0x000008, "Wrong alignment on UPyTaskAction_ReadStories");
//static_assert(sizeof(UPyTaskAction_ReadStories) == 0x000050, "Wrong size on UPyTaskAction_ReadStories");
//static_assert(offsetof(UPyTaskAction_ReadStories, Spec_heros) == 0x000038, "Member 'UPyTaskAction_ReadStories::Spec_heros' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_ReadStories, Is_bond_story) == 0x000048, "Member 'UPyTaskAction_ReadStories::Is_bond_story' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_CompleteTasks
// 0x0020 (0x0058 - 0x0038)
class UPyTaskAction_CompleteTasks final : public UMarvelTaskActionBase
{
public:
	TArray<ETaskCategory>                         Spec_categories;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 Spec_task_ids;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_CompleteTasks">();
	}
	static class UPyTaskAction_CompleteTasks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_CompleteTasks>();
	}
};
//static_assert(alignof(UPyTaskAction_CompleteTasks) == 0x000008, "Wrong alignment on UPyTaskAction_CompleteTasks");
//static_assert(sizeof(UPyTaskAction_CompleteTasks) == 0x000058, "Wrong size on UPyTaskAction_CompleteTasks");
//static_assert(offsetof(UPyTaskAction_CompleteTasks, Spec_categories) == 0x000038, "Member 'UPyTaskAction_CompleteTasks::Spec_categories' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CompleteTasks, Spec_task_ids) == 0x000048, "Member 'UPyTaskAction_CompleteTasks::Spec_task_ids' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_ChatWitchOther
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_ChatWitchOther final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_ChatWitchOther">();
	}
	static class UPyTaskAction_ChatWitchOther* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_ChatWitchOther>();
	}
};
//static_assert(alignof(UPyTaskAction_ChatWitchOther) == 0x000008, "Wrong alignment on UPyTaskAction_ChatWitchOther");
//static_assert(sizeof(UPyTaskAction_ChatWitchOther) == 0x000038, "Wrong size on UPyTaskAction_ChatWitchOther");

// PythonClass task_actions.PyTaskAction_EquipItems
// 0x0028 (0x0060 - 0x0038)
class UPyTaskAction_EquipItems final : public UMarvelTaskActionBase
{
public:
	TArray<EItemType>                             Item_types;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FString>                         Item_ids;                                          // 0x0048(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          Is_can_repeated;                                   // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_EquipItems">();
	}
	static class UPyTaskAction_EquipItems* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_EquipItems>();
	}
};
//static_assert(alignof(UPyTaskAction_EquipItems) == 0x000008, "Wrong alignment on UPyTaskAction_EquipItems");
//static_assert(sizeof(UPyTaskAction_EquipItems) == 0x000060, "Wrong size on UPyTaskAction_EquipItems");
//static_assert(offsetof(UPyTaskAction_EquipItems, Item_types) == 0x000038, "Member 'UPyTaskAction_EquipItems::Item_types' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_EquipItems, Item_ids) == 0x000048, "Member 'UPyTaskAction_EquipItems::Item_ids' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_EquipItems, Is_can_repeated) == 0x000058, "Member 'UPyTaskAction_EquipItems::Is_can_repeated' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_CollectItems
// 0x0038 (0x0070 - 0x0038)
class UPyTaskAction_CollectItems final : public UMarvelTaskActionBase
{
public:
	TArray<EAchievementItemSource>                Item_sources;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          Is_spec_types;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Item_ids;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<EItemType>                             Item_types;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_CollectItems">();
	}
	static class UPyTaskAction_CollectItems* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_CollectItems>();
	}
};
//static_assert(alignof(UPyTaskAction_CollectItems) == 0x000008, "Wrong alignment on UPyTaskAction_CollectItems");
//static_assert(sizeof(UPyTaskAction_CollectItems) == 0x000070, "Wrong size on UPyTaskAction_CollectItems");
//static_assert(offsetof(UPyTaskAction_CollectItems, Item_sources) == 0x000038, "Member 'UPyTaskAction_CollectItems::Item_sources' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CollectItems, Is_spec_types) == 0x000048, "Member 'UPyTaskAction_CollectItems::Is_spec_types' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CollectItems, Item_ids) == 0x000050, "Member 'UPyTaskAction_CollectItems::Item_ids' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_CollectItems, Item_types) == 0x000060, "Member 'UPyTaskAction_CollectItems::Item_types' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_PlayHighlight
// 0x0000 (0x0038 - 0x0038)
class UPyTaskAction_PlayHighlight final : public UMarvelTaskActionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_PlayHighlight">();
	}
	static class UPyTaskAction_PlayHighlight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_PlayHighlight>();
	}
};
//static_assert(alignof(UPyTaskAction_PlayHighlight) == 0x000008, "Wrong alignment on UPyTaskAction_PlayHighlight");
//static_assert(sizeof(UPyTaskAction_PlayHighlight) == 0x000038, "Wrong size on UPyTaskAction_PlayHighlight");

// PythonClass task_actions.PyTaskAction_SpecStats
// 0x0008 (0x0040 - 0x0038)
class UPyTaskAction_SpecStats final : public UMarvelTaskActionBase
{
public:
	EAchievementStats                             Achieve_stat;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_SpecStats">();
	}
	static class UPyTaskAction_SpecStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_SpecStats>();
	}
};
//static_assert(alignof(UPyTaskAction_SpecStats) == 0x000008, "Wrong alignment on UPyTaskAction_SpecStats");
//static_assert(sizeof(UPyTaskAction_SpecStats) == 0x000040, "Wrong size on UPyTaskAction_SpecStats");
//static_assert(offsetof(UPyTaskAction_SpecStats, Achieve_stat) == 0x000038, "Member 'UPyTaskAction_SpecStats::Achieve_stat' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_CollectGallery
// 0x0010 (0x0048 - 0x0038)
class UPyTaskAction_CollectGallery final : public UMarvelTaskActionBase
{
public:
	class FString                                 Season_id;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_CollectGallery">();
	}
	static class UPyTaskAction_CollectGallery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_CollectGallery>();
	}
};
//static_assert(alignof(UPyTaskAction_CollectGallery) == 0x000008, "Wrong alignment on UPyTaskAction_CollectGallery");
//static_assert(sizeof(UPyTaskAction_CollectGallery) == 0x000048, "Wrong size on UPyTaskAction_CollectGallery");
//static_assert(offsetof(UPyTaskAction_CollectGallery, Season_id) == 0x000038, "Member 'UPyTaskAction_CollectGallery::Season_id' has a wrong offset!");

// PythonClass task_actions.PyTaskAction_ProficiencyLvUp
// 0x0018 (0x0050 - 0x0038)
class UPyTaskAction_ProficiencyLvUp final : public UMarvelTaskActionBase
{
public:
	int32                                         Spec_lv;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Spec_heros;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTaskAction_ProficiencyLvUp">();
	}
	static class UPyTaskAction_ProficiencyLvUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTaskAction_ProficiencyLvUp>();
	}
};
//static_assert(alignof(UPyTaskAction_ProficiencyLvUp) == 0x000008, "Wrong alignment on UPyTaskAction_ProficiencyLvUp");
//static_assert(sizeof(UPyTaskAction_ProficiencyLvUp) == 0x000050, "Wrong size on UPyTaskAction_ProficiencyLvUp");
//static_assert(offsetof(UPyTaskAction_ProficiencyLvUp, Spec_lv) == 0x000038, "Member 'UPyTaskAction_ProficiencyLvUp::Spec_lv' has a wrong offset!");
//static_assert(offsetof(UPyTaskAction_ProficiencyLvUp, Spec_heros) == 0x000040, "Member 'UPyTaskAction_ProficiencyLvUp::Spec_heros' has a wrong offset!");

}


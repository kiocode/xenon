#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102541

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_102541.PyConfig_102541
// 0x0010 (0x00A8 - 0x0098)
class UPyConfig_102541 final : public UMarvelAbilityConfig
{
public:
	int32                                         TreatScopeID;                                      // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProjectileID;                                      // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfDaggersPerShot;                            // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleBetweenDaggers;                               // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_102541">();
	}
	static class UPyConfig_102541* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_102541>();
	}
};
static_assert(alignof(UPyConfig_102541) == 0x000008, "Wrong alignment on UPyConfig_102541");
static_assert(sizeof(UPyConfig_102541) == 0x0000A8, "Wrong size on UPyConfig_102541");
static_assert(offsetof(UPyConfig_102541, TreatScopeID) == 0x000098, "Member 'UPyConfig_102541::TreatScopeID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102541, ProjectileID) == 0x00009C, "Member 'UPyConfig_102541::ProjectileID' has a wrong offset!");
static_assert(offsetof(UPyConfig_102541, NumberOfDaggersPerShot) == 0x0000A0, "Member 'UPyConfig_102541::NumberOfDaggersPerShot' has a wrong offset!");
static_assert(offsetof(UPyConfig_102541, AngleBetweenDaggers) == 0x0000A4, "Member 'UPyConfig_102541::AngleBetweenDaggers' has a wrong offset!");

// PythonClass PyAbility_102541.PyProjectile_10254101
// 0x0000 (0x3050 - 0x3050)
class APyProjectile_10254101 final : public AMarvelAbilityTargetActor_Projectile
{
public:
	void K2_OnProcessHit(const struct FHitResult& ImpactResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10254101">();
	}
	static class APyProjectile_10254101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10254101>();
	}
};
static_assert(alignof(APyProjectile_10254101) == 0x000010, "Wrong alignment on APyProjectile_10254101");
static_assert(sizeof(APyProjectile_10254101) == 0x003050, "Wrong size on APyProjectile_10254101");

// PythonClass PyAbility_102541.PyAbility_102541
// 0x0000 (0x2588 - 0x2588)
class UPyAbility_102541 : public UAbility_108
{
public:
	void BeginPlay();
	void HandleAnimSocketInfo(int32 SocketId, const struct FMarvelAbilitySocketInfo& SocketInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_102541">();
	}
	static class UPyAbility_102541* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_102541>();
	}
};
static_assert(alignof(UPyAbility_102541) == 0x000008, "Wrong alignment on UPyAbility_102541");
static_assert(sizeof(UPyAbility_102541) == 0x002588, "Wrong size on UPyAbility_102541");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_RankInfo

#include "Basic.hpp"

#include "PyMarvelUserWidget_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// PythonClass PyWidget_RankInfo.PyWidget_RankStar
// 0x0030 (0x0620 - 0x05F0)
class UPyWidget_RankStar final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AkEvent_OnNormalRankStarUp;                        // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnNormalRankStarDown;                      // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnProRankStarUp;                           // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnProRankStarDown;                         // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnStarPlayAnimFinish;                              // 0x0610(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void Construct();
	void OnStarPlayAnimFinish__DelegateSignature();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RankStar">();
	}
	static class UPyWidget_RankStar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RankStar>();
	}
};
static_assert(alignof(UPyWidget_RankStar) == 0x000008, "Wrong alignment on UPyWidget_RankStar");
static_assert(sizeof(UPyWidget_RankStar) == 0x000620, "Wrong size on UPyWidget_RankStar");
static_assert(offsetof(UPyWidget_RankStar, AkEvent_OnNormalRankStarUp) == 0x0005F0, "Member 'UPyWidget_RankStar::AkEvent_OnNormalRankStarUp' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankStar, AkEvent_OnNormalRankStarDown) == 0x0005F8, "Member 'UPyWidget_RankStar::AkEvent_OnNormalRankStarDown' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankStar, AkEvent_OnProRankStarUp) == 0x000600, "Member 'UPyWidget_RankStar::AkEvent_OnProRankStarUp' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankStar, AkEvent_OnProRankStarDown) == 0x000608, "Member 'UPyWidget_RankStar::AkEvent_OnProRankStarDown' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankStar, OnStarPlayAnimFinish) == 0x000610, "Member 'UPyWidget_RankStar::OnStarPlayAnimFinish' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_RankIcon
// 0x00C8 (0x06B8 - 0x05F0)
class UPyWidget_RankIcon final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color_Rank1;                                       // 0x05EC(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank2;                                       // 0x0600(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank3;                                       // 0x0614(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank4;                                       // 0x0628(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank5;                                       // 0x063C(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank6;                                       // 0x0650(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank7;                                       // 0x0664(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank8;                                       // 0x0678(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Rank9;                                       // 0x068C(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector2D                              Rank_Dan_Size;                                     // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rank_Dan_Alpha;                                    // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSmallTexture;                                  // 0x06B4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedShowRankText;                                 // 0x06B5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RankIcon">();
	}
	static class UPyWidget_RankIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RankIcon>();
	}
};
static_assert(alignof(UPyWidget_RankIcon) == 0x000008, "Wrong alignment on UPyWidget_RankIcon");
static_assert(sizeof(UPyWidget_RankIcon) == 0x0006B8, "Wrong size on UPyWidget_RankIcon");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank1) == 0x0005EC, "Member 'UPyWidget_RankIcon::Color_Rank1' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank2) == 0x000600, "Member 'UPyWidget_RankIcon::Color_Rank2' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank3) == 0x000614, "Member 'UPyWidget_RankIcon::Color_Rank3' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank4) == 0x000628, "Member 'UPyWidget_RankIcon::Color_Rank4' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank5) == 0x00063C, "Member 'UPyWidget_RankIcon::Color_Rank5' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank6) == 0x000650, "Member 'UPyWidget_RankIcon::Color_Rank6' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank7) == 0x000664, "Member 'UPyWidget_RankIcon::Color_Rank7' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank8) == 0x000678, "Member 'UPyWidget_RankIcon::Color_Rank8' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Color_Rank9) == 0x00068C, "Member 'UPyWidget_RankIcon::Color_Rank9' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Rank_Dan_Size) == 0x0006A0, "Member 'UPyWidget_RankIcon::Rank_Dan_Size' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, Rank_Dan_Alpha) == 0x0006B0, "Member 'UPyWidget_RankIcon::Rank_Dan_Alpha' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, bUseSmallTexture) == 0x0006B4, "Member 'UPyWidget_RankIcon::bUseSmallTexture' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon, bNeedShowRankText) == 0x0006B5, "Member 'UPyWidget_RankIcon::bNeedShowRankText' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_RankIcon_Small2
// 0x0058 (0x0648 - 0x05F0)
class UPyWidget_RankIcon_Small2 : public UPyMarvelUserWidget
{
public:
	bool                                          bUseSpecialShadow;                                 // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSoftObjectPath>                Tex2D_Rank_Projeciton_List;                        // 0x05F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSlateColor>                    Color_Rank_Text_List;                              // 0x0600(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSlateColor>                    Color_Rank_Outline_Shadow_List;                    // 0x0610(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSlateColor>                    Color_Rank_Projeciton_List;                        // 0x0620(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UImage*                                 Img_Rank_DanProjection;                            // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 Img_Rank_DanIcon;                                  // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelTextBlock*                       Text_SmallDan;                                     // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RankIcon_Small2">();
	}
	static class UPyWidget_RankIcon_Small2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RankIcon_Small2>();
	}
};
static_assert(alignof(UPyWidget_RankIcon_Small2) == 0x000008, "Wrong alignment on UPyWidget_RankIcon_Small2");
static_assert(sizeof(UPyWidget_RankIcon_Small2) == 0x000648, "Wrong size on UPyWidget_RankIcon_Small2");
static_assert(offsetof(UPyWidget_RankIcon_Small2, bUseSpecialShadow) == 0x0005E9, "Member 'UPyWidget_RankIcon_Small2::bUseSpecialShadow' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Tex2D_Rank_Projeciton_List) == 0x0005F0, "Member 'UPyWidget_RankIcon_Small2::Tex2D_Rank_Projeciton_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Color_Rank_Text_List) == 0x000600, "Member 'UPyWidget_RankIcon_Small2::Color_Rank_Text_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Color_Rank_Outline_Shadow_List) == 0x000610, "Member 'UPyWidget_RankIcon_Small2::Color_Rank_Outline_Shadow_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Color_Rank_Projeciton_List) == 0x000620, "Member 'UPyWidget_RankIcon_Small2::Color_Rank_Projeciton_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Img_Rank_DanProjection) == 0x000630, "Member 'UPyWidget_RankIcon_Small2::Img_Rank_DanProjection' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Img_Rank_DanIcon) == 0x000638, "Member 'UPyWidget_RankIcon_Small2::Img_Rank_DanIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small2, Text_SmallDan) == 0x000640, "Member 'UPyWidget_RankIcon_Small2::Text_SmallDan' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_RankIcon_Small
// 0x0038 (0x0628 - 0x05F0)
class UPyWidget_RankIcon_Small final : public UPyMarvelUserWidget
{
public:
	bool                                          bUseSmallTexture;                                  // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSoftObjectPath>                Tex2D_Rank_Frame_List;                             // 0x05F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSlateColor>                    Color_Rank_Frame_List;                             // 0x0600(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UImage*                                 Img_Rank_DanFrame;                                 // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 Img_Rank_DanIcon;                                  // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelTextBlock*                       Text_SmallDan;                                     // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RankIcon_Small">();
	}
	static class UPyWidget_RankIcon_Small* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RankIcon_Small>();
	}
};
static_assert(alignof(UPyWidget_RankIcon_Small) == 0x000008, "Wrong alignment on UPyWidget_RankIcon_Small");
static_assert(sizeof(UPyWidget_RankIcon_Small) == 0x000628, "Wrong size on UPyWidget_RankIcon_Small");
static_assert(offsetof(UPyWidget_RankIcon_Small, bUseSmallTexture) == 0x0005E9, "Member 'UPyWidget_RankIcon_Small::bUseSmallTexture' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small, Tex2D_Rank_Frame_List) == 0x0005F0, "Member 'UPyWidget_RankIcon_Small::Tex2D_Rank_Frame_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small, Color_Rank_Frame_List) == 0x000600, "Member 'UPyWidget_RankIcon_Small::Color_Rank_Frame_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small, Img_Rank_DanFrame) == 0x000610, "Member 'UPyWidget_RankIcon_Small::Img_Rank_DanFrame' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small, Img_Rank_DanIcon) == 0x000618, "Member 'UPyWidget_RankIcon_Small::Img_Rank_DanIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Small, Text_SmallDan) == 0x000620, "Member 'UPyWidget_RankIcon_Small::Text_SmallDan' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_RankIcon_Ranking
// 0x0020 (0x0610 - 0x05F0)
class UPyWidget_RankIcon_Ranking final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSlateColor>                    Color_Rank_Text_Outline_List;                      // 0x05F0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FMargin>                        Margin_Rank_Text_Offset_List;                      // 0x0600(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RankIcon_Ranking">();
	}
	static class UPyWidget_RankIcon_Ranking* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RankIcon_Ranking>();
	}
};
static_assert(alignof(UPyWidget_RankIcon_Ranking) == 0x000008, "Wrong alignment on UPyWidget_RankIcon_Ranking");
static_assert(sizeof(UPyWidget_RankIcon_Ranking) == 0x000610, "Wrong size on UPyWidget_RankIcon_Ranking");
static_assert(offsetof(UPyWidget_RankIcon_Ranking, Color_Rank_Text_Outline_List) == 0x0005F0, "Member 'UPyWidget_RankIcon_Ranking::Color_Rank_Text_Outline_List' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankIcon_Ranking, Margin_Rank_Text_Offset_List) == 0x000600, "Member 'UPyWidget_RankIcon_Ranking::Margin_Rank_Text_Offset_List' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_Settlement_RankUp_Icon_LiftingVX
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Settlement_RankUp_Icon_LiftingVX final : public UPyMarvelUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Settlement_RankUp_Icon_LiftingVX">();
	}
	static class UPyWidget_Settlement_RankUp_Icon_LiftingVX* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Settlement_RankUp_Icon_LiftingVX>();
	}
};
static_assert(alignof(UPyWidget_Settlement_RankUp_Icon_LiftingVX) == 0x000008, "Wrong alignment on UPyWidget_Settlement_RankUp_Icon_LiftingVX");
static_assert(sizeof(UPyWidget_Settlement_RankUp_Icon_LiftingVX) == 0x0005F0, "Wrong size on UPyWidget_Settlement_RankUp_Icon_LiftingVX");

// PythonClass PyWidget_RankInfo.PyWidget_RankInfo
// 0x0048 (0x0638 - 0x05F0)
class UPyWidget_RankInfo final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Margin_Normal_Rank;                                // 0x05EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                Margin_Top_Rank;                                   // 0x05FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          IsSimpleMode;                                      // 0x060C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            RankExperienceNormalColor;                         // 0x0610(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            RankExperienceHoverColor;                          // 0x0624(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_RankInfo">();
	}
	static class UPyWidget_RankInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_RankInfo>();
	}
};
static_assert(alignof(UPyWidget_RankInfo) == 0x000008, "Wrong alignment on UPyWidget_RankInfo");
static_assert(sizeof(UPyWidget_RankInfo) == 0x000638, "Wrong size on UPyWidget_RankInfo");
static_assert(offsetof(UPyWidget_RankInfo, Margin_Normal_Rank) == 0x0005EC, "Member 'UPyWidget_RankInfo::Margin_Normal_Rank' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankInfo, Margin_Top_Rank) == 0x0005FC, "Member 'UPyWidget_RankInfo::Margin_Top_Rank' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankInfo, IsSimpleMode) == 0x00060C, "Member 'UPyWidget_RankInfo::IsSimpleMode' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankInfo, RankExperienceNormalColor) == 0x000610, "Member 'UPyWidget_RankInfo::RankExperienceNormalColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_RankInfo, RankExperienceHoverColor) == 0x000624, "Member 'UPyWidget_RankInfo::RankExperienceHoverColor' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_Settlement_RankUp_Icon_VX
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Settlement_RankUp_Icon_VX final : public UPyMarvelUserWidget
{
public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Settlement_RankUp_Icon_VX">();
	}
	static class UPyWidget_Settlement_RankUp_Icon_VX* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Settlement_RankUp_Icon_VX>();
	}
};
static_assert(alignof(UPyWidget_Settlement_RankUp_Icon_VX) == 0x000008, "Wrong alignment on UPyWidget_Settlement_RankUp_Icon_VX");
static_assert(sizeof(UPyWidget_Settlement_RankUp_Icon_VX) == 0x0005F0, "Wrong size on UPyWidget_Settlement_RankUp_Icon_VX");

// PythonClass PyWidget_RankInfo.PyWidget_Settlement_RankUp_Star_Protection
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Settlement_RankUp_Star_Protection final : public UPyMarvelUserWidget
{
public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Settlement_RankUp_Star_Protection">();
	}
	static class UPyWidget_Settlement_RankUp_Star_Protection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Settlement_RankUp_Star_Protection>();
	}
};
static_assert(alignof(UPyWidget_Settlement_RankUp_Star_Protection) == 0x000008, "Wrong alignment on UPyWidget_Settlement_RankUp_Star_Protection");
static_assert(sizeof(UPyWidget_Settlement_RankUp_Star_Protection) == 0x0005F0, "Wrong size on UPyWidget_Settlement_RankUp_Star_Protection");

// PythonClass PyWidget_RankInfo.PyWidget_Settlement_Rank_Score_Bar
// 0x0050 (0x0640 - 0x05F0)
class UPyWidget_Settlement_Rank_Score_Bar final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color_Score_Non;                                   // 0x05EC(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Score_Add;                                   // 0x0600(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Score_Sub;                                   // 0x0614(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Score_Protected;                             // 0x0628(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void Construct();
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Settlement_Rank_Score_Bar">();
	}
	static class UPyWidget_Settlement_Rank_Score_Bar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Settlement_Rank_Score_Bar>();
	}
};
static_assert(alignof(UPyWidget_Settlement_Rank_Score_Bar) == 0x000008, "Wrong alignment on UPyWidget_Settlement_Rank_Score_Bar");
static_assert(sizeof(UPyWidget_Settlement_Rank_Score_Bar) == 0x000640, "Wrong size on UPyWidget_Settlement_Rank_Score_Bar");
static_assert(offsetof(UPyWidget_Settlement_Rank_Score_Bar, Color_Score_Non) == 0x0005EC, "Member 'UPyWidget_Settlement_Rank_Score_Bar::Color_Score_Non' has a wrong offset!");
static_assert(offsetof(UPyWidget_Settlement_Rank_Score_Bar, Color_Score_Add) == 0x000600, "Member 'UPyWidget_Settlement_Rank_Score_Bar::Color_Score_Add' has a wrong offset!");
static_assert(offsetof(UPyWidget_Settlement_Rank_Score_Bar, Color_Score_Sub) == 0x000614, "Member 'UPyWidget_Settlement_Rank_Score_Bar::Color_Score_Sub' has a wrong offset!");
static_assert(offsetof(UPyWidget_Settlement_Rank_Score_Bar, Color_Score_Protected) == 0x000628, "Member 'UPyWidget_Settlement_Rank_Score_Bar::Color_Score_Protected' has a wrong offset!");

// PythonClass PyWidget_RankInfo.PyWidget_Settlement_Rank_Protection
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Settlement_Rank_Protection final : public UPyMarvelUserWidget
{
public:
	void Construct();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Settlement_Rank_Protection">();
	}
	static class UPyWidget_Settlement_Rank_Protection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Settlement_Rank_Protection>();
	}
};
static_assert(alignof(UPyWidget_Settlement_Rank_Protection) == 0x000008, "Wrong alignment on UPyWidget_Settlement_Rank_Protection");
static_assert(sizeof(UPyWidget_Settlement_Rank_Protection) == 0x0005F0, "Wrong size on UPyWidget_Settlement_Rank_Protection");

}


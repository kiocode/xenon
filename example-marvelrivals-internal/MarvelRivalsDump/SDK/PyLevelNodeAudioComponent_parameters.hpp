#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelNodeAudioComponent

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PyLevelNodeAudioComponent_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelNodeAudioComponent_ReceiveEndPlay) == 0x000001, "Wrong alignment on PyLevelNodeAudioComponent_ReceiveEndPlay");
static_assert(sizeof(PyLevelNodeAudioComponent_ReceiveEndPlay) == 0x000001, "Wrong size on PyLevelNodeAudioComponent_ReceiveEndPlay");
static_assert(offsetof(PyLevelNodeAudioComponent_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PyLevelNodeAudioComponent_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAmbientSound
// 0x0050 (0x0050 - 0x0000)
struct PyLevelNodeAudioComponent_PlayAmbientSound final
{
public:
	class FString                                 InstanceName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NodeName;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           AudioEvent;                                        // 0x0020(0x0030)(Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelNodeAudioComponent_PlayAmbientSound) == 0x000008, "Wrong alignment on PyLevelNodeAudioComponent_PlayAmbientSound");
static_assert(sizeof(PyLevelNodeAudioComponent_PlayAmbientSound) == 0x000050, "Wrong size on PyLevelNodeAudioComponent_PlayAmbientSound");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAmbientSound, InstanceName) == 0x000000, "Member 'PyLevelNodeAudioComponent_PlayAmbientSound::InstanceName' has a wrong offset!");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAmbientSound, NodeName) == 0x000010, "Member 'PyLevelNodeAudioComponent_PlayAmbientSound::NodeName' has a wrong offset!");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAmbientSound, AudioEvent) == 0x000020, "Member 'PyLevelNodeAudioComponent_PlayAmbientSound::AudioEvent' has a wrong offset!");

// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAudioByID
// 0x0020 (0x0020 - 0x0000)
struct PyLevelNodeAudioComponent_PlayAudioByID final
{
public:
	class FString                                 InstanceName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 VoiceIDList;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyLevelNodeAudioComponent_PlayAudioByID) == 0x000008, "Wrong alignment on PyLevelNodeAudioComponent_PlayAudioByID");
static_assert(sizeof(PyLevelNodeAudioComponent_PlayAudioByID) == 0x000020, "Wrong size on PyLevelNodeAudioComponent_PlayAudioByID");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByID, InstanceName) == 0x000000, "Member 'PyLevelNodeAudioComponent_PlayAudioByID::InstanceName' has a wrong offset!");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByID, VoiceIDList) == 0x000010, "Member 'PyLevelNodeAudioComponent_PlayAudioByID::VoiceIDList' has a wrong offset!");

// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAudioByIDAndBattleSide
// 0x0028 (0x0028 - 0x0000)
struct PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide final
{
public:
	class FString                                 InstanceName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 VoiceIDList;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
	EBattleSide                                   BattleSide;                                        // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide) == 0x000008, "Wrong alignment on PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide");
static_assert(sizeof(PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide) == 0x000028, "Wrong size on PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide, InstanceName) == 0x000000, "Member 'PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide::InstanceName' has a wrong offset!");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide, VoiceIDList) == 0x000010, "Member 'PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide::VoiceIDList' has a wrong offset!");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide, BattleSide) == 0x000020, "Member 'PyLevelNodeAudioComponent_PlayAudioByIDAndBattleSide::BattleSide' has a wrong offset!");

// PythonFunction PyLevelNodeAudioComponent.PyLevelNodeAudioComponent.PlayAudioByEvent
// 0x0018 (0x0018 - 0x0000)
struct PyLevelNodeAudioComponent_PlayAudioByEvent final
{
public:
	class FString                                 InstanceName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AudioEvent;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyLevelNodeAudioComponent_PlayAudioByEvent) == 0x000008, "Wrong alignment on PyLevelNodeAudioComponent_PlayAudioByEvent");
static_assert(sizeof(PyLevelNodeAudioComponent_PlayAudioByEvent) == 0x000018, "Wrong size on PyLevelNodeAudioComponent_PlayAudioByEvent");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByEvent, InstanceName) == 0x000000, "Member 'PyLevelNodeAudioComponent_PlayAudioByEvent::InstanceName' has a wrong offset!");
static_assert(offsetof(PyLevelNodeAudioComponent_PlayAudioByEvent, AudioEvent) == 0x000010, "Member 'PyLevelNodeAudioComponent_PlayAudioByEvent::AudioEvent' has a wrong offset!");

}


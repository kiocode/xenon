#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104011

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Marvel_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_104011.PyCue_Ability_Loop_10401101.WhileActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10401101_WhileActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10401101_WhileActiveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10401101_WhileActiveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10401101_WhileActiveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10401101_WhileActiveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10401101_WhileActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10401101_WhileActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10401101_WhileActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10401101_WhileActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104011.PyCue_Ability_Loop_10401101.OnRemoveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10401101_OnRemoveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10401101_OnRemoveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10401101_OnRemoveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10401101_OnRemoveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10401101_OnRemoveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10401101_OnRemoveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10401101_OnRemoveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10401101_OnRemoveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10401101_OnRemoveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104011.PyCue_Ability_Instant_10401101.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Instant_10401101_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameter;                                         // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Instant_10401101_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_Ability_Instant_10401101_OnExecuteFX");
static_assert(sizeof(PyCue_Ability_Instant_10401101_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_Ability_Instant_10401101_OnExecuteFX");
static_assert(offsetof(PyCue_Ability_Instant_10401101_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_Ability_Instant_10401101_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Instant_10401101_OnExecuteFX, Parameter) == 0x000008, "Member 'PyCue_Ability_Instant_10401101_OnExecuteFX::Parameter' has a wrong offset!");

// DelegateFunction PyAbility_104011.PyAbility_104011.AbilityHitDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_104011_AbilityHitDispatcher__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComp_0;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_AbilityHitDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyAbility_104011_AbilityHitDispatcher__DelegateSignature");
static_assert(sizeof(PyAbility_104011_AbilityHitDispatcher__DelegateSignature) == 0x000008, "Wrong size on PyAbility_104011_AbilityHitDispatcher__DelegateSignature");
static_assert(offsetof(PyAbility_104011_AbilityHitDispatcher__DelegateSignature, HitComp_0) == 0x000000, "Member 'PyAbility_104011_AbilityHitDispatcher__DelegateSignature::HitComp_0' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.OnApplyDamage
// 0x0028 (0x0028 - 0x0000)
struct PyAbility_104011_OnApplyDamage final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               Parameter;                                         // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_OnApplyDamage) == 0x000008, "Wrong alignment on PyAbility_104011_OnApplyDamage");
static_assert(sizeof(PyAbility_104011_OnApplyDamage) == 0x000028, "Wrong size on PyAbility_104011_OnApplyDamage");
static_assert(offsetof(PyAbility_104011_OnApplyDamage, InSourceAvatar) == 0x000000, "Member 'PyAbility_104011_OnApplyDamage::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyAbility_104011_OnApplyDamage, InTargetAvatar) == 0x000008, "Member 'PyAbility_104011_OnApplyDamage::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyAbility_104011_OnApplyDamage, Parameter) == 0x000010, "Member 'PyAbility_104011_OnApplyDamage::Parameter' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104011_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_CanActivate) == 0x000001, "Wrong alignment on PyAbility_104011_CanActivate");
static_assert(sizeof(PyAbility_104011_CanActivate) == 0x000001, "Wrong size on PyAbility_104011_CanActivate");
static_assert(offsetof(PyAbility_104011_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_104011_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.OnAbilityHit
// 0x0018 (0x0018 - 0x0000)
struct PyAbility_104011_OnAbilityHit final
{
public:
	class UGameplayAbility*                       Ability;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     Result;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104011_OnAbilityHit) == 0x000008, "Wrong alignment on PyAbility_104011_OnAbilityHit");
static_assert(sizeof(PyAbility_104011_OnAbilityHit) == 0x000018, "Wrong size on PyAbility_104011_OnAbilityHit");
static_assert(offsetof(PyAbility_104011_OnAbilityHit, Ability) == 0x000000, "Member 'PyAbility_104011_OnAbilityHit::Ability' has a wrong offset!");
static_assert(offsetof(PyAbility_104011_OnAbilityHit, Result) == 0x000008, "Member 'PyAbility_104011_OnAbilityHit::Result' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104011_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_104011_K2_OnEndAbility");
static_assert(sizeof(PyAbility_104011_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_104011_K2_OnEndAbility");
static_assert(offsetof(PyAbility_104011_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_104011_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104011_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_104011_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_104011_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_104011_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_104011_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_104011_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.NativeOnMontageBlendOut
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104011_NativeOnMontageBlendOut final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_NativeOnMontageBlendOut) == 0x000008, "Wrong alignment on PyAbility_104011_NativeOnMontageBlendOut");
static_assert(sizeof(PyAbility_104011_NativeOnMontageBlendOut) == 0x000010, "Wrong size on PyAbility_104011_NativeOnMontageBlendOut");
static_assert(offsetof(PyAbility_104011_NativeOnMontageBlendOut, Tag) == 0x000000, "Member 'PyAbility_104011_NativeOnMontageBlendOut::Tag' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104011_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_104011_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_104011_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_104011_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_104011_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_104011_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_104011.PyAbility_104011.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104011_NativeOnMontageCancelled final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104011_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_104011_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_104011_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_104011_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_104011_NativeOnMontageCancelled, Tag) == 0x000000, "Member 'PyAbility_104011_NativeOnMontageCancelled::Tag' has a wrong offset!");

// PythonFunction PyAbility_104011.PyCue_Scope_HitImpact_10401101.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_HitImpact_10401101_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_HitImpact_10401101_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_Scope_HitImpact_10401101_OnExecuteFX");
static_assert(sizeof(PyCue_Scope_HitImpact_10401101_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_Scope_HitImpact_10401101_OnExecuteFX");
static_assert(offsetof(PyCue_Scope_HitImpact_10401101_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_HitImpact_10401101_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_HitImpact_10401101_OnExecuteFX, Parameters) == 0x000008, "Member 'PyCue_Scope_HitImpact_10401101_OnExecuteFX::Parameters' has a wrong offset!");

}


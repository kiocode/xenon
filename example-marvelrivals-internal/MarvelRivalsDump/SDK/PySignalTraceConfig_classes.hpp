#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PySignalTraceConfig

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PySignalTraceConfig.PyThroughWallTraceConfig
// 0x0108 (0x0140 - 0x0038)
class UPyThroughWallTraceConfig final : public UPrimaryDataAsset
{
public:
	struct FGameplayTagContainer                  WallHackByInstigatorTags;                          // 0x0038(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                 HeroIDs;                                           // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WallHackAllTag;                                    // 0x00B0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WallHackPairSourceTag;                             // 0x00BC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           WallHackPairTargetTag;                             // 0x00C8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  NotVisibleTag;                                     // 0x00D8(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyThroughWallTraceConfig">();
	}
	static class UPyThroughWallTraceConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyThroughWallTraceConfig>();
	}
};
static_assert(alignof(UPyThroughWallTraceConfig) == 0x000008, "Wrong alignment on UPyThroughWallTraceConfig");
static_assert(sizeof(UPyThroughWallTraceConfig) == 0x000140, "Wrong size on UPyThroughWallTraceConfig");
static_assert(offsetof(UPyThroughWallTraceConfig, WallHackByInstigatorTags) == 0x000038, "Member 'UPyThroughWallTraceConfig::WallHackByInstigatorTags' has a wrong offset!");
static_assert(offsetof(UPyThroughWallTraceConfig, HeroIDs) == 0x0000A0, "Member 'UPyThroughWallTraceConfig::HeroIDs' has a wrong offset!");
static_assert(offsetof(UPyThroughWallTraceConfig, WallHackAllTag) == 0x0000B0, "Member 'UPyThroughWallTraceConfig::WallHackAllTag' has a wrong offset!");
static_assert(offsetof(UPyThroughWallTraceConfig, WallHackPairSourceTag) == 0x0000BC, "Member 'UPyThroughWallTraceConfig::WallHackPairSourceTag' has a wrong offset!");
static_assert(offsetof(UPyThroughWallTraceConfig, WallHackPairTargetTag) == 0x0000C8, "Member 'UPyThroughWallTraceConfig::WallHackPairTargetTag' has a wrong offset!");
static_assert(offsetof(UPyThroughWallTraceConfig, NotVisibleTag) == 0x0000D8, "Member 'UPyThroughWallTraceConfig::NotVisibleTag' has a wrong offset!");

// PythonClass PySignalTraceConfig.PyTeamSideTraceConfig
// 0x0008 (0x0040 - 0x0038)
class UPyTeamSideTraceConfig final : public UPrimaryDataAsset
{
public:
	bool                                          IsEnemy;                                           // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAlly;                                            // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTeamSideTraceConfig">();
	}
	static class UPyTeamSideTraceConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTeamSideTraceConfig>();
	}
};
static_assert(alignof(UPyTeamSideTraceConfig) == 0x000008, "Wrong alignment on UPyTeamSideTraceConfig");
static_assert(sizeof(UPyTeamSideTraceConfig) == 0x000040, "Wrong size on UPyTeamSideTraceConfig");
static_assert(offsetof(UPyTeamSideTraceConfig, IsEnemy) == 0x000038, "Member 'UPyTeamSideTraceConfig::IsEnemy' has a wrong offset!");
static_assert(offsetof(UPyTeamSideTraceConfig, IsAlly) == 0x000039, "Member 'UPyTeamSideTraceConfig::IsAlly' has a wrong offset!");

}


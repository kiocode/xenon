#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyBattlePanel

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyBattlePanel.PyBattlePanel.ShouldEnableInput
// 0x0001 (0x0001 - 0x0000)
struct PyBattlePanel_ShouldEnableInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBattlePanel_ShouldEnableInput) == 0x000001, "Wrong alignment on PyBattlePanel_ShouldEnableInput");
static_assert(sizeof(PyBattlePanel_ShouldEnableInput) == 0x000001, "Wrong size on PyBattlePanel_ShouldEnableInput");
static_assert(offsetof(PyBattlePanel_ShouldEnableInput, ReturnValue) == 0x000000, "Member 'PyBattlePanel_ShouldEnableInput::ReturnValue' has a wrong offset!");

// PythonFunction PyBattlePanel.PyBattlePanel.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyBattlePanel_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBattlePanel_MarvelSetVisible) == 0x000001, "Wrong alignment on PyBattlePanel_MarvelSetVisible");
static_assert(sizeof(PyBattlePanel_MarvelSetVisible) == 0x000001, "Wrong size on PyBattlePanel_MarvelSetVisible");
static_assert(offsetof(PyBattlePanel_MarvelSetVisible, Visible) == 0x000000, "Member 'PyBattlePanel_MarvelSetVisible::Visible' has a wrong offset!");

// PythonFunction PyBattlePanel.PyBattlePanel.AddHPWidget_LeftBottom
// 0x0010 (0x0010 - 0x0000)
struct PyBattlePanel_AddHPWidget_LeftBottom final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority_0;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBattlePanel_AddHPWidget_LeftBottom) == 0x000008, "Wrong alignment on PyBattlePanel_AddHPWidget_LeftBottom");
static_assert(sizeof(PyBattlePanel_AddHPWidget_LeftBottom) == 0x000010, "Wrong size on PyBattlePanel_AddHPWidget_LeftBottom");
static_assert(offsetof(PyBattlePanel_AddHPWidget_LeftBottom, Content) == 0x000000, "Member 'PyBattlePanel_AddHPWidget_LeftBottom::Content' has a wrong offset!");
static_assert(offsetof(PyBattlePanel_AddHPWidget_LeftBottom, Priority_0) == 0x000008, "Member 'PyBattlePanel_AddHPWidget_LeftBottom::Priority_0' has a wrong offset!");

// PythonFunction PyBattlePanel.PyBattlePanel.AddNumWidget_LeftBottom
// 0x0010 (0x0010 - 0x0000)
struct PyBattlePanel_AddNumWidget_LeftBottom final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority_0;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBattlePanel_AddNumWidget_LeftBottom) == 0x000008, "Wrong alignment on PyBattlePanel_AddNumWidget_LeftBottom");
static_assert(sizeof(PyBattlePanel_AddNumWidget_LeftBottom) == 0x000010, "Wrong size on PyBattlePanel_AddNumWidget_LeftBottom");
static_assert(offsetof(PyBattlePanel_AddNumWidget_LeftBottom, Content) == 0x000000, "Member 'PyBattlePanel_AddNumWidget_LeftBottom::Content' has a wrong offset!");
static_assert(offsetof(PyBattlePanel_AddNumWidget_LeftBottom, Priority_0) == 0x000008, "Member 'PyBattlePanel_AddNumWidget_LeftBottom::Priority_0' has a wrong offset!");

// PythonFunction PyBattlePanel.PyBattlePanel.GetAbilityStatusPanel
// 0x0008 (0x0008 - 0x0000)
struct PyBattlePanel_GetAbilityStatusPanel final
{
public:
	class UWidget_AbilityStatusPanel*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBattlePanel_GetAbilityStatusPanel) == 0x000008, "Wrong alignment on PyBattlePanel_GetAbilityStatusPanel");
static_assert(sizeof(PyBattlePanel_GetAbilityStatusPanel) == 0x000008, "Wrong size on PyBattlePanel_GetAbilityStatusPanel");
static_assert(offsetof(PyBattlePanel_GetAbilityStatusPanel, ReturnValue) == 0x000000, "Member 'PyBattlePanel_GetAbilityStatusPanel::ReturnValue' has a wrong offset!");

// PythonFunction PyBattlePanel.PyUIGameFunctionLibraray.GetAbilityStatusPanel
// 0x0008 (0x0008 - 0x0000)
struct PyUIGameFunctionLibraray_GetAbilityStatusPanel final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIGameFunctionLibraray_GetAbilityStatusPanel) == 0x000008, "Wrong alignment on PyUIGameFunctionLibraray_GetAbilityStatusPanel");
static_assert(sizeof(PyUIGameFunctionLibraray_GetAbilityStatusPanel) == 0x000008, "Wrong size on PyUIGameFunctionLibraray_GetAbilityStatusPanel");
static_assert(offsetof(PyUIGameFunctionLibraray_GetAbilityStatusPanel, ReturnValue) == 0x000000, "Member 'PyUIGameFunctionLibraray_GetAbilityStatusPanel::ReturnValue' has a wrong offset!");

// PythonFunction PyBattlePanel.PyUIGameFunctionLibraray.AddHitIndicator
// 0x01C8 (0x01C8 - 0x0000)
struct PyUIGameFunctionLibraray_AddHitIndicator final
{
public:
	const class UMarvelCueNotify_HitImpact*       Cue;                                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameter;                                         // 0x0010(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyUIGameFunctionLibraray_AddHitIndicator) == 0x000008, "Wrong alignment on PyUIGameFunctionLibraray_AddHitIndicator");
static_assert(sizeof(PyUIGameFunctionLibraray_AddHitIndicator) == 0x0001C8, "Wrong size on PyUIGameFunctionLibraray_AddHitIndicator");
static_assert(offsetof(PyUIGameFunctionLibraray_AddHitIndicator, Cue) == 0x000000, "Member 'PyUIGameFunctionLibraray_AddHitIndicator::Cue' has a wrong offset!");
static_assert(offsetof(PyUIGameFunctionLibraray_AddHitIndicator, MyTarget) == 0x000008, "Member 'PyUIGameFunctionLibraray_AddHitIndicator::MyTarget' has a wrong offset!");
static_assert(offsetof(PyUIGameFunctionLibraray_AddHitIndicator, Parameter) == 0x000010, "Member 'PyUIGameFunctionLibraray_AddHitIndicator::Parameter' has a wrong offset!");

// PythonFunction PyBattlePanel.PyUIGameFunctionLibraray.PlayShakeAnim
// 0x0001 (0x0001 - 0x0000)
struct PyUIGameFunctionLibraray_PlayShakeAnim final
{
public:
	EMarvelAbilityUIHudAnim                       Anim_style;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIGameFunctionLibraray_PlayShakeAnim) == 0x000001, "Wrong alignment on PyUIGameFunctionLibraray_PlayShakeAnim");
static_assert(sizeof(PyUIGameFunctionLibraray_PlayShakeAnim) == 0x000001, "Wrong size on PyUIGameFunctionLibraray_PlayShakeAnim");
static_assert(offsetof(PyUIGameFunctionLibraray_PlayShakeAnim, Anim_style) == 0x000000, "Member 'PyUIGameFunctionLibraray_PlayShakeAnim::Anim_style' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AntiAliasingAndSuperSamplingLogic

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntrySSQualityOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntrySSQualityOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& Setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntrySSQualityOptionsGenerator">();
	}
	static class UUISettingEntrySSQualityOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntrySSQualityOptionsGenerator>();
	}
};
//static_assert(alignof(UUISettingEntrySSQualityOptionsGenerator) == 0x000008, "Wrong alignment on UUISettingEntrySSQualityOptionsGenerator");
//static_assert(sizeof(UUISettingEntrySSQualityOptionsGenerator) == 0x000030, "Wrong size on UUISettingEntrySSQualityOptionsGenerator");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntryAntiAliasingHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryAntiAliasingHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryAntiAliasingHandler">();
	}
	static class UUISettingEntryAntiAliasingHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryAntiAliasingHandler>();
	}
};
//static_assert(alignof(UUISettingEntryAntiAliasingHandler) == 0x000008, "Wrong alignment on UUISettingEntryAntiAliasingHandler");
//static_assert(sizeof(UUISettingEntryAntiAliasingHandler) == 0x000030, "Wrong size on UUISettingEntryAntiAliasingHandler");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntryAntiAliasingOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryAntiAliasingOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& Setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryAntiAliasingOptionsGenerator">();
	}
	static class UUISettingEntryAntiAliasingOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryAntiAliasingOptionsGenerator>();
	}
};
//static_assert(alignof(UUISettingEntryAntiAliasingOptionsGenerator) == 0x000008, "Wrong alignment on UUISettingEntryAntiAliasingOptionsGenerator");
//static_assert(sizeof(UUISettingEntryAntiAliasingOptionsGenerator) == 0x000030, "Wrong size on UUISettingEntryAntiAliasingOptionsGenerator");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntrySSQualityHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntrySSQualityHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntrySSQualityHandler">();
	}
	static class UUISettingEntrySSQualityHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntrySSQualityHandler>();
	}
};
//static_assert(alignof(UUISettingEntrySSQualityHandler) == 0x000008, "Wrong alignment on UUISettingEntrySSQualityHandler");
//static_assert(sizeof(UUISettingEntrySSQualityHandler) == 0x000030, "Wrong size on UUISettingEntrySSQualityHandler");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntryCASSharpnessHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryCASSharpnessHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	float BP_GetDefaultValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryCASSharpnessHandler">();
	}
	static class UUISettingEntryCASSharpnessHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryCASSharpnessHandler>();
	}
};
//static_assert(alignof(UUISettingEntryCASSharpnessHandler) == 0x000008, "Wrong alignment on UUISettingEntryCASSharpnessHandler");
//static_assert(sizeof(UUISettingEntryCASSharpnessHandler) == 0x000030, "Wrong size on UUISettingEntryCASSharpnessHandler");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntryFrameGenerationHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryFrameGenerationHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryFrameGenerationHandler">();
	}
	static class UUISettingEntryFrameGenerationHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryFrameGenerationHandler>();
	}
};
//static_assert(alignof(UUISettingEntryFrameGenerationHandler) == 0x000008, "Wrong alignment on UUISettingEntryFrameGenerationHandler");
//static_assert(sizeof(UUISettingEntryFrameGenerationHandler) == 0x000030, "Wrong size on UUISettingEntryFrameGenerationHandler");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntryScreenPercentageHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryScreenPercentageHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	float BP_GetDefaultValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryScreenPercentageHandler">();
	}
	static class UUISettingEntryScreenPercentageHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryScreenPercentageHandler>();
	}
};
//static_assert(alignof(UUISettingEntryScreenPercentageHandler) == 0x000008, "Wrong alignment on UUISettingEntryScreenPercentageHandler");
//static_assert(sizeof(UUISettingEntryScreenPercentageHandler) == 0x000030, "Wrong size on UUISettingEntryScreenPercentageHandler");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISettingEntryFrameGenerationOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryFrameGenerationOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& Setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryFrameGenerationOptionsGenerator">();
	}
	static class UUISettingEntryFrameGenerationOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryFrameGenerationOptionsGenerator>();
	}
};
//static_assert(alignof(UUISettingEntryFrameGenerationOptionsGenerator) == 0x000008, "Wrong alignment on UUISettingEntryFrameGenerationOptionsGenerator");
//static_assert(sizeof(UUISettingEntryFrameGenerationOptionsGenerator) == 0x000030, "Wrong size on UUISettingEntryFrameGenerationOptionsGenerator");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISetingentryLowLatencyModeOptionsGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISetingentryLowLatencyModeOptionsGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& Setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISetingentryLowLatencyModeOptionsGenerator">();
	}
	static class UUISetingentryLowLatencyModeOptionsGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISetingentryLowLatencyModeOptionsGenerator>();
	}
};
//static_assert(alignof(UUISetingentryLowLatencyModeOptionsGenerator) == 0x000008, "Wrong alignment on UUISetingentryLowLatencyModeOptionsGenerator");
//static_assert(sizeof(UUISetingentryLowLatencyModeOptionsGenerator) == 0x000030, "Wrong size on UUISetingentryLowLatencyModeOptionsGenerator");

// PythonClass AntiAliasingAndSuperSamplingLogic.UISetingentryLowLatencyModeHandler
// 0x0000 (0x0030 - 0x0030)
class UUISetingentryLowLatencyModeHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISetingentryLowLatencyModeHandler">();
	}
	static class UUISetingentryLowLatencyModeHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISetingentryLowLatencyModeHandler>();
	}
};
//static_assert(alignof(UUISetingentryLowLatencyModeHandler) == 0x000008, "Wrong alignment on UUISetingentryLowLatencyModeHandler");
//static_assert(sizeof(UUISetingentryLowLatencyModeHandler) == 0x000030, "Wrong size on UUISetingentryLowLatencyModeHandler");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyPayloadTrace

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PyPayloadTrace.PyPayloadTrace
// 0x00E0 (0x0570 - 0x0490)
class APyPayloadTrace final : public AActor
{
public:
	class FString                                 RealName;                                          // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APyActorEventPoint*>             EventPoint;                                        // 0x04A0(0x0010)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FEventPointConfig>              ActivePoints;                                      // 0x04B0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FEventPointList>           MultiActivePoints;                                 // 0x04C0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FEventPointConfig>              EventPoints;                                       // 0x0510(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FEventPointList>           MultiRound;                                        // 0x0520(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void PyConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyPayloadTrace">();
	}
	static class APyPayloadTrace* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyPayloadTrace>();
	}
};
static_assert(alignof(APyPayloadTrace) == 0x000008, "Wrong alignment on APyPayloadTrace");
static_assert(sizeof(APyPayloadTrace) == 0x000570, "Wrong size on APyPayloadTrace");
static_assert(offsetof(APyPayloadTrace, RealName) == 0x000490, "Member 'APyPayloadTrace::RealName' has a wrong offset!");
static_assert(offsetof(APyPayloadTrace, EventPoint) == 0x0004A0, "Member 'APyPayloadTrace::EventPoint' has a wrong offset!");
static_assert(offsetof(APyPayloadTrace, ActivePoints) == 0x0004B0, "Member 'APyPayloadTrace::ActivePoints' has a wrong offset!");
static_assert(offsetof(APyPayloadTrace, MultiActivePoints) == 0x0004C0, "Member 'APyPayloadTrace::MultiActivePoints' has a wrong offset!");
static_assert(offsetof(APyPayloadTrace, EventPoints) == 0x000510, "Member 'APyPayloadTrace::EventPoints' has a wrong offset!");
static_assert(offsetof(APyPayloadTrace, MultiRound) == 0x000520, "Member 'APyPayloadTrace::MultiRound' has a wrong offset!");

}


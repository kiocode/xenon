#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103323

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103323.PyWidget_Reticle_103323.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Reticle_103323_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Reticle_103323_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_Reticle_103323_OnAnimationFinished");
static_assert(sizeof(PyWidget_Reticle_103323_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_Reticle_103323_OnAnimationFinished");
static_assert(offsetof(PyWidget_Reticle_103323_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_Reticle_103323_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyAbility_103323.PyAbility_103323.GetCurrentTimelineIndex
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_103323_GetCurrentTimelineIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103323_GetCurrentTimelineIndex) == 0x000004, "Wrong alignment on PyAbility_103323_GetCurrentTimelineIndex");
static_assert(sizeof(PyAbility_103323_GetCurrentTimelineIndex) == 0x000004, "Wrong size on PyAbility_103323_GetCurrentTimelineIndex");
static_assert(offsetof(PyAbility_103323_GetCurrentTimelineIndex, ReturnValue) == 0x000000, "Member 'PyAbility_103323_GetCurrentTimelineIndex::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103323.PyAbility_103323.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103323_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103323_CanActivate) == 0x000001, "Wrong alignment on PyAbility_103323_CanActivate");
static_assert(sizeof(PyAbility_103323_CanActivate) == 0x000001, "Wrong size on PyAbility_103323_CanActivate");
static_assert(offsetof(PyAbility_103323_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_103323_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103323.PyProjectile_10332301.K2_OnProcessHit
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10332301_K2_OnProcessHit final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10332301_K2_OnProcessHit) == 0x000008, "Wrong alignment on PyProjectile_10332301_K2_OnProcessHit");
static_assert(sizeof(PyProjectile_10332301_K2_OnProcessHit) == 0x000170, "Wrong size on PyProjectile_10332301_K2_OnProcessHit");
static_assert(offsetof(PyProjectile_10332301_K2_OnProcessHit, ImpactResult) == 0x000000, "Member 'PyProjectile_10332301_K2_OnProcessHit::ImpactResult' has a wrong offset!");

// PythonFunction PyAbility_103323.PyUIController_103323.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_103323_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_103323_SetAbility) == 0x000008, "Wrong alignment on PyUIController_103323_SetAbility");
static_assert(sizeof(PyUIController_103323_SetAbility) == 0x000010, "Wrong size on PyUIController_103323_SetAbility");
static_assert(offsetof(PyUIController_103323_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_103323_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_103323_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_103323_SetAbility::InAbility' has a wrong offset!");

}


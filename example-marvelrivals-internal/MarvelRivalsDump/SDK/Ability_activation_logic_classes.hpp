#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_activation_logic

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "MarvelAI_structs.hpp"
#include "MarvelAI_classes.hpp"


namespace SDK
{

// PythonClass ability_activation_logic.PyAIAbilityActivationLogicBase
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivationLogicBase : public UAIAbilityActivationLogic
{
public:
	bool BeginLogic(class UAIAbilityExecutor* OwnerExecutor, const struct FAIAbilityUsage& AbilityUsage, class AMarvelAIController* Controller);
	bool TickLogic(class UAIAbilityExecutor* OwnerExecutor, const struct FAIAbilityUsage& AbilityUsage, class AMarvelAIController* Controller, float DeltaTime);
	bool EndLogic(class UAIAbilityExecutor* OwnerExecutor, const struct FAIAbilityUsage& AbilityUsage, class AMarvelAIController* Controller);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivationLogicBase">();
	}
	static class UPyAIAbilityActivationLogicBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivationLogicBase>();
	}
};
//static_assert(alignof(UPyAIAbilityActivationLogicBase) == 0x000008, "Wrong alignment on UPyAIAbilityActivationLogicBase");
//static_assert(sizeof(UPyAIAbilityActivationLogicBase) == 0x000038, "Wrong size on UPyAIAbilityActivationLogicBase");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckAndChangeAbility
// 0x0008 (0x0040 - 0x0038)
class UPyAIAbilityActivation_CheckAndChangeAbility : public UPyAIAbilityActivationLogicBase
{
public:
	EAbilityInputBinds                            Button;                                            // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbilityID;                                         // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckAndChangeAbility">();
	}
	static class UPyAIAbilityActivation_CheckAndChangeAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckAndChangeAbility>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckAndChangeAbility) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckAndChangeAbility");
//static_assert(sizeof(UPyAIAbilityActivation_CheckAndChangeAbility) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckAndChangeAbility");
//static_assert(offsetof(UPyAIAbilityActivation_CheckAndChangeAbility, Button) == 0x000038, "Member 'UPyAIAbilityActivation_CheckAndChangeAbility::Button' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_CheckAndChangeAbility, AbilityID) == 0x00003C, "Member 'UPyAIAbilityActivation_CheckAndChangeAbility::AbilityID' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_DebugLog
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_DebugLog final : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_DebugLog">();
	}
	static class UPyAIAbilityActivation_DebugLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_DebugLog>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_DebugLog) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_DebugLog");
//static_assert(sizeof(UPyAIAbilityActivation_DebugLog) == 0x000038, "Wrong size on UPyAIAbilityActivation_DebugLog");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckAndChangeButton
// 0x0008 (0x0040 - 0x0038)
#pragma pack(push, 0x1)
class alignas(0x08) UPyAIAbilityActivation_CheckAndChangeButton : public UPyAIAbilityActivationLogicBase
{
public:
	EAbilityInputBinds                            Button;                                            // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckAndChangeButton">();
	}
	static class UPyAIAbilityActivation_CheckAndChangeButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckAndChangeButton>();
	}
};
#pragma pack(pop)
//static_assert(alignof(UPyAIAbilityActivation_CheckAndChangeButton) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckAndChangeButton");
//static_assert(sizeof(UPyAIAbilityActivation_CheckAndChangeButton) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckAndChangeButton");
//static_assert(offsetof(UPyAIAbilityActivation_CheckAndChangeButton, Button) == 0x000038, "Member 'UPyAIAbilityActivation_CheckAndChangeButton::Button' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ChangeButtonIfNoEnemy
// 0x0008 (0x0048 - 0x0040)
class UPyAIAbilityActivation_ChangeButtonIfNoEnemy final : public UPyAIAbilityActivation_CheckAndChangeButton
{
public:
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRange_FloatValue                      CheckRadius;                                       // 0x003C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ChangeButtonIfNoEnemy">();
	}
	static class UPyAIAbilityActivation_ChangeButtonIfNoEnemy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ChangeButtonIfNoEnemy>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ChangeButtonIfNoEnemy) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ChangeButtonIfNoEnemy");
//static_assert(sizeof(UPyAIAbilityActivation_ChangeButtonIfNoEnemy) == 0x000048, "Wrong size on UPyAIAbilityActivation_ChangeButtonIfNoEnemy");
//static_assert(offsetof(UPyAIAbilityActivation_ChangeButtonIfNoEnemy, CheckRadius) == 0x00003C, "Member 'UPyAIAbilityActivation_ChangeButtonIfNoEnemy::CheckRadius' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn
// 0x0000 (0x0040 - 0x0040)
#pragma pack(push, 0x1)
class alignas(0x08) UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn : public UPyAIAbilityActivation_CheckAndChangeButton
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn">();
	}
	static class UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn>();
	}
};
#pragma pack(pop)
//static_assert(alignof(UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn");
//static_assert(sizeof(UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn) == 0x000040, "Wrong size on UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckAndChangeBindAnyButton
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_CheckAndChangeBindAnyButton : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckAndChangeBindAnyButton">();
	}
	static class UPyAIAbilityActivation_CheckAndChangeBindAnyButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckAndChangeBindAnyButton>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckAndChangeBindAnyButton) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckAndChangeBindAnyButton");
//static_assert(sizeof(UPyAIAbilityActivation_CheckAndChangeBindAnyButton) == 0x000038, "Wrong size on UPyAIAbilityActivation_CheckAndChangeBindAnyButton");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckAndChangeButtonWithAutoReset
// 0x0008 (0x0040 - 0x0038)
class UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset final : public UPyAIAbilityActivationLogicBase
{
public:
	EAbilityInputBinds                            Button;                                            // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckAndChangeButtonWithAutoReset">();
	}
	static class UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset");
//static_assert(sizeof(UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset");
//static_assert(offsetof(UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset, Button) == 0x000038, "Member 'UPyAIAbilityActivation_CheckAndChangeButtonWithAutoReset::Button' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ChangeButtonIfAbilityIsActivated
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated : public UPyAIAbilityActivation_CheckAndChangeButton
{
public:
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CheckAbilityID;                                    // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ChangeButtonIfAbilityIsActivated">();
	}
	static class UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated");
//static_assert(sizeof(UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated) == 0x000040, "Wrong size on UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated");
//static_assert(offsetof(UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated, CheckAbilityID) == 0x00003C, "Member 'UPyAIAbilityActivation_ChangeButtonIfAbilityIsActivated::CheckAbilityID' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ChangeAbilityIfAbilityInCD
// 0x0008 (0x0048 - 0x0040)
class UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD final : public UPyAIAbilityActivation_CheckAndChangeAbility
{
public:
	int32                                         CheckAbilityID;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ChangeAbilityIfAbilityInCD">();
	}
	static class UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD");
//static_assert(sizeof(UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD) == 0x000048, "Wrong size on UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD");
//static_assert(offsetof(UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD, CheckAbilityID) == 0x000040, "Member 'UPyAIAbilityActivation_ChangeAbilityIfAbilityInCD::CheckAbilityID' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_SetFocusAgain
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_SetFocusAgain final : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_SetFocusAgain">();
	}
	static class UPyAIAbilityActivation_SetFocusAgain* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_SetFocusAgain>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_SetFocusAgain) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_SetFocusAgain");
//static_assert(sizeof(UPyAIAbilityActivation_SetFocusAgain) == 0x000038, "Wrong size on UPyAIAbilityActivation_SetFocusAgain");

// PythonClass ability_activation_logic.PyAIAbilityActivation_AbortMove
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_AbortMove final : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_AbortMove">();
	}
	static class UPyAIAbilityActivation_AbortMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_AbortMove>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_AbortMove) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_AbortMove");
//static_assert(sizeof(UPyAIAbilityActivation_AbortMove) == 0x000038, "Wrong size on UPyAIAbilityActivation_AbortMove");

// PythonClass ability_activation_logic.PyAIAbilityActivation_AbortMoveWhenActive
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_AbortMoveWhenActive : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_AbortMoveWhenActive">();
	}
	static class UPyAIAbilityActivation_AbortMoveWhenActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_AbortMoveWhenActive>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_AbortMoveWhenActive) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_AbortMoveWhenActive");
//static_assert(sizeof(UPyAIAbilityActivation_AbortMoveWhenActive) == 0x000038, "Wrong size on UPyAIAbilityActivation_AbortMoveWhenActive");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ForbiddenRequestMoveForDuration
// 0x0008 (0x0040 - 0x0038)
class UPyAIAbilityActivation_ForbiddenRequestMoveForDuration final : public UPyAIAbilityActivationLogicBase
{
public:
	float                                         Duration;                                          // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ForbiddenRequestMoveForDuration">();
	}
	static class UPyAIAbilityActivation_ForbiddenRequestMoveForDuration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ForbiddenRequestMoveForDuration>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ForbiddenRequestMoveForDuration) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ForbiddenRequestMoveForDuration");
//static_assert(sizeof(UPyAIAbilityActivation_ForbiddenRequestMoveForDuration) == 0x000040, "Wrong size on UPyAIAbilityActivation_ForbiddenRequestMoveForDuration");
//static_assert(offsetof(UPyAIAbilityActivation_ForbiddenRequestMoveForDuration, Duration) == 0x000038, "Member 'UPyAIAbilityActivation_ForbiddenRequestMoveForDuration::Duration' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ForbiddenRequestMove
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_ForbiddenRequestMove : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ForbiddenRequestMove">();
	}
	static class UPyAIAbilityActivation_ForbiddenRequestMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ForbiddenRequestMove>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ForbiddenRequestMove) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ForbiddenRequestMove");
//static_assert(sizeof(UPyAIAbilityActivation_ForbiddenRequestMove) == 0x000038, "Wrong size on UPyAIAbilityActivation_ForbiddenRequestMove");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ForceEndMoveNode
// 0x0008 (0x0040 - 0x0038)
class UPyAIAbilityActivation_ForceEndMoveNode : public UPyAIAbilityActivationLogicBase
{
public:
	bool                                          bTriggerOnStageStart;                              // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnStageEnd;                                // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGeneralMoveToReturn;                              // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ForceEndMoveNode">();
	}
	static class UPyAIAbilityActivation_ForceEndMoveNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ForceEndMoveNode>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ForceEndMoveNode) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ForceEndMoveNode");
//static_assert(sizeof(UPyAIAbilityActivation_ForceEndMoveNode) == 0x000040, "Wrong size on UPyAIAbilityActivation_ForceEndMoveNode");
//static_assert(offsetof(UPyAIAbilityActivation_ForceEndMoveNode, bTriggerOnStageStart) == 0x000038, "Member 'UPyAIAbilityActivation_ForceEndMoveNode::bTriggerOnStageStart' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_ForceEndMoveNode, bTriggerOnStageEnd) == 0x000039, "Member 'UPyAIAbilityActivation_ForceEndMoveNode::bTriggerOnStageEnd' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_ForceEndMoveNode, bGeneralMoveToReturn) == 0x00003A, "Member 'UPyAIAbilityActivation_ForceEndMoveNode::bGeneralMoveToReturn' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_AddRecover
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_AddRecover final : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_AddRecover">();
	}
	static class UPyAIAbilityActivation_AddRecover* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_AddRecover>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_AddRecover) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_AddRecover");
//static_assert(sizeof(UPyAIAbilityActivation_AddRecover) == 0x000038, "Wrong size on UPyAIAbilityActivation_AddRecover");

// PythonClass ability_activation_logic.PyAIAbilityActivation_AddFocusResourceRequest
// 0x0010 (0x0048 - 0x0038)
class UPyAIAbilityActivation_AddFocusResourceRequest : public UPyAIAbilityActivationLogicBase
{
public:
	TSubclassOf<class UAISelectTargetLogicBase>   FocusControlLogicClass;                            // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIResourceConflictBehavior                   ConflictBehavior;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_AddFocusResourceRequest">();
	}
	static class UPyAIAbilityActivation_AddFocusResourceRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_AddFocusResourceRequest>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_AddFocusResourceRequest) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_AddFocusResourceRequest");
//static_assert(sizeof(UPyAIAbilityActivation_AddFocusResourceRequest) == 0x000048, "Wrong size on UPyAIAbilityActivation_AddFocusResourceRequest");
//static_assert(offsetof(UPyAIAbilityActivation_AddFocusResourceRequest, FocusControlLogicClass) == 0x000038, "Member 'UPyAIAbilityActivation_AddFocusResourceRequest::FocusControlLogicClass' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_AddFocusResourceRequest, ConflictBehavior) == 0x000040, "Member 'UPyAIAbilityActivation_AddFocusResourceRequest::ConflictBehavior' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_AddMoveResourceRequest
// 0x0010 (0x0048 - 0x0038)
class UPyAIAbilityActivation_AddMoveResourceRequest final : public UPyAIAbilityActivationLogicBase
{
public:
	TSubclassOf<class UAIMoveControlLogic>        MoveControlLogicClass;                             // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIResourceConflictBehavior                   ConflictBehavior;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_AddMoveResourceRequest">();
	}
	static class UPyAIAbilityActivation_AddMoveResourceRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_AddMoveResourceRequest>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_AddMoveResourceRequest) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_AddMoveResourceRequest");
//static_assert(sizeof(UPyAIAbilityActivation_AddMoveResourceRequest) == 0x000048, "Wrong size on UPyAIAbilityActivation_AddMoveResourceRequest");
//static_assert(offsetof(UPyAIAbilityActivation_AddMoveResourceRequest, MoveControlLogicClass) == 0x000038, "Member 'UPyAIAbilityActivation_AddMoveResourceRequest::MoveControlLogicClass' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_AddMoveResourceRequest, ConflictBehavior) == 0x000040, "Member 'UPyAIAbilityActivation_AddMoveResourceRequest::ConflictBehavior' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_DeleteFocusResourceRequest
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_DeleteFocusResourceRequest : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_DeleteFocusResourceRequest">();
	}
	static class UPyAIAbilityActivation_DeleteFocusResourceRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_DeleteFocusResourceRequest>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_DeleteFocusResourceRequest) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_DeleteFocusResourceRequest");
//static_assert(sizeof(UPyAIAbilityActivation_DeleteFocusResourceRequest) == 0x000038, "Wrong size on UPyAIAbilityActivation_DeleteFocusResourceRequest");

// PythonClass ability_activation_logic.PyAIAbilityActivation_DeleteMoveResourceRequest
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_DeleteMoveResourceRequest final : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_DeleteMoveResourceRequest">();
	}
	static class UPyAIAbilityActivation_DeleteMoveResourceRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_DeleteMoveResourceRequest>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_DeleteMoveResourceRequest) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_DeleteMoveResourceRequest");
//static_assert(sizeof(UPyAIAbilityActivation_DeleteMoveResourceRequest) == 0x000038, "Wrong size on UPyAIAbilityActivation_DeleteMoveResourceRequest");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelByPlaceConfig
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelByPlaceConfig : public UPyAIAbilityActivation_ChangeButtonIfCanNotPlacePawn
{
public:
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbilityID;                                         // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelByPlaceConfig">();
	}
	static class UPyAIAbilityActivation_CheckCancelByPlaceConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelByPlaceConfig>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelByPlaceConfig) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelByPlaceConfig");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelByPlaceConfig) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelByPlaceConfig");
//static_assert(offsetof(UPyAIAbilityActivation_CheckCancelByPlaceConfig, AbilityID) == 0x00003C, "Member 'UPyAIAbilityActivation_CheckCancelByPlaceConfig::AbilityID' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_ChangeButtonIfNoBuff
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_ChangeButtonIfNoBuff : public UPyAIAbilityActivation_CheckAndChangeButton
{
public:
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BuffID;                                            // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_ChangeButtonIfNoBuff">();
	}
	static class UPyAIAbilityActivation_ChangeButtonIfNoBuff* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_ChangeButtonIfNoBuff>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_ChangeButtonIfNoBuff) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_ChangeButtonIfNoBuff");
//static_assert(sizeof(UPyAIAbilityActivation_ChangeButtonIfNoBuff) == 0x000040, "Wrong size on UPyAIAbilityActivation_ChangeButtonIfNoBuff");
//static_assert(offsetof(UPyAIAbilityActivation_ChangeButtonIfNoBuff, BuffID) == 0x00003C, "Member 'UPyAIAbilityActivation_ChangeButtonIfNoBuff::BuffID' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelLokiPhantom
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelLokiPhantom : public UPyAIAbilityActivation_CheckCancelByPlaceConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelLokiPhantom">();
	}
	static class UPyAIAbilityActivation_CheckCancelLokiPhantom* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelLokiPhantom>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelLokiPhantom) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelLokiPhantom");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelLokiPhantom) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelLokiPhantom");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelGrootWoodWall
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelGrootWoodWall : public UPyAIAbilityActivation_CheckAndChangeButton
{
public:
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbilityID;                                         // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelGrootWoodWall">();
	}
	static class UPyAIAbilityActivation_CheckCancelGrootWoodWall* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelGrootWoodWall>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelGrootWoodWall) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelGrootWoodWall");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelGrootWoodWall) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelGrootWoodWall");
//static_assert(offsetof(UPyAIAbilityActivation_CheckCancelGrootWoodWall, AbilityID) == 0x00003C, "Member 'UPyAIAbilityActivation_CheckCancelGrootWoodWall::AbilityID' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelSpiderNest
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelSpiderNest : public UPyAIAbilityActivation_CheckCancelByPlaceConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelSpiderNest">();
	}
	static class UPyAIAbilityActivation_CheckCancelSpiderNest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelSpiderNest>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelSpiderNest) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelSpiderNest");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelSpiderNest) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelSpiderNest");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelRocketCosmicEnergy
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy : public UPyAIAbilityActivation_CheckCancelByPlaceConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelRocketCosmicEnergy">();
	}
	static class UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelRocketCosmicEnergy");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelNamorWhaleWave
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelNamorWhaleWave : public UPyAIAbilityActivation_CheckCancelByPlaceConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelNamorWhaleWave">();
	}
	static class UPyAIAbilityActivation_CheckCancelNamorWhaleWave* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelNamorWhaleWave>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelNamorWhaleWave) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelNamorWhaleWave");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelNamorWhaleWave) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelNamorWhaleWave");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelKhonshu
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelKhonshu : public UPyAIAbilityActivation_CheckCancelByPlaceConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelKhonshu">();
	}
	static class UPyAIAbilityActivation_CheckCancelKhonshu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelKhonshu>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelKhonshu) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelKhonshu");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelKhonshu) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelKhonshu");

// PythonClass ability_activation_logic.PyAIAbilityActivation_CheckCancelInvisibleForceField
// 0x0000 (0x0040 - 0x0040)
class UPyAIAbilityActivation_CheckCancelInvisibleForceField : public UPyAIAbilityActivation_CheckCancelByPlaceConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_CheckCancelInvisibleForceField">();
	}
	static class UPyAIAbilityActivation_CheckCancelInvisibleForceField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_CheckCancelInvisibleForceField>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_CheckCancelInvisibleForceField) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_CheckCancelInvisibleForceField");
//static_assert(sizeof(UPyAIAbilityActivation_CheckCancelInvisibleForceField) == 0x000040, "Wrong size on UPyAIAbilityActivation_CheckCancelInvisibleForceField");

// PythonClass ability_activation_logic.PyAIAbilityActivation_LunaSnowSwitchState
// 0x0020 (0x0058 - 0x0038)
class UPyAIAbilityActivation_LunaSnowSwitchState : public UPyAIAbilityActivationLogicBase
{
public:
	float                                         TeammateHealth;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroupHealth;                                       // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeammateNum;                                       // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Range;                                             // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelay;                                        // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UltimateAbilityID;                                 // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAbilityInputBinds                            SwitchButton;                                      // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_LunaSnowSwitchState">();
	}
	static class UPyAIAbilityActivation_LunaSnowSwitchState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_LunaSnowSwitchState>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_LunaSnowSwitchState) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_LunaSnowSwitchState");
//static_assert(sizeof(UPyAIAbilityActivation_LunaSnowSwitchState) == 0x000058, "Wrong size on UPyAIAbilityActivation_LunaSnowSwitchState");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, TeammateHealth) == 0x000038, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::TeammateHealth' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, GroupHealth) == 0x00003C, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::GroupHealth' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, TeammateNum) == 0x000040, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::TeammateNum' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, Range) == 0x000044, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::Range' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, Delay) == 0x000048, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::Delay' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, StartDelay) == 0x00004C, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::StartDelay' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, UltimateAbilityID) == 0x000050, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::UltimateAbilityID' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_LunaSnowSwitchState, SwitchButton) == 0x000054, "Member 'UPyAIAbilityActivation_LunaSnowSwitchState::SwitchButton' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_HulkJumpAirCtrl
// 0x0008 (0x0040 - 0x0038)
class UPyAIAbilityActivation_HulkJumpAirCtrl : public UPyAIAbilityActivationLogicBase
{
public:
	float                                         Acceleration;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeginCtrlSpeedZ;                                   // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_HulkJumpAirCtrl">();
	}
	static class UPyAIAbilityActivation_HulkJumpAirCtrl* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_HulkJumpAirCtrl>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_HulkJumpAirCtrl) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_HulkJumpAirCtrl");
//static_assert(sizeof(UPyAIAbilityActivation_HulkJumpAirCtrl) == 0x000040, "Wrong size on UPyAIAbilityActivation_HulkJumpAirCtrl");
//static_assert(offsetof(UPyAIAbilityActivation_HulkJumpAirCtrl, Acceleration) == 0x000038, "Member 'UPyAIAbilityActivation_HulkJumpAirCtrl::Acceleration' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_HulkJumpAirCtrl, BeginCtrlSpeedZ) == 0x00003C, "Member 'UPyAIAbilityActivation_HulkJumpAirCtrl::BeginCtrlSpeedZ' has a wrong offset!");

// PythonClass ability_activation_logic.PyAIAbilityActivation_DetachAIInfoTag
// 0x0000 (0x0038 - 0x0038)
class UPyAIAbilityActivation_DetachAIInfoTag final : public UPyAIAbilityActivationLogicBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_DetachAIInfoTag">();
	}
	static class UPyAIAbilityActivation_DetachAIInfoTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_DetachAIInfoTag>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_DetachAIInfoTag) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_DetachAIInfoTag");
//static_assert(sizeof(UPyAIAbilityActivation_DetachAIInfoTag) == 0x000038, "Wrong size on UPyAIAbilityActivation_DetachAIInfoTag");

// PythonClass ability_activation_logic.PyAIAbilityActivation_TryActiveAbility
// 0x0008 (0x0040 - 0x0038)
class UPyAIAbilityActivation_TryActiveAbility : public UPyAIAbilityActivationLogicBase
{
public:
	int32                                         AbilityID;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TryActiveAtBegin;                                  // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TryActiveAtEnd;                                    // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAIAbilityActivation_TryActiveAbility">();
	}
	static class UPyAIAbilityActivation_TryActiveAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAIAbilityActivation_TryActiveAbility>();
	}
};
//static_assert(alignof(UPyAIAbilityActivation_TryActiveAbility) == 0x000008, "Wrong alignment on UPyAIAbilityActivation_TryActiveAbility");
//static_assert(sizeof(UPyAIAbilityActivation_TryActiveAbility) == 0x000040, "Wrong size on UPyAIAbilityActivation_TryActiveAbility");
//static_assert(offsetof(UPyAIAbilityActivation_TryActiveAbility, AbilityID) == 0x000038, "Member 'UPyAIAbilityActivation_TryActiveAbility::AbilityID' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_TryActiveAbility, TryActiveAtBegin) == 0x00003C, "Member 'UPyAIAbilityActivation_TryActiveAbility::TryActiveAtBegin' has a wrong offset!");
//static_assert(offsetof(UPyAIAbilityActivation_TryActiveAbility, TryActiveAtEnd) == 0x00003D, "Member 'UPyAIAbilityActivation_TryActiveAbility::TryActiveAtEnd' has a wrong offset!");

}


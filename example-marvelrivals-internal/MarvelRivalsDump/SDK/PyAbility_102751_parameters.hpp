#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102751

#include "Basic.hpp"

#include "Hero_1027_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102751.PyUIController_102751.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_102751_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_102751_SetAbility) == 0x000008, "Wrong alignment on PyUIController_102751_SetAbility");
static_assert(sizeof(PyUIController_102751_SetAbility) == 0x000010, "Wrong size on PyUIController_102751_SetAbility");
static_assert(offsetof(PyUIController_102751_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_102751_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_102751_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_102751_SetAbility::InAbility' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10275101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_WhileActive) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10275101_WhileActive");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_WhileActive) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10275101_WhileActive");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10275101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10275101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10275101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_OnRemove) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10275101_OnRemove");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_OnRemove) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10275101_OnRemove");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10275101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10275101_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.GetUIWidget
// 0x0008 (0x0008 - 0x0000)
struct PyCue_Summoner_Loop_10275101_GetUIWidget final
{
public:
	class UMarvelUserWidget*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_GetUIWidget) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10275101_GetUIWidget");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_GetUIWidget) == 0x000008, "Wrong size on PyCue_Summoner_Loop_10275101_GetUIWidget");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_GetUIWidget, ReturnValue) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_GetUIWidget::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.OnWallDefenceApply
// 0x0008 (0x0008 - 0x0000)
struct PyCue_Summoner_Loop_10275101_OnWallDefenceApply final
{
public:
	struct FWallDefendNotify                      NewWallDefendNotify;                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_OnWallDefenceApply) == 0x000004, "Wrong alignment on PyCue_Summoner_Loop_10275101_OnWallDefenceApply");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_OnWallDefenceApply) == 0x000008, "Wrong size on PyCue_Summoner_Loop_10275101_OnWallDefenceApply");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnWallDefenceApply, NewWallDefendNotify) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_OnWallDefenceApply::NewWallDefendNotify' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.OnWallActivateStateChange_ThreadSafe
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe final
{
public:
	bool                                          bNewState;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe) == 0x000001, "Wrong alignment on PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe) == 0x000001, "Wrong size on PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe, bNewState) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_OnWallActivateStateChange_ThreadSafe::bNewState' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.OnWallActivateStateChangeForWidgetUpdate
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate final
{
public:
	bool                                          bNewState;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate) == 0x000001, "Wrong alignment on PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate) == 0x000001, "Wrong size on PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate, bNewState) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_OnWallActivateStateChangeForWidgetUpdate::bNewState' has a wrong offset!");

// PythonFunction PyAbility_102751.PyCue_Summoner_Loop_10275101.OnWallDefenceApplyForWidgetUpdate
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate final
{
public:
	int32                                         LastAttackActorUID;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate) == 0x000004, "Wrong alignment on PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate");
static_assert(sizeof(PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate) == 0x000004, "Wrong size on PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate");
static_assert(offsetof(PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate, LastAttackActorUID) == 0x000000, "Member 'PyCue_Summoner_Loop_10275101_OnWallDefenceApplyForWidgetUpdate::LastAttackActorUID' has a wrong offset!");

}


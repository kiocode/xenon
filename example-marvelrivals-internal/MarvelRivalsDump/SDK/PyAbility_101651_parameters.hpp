#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101651

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_101651.PySummoned_10165101.BindMouseLeftForPhantom
// 0x0001 (0x0001 - 0x0000)
struct PySummoned_10165101_BindMouseLeftForPhantom final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummoned_10165101_BindMouseLeftForPhantom) == 0x000001, "Wrong alignment on PySummoned_10165101_BindMouseLeftForPhantom");
static_assert(sizeof(PySummoned_10165101_BindMouseLeftForPhantom) == 0x000001, "Wrong size on PySummoned_10165101_BindMouseLeftForPhantom");
static_assert(offsetof(PySummoned_10165101_BindMouseLeftForPhantom, bEnable) == 0x000000, "Member 'PySummoned_10165101_BindMouseLeftForPhantom::bEnable' has a wrong offset!");

// PythonFunction PyAbility_101651.PySummoned_10165101.OnInstigatorAbilityTruncated
// 0x0068 (0x0068 - 0x0000)
struct PySummoned_10165101_OnInstigatorAbilityTruncated final
{
public:
	struct FGameplayTagContainer                  Tags_0;                                            // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PySummoned_10165101_OnInstigatorAbilityTruncated) == 0x000008, "Wrong alignment on PySummoned_10165101_OnInstigatorAbilityTruncated");
static_assert(sizeof(PySummoned_10165101_OnInstigatorAbilityTruncated) == 0x000068, "Wrong size on PySummoned_10165101_OnInstigatorAbilityTruncated");
static_assert(offsetof(PySummoned_10165101_OnInstigatorAbilityTruncated, Tags_0) == 0x000000, "Member 'PySummoned_10165101_OnInstigatorAbilityTruncated::Tags_0' has a wrong offset!");

// DelegateFunction PyAbility_101651.PySummoned_10165101.DelegateOnHidePhantomWhenTeleport__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature final
{
public:
	bool                                          IsHidden;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature) == 0x000001, "Wrong alignment on PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature");
static_assert(sizeof(PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature) == 0x000001, "Wrong size on PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature");
static_assert(offsetof(PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature, IsHidden) == 0x000000, "Member 'PySummoned_10165101_DelegateOnHidePhantomWhenTeleport__DelegateSignature::IsHidden' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101651_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101651_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_101651_K2_OnEndAbility");
static_assert(sizeof(PyAbility_101651_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_101651_K2_OnEndAbility");
static_assert(offsetof(PyAbility_101651_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_101651_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101651_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101651_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_101651_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_101651_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_101651_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_101651_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_101651_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101651_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101651_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_101651_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_101651_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_101651_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_101651_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_101651_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101651_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101651_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_101651_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_101651_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_101651_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_101651_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_101651_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.SpawnPhantom
// 0x0070 (0x0070 - 0x0000)
struct PyAbility_101651_SpawnPhantom final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarvelGameplayAbility*                 InAbility;                                         // 0x0060(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101651_SpawnPhantom) == 0x000010, "Wrong alignment on PyAbility_101651_SpawnPhantom");
static_assert(sizeof(PyAbility_101651_SpawnPhantom) == 0x000070, "Wrong size on PyAbility_101651_SpawnPhantom");
static_assert(offsetof(PyAbility_101651_SpawnPhantom, Transform) == 0x000000, "Member 'PyAbility_101651_SpawnPhantom::Transform' has a wrong offset!");
static_assert(offsetof(PyAbility_101651_SpawnPhantom, InAbility) == 0x000060, "Member 'PyAbility_101651_SpawnPhantom::InAbility' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.InitPhantom
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_101651_InitPhantom final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101651_InitPhantom) == 0x000008, "Wrong alignment on PyAbility_101651_InitPhantom");
static_assert(sizeof(PyAbility_101651_InitPhantom) == 0x000008, "Wrong size on PyAbility_101651_InitPhantom");
static_assert(offsetof(PyAbility_101651_InitPhantom, Source) == 0x000000, "Member 'PyAbility_101651_InitPhantom::Source' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.OnConfirmEvent
// 0x0168 (0x0168 - 0x0000)
struct PyAbility_101651_OnConfirmEvent final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_101651_OnConfirmEvent) == 0x000008, "Wrong alignment on PyAbility_101651_OnConfirmEvent");
static_assert(sizeof(PyAbility_101651_OnConfirmEvent) == 0x000168, "Wrong size on PyAbility_101651_OnConfirmEvent");
static_assert(offsetof(PyAbility_101651_OnConfirmEvent, Data) == 0x000000, "Member 'PyAbility_101651_OnConfirmEvent::Data' has a wrong offset!");

// PythonFunction PyAbility_101651.PyAbility_101651.OnCancelEvent
// 0x0168 (0x0168 - 0x0000)
struct PyAbility_101651_OnCancelEvent final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_101651_OnCancelEvent) == 0x000008, "Wrong alignment on PyAbility_101651_OnCancelEvent");
static_assert(sizeof(PyAbility_101651_OnCancelEvent) == 0x000168, "Wrong size on PyAbility_101651_OnCancelEvent");
static_assert(offsetof(PyAbility_101651_OnCancelEvent, Data) == 0x000000, "Member 'PyAbility_101651_OnCancelEvent::Data' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.OnActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10165101_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_OnActive) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_OnActive");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_OnActive) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10165101_OnActive");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnActive, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnActive, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10165101_OnActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10165101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_WhileActive) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_WhileActive");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_WhileActive) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10165101_WhileActive");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10165101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10165101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_WhileActiveFX");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10165101_WhileActiveFX");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10165101_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_OnExecuteFX");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10165101_OnExecuteFX");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnExecuteFX, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_OnExecuteFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.OnExecuteAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Summoner_Loop_10165101_OnExecuteAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_OnExecuteAudio) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_OnExecuteAudio");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_OnExecuteAudio) == 0x0001C0, "Wrong size on PyCue_Summoner_Loop_10165101_OnExecuteAudio");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnExecuteAudio, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_OnExecuteAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnExecuteAudio, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_OnExecuteAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Summoner_Loop_10165101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_OnRemove) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_OnRemove");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_OnRemove) == 0x0001C8, "Wrong size on PyCue_Summoner_Loop_10165101_OnRemove");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Summoner_Loop_10165101_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Summoner_Loop_10165101_GetDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_GetDuration) == 0x000004, "Wrong alignment on PyCue_Summoner_Loop_10165101_GetDuration");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_GetDuration) == 0x000004, "Wrong size on PyCue_Summoner_Loop_10165101_GetDuration");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_GetDuration, ReturnValue) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_GetDuration::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.GetRemainTime
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Summoner_Loop_10165101_GetRemainTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_GetRemainTime) == 0x000004, "Wrong alignment on PyCue_Summoner_Loop_10165101_GetRemainTime");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_GetRemainTime) == 0x000004, "Wrong size on PyCue_Summoner_Loop_10165101_GetRemainTime");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_GetRemainTime, ReturnValue) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_GetRemainTime::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.StartCountDown
// 0x0008 (0x0008 - 0x0000)
struct PyCue_Summoner_Loop_10165101_StartCountDown final
{
public:
	float                                         RemainTime;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_StartCountDown) == 0x000004, "Wrong alignment on PyCue_Summoner_Loop_10165101_StartCountDown");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_StartCountDown) == 0x000008, "Wrong size on PyCue_Summoner_Loop_10165101_StartCountDown");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_StartCountDown, RemainTime) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_StartCountDown::RemainTime' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_StartCountDown, Duration) == 0x000004, "Member 'PyCue_Summoner_Loop_10165101_StartCountDown::Duration' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.IsNeedPlayEffect
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Summoner_Loop_10165101_IsNeedPlayEffect final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_IsNeedPlayEffect) == 0x000008, "Wrong alignment on PyCue_Summoner_Loop_10165101_IsNeedPlayEffect");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_IsNeedPlayEffect) == 0x000010, "Wrong size on PyCue_Summoner_Loop_10165101_IsNeedPlayEffect");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_IsNeedPlayEffect, InActor) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_IsNeedPlayEffect::InActor' has a wrong offset!");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_IsNeedPlayEffect, ReturnValue) == 0x000008, "Member 'PyCue_Summoner_Loop_10165101_IsNeedPlayEffect::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.SetCheckHp
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Summoner_Loop_10165101_SetCheckHp final
{
public:
	bool                                          ShouldCheck;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_SetCheckHp) == 0x000001, "Wrong alignment on PyCue_Summoner_Loop_10165101_SetCheckHp");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_SetCheckHp) == 0x000001, "Wrong size on PyCue_Summoner_Loop_10165101_SetCheckHp");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_SetCheckHp, ShouldCheck) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_SetCheckHp::ShouldCheck' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_Summoner_Loop_10165101.SetIndicatorHidden
// 0x0001 (0x0001 - 0x0000)
struct PyCue_Summoner_Loop_10165101_SetIndicatorHidden final
{
public:
	bool                                          IsHidden;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Summoner_Loop_10165101_SetIndicatorHidden) == 0x000001, "Wrong alignment on PyCue_Summoner_Loop_10165101_SetIndicatorHidden");
static_assert(sizeof(PyCue_Summoner_Loop_10165101_SetIndicatorHidden) == 0x000001, "Wrong size on PyCue_Summoner_Loop_10165101_SetIndicatorHidden");
static_assert(offsetof(PyCue_Summoner_Loop_10165101_SetIndicatorHidden, IsHidden) == 0x000000, "Member 'PyCue_Summoner_Loop_10165101_SetIndicatorHidden::IsHidden' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_TraceActor_10165101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_TraceActor_10165101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_TraceActor_10165101_WhileActive) == 0x000008, "Wrong alignment on PyCue_TraceActor_10165101_WhileActive");
static_assert(sizeof(PyCue_TraceActor_10165101_WhileActive) == 0x0001C8, "Wrong size on PyCue_TraceActor_10165101_WhileActive");
static_assert(offsetof(PyCue_TraceActor_10165101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_TraceActor_10165101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_TraceActor_10165101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_TraceActor_10165101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_TraceActor_10165101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_TraceActor_10165101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_TraceActor_10165101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_TraceActor_10165101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_TraceActor_10165101_OnRemove) == 0x000008, "Wrong alignment on PyCue_TraceActor_10165101_OnRemove");
static_assert(sizeof(PyCue_TraceActor_10165101_OnRemove) == 0x0001C8, "Wrong size on PyCue_TraceActor_10165101_OnRemove");
static_assert(offsetof(PyCue_TraceActor_10165101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_TraceActor_10165101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_TraceActor_10165101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_TraceActor_10165101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_TraceActor_10165101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_TraceActor_10165101_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101651.PyCue_TraceActor_10165101.OnFloatChange
// 0x001C (0x001C - 0x0000)
struct PyCue_TraceActor_10165101_OnFloatChange final
{
public:
	class FName                                   TrackName;                                         // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PropertyName;                                      // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutValue;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_TraceActor_10165101_OnFloatChange) == 0x000004, "Wrong alignment on PyCue_TraceActor_10165101_OnFloatChange");
static_assert(sizeof(PyCue_TraceActor_10165101_OnFloatChange) == 0x00001C, "Wrong size on PyCue_TraceActor_10165101_OnFloatChange");
static_assert(offsetof(PyCue_TraceActor_10165101_OnFloatChange, TrackName) == 0x000000, "Member 'PyCue_TraceActor_10165101_OnFloatChange::TrackName' has a wrong offset!");
static_assert(offsetof(PyCue_TraceActor_10165101_OnFloatChange, PropertyName) == 0x00000C, "Member 'PyCue_TraceActor_10165101_OnFloatChange::PropertyName' has a wrong offset!");
static_assert(offsetof(PyCue_TraceActor_10165101_OnFloatChange, OutValue) == 0x000018, "Member 'PyCue_TraceActor_10165101_OnFloatChange::OutValue' has a wrong offset!");

}


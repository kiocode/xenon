#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101811

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Hero_1018_structs.hpp"
#include "Hero_1018_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_101811.PyProjectile_10181111
// 0x0040 (0x30E0 - 0x30A0)
class APyProjectile_10181111 final : public AProjectile_101811
{
public:
	int32                                         ProjectileIndex;                                   // 0x30A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30A4[0x4];                                     // 0x30A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AimStartReplicated;                                // 0x30A8(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                AimDirectionReplicated;                            // 0x30C0(0x0018)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void K2_OnInitializeData();
	void K2_OnProjectileInfoForceChanged_ThreadSafe(const struct FProjectileForceChangedInfo& InProjectileForceChangedInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10181111">();
	}
	static class APyProjectile_10181111* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10181111>();
	}
};
static_assert(alignof(APyProjectile_10181111) == 0x000010, "Wrong alignment on APyProjectile_10181111");
static_assert(sizeof(APyProjectile_10181111) == 0x0030E0, "Wrong size on APyProjectile_10181111");
static_assert(offsetof(APyProjectile_10181111, ProjectileIndex) == 0x0030A0, "Member 'APyProjectile_10181111::ProjectileIndex' has a wrong offset!");
static_assert(offsetof(APyProjectile_10181111, AimStartReplicated) == 0x0030A8, "Member 'APyProjectile_10181111::AimStartReplicated' has a wrong offset!");
static_assert(offsetof(APyProjectile_10181111, AimDirectionReplicated) == 0x0030C0, "Member 'APyProjectile_10181111::AimDirectionReplicated' has a wrong offset!");

// PythonClass PyAbility_101811.PyConfig_101811
// 0x0FB8 (0x1050 - 0x0098)
class UPyConfig_101811 final : public UMarvelAbilityConfig
{
public:
	float                                         TimeIntervalToSpawnProjetile;                      // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FProjectileSpreadRotateInfo>    ProjectileSpreadRotateInfoArray;                   // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMarvelAbilityTraceContext             TraceContext;                                      // 0x00B0(0x0F90)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         ProjectileID;                                      // 0x1040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_101811">();
	}
	static class UPyConfig_101811* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_101811>();
	}
};
static_assert(alignof(UPyConfig_101811) == 0x000010, "Wrong alignment on UPyConfig_101811");
static_assert(sizeof(UPyConfig_101811) == 0x001050, "Wrong size on UPyConfig_101811");
static_assert(offsetof(UPyConfig_101811, TimeIntervalToSpawnProjetile) == 0x000098, "Member 'UPyConfig_101811::TimeIntervalToSpawnProjetile' has a wrong offset!");
static_assert(offsetof(UPyConfig_101811, ProjectileSpreadRotateInfoArray) == 0x0000A0, "Member 'UPyConfig_101811::ProjectileSpreadRotateInfoArray' has a wrong offset!");
static_assert(offsetof(UPyConfig_101811, TraceContext) == 0x0000B0, "Member 'UPyConfig_101811::TraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_101811, ProjectileID) == 0x001040, "Member 'UPyConfig_101811::ProjectileID' has a wrong offset!");

// PythonClass PyAbility_101811.PyAbility_101811
// 0x0000 (0x2588 - 0x2588)
class UPyAbility_101811 : public UAbility_108
{
public:
	void BeginPlay();
	void K2_ActivateAbility();
	void HandleAnimSocketInfo(int32 SocketId, const struct FMarvelAbilitySocketInfo& SocketInfo);
	void Time_To_Spawn_Projectile();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_101811">();
	}
	static class UPyAbility_101811* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_101811>();
	}
};
static_assert(alignof(UPyAbility_101811) == 0x000008, "Wrong alignment on UPyAbility_101811");
static_assert(sizeof(UPyAbility_101811) == 0x002588, "Wrong size on UPyAbility_101811");

}


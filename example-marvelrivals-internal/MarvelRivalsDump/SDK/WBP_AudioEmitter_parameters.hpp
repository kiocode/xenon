#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AudioEmitter

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.ExecuteUbergraph_WBP_AudioEmitter
// 0x0090 (0x0090 - 0x0000)
struct WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_CustomEvent_Event;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_InEventName;                    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           K2Node_CustomEvent_InAkComp;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayingEvent_Has;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast_1;      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast_2;      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter");
//static_assert(sizeof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter) == 0x000090, "Wrong size on WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, EntryPoint) == 0x000000, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::EntryPoint' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::K2Node_Event_MyGeometry' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::K2Node_Event_InDeltaTime' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, K2Node_CustomEvent_Event) == 0x000040, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::K2Node_CustomEvent_Event' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, K2Node_CustomEvent_InEventName) == 0x000048, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::K2Node_CustomEvent_InEventName' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, K2Node_CustomEvent_InAkComp) == 0x000058, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::K2Node_CustomEvent_InAkComp' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_HasPlayingEvent_Has) == 0x000060, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_HasPlayingEvent_Has' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000068, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000078, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_SetOpacity_InOpacity_ImplicitCast) == 0x000080, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_SetOpacity_InOpacity_ImplicitCast' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_SetOpacity_InOpacity_ImplicitCast_1) == 0x000084, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_SetOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_SetOpacity_InOpacity_ImplicitCast_2) == 0x000088, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_SetOpacity_InOpacity_ImplicitCast_2' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x00008C, "Member 'WBP_AudioEmitter_C_ExecuteUbergraph_WBP_AudioEmitter::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.GetCachedAdmin
// 0x0018 (0x0018 - 0x0000)
struct WBP_AudioEmitter_C_GetCachedAdmin final
{
public:
	class UMarvelAudioAdmin*                      AudioAdmin;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMarvelAudioAdmin*                      CallFunc_GetMarvelAudioAdmin_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_GetCachedAdmin) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_GetCachedAdmin");
//static_assert(sizeof(WBP_AudioEmitter_C_GetCachedAdmin) == 0x000018, "Wrong size on WBP_AudioEmitter_C_GetCachedAdmin");
//static_assert(offsetof(WBP_AudioEmitter_C_GetCachedAdmin, AudioAdmin) == 0x000000, "Member 'WBP_AudioEmitter_C_GetCachedAdmin::AudioAdmin' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_GetCachedAdmin, CallFunc_GetMarvelAudioAdmin_ReturnValue) == 0x000008, "Member 'WBP_AudioEmitter_C_GetCachedAdmin::CallFunc_GetMarvelAudioAdmin_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_GetCachedAdmin, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_AudioEmitter_C_GetCachedAdmin::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.HasPlayingEvent
// 0x0040 (0x0040 - 0x0000)
struct WBP_AudioEmitter_C_HasPlayingEvent final
{
public:
	bool                                          Has;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkAudioEvent*>                  CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventPlaying_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_HasPlayingEvent) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_HasPlayingEvent");
//static_assert(sizeof(WBP_AudioEmitter_C_HasPlayingEvent) == 0x000040, "Wrong size on WBP_AudioEmitter_C_HasPlayingEvent");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, Has) == 0x000000, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::Has' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_Set_ToArray_Result' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_Array_Get_Item' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_IsEventPlaying_ReturnValue) == 0x000030, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_IsEventPlaying_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_Set_Remove_ReturnValue) == 0x000031, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_HasPlayingEvent, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_AudioEmitter_C_HasPlayingEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.IsEventNameEnabled
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioEmitter_C_IsEventNameEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarvelAudioAdmin*                      CallFunc_GetCachedAdmin_AudioAdmin;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_IsEventNameEnabled) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_IsEventNameEnabled");
//static_assert(sizeof(WBP_AudioEmitter_C_IsEventNameEnabled) == 0x000010, "Wrong size on WBP_AudioEmitter_C_IsEventNameEnabled");
//static_assert(offsetof(WBP_AudioEmitter_C_IsEventNameEnabled, ReturnValue) == 0x000000, "Member 'WBP_AudioEmitter_C_IsEventNameEnabled::ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_IsEventNameEnabled, CallFunc_GetCachedAdmin_AudioAdmin) == 0x000008, "Member 'WBP_AudioEmitter_C_IsEventNameEnabled::CallFunc_GetCachedAdmin_AudioAdmin' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.IsThreatValueEnabled
// 0x0010 (0x0010 - 0x0000)
struct WBP_AudioEmitter_C_IsThreatValueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarvelAudioAdmin*                      CallFunc_GetCachedAdmin_AudioAdmin;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_IsThreatValueEnabled) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_IsThreatValueEnabled");
//static_assert(sizeof(WBP_AudioEmitter_C_IsThreatValueEnabled) == 0x000010, "Wrong size on WBP_AudioEmitter_C_IsThreatValueEnabled");
//static_assert(offsetof(WBP_AudioEmitter_C_IsThreatValueEnabled, ReturnValue) == 0x000000, "Member 'WBP_AudioEmitter_C_IsThreatValueEnabled::ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_IsThreatValueEnabled, CallFunc_GetCachedAdmin_AudioAdmin) == 0x000008, "Member 'WBP_AudioEmitter_C_IsThreatValueEnabled::CallFunc_GetCachedAdmin_AudioAdmin' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.PlayEvent
// 0x0020 (0x0020 - 0x0000)
struct WBP_AudioEmitter_C_PlayEvent final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   InEventName;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           InAkComp;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_PlayEvent) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_PlayEvent");
//static_assert(sizeof(WBP_AudioEmitter_C_PlayEvent) == 0x000020, "Wrong size on WBP_AudioEmitter_C_PlayEvent");
//static_assert(offsetof(WBP_AudioEmitter_C_PlayEvent, Event) == 0x000000, "Member 'WBP_AudioEmitter_C_PlayEvent::Event' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_PlayEvent, InEventName) == 0x000008, "Member 'WBP_AudioEmitter_C_PlayEvent::InEventName' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_PlayEvent, InAkComp) == 0x000018, "Member 'WBP_AudioEmitter_C_PlayEvent::InAkComp' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.SetAkCompRtpc
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_AudioEmitter_C_SetAkCompRtpc final
{
public:
	class UAkComponent*                           AkComp_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Rtpcs;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0068(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMarvelAudioAdmin*                      CallFunc_GetCachedAdmin_AudioAdmin;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_SetAkCompRtpc) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_SetAkCompRtpc");
//static_assert(sizeof(WBP_AudioEmitter_C_SetAkCompRtpc) == 0x0000F8, "Wrong size on WBP_AudioEmitter_C_SetAkCompRtpc");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, AkComp_0) == 0x000000, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::AkComp_0' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, Rtpcs) == 0x000008, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::Rtpcs' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::Temp_int_Array_Index_Variable' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Map_Keys_Keys' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Array_Get_Item' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Map_Find_Value' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Map_Find_ReturnValue) == 0x00005C, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000068, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D8, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_GetCachedAdmin_AudioAdmin) == 0x0000E8, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_GetCachedAdmin_AudioAdmin' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompRtpc, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0000F0, "Member 'WBP_AudioEmitter_C_SetAkCompRtpc::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.SetAkCompSwitch
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_AudioEmitter_C_SetAkCompSwitch final
{
public:
	class UAkComponent*                           AkComp_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Switches;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarvelAudioAdmin*                      CallFunc_GetCachedAdmin_AudioAdmin;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_SetAkCompSwitch) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_SetAkCompSwitch");
//static_assert(sizeof(WBP_AudioEmitter_C_SetAkCompSwitch) == 0x0000C8, "Wrong size on WBP_AudioEmitter_C_SetAkCompSwitch");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, AkComp_0) == 0x000000, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::AkComp_0' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, Switches) == 0x000008, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::Switches' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::Temp_int_Array_Index_Variable' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Map_Keys_Keys' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Array_Get_Item' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Map_Find_Value' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_GetCachedAdmin_AudioAdmin) == 0x000098, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_GetCachedAdmin_AudioAdmin' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkCompSwitch, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'WBP_AudioEmitter_C_SetAkCompSwitch::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.SetAkName
// 0x0048 (0x0048 - 0x0000)
struct WBP_AudioEmitter_C_SetAkName final
{
public:
	class UAkComponent*                           AkComponent;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAkGameObjectName_Name;                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMarvelAudioAdmin*                      CallFunc_GetCachedAdmin_AudioAdmin;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
//static_assert(alignof(WBP_AudioEmitter_C_SetAkName) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_SetAkName");
//static_assert(sizeof(WBP_AudioEmitter_C_SetAkName) == 0x000048, "Wrong size on WBP_AudioEmitter_C_SetAkName");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkName, AkComponent) == 0x000000, "Member 'WBP_AudioEmitter_C_SetAkName::AkComponent' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkName, CallFunc_GetAkGameObjectName_Name) == 0x000008, "Member 'WBP_AudioEmitter_C_SetAkName::CallFunc_GetAkGameObjectName_Name' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkName, CallFunc_GetCachedAdmin_AudioAdmin) == 0x000018, "Member 'WBP_AudioEmitter_C_SetAkName::CallFunc_GetCachedAdmin_AudioAdmin' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkName, CallFunc_SelectString_ReturnValue) == 0x000020, "Member 'WBP_AudioEmitter_C_SetAkName::CallFunc_SelectString_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetAkName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WBP_AudioEmitter_C_SetAkName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.SetEventName
// 0x0050 (0x0050 - 0x0000)
struct WBP_AudioEmitter_C_SetEventName final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   EventName;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           AkComp_0;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_AudioEmitterLine_C*                TmpLines;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventNameEnabled_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AudioEmitterLine_C*                CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_AudioEmitterLine_C*                CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_SetEventName) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_SetEventName");
//static_assert(sizeof(WBP_AudioEmitter_C_SetEventName) == 0x000050, "Wrong size on WBP_AudioEmitter_C_SetEventName");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, AkEvent) == 0x000000, "Member 'WBP_AudioEmitter_C_SetEventName::AkEvent' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, EventName) == 0x000008, "Member 'WBP_AudioEmitter_C_SetEventName::EventName' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, AkComp_0) == 0x000018, "Member 'WBP_AudioEmitter_C_SetEventName::AkComp_0' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, TmpLines) == 0x000020, "Member 'WBP_AudioEmitter_C_SetEventName::TmpLines' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, CallFunc_IsEventNameEnabled_ReturnValue) == 0x000028, "Member 'WBP_AudioEmitter_C_SetEventName::CallFunc_IsEventNameEnabled_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, CallFunc_Map_Find_Value) == 0x000030, "Member 'WBP_AudioEmitter_C_SetEventName::CallFunc_Map_Find_Value' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'WBP_AudioEmitter_C_SetEventName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000040, "Member 'WBP_AudioEmitter_C_SetEventName::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetEventName, CallFunc_Create_ReturnValue) == 0x000048, "Member 'WBP_AudioEmitter_C_SetEventName::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.SetThreatValue
// 0x0030 (0x0030 - 0x0000)
struct WBP_AudioEmitter_C_SetThreatValue final
{
public:
	bool                                          Playing;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThreatEnabled;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThreatValueEnabled_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRTPCValue_Value;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERTPCValueType                                CallFunc_GetRTPCValue_OutputValueType;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_SetThreatValue) == 0x000008, "Wrong alignment on WBP_AudioEmitter_C_SetThreatValue");
//static_assert(sizeof(WBP_AudioEmitter_C_SetThreatValue) == 0x000030, "Wrong size on WBP_AudioEmitter_C_SetThreatValue");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, Playing) == 0x000000, "Member 'WBP_AudioEmitter_C_SetThreatValue::Playing' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, ThreatEnabled) == 0x000001, "Member 'WBP_AudioEmitter_C_SetThreatValue::ThreatEnabled' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_IsThreatValueEnabled_ReturnValue) == 0x000002, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_IsThreatValueEnabled_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_GetRTPCValue_Value) == 0x000004, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_GetRTPCValue_Value' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_GetRTPCValue_OutputValueType) == 0x000008, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_GetRTPCValue_OutputValueType' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'WBP_AudioEmitter_C_SetThreatValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_SetThreatValue, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000028, "Member 'WBP_AudioEmitter_C_SetThreatValue::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WBP_AudioEmitter.WBP_AudioEmitter_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_AudioEmitter_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(WBP_AudioEmitter_C_Tick) == 0x000004, "Wrong alignment on WBP_AudioEmitter_C_Tick");
//static_assert(sizeof(WBP_AudioEmitter_C_Tick) == 0x00003C, "Wrong size on WBP_AudioEmitter_C_Tick");
//static_assert(offsetof(WBP_AudioEmitter_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_AudioEmitter_C_Tick::MyGeometry' has a wrong offset!");
//static_assert(offsetof(WBP_AudioEmitter_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_AudioEmitter_C_Tick::InDeltaTime' has a wrong offset!");

}


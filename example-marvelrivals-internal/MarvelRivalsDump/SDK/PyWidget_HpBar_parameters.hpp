#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_HpBar

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXBase.SetBuffExistence
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_ScreenFXBase_SetBuffExistence final
{
public:
	bool                                          bInExist;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXBase_SetBuffExistence) == 0x000001, "Wrong alignment on PyWidget_ScreenFXBase_SetBuffExistence");
static_assert(sizeof(PyWidget_ScreenFXBase_SetBuffExistence) == 0x000001, "Wrong size on PyWidget_ScreenFXBase_SetBuffExistence");
static_assert(offsetof(PyWidget_ScreenFXBase_SetBuffExistence, bInExist) == 0x000000, "Member 'PyWidget_ScreenFXBase_SetBuffExistence::bInExist' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetTargetActor
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_HpBar_V3_SetTargetActor final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetTargetActor) == 0x000008, "Wrong alignment on PyWidget_HpBar_V3_SetTargetActor");
static_assert(sizeof(PyWidget_HpBar_V3_SetTargetActor) == 0x000008, "Wrong size on PyWidget_HpBar_V3_SetTargetActor");
static_assert(offsetof(PyWidget_HpBar_V3_SetTargetActor, InActor) == 0x000000, "Member 'PyWidget_HpBar_V3_SetTargetActor::InActor' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.OnTargetTakeTreat
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_HpBar_V3_OnTargetTakeTreat final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierHandle;                                    // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_OnTargetTakeTreat) == 0x000008, "Wrong alignment on PyWidget_HpBar_V3_OnTargetTakeTreat");
static_assert(sizeof(PyWidget_HpBar_V3_OnTargetTakeTreat) == 0x000028, "Wrong size on PyWidget_HpBar_V3_OnTargetTakeTreat");
static_assert(offsetof(PyWidget_HpBar_V3_OnTargetTakeTreat, Source) == 0x000000, "Member 'PyWidget_HpBar_V3_OnTargetTakeTreat::Source' has a wrong offset!");
static_assert(offsetof(PyWidget_HpBar_V3_OnTargetTakeTreat, Target) == 0x000008, "Member 'PyWidget_HpBar_V3_OnTargetTakeTreat::Target' has a wrong offset!");
static_assert(offsetof(PyWidget_HpBar_V3_OnTargetTakeTreat, ModifierHandle) == 0x000010, "Member 'PyWidget_HpBar_V3_OnTargetTakeTreat::ModifierHandle' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetIsFullHp
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_HpBar_V3_SetIsFullHp final
{
public:
	bool                                          bInFullHp;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetIsFullHp) == 0x000001, "Wrong alignment on PyWidget_HpBar_V3_SetIsFullHp");
static_assert(sizeof(PyWidget_HpBar_V3_SetIsFullHp) == 0x000001, "Wrong size on PyWidget_HpBar_V3_SetIsFullHp");
static_assert(offsetof(PyWidget_HpBar_V3_SetIsFullHp, bInFullHp) == 0x000000, "Member 'PyWidget_HpBar_V3_SetIsFullHp::bInFullHp' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetHpColor
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_HpBar_V3_SetHpColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetHpColor) == 0x000004, "Wrong alignment on PyWidget_HpBar_V3_SetHpColor");
static_assert(sizeof(PyWidget_HpBar_V3_SetHpColor) == 0x000010, "Wrong size on PyWidget_HpBar_V3_SetHpColor");
static_assert(offsetof(PyWidget_HpBar_V3_SetHpColor, Color) == 0x000000, "Member 'PyWidget_HpBar_V3_SetHpColor::Color' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetShieldColor
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_HpBar_V3_SetShieldColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetShieldColor) == 0x000004, "Wrong alignment on PyWidget_HpBar_V3_SetShieldColor");
static_assert(sizeof(PyWidget_HpBar_V3_SetShieldColor) == 0x000010, "Wrong size on PyWidget_HpBar_V3_SetShieldColor");
static_assert(offsetof(PyWidget_HpBar_V3_SetShieldColor, Color) == 0x000000, "Member 'PyWidget_HpBar_V3_SetShieldColor::Color' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetHpDeductColor
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_HpBar_V3_SetHpDeductColor final
{
public:
	struct FLinearColor                           DeductColor;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetHpDeductColor) == 0x000004, "Wrong alignment on PyWidget_HpBar_V3_SetHpDeductColor");
static_assert(sizeof(PyWidget_HpBar_V3_SetHpDeductColor) == 0x000010, "Wrong size on PyWidget_HpBar_V3_SetHpDeductColor");
static_assert(offsetof(PyWidget_HpBar_V3_SetHpDeductColor, DeductColor) == 0x000000, "Member 'PyWidget_HpBar_V3_SetHpDeductColor::DeductColor' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetParentBg
// 0x0003 (0x0003 - 0x0000)
struct PyWidget_HpBar_V3_SetParentBg final
{
public:
	bool                                          IsCharacter;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReplay;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTeammate;                                        // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetParentBg) == 0x000001, "Wrong alignment on PyWidget_HpBar_V3_SetParentBg");
static_assert(sizeof(PyWidget_HpBar_V3_SetParentBg) == 0x000003, "Wrong size on PyWidget_HpBar_V3_SetParentBg");
static_assert(offsetof(PyWidget_HpBar_V3_SetParentBg, IsCharacter) == 0x000000, "Member 'PyWidget_HpBar_V3_SetParentBg::IsCharacter' has a wrong offset!");
static_assert(offsetof(PyWidget_HpBar_V3_SetParentBg, IsReplay) == 0x000001, "Member 'PyWidget_HpBar_V3_SetParentBg::IsReplay' has a wrong offset!");
static_assert(offsetof(PyWidget_HpBar_V3_SetParentBg, IsTeammate) == 0x000002, "Member 'PyWidget_HpBar_V3_SetParentBg::IsTeammate' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetTargetTreatPercentageCur
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_HpBar_V3_SetTargetTreatPercentageCur final
{
public:
	float                                         InPercentage;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_SetTargetTreatPercentageCur) == 0x000004, "Wrong alignment on PyWidget_HpBar_V3_SetTargetTreatPercentageCur");
static_assert(sizeof(PyWidget_HpBar_V3_SetTargetTreatPercentageCur) == 0x000004, "Wrong size on PyWidget_HpBar_V3_SetTargetTreatPercentageCur");
static_assert(offsetof(PyWidget_HpBar_V3_SetTargetTreatPercentageCur, InPercentage) == 0x000000, "Member 'PyWidget_HpBar_V3_SetTargetTreatPercentageCur::InPercentage' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.ShouldShowBuff
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_HpBar_V3_ShouldShowBuff final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_ShouldShowBuff) == 0x000008, "Wrong alignment on PyWidget_HpBar_V3_ShouldShowBuff");
static_assert(sizeof(PyWidget_HpBar_V3_ShouldShowBuff) == 0x000018, "Wrong size on PyWidget_HpBar_V3_ShouldShowBuff");
static_assert(offsetof(PyWidget_HpBar_V3_ShouldShowBuff, Tag) == 0x000000, "Member 'PyWidget_HpBar_V3_ShouldShowBuff::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_HpBar_V3_ShouldShowBuff, ReturnValue) == 0x000010, "Member 'PyWidget_HpBar_V3_ShouldShowBuff::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.OnTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_HpBar_V3_OnTagUpdated final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExist;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_OnTagUpdated) == 0x000004, "Wrong alignment on PyWidget_HpBar_V3_OnTagUpdated");
static_assert(sizeof(PyWidget_HpBar_V3_OnTagUpdated) == 0x000010, "Wrong size on PyWidget_HpBar_V3_OnTagUpdated");
static_assert(offsetof(PyWidget_HpBar_V3_OnTagUpdated, Tag) == 0x000000, "Member 'PyWidget_HpBar_V3_OnTagUpdated::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_HpBar_V3_OnTagUpdated, TagExist) == 0x00000C, "Member 'PyWidget_HpBar_V3_OnTagUpdated::TagExist' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.SetAllExistingTags
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_HpBar_V3_SetAllExistingTags final
{
public:
	TArray<struct FGameplayTag>                   InTags;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWidget_HpBar_V3_SetAllExistingTags) == 0x000008, "Wrong alignment on PyWidget_HpBar_V3_SetAllExistingTags");
static_assert(sizeof(PyWidget_HpBar_V3_SetAllExistingTags) == 0x000010, "Wrong size on PyWidget_HpBar_V3_SetAllExistingTags");
static_assert(offsetof(PyWidget_HpBar_V3_SetAllExistingTags, InTags) == 0x000000, "Member 'PyWidget_HpBar_V3_SetAllExistingTags::InTags' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBar_V3.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_HpBar_V3_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBar_V3_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_HpBar_V3_OnAnimationFinished");
static_assert(sizeof(PyWidget_HpBar_V3_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_HpBar_V3_OnAnimationFinished");
static_assert(offsetof(PyWidget_HpBar_V3_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_HpBar_V3_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBarVX_V3.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_HpBarVX_V3_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBarVX_V3_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_HpBarVX_V3_OnAnimationFinished");
static_assert(sizeof(PyWidget_HpBarVX_V3_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_HpBarVX_V3_OnAnimationFinished");
static_assert(offsetof(PyWidget_HpBarVX_V3_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_HpBarVX_V3_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_HpBarVX_V3.OnParentVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_HpBarVX_V3_OnParentVisibilityChanged final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HpBarVX_V3_OnParentVisibilityChanged) == 0x000001, "Wrong alignment on PyWidget_HpBarVX_V3_OnParentVisibilityChanged");
static_assert(sizeof(PyWidget_HpBarVX_V3_OnParentVisibilityChanged) == 0x000001, "Wrong size on PyWidget_HpBarVX_V3_OnParentVisibilityChanged");
static_assert(offsetof(PyWidget_HpBarVX_V3_OnParentVisibilityChanged, InVisibility) == 0x000000, "Member 'PyWidget_HpBarVX_V3_OnParentVisibilityChanged::InVisibility' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattleHpBar_V3_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_BattleHpBar_V3_PreConstruct");
static_assert(sizeof(PyWidget_BattleHpBar_V3_PreConstruct) == 0x000001, "Wrong size on PyWidget_BattleHpBar_V3_PreConstruct");
static_assert(offsetof(PyWidget_BattleHpBar_V3_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.ShouldBeVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattleHpBar_V3_ShouldBeVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_ShouldBeVisible) == 0x000001, "Wrong alignment on PyWidget_BattleHpBar_V3_ShouldBeVisible");
static_assert(sizeof(PyWidget_BattleHpBar_V3_ShouldBeVisible) == 0x000001, "Wrong size on PyWidget_BattleHpBar_V3_ShouldBeVisible");
static_assert(offsetof(PyWidget_BattleHpBar_V3_ShouldBeVisible, ReturnValue) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_ShouldBeVisible::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.SetTargetActor
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_BattleHpBar_V3_SetTargetActor final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_SetTargetActor) == 0x000008, "Wrong alignment on PyWidget_BattleHpBar_V3_SetTargetActor");
static_assert(sizeof(PyWidget_BattleHpBar_V3_SetTargetActor) == 0x000008, "Wrong size on PyWidget_BattleHpBar_V3_SetTargetActor");
static_assert(offsetof(PyWidget_BattleHpBar_V3_SetTargetActor, InActor) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_SetTargetActor::InActor' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattleHpBar_V3_OnMovementModeChanged final
{
public:
	class ACharacter*                             Char;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PreMode;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMove;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_OnMovementModeChanged) == 0x000008, "Wrong alignment on PyWidget_BattleHpBar_V3_OnMovementModeChanged");
static_assert(sizeof(PyWidget_BattleHpBar_V3_OnMovementModeChanged) == 0x000010, "Wrong size on PyWidget_BattleHpBar_V3_OnMovementModeChanged");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnMovementModeChanged, Char) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_OnMovementModeChanged::Char' has a wrong offset!");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnMovementModeChanged, PreMode) == 0x000008, "Member 'PyWidget_BattleHpBar_V3_OnMovementModeChanged::PreMode' has a wrong offset!");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnMovementModeChanged, PreviousCustomMove) == 0x000009, "Member 'PyWidget_BattleHpBar_V3_OnMovementModeChanged::PreviousCustomMove' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.OnTakeDamage
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_BattleHpBar_V3_OnTakeDamage final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Dest;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               Parm;                                              // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_OnTakeDamage) == 0x000008, "Wrong alignment on PyWidget_BattleHpBar_V3_OnTakeDamage");
static_assert(sizeof(PyWidget_BattleHpBar_V3_OnTakeDamage) == 0x000028, "Wrong size on PyWidget_BattleHpBar_V3_OnTakeDamage");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnTakeDamage, Source) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_OnTakeDamage::Source' has a wrong offset!");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnTakeDamage, Dest) == 0x000008, "Member 'PyWidget_BattleHpBar_V3_OnTakeDamage::Dest' has a wrong offset!");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnTakeDamage, Parm) == 0x000010, "Member 'PyWidget_BattleHpBar_V3_OnTakeDamage::Parm' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.OnSpecialVXPlay
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattleHpBar_V3_OnSpecialVXPlay final
{
public:
	EMarvelAbilityUIHudAnim                       ShakeMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_OnSpecialVXPlay) == 0x000001, "Wrong alignment on PyWidget_BattleHpBar_V3_OnSpecialVXPlay");
static_assert(sizeof(PyWidget_BattleHpBar_V3_OnSpecialVXPlay) == 0x000001, "Wrong size on PyWidget_BattleHpBar_V3_OnSpecialVXPlay");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnSpecialVXPlay, ShakeMode) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_OnSpecialVXPlay::ShakeMode' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.SetTotalHpMax
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_BattleHpBar_V3_SetTotalHpMax final
{
public:
	float                                         InTotalHpMax;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_SetTotalHpMax) == 0x000004, "Wrong alignment on PyWidget_BattleHpBar_V3_SetTotalHpMax");
static_assert(sizeof(PyWidget_BattleHpBar_V3_SetTotalHpMax) == 0x000004, "Wrong size on PyWidget_BattleHpBar_V3_SetTotalHpMax");
static_assert(offsetof(PyWidget_BattleHpBar_V3_SetTotalHpMax, InTotalHpMax) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_SetTotalHpMax::InTotalHpMax' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.SetTotalHpCur
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_BattleHpBar_V3_SetTotalHpCur final
{
public:
	float                                         InTotalHpCur;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_SetTotalHpCur) == 0x000004, "Wrong alignment on PyWidget_BattleHpBar_V3_SetTotalHpCur");
static_assert(sizeof(PyWidget_BattleHpBar_V3_SetTotalHpCur) == 0x000004, "Wrong size on PyWidget_BattleHpBar_V3_SetTotalHpCur");
static_assert(offsetof(PyWidget_BattleHpBar_V3_SetTotalHpCur, InTotalHpCur) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_SetTotalHpCur::InTotalHpCur' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.SetTargetTreatPercentageCur
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur final
{
public:
	float                                         InPercentage;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur) == 0x000004, "Wrong alignment on PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur");
static_assert(sizeof(PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur) == 0x000004, "Wrong size on PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur");
static_assert(offsetof(PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur, InPercentage) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_SetTargetTreatPercentageCur::InPercentage' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.ShouldShowBuff
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_BattleHpBar_V3_ShouldShowBuff final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_ShouldShowBuff) == 0x000008, "Wrong alignment on PyWidget_BattleHpBar_V3_ShouldShowBuff");
static_assert(sizeof(PyWidget_BattleHpBar_V3_ShouldShowBuff) == 0x000018, "Wrong size on PyWidget_BattleHpBar_V3_ShouldShowBuff");
static_assert(offsetof(PyWidget_BattleHpBar_V3_ShouldShowBuff, Tag) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_ShouldShowBuff::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_BattleHpBar_V3_ShouldShowBuff, ReturnValue) == 0x000010, "Member 'PyWidget_BattleHpBar_V3_ShouldShowBuff::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_BattleHpBar_V3.OnTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattleHpBar_V3_OnTagUpdated final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExist;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattleHpBar_V3_OnTagUpdated) == 0x000004, "Wrong alignment on PyWidget_BattleHpBar_V3_OnTagUpdated");
static_assert(sizeof(PyWidget_BattleHpBar_V3_OnTagUpdated) == 0x000010, "Wrong size on PyWidget_BattleHpBar_V3_OnTagUpdated");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnTagUpdated, Tag) == 0x000000, "Member 'PyWidget_BattleHpBar_V3_OnTagUpdated::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_BattleHpBar_V3_OnTagUpdated, TagExist) == 0x00000C, "Member 'PyWidget_BattleHpBar_V3_OnTagUpdated::TagExist' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXManager.SetTargetActor
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_ScreenFXManager_SetTargetActor final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXManager_SetTargetActor) == 0x000008, "Wrong alignment on PyWidget_ScreenFXManager_SetTargetActor");
static_assert(sizeof(PyWidget_ScreenFXManager_SetTargetActor) == 0x000008, "Wrong size on PyWidget_ScreenFXManager_SetTargetActor");
static_assert(offsetof(PyWidget_ScreenFXManager_SetTargetActor, InActor) == 0x000000, "Member 'PyWidget_ScreenFXManager_SetTargetActor::InActor' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXManager.SetTargetTreatPercentageCur
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_ScreenFXManager_SetTargetTreatPercentageCur final
{
public:
	float                                         InPercentage;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXManager_SetTargetTreatPercentageCur) == 0x000004, "Wrong alignment on PyWidget_ScreenFXManager_SetTargetTreatPercentageCur");
static_assert(sizeof(PyWidget_ScreenFXManager_SetTargetTreatPercentageCur) == 0x000004, "Wrong size on PyWidget_ScreenFXManager_SetTargetTreatPercentageCur");
static_assert(offsetof(PyWidget_ScreenFXManager_SetTargetTreatPercentageCur, InPercentage) == 0x000000, "Member 'PyWidget_ScreenFXManager_SetTargetTreatPercentageCur::InPercentage' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXManager.ShouldShowBuff
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_ScreenFXManager_ShouldShowBuff final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXManager_ShouldShowBuff) == 0x000008, "Wrong alignment on PyWidget_ScreenFXManager_ShouldShowBuff");
static_assert(sizeof(PyWidget_ScreenFXManager_ShouldShowBuff) == 0x000018, "Wrong size on PyWidget_ScreenFXManager_ShouldShowBuff");
static_assert(offsetof(PyWidget_ScreenFXManager_ShouldShowBuff, Tag) == 0x000000, "Member 'PyWidget_ScreenFXManager_ShouldShowBuff::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_ScreenFXManager_ShouldShowBuff, ReturnValue) == 0x000010, "Member 'PyWidget_ScreenFXManager_ShouldShowBuff::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXManager.OnTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_ScreenFXManager_OnTagUpdated final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExist;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXManager_OnTagUpdated) == 0x000004, "Wrong alignment on PyWidget_ScreenFXManager_OnTagUpdated");
static_assert(sizeof(PyWidget_ScreenFXManager_OnTagUpdated) == 0x000010, "Wrong size on PyWidget_ScreenFXManager_OnTagUpdated");
static_assert(offsetof(PyWidget_ScreenFXManager_OnTagUpdated, Tag) == 0x000000, "Member 'PyWidget_ScreenFXManager_OnTagUpdated::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_ScreenFXManager_OnTagUpdated, TagExist) == 0x00000C, "Member 'PyWidget_ScreenFXManager_OnTagUpdated::TagExist' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXHealing.SetBuffExistence
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_ScreenFXHealing_SetBuffExistence final
{
public:
	bool                                          bInExist;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXHealing_SetBuffExistence) == 0x000001, "Wrong alignment on PyWidget_ScreenFXHealing_SetBuffExistence");
static_assert(sizeof(PyWidget_ScreenFXHealing_SetBuffExistence) == 0x000001, "Wrong size on PyWidget_ScreenFXHealing_SetBuffExistence");
static_assert(offsetof(PyWidget_ScreenFXHealing_SetBuffExistence, bInExist) == 0x000000, "Member 'PyWidget_ScreenFXHealing_SetBuffExistence::bInExist' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_ScreenFXHealing.OnTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_ScreenFXHealing_OnTagUpdated final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExist;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_ScreenFXHealing_OnTagUpdated) == 0x000004, "Wrong alignment on PyWidget_ScreenFXHealing_OnTagUpdated");
static_assert(sizeof(PyWidget_ScreenFXHealing_OnTagUpdated) == 0x000010, "Wrong size on PyWidget_ScreenFXHealing_OnTagUpdated");
static_assert(offsetof(PyWidget_ScreenFXHealing_OnTagUpdated, Tag) == 0x000000, "Member 'PyWidget_ScreenFXHealing_OnTagUpdated::Tag' has a wrong offset!");
static_assert(offsetof(PyWidget_ScreenFXHealing_OnTagUpdated, TagExist) == 0x00000C, "Member 'PyWidget_ScreenFXHealing_OnTagUpdated::TagExist' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_DyingScreenFX.ShouldBeVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_DyingScreenFX_ShouldBeVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_DyingScreenFX_ShouldBeVisible) == 0x000001, "Wrong alignment on PyWidget_DyingScreenFX_ShouldBeVisible");
static_assert(sizeof(PyWidget_DyingScreenFX_ShouldBeVisible) == 0x000001, "Wrong size on PyWidget_DyingScreenFX_ShouldBeVisible");
static_assert(offsetof(PyWidget_DyingScreenFX_ShouldBeVisible, ReturnValue) == 0x000000, "Member 'PyWidget_DyingScreenFX_ShouldBeVisible::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_DyingScreenFX.SetTargetCharacter
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_DyingScreenFX_SetTargetCharacter final
{
public:
	class AMarvelBaseCharacter*                   InCharacter;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_DyingScreenFX_SetTargetCharacter) == 0x000008, "Wrong alignment on PyWidget_DyingScreenFX_SetTargetCharacter");
static_assert(sizeof(PyWidget_DyingScreenFX_SetTargetCharacter) == 0x000008, "Wrong size on PyWidget_DyingScreenFX_SetTargetCharacter");
static_assert(offsetof(PyWidget_DyingScreenFX_SetTargetCharacter, InCharacter) == 0x000000, "Member 'PyWidget_DyingScreenFX_SetTargetCharacter::InCharacter' has a wrong offset!");

// PythonFunction PyWidget_HpBar.PyWidget_DyingScreenFX.SetDying
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_DyingScreenFX_SetDying final
{
public:
	bool                                          InDying;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_DyingScreenFX_SetDying) == 0x000001, "Wrong alignment on PyWidget_DyingScreenFX_SetDying");
static_assert(sizeof(PyWidget_DyingScreenFX_SetDying) == 0x000001, "Wrong size on PyWidget_DyingScreenFX_SetDying");
static_assert(offsetof(PyWidget_DyingScreenFX_SetDying, InDying) == 0x000000, "Member 'PyWidget_DyingScreenFX_SetDying::InDying' has a wrong offset!");

}


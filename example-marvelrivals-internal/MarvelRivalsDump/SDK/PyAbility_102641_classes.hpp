#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102641

#include "Basic.hpp"

#include "Hero_1026_classes.hpp"
#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_102641.PyTraceComponent_10264101
// 0x0000 (0x1710 - 0x1710)
class UPyTraceComponent_10264101 final : public UMarvelAgentTraceComponent
{
public:
	void ReceiveBeginPlay();
	void TracedHitResults(class UObject* TraceSource, const TArray<struct FHitResult>& HitResults);
	void ReceiveEndPlay(EEndPlayReason Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTraceComponent_10264101">();
	}
	static class UPyTraceComponent_10264101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTraceComponent_10264101>();
	}
};
static_assert(alignof(UPyTraceComponent_10264101) == 0x000010, "Wrong alignment on UPyTraceComponent_10264101");
static_assert(sizeof(UPyTraceComponent_10264101) == 0x001710, "Wrong size on UPyTraceComponent_10264101");

// PythonClass PyAbility_102641.PyScope_10264101
// 0x0000 (0x1700 - 0x1700)
class APyScope_10264101 final : public AMarvelAbilityTargetActor_Scope
{
public:
	void ReceiveBeginPlay();
	void TracedHitResults(const TArray<struct FHitResult>& HitResults);
	void ReceiveEndPlay(EEndPlayReason Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyScope_10264101">();
	}
	static class APyScope_10264101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyScope_10264101>();
	}
};
static_assert(alignof(APyScope_10264101) == 0x000010, "Wrong alignment on APyScope_10264101");
static_assert(sizeof(APyScope_10264101) == 0x001700, "Wrong size on APyScope_10264101");

// PythonClass PyAbility_102641.PyConfig_102641
// 0x0018 (0x0C70 - 0x0C58)
class UPyConfig_102641 final : public UConfig_102641
{
public:
	float                                         LimitYaw;                                          // 0x0C58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LimitRoll;                                         // 0x0C5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LimitPitch;                                        // 0x0C60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotatingBodyTime;                                  // 0x0C64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LockCamera;                                        // 0x0C68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C69[0x3];                                      // 0x0C69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotatingCameraTime;                                // 0x0C6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_102641">();
	}
	static class UPyConfig_102641* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_102641>();
	}
};
static_assert(alignof(UPyConfig_102641) == 0x000008, "Wrong alignment on UPyConfig_102641");
static_assert(sizeof(UPyConfig_102641) == 0x000C70, "Wrong size on UPyConfig_102641");
static_assert(offsetof(UPyConfig_102641, LimitYaw) == 0x000C58, "Member 'UPyConfig_102641::LimitYaw' has a wrong offset!");
static_assert(offsetof(UPyConfig_102641, LimitRoll) == 0x000C5C, "Member 'UPyConfig_102641::LimitRoll' has a wrong offset!");
static_assert(offsetof(UPyConfig_102641, LimitPitch) == 0x000C60, "Member 'UPyConfig_102641::LimitPitch' has a wrong offset!");
static_assert(offsetof(UPyConfig_102641, RotatingBodyTime) == 0x000C64, "Member 'UPyConfig_102641::RotatingBodyTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_102641, LockCamera) == 0x000C68, "Member 'UPyConfig_102641::LockCamera' has a wrong offset!");
static_assert(offsetof(UPyConfig_102641, RotatingCameraTime) == 0x000C6C, "Member 'UPyConfig_102641::RotatingCameraTime' has a wrong offset!");

// PythonClass PyAbility_102641.PyAbility_102641
// 0x0000 (0x25F0 - 0x25F0)
class UPyAbility_102641 : public UAbility_102641
{
public:
	void BeginPlay();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void NativeOnMontageEvent(const class FString& Tag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_102641">();
	}
	static class UPyAbility_102641* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_102641>();
	}
};
static_assert(alignof(UPyAbility_102641) == 0x000008, "Wrong alignment on UPyAbility_102641");
static_assert(sizeof(UPyAbility_102641) == 0x0025F0, "Wrong size on UPyAbility_102641");

}


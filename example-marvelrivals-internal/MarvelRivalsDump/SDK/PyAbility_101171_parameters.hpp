#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101171

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_101171.PyCue_Buff_10117101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Buff_10117101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10117101_WhileActive) == 0x000008, "Wrong alignment on PyCue_Buff_10117101_WhileActive");
static_assert(sizeof(PyCue_Buff_10117101_WhileActive) == 0x0001C8, "Wrong size on PyCue_Buff_10117101_WhileActive");
static_assert(offsetof(PyCue_Buff_10117101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_Buff_10117101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Buff_10117101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Buff_10117101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101171.PyCue_Buff_10117101.OnMarvelSculptChanged
// 0x0008 (0x0008 - 0x0000)
struct PyCue_Buff_10117101_OnMarvelSculptChanged final
{
public:
	class AActor*                                 InOwner;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10117101_OnMarvelSculptChanged) == 0x000008, "Wrong alignment on PyCue_Buff_10117101_OnMarvelSculptChanged");
static_assert(sizeof(PyCue_Buff_10117101_OnMarvelSculptChanged) == 0x000008, "Wrong size on PyCue_Buff_10117101_OnMarvelSculptChanged");
static_assert(offsetof(PyCue_Buff_10117101_OnMarvelSculptChanged, InOwner) == 0x000000, "Member 'PyCue_Buff_10117101_OnMarvelSculptChanged::InOwner' has a wrong offset!");

// PythonFunction PyAbility_101171.PyCue_Buff_10117101.OnMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Buff_10117101_OnMontageEnded final
{
public:
	class UAnimMontage*                           InMontage;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInterrupted;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10117101_OnMontageEnded) == 0x000008, "Wrong alignment on PyCue_Buff_10117101_OnMontageEnded");
static_assert(sizeof(PyCue_Buff_10117101_OnMontageEnded) == 0x000010, "Wrong size on PyCue_Buff_10117101_OnMontageEnded");
static_assert(offsetof(PyCue_Buff_10117101_OnMontageEnded, InMontage) == 0x000000, "Member 'PyCue_Buff_10117101_OnMontageEnded::InMontage' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_OnMontageEnded, IsInterrupted) == 0x000008, "Member 'PyCue_Buff_10117101_OnMontageEnded::IsInterrupted' has a wrong offset!");

// PythonFunction PyAbility_101171.PyCue_Buff_10117101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Buff_10117101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10117101_OnRemove) == 0x000008, "Wrong alignment on PyCue_Buff_10117101_OnRemove");
static_assert(sizeof(PyCue_Buff_10117101_OnRemove) == 0x0001C8, "Wrong size on PyCue_Buff_10117101_OnRemove");
static_assert(offsetof(PyCue_Buff_10117101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_Buff_10117101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_Buff_10117101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_Buff_10117101_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101171.PyCue_Buff_10117101.OnRecoverBuffTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Buff_10117101_OnRecoverBuffTagUpdate final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10117101_OnRecoverBuffTagUpdate) == 0x000004, "Wrong alignment on PyCue_Buff_10117101_OnRecoverBuffTagUpdate");
static_assert(sizeof(PyCue_Buff_10117101_OnRecoverBuffTagUpdate) == 0x000010, "Wrong size on PyCue_Buff_10117101_OnRecoverBuffTagUpdate");
static_assert(offsetof(PyCue_Buff_10117101_OnRecoverBuffTagUpdate, Tag) == 0x000000, "Member 'PyCue_Buff_10117101_OnRecoverBuffTagUpdate::Tag' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_OnRecoverBuffTagUpdate, Exist) == 0x00000C, "Member 'PyCue_Buff_10117101_OnRecoverBuffTagUpdate::Exist' has a wrong offset!");

// PythonFunction PyAbility_101171.PyCue_Buff_10117101.OnTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Buff_10117101_OnTagUpdate final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10117101_OnTagUpdate) == 0x000004, "Wrong alignment on PyCue_Buff_10117101_OnTagUpdate");
static_assert(sizeof(PyCue_Buff_10117101_OnTagUpdate) == 0x000010, "Wrong size on PyCue_Buff_10117101_OnTagUpdate");
static_assert(offsetof(PyCue_Buff_10117101_OnTagUpdate, Tag) == 0x000000, "Member 'PyCue_Buff_10117101_OnTagUpdate::Tag' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10117101_OnTagUpdate, Exist) == 0x00000C, "Member 'PyCue_Buff_10117101_OnTagUpdate::Exist' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101171_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_CanActivate) == 0x000001, "Wrong alignment on PyAbility_101171_CanActivate");
static_assert(sizeof(PyAbility_101171_CanActivate) == 0x000001, "Wrong size on PyAbility_101171_CanActivate");
static_assert(offsetof(PyAbility_101171_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_101171_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.OnLokiDisguiseTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101171_OnLokiDisguiseTagUpdate final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_OnLokiDisguiseTagUpdate) == 0x000004, "Wrong alignment on PyAbility_101171_OnLokiDisguiseTagUpdate");
static_assert(sizeof(PyAbility_101171_OnLokiDisguiseTagUpdate) == 0x000010, "Wrong size on PyAbility_101171_OnLokiDisguiseTagUpdate");
static_assert(offsetof(PyAbility_101171_OnLokiDisguiseTagUpdate, Tag) == 0x000000, "Member 'PyAbility_101171_OnLokiDisguiseTagUpdate::Tag' has a wrong offset!");
static_assert(offsetof(PyAbility_101171_OnLokiDisguiseTagUpdate, Exist) == 0x00000C, "Member 'PyAbility_101171_OnLokiDisguiseTagUpdate::Exist' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.OnTargetDeath
// 0x0028 (0x0028 - 0x0000)
struct PyAbility_101171_OnTargetDeath final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierParameter;                                 // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_OnTargetDeath) == 0x000008, "Wrong alignment on PyAbility_101171_OnTargetDeath");
static_assert(sizeof(PyAbility_101171_OnTargetDeath) == 0x000028, "Wrong size on PyAbility_101171_OnTargetDeath");
static_assert(offsetof(PyAbility_101171_OnTargetDeath, DamageCauser) == 0x000000, "Member 'PyAbility_101171_OnTargetDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(PyAbility_101171_OnTargetDeath, TargetActor) == 0x000008, "Member 'PyAbility_101171_OnTargetDeath::TargetActor' has a wrong offset!");
static_assert(offsetof(PyAbility_101171_OnTargetDeath, ModifierParameter) == 0x000010, "Member 'PyAbility_101171_OnTargetDeath::ModifierParameter' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.OnTargetEndTask
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_101171_OnTargetEndTask final
{
public:
	class AActor*                                 Summoned;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_OnTargetEndTask) == 0x000008, "Wrong alignment on PyAbility_101171_OnTargetEndTask");
static_assert(sizeof(PyAbility_101171_OnTargetEndTask) == 0x000008, "Wrong size on PyAbility_101171_OnTargetEndTask");
static_assert(offsetof(PyAbility_101171_OnTargetEndTask, Summoned) == 0x000000, "Member 'PyAbility_101171_OnTargetEndTask::Summoned' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101171_K2_OnEndAbility final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_101171_K2_OnEndAbility");
static_assert(sizeof(PyAbility_101171_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_101171_K2_OnEndAbility");
static_assert(offsetof(PyAbility_101171_K2_OnEndAbility, bCancelled) == 0x000000, "Member 'PyAbility_101171_K2_OnEndAbility::bCancelled' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101171_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_101171_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_101171_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_101171_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_101171_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_101171_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.NativeOnMontageBlendOut
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101171_NativeOnMontageBlendOut final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_NativeOnMontageBlendOut) == 0x000008, "Wrong alignment on PyAbility_101171_NativeOnMontageBlendOut");
static_assert(sizeof(PyAbility_101171_NativeOnMontageBlendOut) == 0x000010, "Wrong size on PyAbility_101171_NativeOnMontageBlendOut");
static_assert(offsetof(PyAbility_101171_NativeOnMontageBlendOut, Tag) == 0x000000, "Member 'PyAbility_101171_NativeOnMontageBlendOut::Tag' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101171_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_101171_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_101171_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_101171_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_101171_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_101171_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101171_NativeOnMontageCancelled final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_101171_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_101171_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_101171_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_101171_NativeOnMontageCancelled, Tag) == 0x000000, "Member 'PyAbility_101171_NativeOnMontageCancelled::Tag' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101171_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_101171_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_101171_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_101171_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_101171_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_101171_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_101171.PyAbility_101171.IsPrimaryAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101171_IsPrimaryAbility final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101171_IsPrimaryAbility) == 0x000001, "Wrong alignment on PyAbility_101171_IsPrimaryAbility");
static_assert(sizeof(PyAbility_101171_IsPrimaryAbility) == 0x000001, "Wrong size on PyAbility_101171_IsPrimaryAbility");
static_assert(offsetof(PyAbility_101171_IsPrimaryAbility, ReturnValue) == 0x000000, "Member 'PyAbility_101171_IsPrimaryAbility::ReturnValue' has a wrong offset!");

}


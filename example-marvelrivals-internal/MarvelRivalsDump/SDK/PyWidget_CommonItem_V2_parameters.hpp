#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_CommonItem_V2

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemIcon
// 0x0038 (0x0038 - 0x0000)
struct PyWidget_CommonItem_SetItemIcon final
{
public:
	class UTexture2D*                             Img_Icon;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Image_Icon_Soft;                                   // 0x0008(0x0030)(Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetItemIcon) == 0x000008, "Wrong alignment on PyWidget_CommonItem_SetItemIcon");
static_assert(sizeof(PyWidget_CommonItem_SetItemIcon) == 0x000038, "Wrong size on PyWidget_CommonItem_SetItemIcon");
static_assert(offsetof(PyWidget_CommonItem_SetItemIcon, Img_Icon) == 0x000000, "Member 'PyWidget_CommonItem_SetItemIcon::Img_Icon' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetItemIcon, Image_Icon_Soft) == 0x000008, "Member 'PyWidget_CommonItem_SetItemIcon::Image_Icon_Soft' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsNameVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsNameVisible final
{
public:
	bool                                          IsNameVisible_0;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsNameVisible) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsNameVisible");
static_assert(sizeof(PyWidget_CommonItem_SetIsNameVisible) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsNameVisible");
static_assert(offsetof(PyWidget_CommonItem_SetIsNameVisible, IsNameVisible_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsNameVisible::IsNameVisible_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemName
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_CommonItem_SetItemName final
{
public:
	class FText                                   ItemName_0;                                        // 0x0000(0x0018)(Parm)
};
static_assert(alignof(PyWidget_CommonItem_SetItemName) == 0x000008, "Wrong alignment on PyWidget_CommonItem_SetItemName");
static_assert(sizeof(PyWidget_CommonItem_SetItemName) == 0x000018, "Wrong size on PyWidget_CommonItem_SetItemName");
static_assert(offsetof(PyWidget_CommonItem_SetItemName, ItemName_0) == 0x000000, "Member 'PyWidget_CommonItem_SetItemName::ItemName_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetConvertNum
// 0x0020 (0x0020 - 0x0000)
struct PyWidget_CommonItem_SetConvertNum final
{
public:
	int32                                         ConvertNum;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrencyId;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Small;                                             // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetConvertNum) == 0x000008, "Wrong alignment on PyWidget_CommonItem_SetConvertNum");
static_assert(sizeof(PyWidget_CommonItem_SetConvertNum) == 0x000020, "Wrong size on PyWidget_CommonItem_SetConvertNum");
static_assert(offsetof(PyWidget_CommonItem_SetConvertNum, ConvertNum) == 0x000000, "Member 'PyWidget_CommonItem_SetConvertNum::ConvertNum' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetConvertNum, CurrencyId) == 0x000008, "Member 'PyWidget_CommonItem_SetConvertNum::CurrencyId' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetConvertNum, Small) == 0x000018, "Member 'PyWidget_CommonItem_SetConvertNum::Small' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_OnItemSelectionChanged) == 0x000001, "Wrong alignment on PyWidget_CommonItem_OnItemSelectionChanged");
static_assert(sizeof(PyWidget_CommonItem_OnItemSelectionChanged) == 0x000001, "Wrong size on PyWidget_CommonItem_OnItemSelectionChanged");
static_assert(offsetof(PyWidget_CommonItem_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'PyWidget_CommonItem_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemObject
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_CommonItem_SetItemObject final
{
public:
	class UObject*                                ItemObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetItemObject) == 0x000008, "Wrong alignment on PyWidget_CommonItem_SetItemObject");
static_assert(sizeof(PyWidget_CommonItem_SetItemObject) == 0x000008, "Wrong size on PyWidget_CommonItem_SetItemObject");
static_assert(offsetof(PyWidget_CommonItem_SetItemObject, ItemObject) == 0x000000, "Member 'PyWidget_CommonItem_SetItemObject::ItemObject' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_CommonItem_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_CommonItem_OnAnimationFinished");
static_assert(sizeof(PyWidget_CommonItem_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_CommonItem_OnAnimationFinished");
static_assert(offsetof(PyWidget_CommonItem_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_CommonItem_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsFocusable
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsFocusable final
{
public:
	bool                                          IsFocusable;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsFocusable) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsFocusable");
static_assert(sizeof(PyWidget_CommonItem_SetIsFocusable) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsFocusable");
static_assert(offsetof(PyWidget_CommonItem_SetIsFocusable, IsFocusable) == 0x000000, "Member 'PyWidget_CommonItem_SetIsFocusable::IsFocusable' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.OnFocusReceived
// 0x0100 (0x0100 - 0x0000)
struct PyWidget_CommonItem_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00C0)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyWidget_CommonItem_OnFocusReceived) == 0x000008, "Wrong alignment on PyWidget_CommonItem_OnFocusReceived");
static_assert(sizeof(PyWidget_CommonItem_OnFocusReceived) == 0x000100, "Wrong size on PyWidget_CommonItem_OnFocusReceived");
static_assert(offsetof(PyWidget_CommonItem_OnFocusReceived, MyGeometry) == 0x000000, "Member 'PyWidget_CommonItem_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'PyWidget_CommonItem_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_OnFocusReceived, ReturnValue) == 0x000040, "Member 'PyWidget_CommonItem_OnFocusReceived::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsHover");
static_assert(sizeof(PyWidget_CommonItem_SetIsHover) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsHover");
static_assert(offsetof(PyWidget_CommonItem_SetIsHover, IsHover_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsHover::IsHover_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemData
// 0x0020 (0x0020 - 0x0000)
struct PyWidget_CommonItem_SetItemData final
{
public:
	class FString                                 ItemId_0;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	EItemType                                     ItemType_0;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemNum_0;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Multiple;                                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Small;                                             // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetItemData) == 0x000008, "Wrong alignment on PyWidget_CommonItem_SetItemData");
static_assert(sizeof(PyWidget_CommonItem_SetItemData) == 0x000020, "Wrong size on PyWidget_CommonItem_SetItemData");
static_assert(offsetof(PyWidget_CommonItem_SetItemData, ItemId_0) == 0x000000, "Member 'PyWidget_CommonItem_SetItemData::ItemId_0' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetItemData, ItemType_0) == 0x000010, "Member 'PyWidget_CommonItem_SetItemData::ItemType_0' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetItemData, ItemNum_0) == 0x000014, "Member 'PyWidget_CommonItem_SetItemData::ItemNum_0' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetItemData, Multiple) == 0x000018, "Member 'PyWidget_CommonItem_SetItemData::Multiple' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetItemData, Small) == 0x00001C, "Member 'PyWidget_CommonItem_SetItemData::Small' has a wrong offset!");

// DelegateFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.OnItemClicked__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_CommonItem_OnItemClicked__DelegateSignature final
{
public:
	class FString                                 ItemId_0;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	EItemType                                     ItemType_0;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_OnItemClicked__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_CommonItem_OnItemClicked__DelegateSignature");
static_assert(sizeof(PyWidget_CommonItem_OnItemClicked__DelegateSignature) == 0x000018, "Wrong size on PyWidget_CommonItem_OnItemClicked__DelegateSignature");
static_assert(offsetof(PyWidget_CommonItem_OnItemClicked__DelegateSignature, ItemId_0) == 0x000000, "Member 'PyWidget_CommonItem_OnItemClicked__DelegateSignature::ItemId_0' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_OnItemClicked__DelegateSignature, ItemType_0) == 0x000010, "Member 'PyWidget_CommonItem_OnItemClicked__DelegateSignature::ItemType_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemIconQuality
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetItemIconQuality final
{
public:
	EItemQualityType                              ItemQuality;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetItemIconQuality) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetItemIconQuality");
static_assert(sizeof(PyWidget_CommonItem_SetItemIconQuality) == 0x000001, "Wrong size on PyWidget_CommonItem_SetItemIconQuality");
static_assert(offsetof(PyWidget_CommonItem_SetItemIconQuality, ItemQuality) == 0x000000, "Member 'PyWidget_CommonItem_SetItemIconQuality::ItemQuality' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemNum
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_CommonItem_SetItemNum final
{
public:
	int32                                         ItemNum_0;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Multiple;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetItemNum) == 0x000004, "Wrong alignment on PyWidget_CommonItem_SetItemNum");
static_assert(sizeof(PyWidget_CommonItem_SetItemNum) == 0x000008, "Wrong size on PyWidget_CommonItem_SetItemNum");
static_assert(offsetof(PyWidget_CommonItem_SetItemNum, ItemNum_0) == 0x000000, "Member 'PyWidget_CommonItem_SetItemNum::ItemNum_0' has a wrong offset!");
static_assert(offsetof(PyWidget_CommonItem_SetItemNum, Multiple) == 0x000004, "Member 'PyWidget_CommonItem_SetItemNum::Multiple' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsNumVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsNumVisible final
{
public:
	bool                                          IsNumVisible;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsNumVisible) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsNumVisible");
static_assert(sizeof(PyWidget_CommonItem_SetIsNumVisible) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsNumVisible");
static_assert(offsetof(PyWidget_CommonItem_SetIsNumVisible, IsNumVisible) == 0x000000, "Member 'PyWidget_CommonItem_SetIsNumVisible::IsNumVisible' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsEmpty
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsEmpty final
{
public:
	bool                                          IsEmpty_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsEmpty) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsEmpty");
static_assert(sizeof(PyWidget_CommonItem_SetIsEmpty) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsEmpty");
static_assert(offsetof(PyWidget_CommonItem_SetIsEmpty, IsEmpty_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsEmpty::IsEmpty_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsNeedClick
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsNeedClick final
{
public:
	bool                                          IsNeedClick_0;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsNeedClick) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsNeedClick");
static_assert(sizeof(PyWidget_CommonItem_SetIsNeedClick) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsNeedClick");
static_assert(offsetof(PyWidget_CommonItem_SetIsNeedClick, IsNeedClick_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsNeedClick::IsNeedClick_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsNeedTips
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsNeedTips final
{
public:
	bool                                          IsNeedTips_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsNeedTips) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsNeedTips");
static_assert(sizeof(PyWidget_CommonItem_SetIsNeedTips) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsNeedTips");
static_assert(offsetof(PyWidget_CommonItem_SetIsNeedTips, IsNeedTips_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsNeedTips::IsNeedTips_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsSelected
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsSelected) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsSelected");
static_assert(sizeof(PyWidget_CommonItem_SetIsSelected) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsSelected");
static_assert(offsetof(PyWidget_CommonItem_SetIsSelected, IsSelected_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsSelected::IsSelected_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsSelectedImmediately
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsSelectedImmediately final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsSelectedImmediately) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsSelectedImmediately");
static_assert(sizeof(PyWidget_CommonItem_SetIsSelectedImmediately) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsSelectedImmediately");
static_assert(offsetof(PyWidget_CommonItem_SetIsSelectedImmediately, IsSelected_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsSelectedImmediately::IsSelected_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsGot
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsGot final
{
public:
	bool                                          IsGot_0;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsGot) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsGot");
static_assert(sizeof(PyWidget_CommonItem_SetIsGot) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsGot");
static_assert(offsetof(PyWidget_CommonItem_SetIsGot, IsGot_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsGot::IsGot_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsExpire
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsExpire final
{
public:
	bool                                          IsExpire_0;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsExpire) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsExpire");
static_assert(sizeof(PyWidget_CommonItem_SetIsExpire) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsExpire");
static_assert(offsetof(PyWidget_CommonItem_SetIsExpire, IsExpire_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsExpire::IsExpire_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsShowRed
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsShowRed final
{
public:
	bool                                          IsShowRed_0;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsShowRed) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsShowRed");
static_assert(sizeof(PyWidget_CommonItem_SetIsShowRed) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsShowRed");
static_assert(offsetof(PyWidget_CommonItem_SetIsShowRed, IsShowRed_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsShowRed::IsShowRed_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsActivity
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsActivity final
{
public:
	bool                                          IsActivity;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsActivity) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsActivity");
static_assert(sizeof(PyWidget_CommonItem_SetIsActivity) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsActivity");
static_assert(offsetof(PyWidget_CommonItem_SetIsActivity, IsActivity) == 0x000000, "Member 'PyWidget_CommonItem_SetIsActivity::IsActivity' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsLocked
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsLocked final
{
public:
	bool                                          IsLocked_0;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsLocked) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsLocked");
static_assert(sizeof(PyWidget_CommonItem_SetIsLocked) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsLocked");
static_assert(offsetof(PyWidget_CommonItem_SetIsLocked, IsLocked_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsLocked::IsLocked_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsEquipped final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsEquipped) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsEquipped");
static_assert(sizeof(PyWidget_CommonItem_SetIsEquipped) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsEquipped");
static_assert(offsetof(PyWidget_CommonItem_SetIsEquipped, IsEquipped_0) == 0x000000, "Member 'PyWidget_CommonItem_SetIsEquipped::IsEquipped_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetItemSize
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_CommonItem_SetItemSize final
{
public:
	struct FVector2D                              ItemSize_0;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetItemSize) == 0x000008, "Wrong alignment on PyWidget_CommonItem_SetItemSize");
static_assert(sizeof(PyWidget_CommonItem_SetItemSize) == 0x000010, "Wrong size on PyWidget_CommonItem_SetItemSize");
static_assert(offsetof(PyWidget_CommonItem_SetItemSize, ItemSize_0) == 0x000000, "Member 'PyWidget_CommonItem_SetItemSize::ItemSize_0' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsOverlay
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsOverlay final
{
public:
	bool                                          IsOverlay;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsOverlay) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsOverlay");
static_assert(sizeof(PyWidget_CommonItem_SetIsOverlay) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsOverlay");
static_assert(offsetof(PyWidget_CommonItem_SetIsOverlay, IsOverlay) == 0x000000, "Member 'PyWidget_CommonItem_SetIsOverlay::IsOverlay' has a wrong offset!");

// PythonFunction PyWidget_CommonItem_V2.PyWidget_CommonItem.SetIsNewReddotType
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_CommonItem_SetIsNewReddotType final
{
public:
	bool                                          IsNewReddotType;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_CommonItem_SetIsNewReddotType) == 0x000001, "Wrong alignment on PyWidget_CommonItem_SetIsNewReddotType");
static_assert(sizeof(PyWidget_CommonItem_SetIsNewReddotType) == 0x000001, "Wrong size on PyWidget_CommonItem_SetIsNewReddotType");
static_assert(offsetof(PyWidget_CommonItem_SetIsNewReddotType, IsNewReddotType) == 0x000000, "Member 'PyWidget_CommonItem_SetIsNewReddotType::IsNewReddotType' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyMarvelAIController

#include "Basic.hpp"

#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyMarvelAIController.PyMarvelAIController.PyDebugCameraCalculate_2
// 0x0008 (0x0008 - 0x0000)
struct PyMarvelAIController_PyDebugCameraCalculate_2 final
{
public:
	class AMarvelBaseCharacter*                   InPawn;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_PyDebugCameraCalculate_2) == 0x000008, "Wrong alignment on PyMarvelAIController_PyDebugCameraCalculate_2");
static_assert(sizeof(PyMarvelAIController_PyDebugCameraCalculate_2) == 0x000008, "Wrong size on PyMarvelAIController_PyDebugCameraCalculate_2");
static_assert(offsetof(PyMarvelAIController_PyDebugCameraCalculate_2, InPawn) == 0x000000, "Member 'PyMarvelAIController_PyDebugCameraCalculate_2::InPawn' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct PyMarvelAIController_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_ReceivePossess) == 0x000008, "Wrong alignment on PyMarvelAIController_ReceivePossess");
static_assert(sizeof(PyMarvelAIController_ReceivePossess) == 0x000008, "Wrong size on PyMarvelAIController_ReceivePossess");
static_assert(offsetof(PyMarvelAIController_ReceivePossess, PossessedPawn) == 0x000000, "Member 'PyMarvelAIController_ReceivePossess::PossessedPawn' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct PyMarvelAIController_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_ReceiveUnPossess) == 0x000008, "Wrong alignment on PyMarvelAIController_ReceiveUnPossess");
static_assert(sizeof(PyMarvelAIController_ReceiveUnPossess) == 0x000008, "Wrong size on PyMarvelAIController_ReceiveUnPossess");
static_assert(offsetof(PyMarvelAIController_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'PyMarvelAIController_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.IsFlyAI
// 0x0001 (0x0001 - 0x0000)
struct PyMarvelAIController_IsFlyAI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_IsFlyAI) == 0x000001, "Wrong alignment on PyMarvelAIController_IsFlyAI");
static_assert(sizeof(PyMarvelAIController_IsFlyAI) == 0x000001, "Wrong size on PyMarvelAIController_IsFlyAI");
static_assert(offsetof(PyMarvelAIController_IsFlyAI, ReturnValue) == 0x000000, "Member 'PyMarvelAIController_IsFlyAI::ReturnValue' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.OnAIDeath
// 0x0028 (0x0028 - 0x0000)
struct PyMarvelAIController_OnAIDeath final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParameterHandle;                                   // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_OnAIDeath) == 0x000008, "Wrong alignment on PyMarvelAIController_OnAIDeath");
static_assert(sizeof(PyMarvelAIController_OnAIDeath) == 0x000028, "Wrong size on PyMarvelAIController_OnAIDeath");
static_assert(offsetof(PyMarvelAIController_OnAIDeath, InSourceAvatar) == 0x000000, "Member 'PyMarvelAIController_OnAIDeath::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyMarvelAIController_OnAIDeath, InTargetAvatar) == 0x000008, "Member 'PyMarvelAIController_OnAIDeath::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyMarvelAIController_OnAIDeath, ParameterHandle) == 0x000010, "Member 'PyMarvelAIController_OnAIDeath::ParameterHandle' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.OnAIReborn
// 0x0740 (0x0740 - 0x0000)
struct PyMarvelAIController_OnAIReborn final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterRebornParam                  RebornParam;                                       // 0x0010(0x0730)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyMarvelAIController_OnAIReborn) == 0x000010, "Wrong alignment on PyMarvelAIController_OnAIReborn");
static_assert(sizeof(PyMarvelAIController_OnAIReborn) == 0x000740, "Wrong size on PyMarvelAIController_OnAIReborn");
static_assert(offsetof(PyMarvelAIController_OnAIReborn, TargetActor) == 0x000000, "Member 'PyMarvelAIController_OnAIReborn::TargetActor' has a wrong offset!");
static_assert(offsetof(PyMarvelAIController_OnAIReborn, RebornParam) == 0x000010, "Member 'PyMarvelAIController_OnAIReborn::RebornParam' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.OnAIMayNeedChangeHero
// 0x0008 (0x0008 - 0x0000)
struct PyMarvelAIController_OnAIMayNeedChangeHero final
{
public:
	class AMarvelPlayerState*                     PlayerState_0;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_OnAIMayNeedChangeHero) == 0x000008, "Wrong alignment on PyMarvelAIController_OnAIMayNeedChangeHero");
static_assert(sizeof(PyMarvelAIController_OnAIMayNeedChangeHero) == 0x000008, "Wrong size on PyMarvelAIController_OnAIMayNeedChangeHero");
static_assert(offsetof(PyMarvelAIController_OnAIMayNeedChangeHero, PlayerState_0) == 0x000000, "Member 'PyMarvelAIController_OnAIMayNeedChangeHero::PlayerState_0' has a wrong offset!");

// PythonFunction PyMarvelAIController.PyMarvelAIController.UpdatePreviewHeroID
// 0x0008 (0x0008 - 0x0000)
struct PyMarvelAIController_UpdatePreviewHeroID final
{
public:
	int32                                         NewHeroID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediate;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyMarvelAIController_UpdatePreviewHeroID) == 0x000004, "Wrong alignment on PyMarvelAIController_UpdatePreviewHeroID");
static_assert(sizeof(PyMarvelAIController_UpdatePreviewHeroID) == 0x000008, "Wrong size on PyMarvelAIController_UpdatePreviewHeroID");
static_assert(offsetof(PyMarvelAIController_UpdatePreviewHeroID, NewHeroID) == 0x000000, "Member 'PyMarvelAIController_UpdatePreviewHeroID::NewHeroID' has a wrong offset!");
static_assert(offsetof(PyMarvelAIController_UpdatePreviewHeroID, Immediate) == 0x000004, "Member 'PyMarvelAIController_UpdatePreviewHeroID::Immediate' has a wrong offset!");

}


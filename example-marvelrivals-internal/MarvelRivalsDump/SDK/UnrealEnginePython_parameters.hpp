#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEnginePython

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UnrealEnginePython_structs.hpp"


namespace SDK::Params
{

// Function UnrealEnginePython.PyActor.CallPythonActorMethod
// 0x0020 (0x0020 - 0x0000)
struct PyActor_CallPythonActorMethod final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyActor_CallPythonActorMethod) == 0x000008, "Wrong alignment on PyActor_CallPythonActorMethod");
//static_assert(sizeof(PyActor_CallPythonActorMethod) == 0x000020, "Wrong size on PyActor_CallPythonActorMethod");
//static_assert(offsetof(PyActor_CallPythonActorMethod, Method_Name) == 0x000000, "Member 'PyActor_CallPythonActorMethod::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyActor_CallPythonActorMethod, Args) == 0x000010, "Member 'PyActor_CallPythonActorMethod::Args' has a wrong offset!");

// Function UnrealEnginePython.PyActor.CallPythonActorMethodBool
// 0x0028 (0x0028 - 0x0000)
struct PyActor_CallPythonActorMethodBool final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PyActor_CallPythonActorMethodBool) == 0x000008, "Wrong alignment on PyActor_CallPythonActorMethodBool");
//static_assert(sizeof(PyActor_CallPythonActorMethodBool) == 0x000028, "Wrong size on PyActor_CallPythonActorMethodBool");
//static_assert(offsetof(PyActor_CallPythonActorMethodBool, Method_Name) == 0x000000, "Member 'PyActor_CallPythonActorMethodBool::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyActor_CallPythonActorMethodBool, Args) == 0x000010, "Member 'PyActor_CallPythonActorMethodBool::Args' has a wrong offset!");
//static_assert(offsetof(PyActor_CallPythonActorMethodBool, ReturnValue) == 0x000020, "Member 'PyActor_CallPythonActorMethodBool::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyActor.CallPythonActorMethodString
// 0x0030 (0x0030 - 0x0000)
struct PyActor_CallPythonActorMethodString final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyActor_CallPythonActorMethodString) == 0x000008, "Wrong alignment on PyActor_CallPythonActorMethodString");
//static_assert(sizeof(PyActor_CallPythonActorMethodString) == 0x000030, "Wrong size on PyActor_CallPythonActorMethodString");
//static_assert(offsetof(PyActor_CallPythonActorMethodString, Method_Name) == 0x000000, "Member 'PyActor_CallPythonActorMethodString::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyActor_CallPythonActorMethodString, Args) == 0x000010, "Member 'PyActor_CallPythonActorMethodString::Args' has a wrong offset!");
//static_assert(offsetof(PyActor_CallPythonActorMethodString, ReturnValue) == 0x000020, "Member 'PyActor_CallPythonActorMethodString::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethod
// 0x0020 (0x0020 - 0x0000)
struct PyCharacter_CallPyCharacterMethod final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_CallPyCharacterMethod) == 0x000008, "Wrong alignment on PyCharacter_CallPyCharacterMethod");
//static_assert(sizeof(PyCharacter_CallPyCharacterMethod) == 0x000020, "Wrong size on PyCharacter_CallPyCharacterMethod");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethod, Method_Name) == 0x000000, "Member 'PyCharacter_CallPyCharacterMethod::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethod, Args) == 0x000010, "Member 'PyCharacter_CallPyCharacterMethod::Args' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethodBool
// 0x0028 (0x0028 - 0x0000)
struct PyCharacter_CallPyCharacterMethodBool final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PyCharacter_CallPyCharacterMethodBool) == 0x000008, "Wrong alignment on PyCharacter_CallPyCharacterMethodBool");
//static_assert(sizeof(PyCharacter_CallPyCharacterMethodBool) == 0x000028, "Wrong size on PyCharacter_CallPyCharacterMethodBool");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodBool, Method_Name) == 0x000000, "Member 'PyCharacter_CallPyCharacterMethodBool::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodBool, Args) == 0x000010, "Member 'PyCharacter_CallPyCharacterMethodBool::Args' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodBool, ReturnValue) == 0x000020, "Member 'PyCharacter_CallPyCharacterMethodBool::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethodFloat
// 0x0028 (0x0028 - 0x0000)
struct PyCharacter_CallPyCharacterMethodFloat final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PyCharacter_CallPyCharacterMethodFloat) == 0x000008, "Wrong alignment on PyCharacter_CallPyCharacterMethodFloat");
//static_assert(sizeof(PyCharacter_CallPyCharacterMethodFloat) == 0x000028, "Wrong size on PyCharacter_CallPyCharacterMethodFloat");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodFloat, Method_Name) == 0x000000, "Member 'PyCharacter_CallPyCharacterMethodFloat::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodFloat, Args) == 0x000010, "Member 'PyCharacter_CallPyCharacterMethodFloat::Args' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodFloat, ReturnValue) == 0x000020, "Member 'PyCharacter_CallPyCharacterMethodFloat::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.CallPyCharacterMethodString
// 0x0030 (0x0030 - 0x0000)
struct PyCharacter_CallPyCharacterMethodString final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_CallPyCharacterMethodString) == 0x000008, "Wrong alignment on PyCharacter_CallPyCharacterMethodString");
//static_assert(sizeof(PyCharacter_CallPyCharacterMethodString) == 0x000030, "Wrong size on PyCharacter_CallPyCharacterMethodString");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodString, Method_Name) == 0x000000, "Member 'PyCharacter_CallPyCharacterMethodString::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodString, Args) == 0x000010, "Member 'PyCharacter_CallPyCharacterMethodString::Args' has a wrong offset!");
//static_assert(offsetof(PyCharacter_CallPyCharacterMethodString, ReturnValue) == 0x000020, "Member 'PyCharacter_CallPyCharacterMethodString::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrBool
// 0x0010 (0x0010 - 0x0000)
struct PyCharacter_SetPythonAttrBool final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Boolean;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PyCharacter_SetPythonAttrBool) == 0x000004, "Wrong alignment on PyCharacter_SetPythonAttrBool");
//static_assert(sizeof(PyCharacter_SetPythonAttrBool) == 0x000010, "Wrong size on PyCharacter_SetPythonAttrBool");
//static_assert(offsetof(PyCharacter_SetPythonAttrBool, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrBool::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrBool, Boolean) == 0x00000C, "Member 'PyCharacter_SetPythonAttrBool::Boolean' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrFloat
// 0x0010 (0x0010 - 0x0000)
struct PyCharacter_SetPythonAttrFloat final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Float;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_SetPythonAttrFloat) == 0x000004, "Wrong alignment on PyCharacter_SetPythonAttrFloat");
//static_assert(sizeof(PyCharacter_SetPythonAttrFloat) == 0x000010, "Wrong size on PyCharacter_SetPythonAttrFloat");
//static_assert(offsetof(PyCharacter_SetPythonAttrFloat, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrFloat::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrFloat, Float) == 0x00000C, "Member 'PyCharacter_SetPythonAttrFloat::Float' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrInt
// 0x0010 (0x0010 - 0x0000)
struct PyCharacter_SetPythonAttrInt final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Integer;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_SetPythonAttrInt) == 0x000004, "Wrong alignment on PyCharacter_SetPythonAttrInt");
//static_assert(sizeof(PyCharacter_SetPythonAttrInt) == 0x000010, "Wrong size on PyCharacter_SetPythonAttrInt");
//static_assert(offsetof(PyCharacter_SetPythonAttrInt, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrInt::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrInt, Integer) == 0x00000C, "Member 'PyCharacter_SetPythonAttrInt::Integer' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrObject
// 0x0018 (0x0018 - 0x0000)
struct PyCharacter_SetPythonAttrObject final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_SetPythonAttrObject) == 0x000008, "Wrong alignment on PyCharacter_SetPythonAttrObject");
//static_assert(sizeof(PyCharacter_SetPythonAttrObject) == 0x000018, "Wrong size on PyCharacter_SetPythonAttrObject");
//static_assert(offsetof(PyCharacter_SetPythonAttrObject, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrObject::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrObject, Object) == 0x000010, "Member 'PyCharacter_SetPythonAttrObject::Object' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrRotator
// 0x0028 (0x0028 - 0x0000)
struct PyCharacter_SetPythonAttrRotator final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotator;                                           // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_SetPythonAttrRotator) == 0x000008, "Wrong alignment on PyCharacter_SetPythonAttrRotator");
//static_assert(sizeof(PyCharacter_SetPythonAttrRotator) == 0x000028, "Wrong size on PyCharacter_SetPythonAttrRotator");
//static_assert(offsetof(PyCharacter_SetPythonAttrRotator, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrRotator::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrRotator, Rotator) == 0x000010, "Member 'PyCharacter_SetPythonAttrRotator::Rotator' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrString
// 0x0020 (0x0020 - 0x0000)
struct PyCharacter_SetPythonAttrString final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 String;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_SetPythonAttrString) == 0x000008, "Wrong alignment on PyCharacter_SetPythonAttrString");
//static_assert(sizeof(PyCharacter_SetPythonAttrString) == 0x000020, "Wrong size on PyCharacter_SetPythonAttrString");
//static_assert(offsetof(PyCharacter_SetPythonAttrString, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrString::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrString, String) == 0x000010, "Member 'PyCharacter_SetPythonAttrString::String' has a wrong offset!");

// Function UnrealEnginePython.PyCharacter.SetPythonAttrVector
// 0x0028 (0x0028 - 0x0000)
struct PyCharacter_SetPythonAttrVector final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vector;                                            // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyCharacter_SetPythonAttrVector) == 0x000008, "Wrong alignment on PyCharacter_SetPythonAttrVector");
//static_assert(sizeof(PyCharacter_SetPythonAttrVector) == 0x000028, "Wrong size on PyCharacter_SetPythonAttrVector");
//static_assert(offsetof(PyCharacter_SetPythonAttrVector, Attr) == 0x000000, "Member 'PyCharacter_SetPythonAttrVector::Attr' has a wrong offset!");
//static_assert(offsetof(PyCharacter_SetPythonAttrVector, Vector) == 0x000010, "Member 'PyCharacter_SetPythonAttrVector::Vector' has a wrong offset!");

// Function UnrealEnginePython.PyHUD.CallPythonHUDMethod
// 0x0020 (0x0020 - 0x0000)
struct PyHUD_CallPythonHUDMethod final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyHUD_CallPythonHUDMethod) == 0x000008, "Wrong alignment on PyHUD_CallPythonHUDMethod");
//static_assert(sizeof(PyHUD_CallPythonHUDMethod) == 0x000020, "Wrong size on PyHUD_CallPythonHUDMethod");
//static_assert(offsetof(PyHUD_CallPythonHUDMethod, Method_Name) == 0x000000, "Member 'PyHUD_CallPythonHUDMethod::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyHUD_CallPythonHUDMethod, Args) == 0x000010, "Member 'PyHUD_CallPythonHUDMethod::Args' has a wrong offset!");

// Function UnrealEnginePython.PyHUD.CallPythonHUDMethodBool
// 0x0028 (0x0028 - 0x0000)
struct PyHUD_CallPythonHUDMethodBool final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PyHUD_CallPythonHUDMethodBool) == 0x000008, "Wrong alignment on PyHUD_CallPythonHUDMethodBool");
//static_assert(sizeof(PyHUD_CallPythonHUDMethodBool) == 0x000028, "Wrong size on PyHUD_CallPythonHUDMethodBool");
//static_assert(offsetof(PyHUD_CallPythonHUDMethodBool, Method_Name) == 0x000000, "Member 'PyHUD_CallPythonHUDMethodBool::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyHUD_CallPythonHUDMethodBool, Args) == 0x000010, "Member 'PyHUD_CallPythonHUDMethodBool::Args' has a wrong offset!");
//static_assert(offsetof(PyHUD_CallPythonHUDMethodBool, ReturnValue) == 0x000020, "Member 'PyHUD_CallPythonHUDMethodBool::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyHUD.CallPythonHUDMethodString
// 0x0030 (0x0030 - 0x0000)
struct PyHUD_CallPythonHUDMethodString final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyHUD_CallPythonHUDMethodString) == 0x000008, "Wrong alignment on PyHUD_CallPythonHUDMethodString");
//static_assert(sizeof(PyHUD_CallPythonHUDMethodString) == 0x000030, "Wrong size on PyHUD_CallPythonHUDMethodString");
//static_assert(offsetof(PyHUD_CallPythonHUDMethodString, Method_Name) == 0x000000, "Member 'PyHUD_CallPythonHUDMethodString::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyHUD_CallPythonHUDMethodString, Args) == 0x000010, "Member 'PyHUD_CallPythonHUDMethodString::Args' has a wrong offset!");
//static_assert(offsetof(PyHUD_CallPythonHUDMethodString, ReturnValue) == 0x000020, "Member 'PyHUD_CallPythonHUDMethodString::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyPawn.CallPythonPawnMethod
// 0x000C (0x000C - 0x0000)
struct PyPawn_CallPythonPawnMethod final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyPawn_CallPythonPawnMethod) == 0x000004, "Wrong alignment on PyPawn_CallPythonPawnMethod");
//static_assert(sizeof(PyPawn_CallPythonPawnMethod) == 0x00000C, "Wrong size on PyPawn_CallPythonPawnMethod");
//static_assert(offsetof(PyPawn_CallPythonPawnMethod, Method_Name) == 0x000000, "Member 'PyPawn_CallPythonPawnMethod::Method_Name' has a wrong offset!");

// Function UnrealEnginePython.PyPawn.CallPythonPawnMethodBool
// 0x0010 (0x0010 - 0x0000)
struct PyPawn_CallPythonPawnMethodBool final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PyPawn_CallPythonPawnMethodBool) == 0x000004, "Wrong alignment on PyPawn_CallPythonPawnMethodBool");
//static_assert(sizeof(PyPawn_CallPythonPawnMethodBool) == 0x000010, "Wrong size on PyPawn_CallPythonPawnMethodBool");
//static_assert(offsetof(PyPawn_CallPythonPawnMethodBool, Method_Name) == 0x000000, "Member 'PyPawn_CallPythonPawnMethodBool::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyPawn_CallPythonPawnMethodBool, ReturnValue) == 0x00000C, "Member 'PyPawn_CallPythonPawnMethodBool::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PyPawn.CallPythonPawnMethodString
// 0x0020 (0x0020 - 0x0000)
struct PyPawn_CallPythonPawnMethodString final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyPawn_CallPythonPawnMethodString) == 0x000008, "Wrong alignment on PyPawn_CallPythonPawnMethodString");
//static_assert(sizeof(PyPawn_CallPythonPawnMethodString) == 0x000020, "Wrong size on PyPawn_CallPythonPawnMethodString");
//static_assert(offsetof(PyPawn_CallPythonPawnMethodString, Method_Name) == 0x000000, "Member 'PyPawn_CallPythonPawnMethodString::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyPawn_CallPythonPawnMethodString, ReturnValue) == 0x000010, "Member 'PyPawn_CallPythonPawnMethodString::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.AddRefCount
// 0x0008 (0x0008 - 0x0000)
struct TestOnlyObject_AddRefCount final
{
public:
	struct FTestOnlyRefCount                      InOutRefCount;                                     // 0x0000(0x0004)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_AddRefCount) == 0x000004, "Wrong alignment on TestOnlyObject_AddRefCount");
//static_assert(sizeof(TestOnlyObject_AddRefCount) == 0x000008, "Wrong size on TestOnlyObject_AddRefCount");
//static_assert(offsetof(TestOnlyObject_AddRefCount, InOutRefCount) == 0x000000, "Member 'TestOnlyObject_AddRefCount::InOutRefCount' has a wrong offset!");
//static_assert(offsetof(TestOnlyObject_AddRefCount, ReturnValue) == 0x000004, "Member 'TestOnlyObject_AddRefCount::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.GetOwnedRefs
// 0x0008 (0x0008 - 0x0000)
struct TestOnlyObject_GetOwnedRefs final
{
public:
	struct FTestOnlyRefCount                      RefCount;                                          // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_GetOwnedRefs) == 0x000004, "Wrong alignment on TestOnlyObject_GetOwnedRefs");
//static_assert(sizeof(TestOnlyObject_GetOwnedRefs) == 0x000008, "Wrong size on TestOnlyObject_GetOwnedRefs");
//static_assert(offsetof(TestOnlyObject_GetOwnedRefs, RefCount) == 0x000000, "Member 'TestOnlyObject_GetOwnedRefs::RefCount' has a wrong offset!");
//static_assert(offsetof(TestOnlyObject_GetOwnedRefs, ReturnValue) == 0x000004, "Member 'TestOnlyObject_GetOwnedRefs::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.GetTotalRefs
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_GetTotalRefs final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_GetTotalRefs) == 0x000004, "Wrong alignment on TestOnlyObject_GetTotalRefs");
//static_assert(sizeof(TestOnlyObject_GetTotalRefs) == 0x000004, "Wrong size on TestOnlyObject_GetTotalRefs");
//static_assert(offsetof(TestOnlyObject_GetTotalRefs, ReturnValue) == 0x000000, "Member 'TestOnlyObject_GetTotalRefs::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.NewRefCount
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_NewRefCount final
{
public:
	struct FTestOnlyRefCount                      ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_NewRefCount) == 0x000004, "Wrong alignment on TestOnlyObject_NewRefCount");
//static_assert(sizeof(TestOnlyObject_NewRefCount) == 0x000004, "Wrong size on TestOnlyObject_NewRefCount");
//static_assert(offsetof(TestOnlyObject_NewRefCount, ReturnValue) == 0x000000, "Member 'TestOnlyObject_NewRefCount::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.NewRefCount2
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_NewRefCount2 final
{
public:
	struct FTestOnlyRefCount                      ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_NewRefCount2) == 0x000004, "Wrong alignment on TestOnlyObject_NewRefCount2");
//static_assert(sizeof(TestOnlyObject_NewRefCount2) == 0x000004, "Wrong size on TestOnlyObject_NewRefCount2");
//static_assert(offsetof(TestOnlyObject_NewRefCount2, ReturnValue) == 0x000000, "Member 'TestOnlyObject_NewRefCount2::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.OutRefCount
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_OutRefCount final
{
public:
	struct FTestOnlyRefCount                      OutRefCount_0;                                     // 0x0000(0x0004)(Parm, OutParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_OutRefCount) == 0x000004, "Wrong alignment on TestOnlyObject_OutRefCount");
//static_assert(sizeof(TestOnlyObject_OutRefCount) == 0x000004, "Wrong size on TestOnlyObject_OutRefCount");
//static_assert(offsetof(TestOnlyObject_OutRefCount, OutRefCount_0) == 0x000000, "Member 'TestOnlyObject_OutRefCount::OutRefCount_0' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.OutRefCount2
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_OutRefCount2 final
{
public:
	struct FTestOnlyRefCount                      OutRefCount;                                       // 0x0000(0x0004)(Parm, OutParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_OutRefCount2) == 0x000004, "Wrong alignment on TestOnlyObject_OutRefCount2");
//static_assert(sizeof(TestOnlyObject_OutRefCount2) == 0x000004, "Wrong size on TestOnlyObject_OutRefCount2");
//static_assert(offsetof(TestOnlyObject_OutRefCount2, OutRefCount) == 0x000000, "Member 'TestOnlyObject_OutRefCount2::OutRefCount' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.OutRefCount_NoImpl
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_OutRefCount_NoImpl final
{
public:
	struct FTestOnlyRefCount                      OutRefCount;                                       // 0x0000(0x0004)(Parm, OutParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_OutRefCount_NoImpl) == 0x000004, "Wrong alignment on TestOnlyObject_OutRefCount_NoImpl");
//static_assert(sizeof(TestOnlyObject_OutRefCount_NoImpl) == 0x000004, "Wrong size on TestOnlyObject_OutRefCount_NoImpl");
//static_assert(offsetof(TestOnlyObject_OutRefCount_NoImpl, OutRefCount) == 0x000000, "Member 'TestOnlyObject_OutRefCount_NoImpl::OutRefCount' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.BP_NewRefCount
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_BP_NewRefCount final
{
public:
	struct FTestOnlyRefCount                      ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_BP_NewRefCount) == 0x000004, "Wrong alignment on TestOnlyObject_BP_NewRefCount");
//static_assert(sizeof(TestOnlyObject_BP_NewRefCount) == 0x000004, "Wrong size on TestOnlyObject_BP_NewRefCount");
//static_assert(offsetof(TestOnlyObject_BP_NewRefCount, ReturnValue) == 0x000000, "Member 'TestOnlyObject_BP_NewRefCount::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestOnlyObject.Call_BP_NewRefCount
// 0x0004 (0x0004 - 0x0000)
struct TestOnlyObject_Call_BP_NewRefCount final
{
public:
	struct FTestOnlyRefCount                      ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestOnlyObject_Call_BP_NewRefCount) == 0x000004, "Wrong alignment on TestOnlyObject_Call_BP_NewRefCount");
//static_assert(sizeof(TestOnlyObject_Call_BP_NewRefCount) == 0x000004, "Wrong size on TestOnlyObject_Call_BP_NewRefCount");
//static_assert(offsetof(TestOnlyObject_Call_BP_NewRefCount, ReturnValue) == 0x000000, "Member 'TestOnlyObject_Call_BP_NewRefCount::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonBlueprintFunctionLibrary.ExecutePythonScript
// 0x0010 (0x0010 - 0x0000)
struct PythonBlueprintFunctionLibrary_ExecutePythonScript final
{
public:
	class FString                                 Script;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonBlueprintFunctionLibrary_ExecutePythonScript) == 0x000008, "Wrong alignment on PythonBlueprintFunctionLibrary_ExecutePythonScript");
//static_assert(sizeof(PythonBlueprintFunctionLibrary_ExecutePythonScript) == 0x000010, "Wrong size on PythonBlueprintFunctionLibrary_ExecutePythonScript");
//static_assert(offsetof(PythonBlueprintFunctionLibrary_ExecutePythonScript, Script) == 0x000000, "Member 'PythonBlueprintFunctionLibrary_ExecutePythonScript::Script' has a wrong offset!");

// Function UnrealEnginePython.PythonBlueprintFunctionLibrary.ExecutePythonString
// 0x0010 (0x0010 - 0x0000)
struct PythonBlueprintFunctionLibrary_ExecutePythonString final
{
public:
	class FString                                 PythonCmd;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonBlueprintFunctionLibrary_ExecutePythonString) == 0x000008, "Wrong alignment on PythonBlueprintFunctionLibrary_ExecutePythonString");
//static_assert(sizeof(PythonBlueprintFunctionLibrary_ExecutePythonString) == 0x000010, "Wrong size on PythonBlueprintFunctionLibrary_ExecutePythonString");
//static_assert(offsetof(PythonBlueprintFunctionLibrary_ExecutePythonString, PythonCmd) == 0x000000, "Member 'PythonBlueprintFunctionLibrary_ExecutePythonString::PythonCmd' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethod
// 0x0020 (0x0020 - 0x0000)
struct PythonComponent_CallPythonComponentMethod final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethod) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethod");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethod) == 0x000020, "Wrong size on PythonComponent_CallPythonComponentMethod");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethod, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethod::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethod, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethod::Args' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodBool
// 0x0028 (0x0028 - 0x0000)
struct PythonComponent_CallPythonComponentMethodBool final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodBool) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodBool");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodBool) == 0x000028, "Wrong size on PythonComponent_CallPythonComponentMethodBool");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodBool, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodBool::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodBool, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodBool::Args' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodBool, ReturnValue) == 0x000020, "Member 'PythonComponent_CallPythonComponentMethodBool::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodFloat
// 0x0028 (0x0028 - 0x0000)
struct PythonComponent_CallPythonComponentMethodFloat final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodFloat) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodFloat");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodFloat) == 0x000028, "Wrong size on PythonComponent_CallPythonComponentMethodFloat");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodFloat, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodFloat::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodFloat, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodFloat::Args' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodFloat, ReturnValue) == 0x000020, "Member 'PythonComponent_CallPythonComponentMethodFloat::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodInt
// 0x0028 (0x0028 - 0x0000)
struct PythonComponent_CallPythonComponentMethodInt final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodInt) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodInt");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodInt) == 0x000028, "Wrong size on PythonComponent_CallPythonComponentMethodInt");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodInt, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodInt::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodInt, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodInt::Args' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodInt, ReturnValue) == 0x000020, "Member 'PythonComponent_CallPythonComponentMethodInt::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodMap
// 0x0070 (0x0070 - 0x0000)
struct PythonComponent_CallPythonComponentMethodMap final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            ReturnValue;                                       // 0x0020(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodMap) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodMap");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodMap) == 0x000070, "Wrong size on PythonComponent_CallPythonComponentMethodMap");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodMap, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodMap::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodMap, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodMap::Args' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodMap, ReturnValue) == 0x000020, "Member 'PythonComponent_CallPythonComponentMethodMap::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodObject
// 0x0020 (0x0020 - 0x0000)
struct PythonComponent_CallPythonComponentMethodObject final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Arg;                                               // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodObject) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodObject");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodObject) == 0x000020, "Wrong size on PythonComponent_CallPythonComponentMethodObject");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodObject, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodObject::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodObject, Arg) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodObject::Arg' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodObject, ReturnValue) == 0x000018, "Member 'PythonComponent_CallPythonComponentMethodObject::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodString
// 0x0030 (0x0030 - 0x0000)
struct PythonComponent_CallPythonComponentMethodString final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodString) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodString");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodString) == 0x000030, "Wrong size on PythonComponent_CallPythonComponentMethodString");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodString, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodString::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodString, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodString::Args' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodString, ReturnValue) == 0x000020, "Member 'PythonComponent_CallPythonComponentMethodString::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.CallPythonComponentMethodStringArray
// 0x0030 (0x0030 - 0x0000)
struct PythonComponent_CallPythonComponentMethodStringArray final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Output_strings;                                    // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_CallPythonComponentMethodStringArray) == 0x000008, "Wrong alignment on PythonComponent_CallPythonComponentMethodStringArray");
//static_assert(sizeof(PythonComponent_CallPythonComponentMethodStringArray) == 0x000030, "Wrong size on PythonComponent_CallPythonComponentMethodStringArray");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodStringArray, Method_Name) == 0x000000, "Member 'PythonComponent_CallPythonComponentMethodStringArray::Method_Name' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodStringArray, Args) == 0x000010, "Member 'PythonComponent_CallPythonComponentMethodStringArray::Args' has a wrong offset!");
//static_assert(offsetof(PythonComponent_CallPythonComponentMethodStringArray, Output_strings) == 0x000020, "Member 'PythonComponent_CallPythonComponentMethodStringArray::Output_strings' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrBool
// 0x0010 (0x0010 - 0x0000)
struct PythonComponent_SetPythonAttrBool final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Boolean;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(PythonComponent_SetPythonAttrBool) == 0x000004, "Wrong alignment on PythonComponent_SetPythonAttrBool");
//static_assert(sizeof(PythonComponent_SetPythonAttrBool) == 0x000010, "Wrong size on PythonComponent_SetPythonAttrBool");
//static_assert(offsetof(PythonComponent_SetPythonAttrBool, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrBool::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrBool, Boolean) == 0x00000C, "Member 'PythonComponent_SetPythonAttrBool::Boolean' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrFloat
// 0x0010 (0x0010 - 0x0000)
struct PythonComponent_SetPythonAttrFloat final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Float;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_SetPythonAttrFloat) == 0x000004, "Wrong alignment on PythonComponent_SetPythonAttrFloat");
//static_assert(sizeof(PythonComponent_SetPythonAttrFloat) == 0x000010, "Wrong size on PythonComponent_SetPythonAttrFloat");
//static_assert(offsetof(PythonComponent_SetPythonAttrFloat, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrFloat::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrFloat, Float) == 0x00000C, "Member 'PythonComponent_SetPythonAttrFloat::Float' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrInt
// 0x0010 (0x0010 - 0x0000)
struct PythonComponent_SetPythonAttrInt final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Integer;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_SetPythonAttrInt) == 0x000004, "Wrong alignment on PythonComponent_SetPythonAttrInt");
//static_assert(sizeof(PythonComponent_SetPythonAttrInt) == 0x000010, "Wrong size on PythonComponent_SetPythonAttrInt");
//static_assert(offsetof(PythonComponent_SetPythonAttrInt, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrInt::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrInt, Integer) == 0x00000C, "Member 'PythonComponent_SetPythonAttrInt::Integer' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrObject
// 0x0018 (0x0018 - 0x0000)
struct PythonComponent_SetPythonAttrObject final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_SetPythonAttrObject) == 0x000008, "Wrong alignment on PythonComponent_SetPythonAttrObject");
//static_assert(sizeof(PythonComponent_SetPythonAttrObject) == 0x000018, "Wrong size on PythonComponent_SetPythonAttrObject");
//static_assert(offsetof(PythonComponent_SetPythonAttrObject, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrObject::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrObject, Object) == 0x000010, "Member 'PythonComponent_SetPythonAttrObject::Object' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrRotator
// 0x0028 (0x0028 - 0x0000)
struct PythonComponent_SetPythonAttrRotator final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotator;                                           // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_SetPythonAttrRotator) == 0x000008, "Wrong alignment on PythonComponent_SetPythonAttrRotator");
//static_assert(sizeof(PythonComponent_SetPythonAttrRotator) == 0x000028, "Wrong size on PythonComponent_SetPythonAttrRotator");
//static_assert(offsetof(PythonComponent_SetPythonAttrRotator, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrRotator::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrRotator, Rotator) == 0x000010, "Member 'PythonComponent_SetPythonAttrRotator::Rotator' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrString
// 0x0020 (0x0020 - 0x0000)
struct PythonComponent_SetPythonAttrString final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 String;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_SetPythonAttrString) == 0x000008, "Wrong alignment on PythonComponent_SetPythonAttrString");
//static_assert(sizeof(PythonComponent_SetPythonAttrString) == 0x000020, "Wrong size on PythonComponent_SetPythonAttrString");
//static_assert(offsetof(PythonComponent_SetPythonAttrString, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrString::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrString, String) == 0x000010, "Member 'PythonComponent_SetPythonAttrString::String' has a wrong offset!");

// Function UnrealEnginePython.PythonComponent.SetPythonAttrVector
// 0x0028 (0x0028 - 0x0000)
struct PythonComponent_SetPythonAttrVector final
{
public:
	class FName                                   Attr;                                              // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vector;                                            // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PythonComponent_SetPythonAttrVector) == 0x000008, "Wrong alignment on PythonComponent_SetPythonAttrVector");
//static_assert(sizeof(PythonComponent_SetPythonAttrVector) == 0x000028, "Wrong size on PythonComponent_SetPythonAttrVector");
//static_assert(offsetof(PythonComponent_SetPythonAttrVector, Attr) == 0x000000, "Member 'PythonComponent_SetPythonAttrVector::Attr' has a wrong offset!");
//static_assert(offsetof(PythonComponent_SetPythonAttrVector, Vector) == 0x000010, "Member 'PythonComponent_SetPythonAttrVector::Vector' has a wrong offset!");

// Function UnrealEnginePython.PyUserWidget.CallPythonUserWidgetMethod
// 0x0020 (0x0020 - 0x0000)
struct PyUserWidget_CallPythonUserWidgetMethod final
{
public:
	class FName                                   Method_Name;                                       // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Args;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(PyUserWidget_CallPythonUserWidgetMethod) == 0x000008, "Wrong alignment on PyUserWidget_CallPythonUserWidgetMethod");
//static_assert(sizeof(PyUserWidget_CallPythonUserWidgetMethod) == 0x000020, "Wrong size on PyUserWidget_CallPythonUserWidgetMethod");
//static_assert(offsetof(PyUserWidget_CallPythonUserWidgetMethod, Method_Name) == 0x000000, "Member 'PyUserWidget_CallPythonUserWidgetMethod::Method_Name' has a wrong offset!");
//static_assert(offsetof(PyUserWidget_CallPythonUserWidgetMethod, Args) == 0x000010, "Member 'PyUserWidget_CallPythonUserWidgetMethod::Args' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_int
// 0x0004 (0x0004 - 0x0000)
struct TestInvokeObject_Call_int final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_int) == 0x000004, "Wrong alignment on TestInvokeObject_Call_int");
//static_assert(sizeof(TestInvokeObject_Call_int) == 0x000004, "Wrong size on TestInvokeObject_Call_int");
//static_assert(offsetof(TestInvokeObject_Call_int, ReturnValue) == 0x000000, "Member 'TestInvokeObject_Call_int::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_obj
// 0x0008 (0x0008 - 0x0000)
struct TestInvokeObject_Call_obj final
{
public:
	class UTestInvokeObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_obj) == 0x000008, "Wrong alignment on TestInvokeObject_Call_obj");
//static_assert(sizeof(TestInvokeObject_Call_obj) == 0x000008, "Wrong size on TestInvokeObject_Call_obj");
//static_assert(offsetof(TestInvokeObject_Call_obj, ReturnValue) == 0x000000, "Member 'TestInvokeObject_Call_obj::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_str
// 0x0010 (0x0010 - 0x0000)
struct TestInvokeObject_Call_str final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_str) == 0x000008, "Wrong alignment on TestInvokeObject_Call_str");
//static_assert(sizeof(TestInvokeObject_Call_str) == 0x000010, "Wrong size on TestInvokeObject_Call_str");
//static_assert(offsetof(TestInvokeObject_Call_str, ReturnValue) == 0x000000, "Member 'TestInvokeObject_Call_str::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_struct
// 0x0040 (0x0040 - 0x0000)
struct TestInvokeObject_Call_struct final
{
public:
	struct FTestInvokeStruct                      ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_struct) == 0x000008, "Wrong alignment on TestInvokeObject_Call_struct");
//static_assert(sizeof(TestInvokeObject_Call_struct) == 0x000040, "Wrong size on TestInvokeObject_Call_struct");
//static_assert(offsetof(TestInvokeObject_Call_struct, ReturnValue) == 0x000000, "Member 'TestInvokeObject_Call_struct::ReturnValue' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_void_int
// 0x0004 (0x0004 - 0x0000)
struct TestInvokeObject_Call_void_int final
{
public:
	int32                                         InArg1;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_void_int) == 0x000004, "Wrong alignment on TestInvokeObject_Call_void_int");
//static_assert(sizeof(TestInvokeObject_Call_void_int) == 0x000004, "Wrong size on TestInvokeObject_Call_void_int");
//static_assert(offsetof(TestInvokeObject_Call_void_int, InArg1) == 0x000000, "Member 'TestInvokeObject_Call_void_int::InArg1' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_void_int_int
// 0x0008 (0x0008 - 0x0000)
struct TestInvokeObject_Call_void_int_int final
{
public:
	int32                                         InArg1;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InArg2;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_void_int_int) == 0x000004, "Wrong alignment on TestInvokeObject_Call_void_int_int");
//static_assert(sizeof(TestInvokeObject_Call_void_int_int) == 0x000008, "Wrong size on TestInvokeObject_Call_void_int_int");
//static_assert(offsetof(TestInvokeObject_Call_void_int_int, InArg1) == 0x000000, "Member 'TestInvokeObject_Call_void_int_int::InArg1' has a wrong offset!");
//static_assert(offsetof(TestInvokeObject_Call_void_int_int, InArg2) == 0x000004, "Member 'TestInvokeObject_Call_void_int_int::InArg2' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_void_int_int_float
// 0x000C (0x000C - 0x0000)
struct TestInvokeObject_Call_void_int_int_float final
{
public:
	int32                                         InArg1;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InArg2;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IntArg3;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_void_int_int_float) == 0x000004, "Wrong alignment on TestInvokeObject_Call_void_int_int_float");
//static_assert(sizeof(TestInvokeObject_Call_void_int_int_float) == 0x00000C, "Wrong size on TestInvokeObject_Call_void_int_int_float");
//static_assert(offsetof(TestInvokeObject_Call_void_int_int_float, InArg1) == 0x000000, "Member 'TestInvokeObject_Call_void_int_int_float::InArg1' has a wrong offset!");
//static_assert(offsetof(TestInvokeObject_Call_void_int_int_float, InArg2) == 0x000004, "Member 'TestInvokeObject_Call_void_int_int_float::InArg2' has a wrong offset!");
//static_assert(offsetof(TestInvokeObject_Call_void_int_int_float, IntArg3) == 0x000008, "Member 'TestInvokeObject_Call_void_int_int_float::IntArg3' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_void_object
// 0x0008 (0x0008 - 0x0000)
struct TestInvokeObject_Call_void_object final
{
public:
	class UTestInvokeObject*                      InArg1;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_void_object) == 0x000008, "Wrong alignment on TestInvokeObject_Call_void_object");
//static_assert(sizeof(TestInvokeObject_Call_void_object) == 0x000008, "Wrong size on TestInvokeObject_Call_void_object");
//static_assert(offsetof(TestInvokeObject_Call_void_object, InArg1) == 0x000000, "Member 'TestInvokeObject_Call_void_object::InArg1' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_void_str
// 0x0010 (0x0010 - 0x0000)
struct TestInvokeObject_Call_void_str final
{
public:
	class FString                                 InArg1;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_void_str) == 0x000008, "Wrong alignment on TestInvokeObject_Call_void_str");
//static_assert(sizeof(TestInvokeObject_Call_void_str) == 0x000010, "Wrong size on TestInvokeObject_Call_void_str");
//static_assert(offsetof(TestInvokeObject_Call_void_str, InArg1) == 0x000000, "Member 'TestInvokeObject_Call_void_str::InArg1' has a wrong offset!");

// Function UnrealEnginePython.TestInvokeObject.Call_void_struct
// 0x0040 (0x0040 - 0x0000)
struct TestInvokeObject_Call_void_struct final
{
public:
	struct FTestInvokeStruct                      InArg1;                                            // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(TestInvokeObject_Call_void_struct) == 0x000008, "Wrong alignment on TestInvokeObject_Call_void_struct");
//static_assert(sizeof(TestInvokeObject_Call_void_struct) == 0x000040, "Wrong size on TestInvokeObject_Call_void_struct");
//static_assert(offsetof(TestInvokeObject_Call_void_struct, InArg1) == 0x000000, "Member 'TestInvokeObject_Call_void_struct::InArg1' has a wrong offset!");

}


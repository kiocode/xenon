#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103551

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_AbilityLoop_103551_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_AbilityLoop_103551_WhileActive) == 0x000008, "Wrong alignment on PyCue_AbilityLoop_103551_WhileActive");
static_assert(sizeof(PyCue_AbilityLoop_103551_WhileActive) == 0x0001C8, "Wrong size on PyCue_AbilityLoop_103551_WhileActive");
static_assert(offsetof(PyCue_AbilityLoop_103551_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_AbilityLoop_103551_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_AbilityLoop_103551_WhileActive, Parameters) == 0x000008, "Member 'PyCue_AbilityLoop_103551_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_AbilityLoop_103551_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_AbilityLoop_103551_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_AbilityLoop_103551_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_AbilityLoop_103551_OnRemove) == 0x000008, "Wrong alignment on PyCue_AbilityLoop_103551_OnRemove");
static_assert(sizeof(PyCue_AbilityLoop_103551_OnRemove) == 0x0001C8, "Wrong size on PyCue_AbilityLoop_103551_OnRemove");
static_assert(offsetof(PyCue_AbilityLoop_103551_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_AbilityLoop_103551_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_AbilityLoop_103551_OnRemove, Parameters) == 0x000008, "Member 'PyCue_AbilityLoop_103551_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_AbilityLoop_103551_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_AbilityLoop_103551_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnProjectileSpawned
// 0x0008 (0x0008 - 0x0000)
struct PyCue_AbilityLoop_103551_OnProjectileSpawned final
{
public:
	class AActor*                                 SpawnActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_AbilityLoop_103551_OnProjectileSpawned) == 0x000008, "Wrong alignment on PyCue_AbilityLoop_103551_OnProjectileSpawned");
static_assert(sizeof(PyCue_AbilityLoop_103551_OnProjectileSpawned) == 0x000008, "Wrong size on PyCue_AbilityLoop_103551_OnProjectileSpawned");
static_assert(offsetof(PyCue_AbilityLoop_103551_OnProjectileSpawned, SpawnActor) == 0x000000, "Member 'PyCue_AbilityLoop_103551_OnProjectileSpawned::SpawnActor' has a wrong offset!");

// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnProjectileHit
// 0x0170 (0x0170 - 0x0000)
struct PyCue_AbilityLoop_103551_OnProjectileHit final
{
public:
	struct FHitResult                             InHitResult;                                       // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_AbilityLoop_103551_OnProjectileHit) == 0x000008, "Wrong alignment on PyCue_AbilityLoop_103551_OnProjectileHit");
static_assert(sizeof(PyCue_AbilityLoop_103551_OnProjectileHit) == 0x000170, "Wrong size on PyCue_AbilityLoop_103551_OnProjectileHit");
static_assert(offsetof(PyCue_AbilityLoop_103551_OnProjectileHit, InHitResult) == 0x000000, "Member 'PyCue_AbilityLoop_103551_OnProjectileHit::InHitResult' has a wrong offset!");

// PythonFunction PyAbility_103551.PyCue_AbilityLoop_103551.OnAbilityState103641Changed
// 0x0001 (0x0001 - 0x0000)
struct PyCue_AbilityLoop_103551_OnAbilityState103641Changed final
{
public:
	EAbilityState103641                           InAbilityState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_AbilityLoop_103551_OnAbilityState103641Changed) == 0x000001, "Wrong alignment on PyCue_AbilityLoop_103551_OnAbilityState103641Changed");
static_assert(sizeof(PyCue_AbilityLoop_103551_OnAbilityState103641Changed) == 0x000001, "Wrong size on PyCue_AbilityLoop_103551_OnAbilityState103641Changed");
static_assert(offsetof(PyCue_AbilityLoop_103551_OnAbilityState103641Changed, InAbilityState) == 0x000000, "Member 'PyCue_AbilityLoop_103551_OnAbilityState103641Changed::InAbilityState' has a wrong offset!");

}


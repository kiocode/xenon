#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_104711_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function Ability_104711_BP.Ability_104711_BP_C.ExecuteUbergraph_Ability_104711_BP
// 0x0060 (0x0060 - 0x0000)
struct Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDelaySectionTime_DelayTime;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeHeld)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeWaited)>             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AbilityEnded;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool AbilityEnded)>            K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeHeld;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeWaited;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP) == 0x000008, "Wrong alignment on Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP");
//static_assert(sizeof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP) == 0x000060, "Wrong size on Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, EntryPoint) == 0x000000, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::EntryPoint' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, CallFunc_GetDelaySectionTime_DelayTime) == 0x000008, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::CallFunc_GetDelaySectionTime_DelayTime' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, K2Node_CustomEvent_AbilityEnded) == 0x000038, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::K2Node_CustomEvent_AbilityEnded' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, K2Node_CustomEvent_TimeHeld) == 0x000054, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::K2Node_CustomEvent_TimeHeld' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, K2Node_CustomEvent_TimeWaited) == 0x000058, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::K2Node_CustomEvent_TimeWaited' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP, CallFunc_Delay_Duration_ImplicitCast) == 0x00005C, "Member 'Ability_104711_BP_C_ExecuteUbergraph_Ability_104711_BP::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function Ability_104711_BP.Ability_104711_BP_C.GetDelaySectionTime
// 0x0028 (0x0028 - 0x0000)
struct Ability_104711_BP_C_GetDelaySectionTime final
{
public:
	double                                        DelayTime;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarvelAbilityConfig*                   CallFunc_GetMarvelAbilityConfig_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UConfig_104711*                         K2Node_DynamicCast_AsConfig_104711;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_DelayTime_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(Ability_104711_BP_C_GetDelaySectionTime) == 0x000008, "Wrong alignment on Ability_104711_BP_C_GetDelaySectionTime");
//static_assert(sizeof(Ability_104711_BP_C_GetDelaySectionTime) == 0x000028, "Wrong size on Ability_104711_BP_C_GetDelaySectionTime");
//static_assert(offsetof(Ability_104711_BP_C_GetDelaySectionTime, DelayTime) == 0x000000, "Member 'Ability_104711_BP_C_GetDelaySectionTime::DelayTime' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_GetDelaySectionTime, CallFunc_GetMarvelAbilityConfig_ReturnValue) == 0x000008, "Member 'Ability_104711_BP_C_GetDelaySectionTime::CallFunc_GetMarvelAbilityConfig_ReturnValue' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_GetDelaySectionTime, K2Node_DynamicCast_AsConfig_104711) == 0x000010, "Member 'Ability_104711_BP_C_GetDelaySectionTime::K2Node_DynamicCast_AsConfig_104711' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_GetDelaySectionTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_104711_BP_C_GetDelaySectionTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_GetDelaySectionTime, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ability_104711_BP_C_GetDelaySectionTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
//static_assert(offsetof(Ability_104711_BP_C_GetDelaySectionTime, K2Node_FunctionResult_DelayTime_ImplicitCast) == 0x000020, "Member 'Ability_104711_BP_C_GetDelaySectionTime::K2Node_FunctionResult_DelayTime_ImplicitCast' has a wrong offset!");

// Function Ability_104711_BP.Ability_104711_BP_C.OnFireTaskEnded
// 0x0001 (0x0001 - 0x0000)
struct Ability_104711_BP_C_OnFireTaskEnded final
{
public:
	bool                                          AbilityEnded;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(Ability_104711_BP_C_OnFireTaskEnded) == 0x000001, "Wrong alignment on Ability_104711_BP_C_OnFireTaskEnded");
//static_assert(sizeof(Ability_104711_BP_C_OnFireTaskEnded) == 0x000001, "Wrong size on Ability_104711_BP_C_OnFireTaskEnded");
//static_assert(offsetof(Ability_104711_BP_C_OnFireTaskEnded, AbilityEnded) == 0x000000, "Member 'Ability_104711_BP_C_OnFireTaskEnded::AbilityEnded' has a wrong offset!");

// Function Ability_104711_BP.Ability_104711_BP_C.OnPress_��
// 0x0004 (0x0004 - 0x0000)
struct Ability_104711_BP_C_OnPress___ final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(Ability_104711_BP_C_OnPress___) == 0x000004, "Wrong alignment on Ability_104711_BP_C_OnPress___");
//static_assert(sizeof(Ability_104711_BP_C_OnPress___) == 0x000004, "Wrong size on Ability_104711_BP_C_OnPress___");
//static_assert(offsetof(Ability_104711_BP_C_OnPress___, TimeWaited) == 0x000000, "Member 'Ability_104711_BP_C_OnPress___::TimeWaited' has a wrong offset!");

// Function Ability_104711_BP.Ability_104711_BP_C.�I��
// 0x0004 (0x0004 - 0x0000)
struct Ability_104711_BP_C___I__ final
{
public:
	float                                         TimeHeld;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(Ability_104711_BP_C___I__) == 0x000004, "Wrong alignment on Ability_104711_BP_C___I__");
//static_assert(sizeof(Ability_104711_BP_C___I__) == 0x000004, "Wrong size on Ability_104711_BP_C___I__");
//static_assert(offsetof(Ability_104711_BP_C___I__, TimeHeld) == 0x000000, "Member 'Ability_104711_BP_C___I__::TimeHeld' has a wrong offset!");

}


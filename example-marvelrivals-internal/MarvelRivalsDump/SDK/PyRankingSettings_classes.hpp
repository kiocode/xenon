#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyRankingSettings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PyRankingSettings.PyRankingSettings
// 0x0078 (0x00B0 - 0x0038)
class UPyRankingSettings final : public UPrimaryDataAsset
{
public:
	int32                                         FirstPageDisplayItemLimit;                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DisplayItemLimit;                                  // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalNumLimit;                                     // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NearListLimit;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InListLevelLimit;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequestPageLimit;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RankFlag;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              RankRefreshTime_CN;                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              RankRefreshTime_EN;                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MergeRankLevel;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroFirstPageDisplayItemLimit;                     // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroDisplayItemLimit;                              // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroTotalNumLimit;                                 // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroNearListLimit;                                 // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroRankFlag;                                      // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              HeroRankRefreshTime_CN;                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              HeroRankRefreshTime_EN;                            // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WildcardSearchFirstPageDisplayItemLimit;           // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WildcardSearchDisplayItemLimit;                    // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WildcardSearchLimit;                               // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              WildcardSearchRefreshTime_CN;                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              WildcardSearchRefreshTime_EN;                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyRankingSettings">();
	}
	static class UPyRankingSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyRankingSettings>();
	}
};
static_assert(alignof(UPyRankingSettings) == 0x000008, "Wrong alignment on UPyRankingSettings");
static_assert(sizeof(UPyRankingSettings) == 0x0000B0, "Wrong size on UPyRankingSettings");
static_assert(offsetof(UPyRankingSettings, FirstPageDisplayItemLimit) == 0x000038, "Member 'UPyRankingSettings::FirstPageDisplayItemLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, DisplayItemLimit) == 0x00003C, "Member 'UPyRankingSettings::DisplayItemLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, TotalNumLimit) == 0x000040, "Member 'UPyRankingSettings::TotalNumLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, NearListLimit) == 0x000044, "Member 'UPyRankingSettings::NearListLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, InListLevelLimit) == 0x000048, "Member 'UPyRankingSettings::InListLevelLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, RequestPageLimit) == 0x00004C, "Member 'UPyRankingSettings::RequestPageLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, RankFlag) == 0x000050, "Member 'UPyRankingSettings::RankFlag' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, RankRefreshTime_CN) == 0x000058, "Member 'UPyRankingSettings::RankRefreshTime_CN' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, RankRefreshTime_EN) == 0x000060, "Member 'UPyRankingSettings::RankRefreshTime_EN' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, MergeRankLevel) == 0x000068, "Member 'UPyRankingSettings::MergeRankLevel' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroFirstPageDisplayItemLimit) == 0x00006C, "Member 'UPyRankingSettings::HeroFirstPageDisplayItemLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroDisplayItemLimit) == 0x000070, "Member 'UPyRankingSettings::HeroDisplayItemLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroTotalNumLimit) == 0x000074, "Member 'UPyRankingSettings::HeroTotalNumLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroNearListLimit) == 0x000078, "Member 'UPyRankingSettings::HeroNearListLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroRankFlag) == 0x00007C, "Member 'UPyRankingSettings::HeroRankFlag' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroRankRefreshTime_CN) == 0x000080, "Member 'UPyRankingSettings::HeroRankRefreshTime_CN' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, HeroRankRefreshTime_EN) == 0x000088, "Member 'UPyRankingSettings::HeroRankRefreshTime_EN' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, WildcardSearchFirstPageDisplayItemLimit) == 0x000090, "Member 'UPyRankingSettings::WildcardSearchFirstPageDisplayItemLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, WildcardSearchDisplayItemLimit) == 0x000094, "Member 'UPyRankingSettings::WildcardSearchDisplayItemLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, WildcardSearchLimit) == 0x000098, "Member 'UPyRankingSettings::WildcardSearchLimit' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, WildcardSearchRefreshTime_CN) == 0x0000A0, "Member 'UPyRankingSettings::WildcardSearchRefreshTime_CN' has a wrong offset!");
static_assert(offsetof(UPyRankingSettings, WildcardSearchRefreshTime_EN) == 0x0000A8, "Member 'UPyRankingSettings::WildcardSearchRefreshTime_EN' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_10001201

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_10001201.PyCue_Buff_Loop_10001201.WhileActiveUI
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Buff_Loop_10001201_WhileActiveUI final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Buff_Loop_10001201_WhileActiveUI) == 0x000008, "Wrong alignment on PyCue_Buff_Loop_10001201_WhileActiveUI");
static_assert(sizeof(PyCue_Buff_Loop_10001201_WhileActiveUI) == 0x0001C0, "Wrong size on PyCue_Buff_Loop_10001201_WhileActiveUI");
static_assert(offsetof(PyCue_Buff_Loop_10001201_WhileActiveUI, MyTarget) == 0x000000, "Member 'PyCue_Buff_Loop_10001201_WhileActiveUI::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_Loop_10001201_WhileActiveUI, Parameters) == 0x000008, "Member 'PyCue_Buff_Loop_10001201_WhileActiveUI::Parameters' has a wrong offset!");

// PythonFunction PyAbility_10001201.PyCue_Buff_Loop_10001201.OnRemoveUI
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Buff_Loop_10001201_OnRemoveUI final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Buff_Loop_10001201_OnRemoveUI) == 0x000008, "Wrong alignment on PyCue_Buff_Loop_10001201_OnRemoveUI");
static_assert(sizeof(PyCue_Buff_Loop_10001201_OnRemoveUI) == 0x0001C0, "Wrong size on PyCue_Buff_Loop_10001201_OnRemoveUI");
static_assert(offsetof(PyCue_Buff_Loop_10001201_OnRemoveUI, MyTarget) == 0x000000, "Member 'PyCue_Buff_Loop_10001201_OnRemoveUI::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_Loop_10001201_OnRemoveUI, Parameters) == 0x000008, "Member 'PyCue_Buff_Loop_10001201_OnRemoveUI::Parameters' has a wrong offset!");

// PythonFunction PyAbility_10001201.PyBuffAbility_10001201.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyBuffAbility_10001201_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBuffAbility_10001201_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyBuffAbility_10001201_K2_OnEndAbility");
static_assert(sizeof(PyBuffAbility_10001201_K2_OnEndAbility) == 0x000001, "Wrong size on PyBuffAbility_10001201_K2_OnEndAbility");
static_assert(offsetof(PyBuffAbility_10001201_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyBuffAbility_10001201_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_10001201.PyBuffAbility_10001201.OnGiftedAbilityActivate
// 0x0008 (0x0008 - 0x0000)
struct PyBuffAbility_10001201_OnGiftedAbilityActivate final
{
public:
	class UGameplayAbility*                       ActivatedAbility;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBuffAbility_10001201_OnGiftedAbilityActivate) == 0x000008, "Wrong alignment on PyBuffAbility_10001201_OnGiftedAbilityActivate");
static_assert(sizeof(PyBuffAbility_10001201_OnGiftedAbilityActivate) == 0x000008, "Wrong size on PyBuffAbility_10001201_OnGiftedAbilityActivate");
static_assert(offsetof(PyBuffAbility_10001201_OnGiftedAbilityActivate, ActivatedAbility) == 0x000000, "Member 'PyBuffAbility_10001201_OnGiftedAbilityActivate::ActivatedAbility' has a wrong offset!");

// PythonFunction PyAbility_10001201.PyBuffAbility_10001201.OnCooldownTagUpdated
// 0x0010 (0x0010 - 0x0000)
struct PyBuffAbility_10001201_OnCooldownTagUpdated final
{
public:
	struct FGameplayTag                           TagUpdated;                                        // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagExists;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBuffAbility_10001201_OnCooldownTagUpdated) == 0x000004, "Wrong alignment on PyBuffAbility_10001201_OnCooldownTagUpdated");
static_assert(sizeof(PyBuffAbility_10001201_OnCooldownTagUpdated) == 0x000010, "Wrong size on PyBuffAbility_10001201_OnCooldownTagUpdated");
static_assert(offsetof(PyBuffAbility_10001201_OnCooldownTagUpdated, TagUpdated) == 0x000000, "Member 'PyBuffAbility_10001201_OnCooldownTagUpdated::TagUpdated' has a wrong offset!");
static_assert(offsetof(PyBuffAbility_10001201_OnCooldownTagUpdated, TagExists) == 0x00000C, "Member 'PyBuffAbility_10001201_OnCooldownTagUpdated::TagExists' has a wrong offset!");

// PythonFunction PyAbility_10001201.PyBuffAbility_10001201.OnAbilityConsumeCost
// 0x0018 (0x0018 - 0x0000)
struct PyBuffAbility_10001201_OnAbilityConsumeCost final
{
public:
	class UMarvelGameplayAbility*                 Ability;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CostValue;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CostTag;                                           // 0x000C(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBuffAbility_10001201_OnAbilityConsumeCost) == 0x000008, "Wrong alignment on PyBuffAbility_10001201_OnAbilityConsumeCost");
static_assert(sizeof(PyBuffAbility_10001201_OnAbilityConsumeCost) == 0x000018, "Wrong size on PyBuffAbility_10001201_OnAbilityConsumeCost");
static_assert(offsetof(PyBuffAbility_10001201_OnAbilityConsumeCost, Ability) == 0x000000, "Member 'PyBuffAbility_10001201_OnAbilityConsumeCost::Ability' has a wrong offset!");
static_assert(offsetof(PyBuffAbility_10001201_OnAbilityConsumeCost, CostValue) == 0x000008, "Member 'PyBuffAbility_10001201_OnAbilityConsumeCost::CostValue' has a wrong offset!");
static_assert(offsetof(PyBuffAbility_10001201_OnAbilityConsumeCost, CostTag) == 0x00000C, "Member 'PyBuffAbility_10001201_OnAbilityConsumeCost::CostTag' has a wrong offset!");

}


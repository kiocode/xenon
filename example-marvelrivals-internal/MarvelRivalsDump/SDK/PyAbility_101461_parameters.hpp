#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101461

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hero_1014_structs.hpp"


namespace SDK::Params
{

// DelegateFunction PyAbility_101461.PyAbility_101461.TurretStateDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101461_TurretStateDispatcher__DelegateSignature final
{
public:
	bool                                          InTurret;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_TurretStateDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on PyAbility_101461_TurretStateDispatcher__DelegateSignature");
static_assert(sizeof(PyAbility_101461_TurretStateDispatcher__DelegateSignature) == 0x000001, "Wrong size on PyAbility_101461_TurretStateDispatcher__DelegateSignature");
static_assert(offsetof(PyAbility_101461_TurretStateDispatcher__DelegateSignature, InTurret) == 0x000000, "Member 'PyAbility_101461_TurretStateDispatcher__DelegateSignature::InTurret' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101461_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_CanActivate) == 0x000001, "Wrong alignment on PyAbility_101461_CanActivate");
static_assert(sizeof(PyAbility_101461_CanActivate) == 0x000001, "Wrong size on PyAbility_101461_CanActivate");
static_assert(offsetof(PyAbility_101461_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_101461_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.TryMakeTriggerContext
// 0x0298 (0x0298 - 0x0000)
struct PyAbility_101461_TryMakeTriggerContext final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_TryMakeTriggerContext) == 0x000008, "Wrong alignment on PyAbility_101461_TryMakeTriggerContext");
static_assert(sizeof(PyAbility_101461_TryMakeTriggerContext) == 0x000298, "Wrong size on PyAbility_101461_TryMakeTriggerContext");
static_assert(offsetof(PyAbility_101461_TryMakeTriggerContext, EventData) == 0x000000, "Member 'PyAbility_101461_TryMakeTriggerContext::EventData' has a wrong offset!");
static_assert(offsetof(PyAbility_101461_TryMakeTriggerContext, ReturnValue) == 0x000290, "Member 'PyAbility_101461_TryMakeTriggerContext::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.K2_ActivateAbilityFromEvent
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_101461_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_101461_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on PyAbility_101461_K2_ActivateAbilityFromEvent");
static_assert(sizeof(PyAbility_101461_K2_ActivateAbilityFromEvent) == 0x000290, "Wrong size on PyAbility_101461_K2_ActivateAbilityFromEvent");
static_assert(offsetof(PyAbility_101461_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'PyAbility_101461_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101461_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_101461_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_101461_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_101461_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_101461_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_101461_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.NativeOnSimulatedMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101461_NativeOnSimulatedMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_NativeOnSimulatedMontageEvent) == 0x000008, "Wrong alignment on PyAbility_101461_NativeOnSimulatedMontageEvent");
static_assert(sizeof(PyAbility_101461_NativeOnSimulatedMontageEvent) == 0x000010, "Wrong size on PyAbility_101461_NativeOnSimulatedMontageEvent");
static_assert(offsetof(PyAbility_101461_NativeOnSimulatedMontageEvent, Tag) == 0x000000, "Member 'PyAbility_101461_NativeOnSimulatedMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_101461_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_101461_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_101461_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_101461_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_101461_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_101461_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101461_K2_OnEndAbility final
{
public:
	bool                                          Cancel;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_101461_K2_OnEndAbility");
static_assert(sizeof(PyAbility_101461_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_101461_K2_OnEndAbility");
static_assert(offsetof(PyAbility_101461_K2_OnEndAbility, Cancel) == 0x000000, "Member 'PyAbility_101461_K2_OnEndAbility::Cancel' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.IsInTurret
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_101461_IsInTurret final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_IsInTurret) == 0x000001, "Wrong alignment on PyAbility_101461_IsInTurret");
static_assert(sizeof(PyAbility_101461_IsInTurret) == 0x000001, "Wrong size on PyAbility_101461_IsInTurret");
static_assert(offsetof(PyAbility_101461_IsInTurret, ReturnValue) == 0x000000, "Member 'PyAbility_101461_IsInTurret::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.SetTurretState
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_101461_SetTurretState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_SetTurretState) == 0x000004, "Wrong alignment on PyAbility_101461_SetTurretState");
static_assert(sizeof(PyAbility_101461_SetTurretState) == 0x000004, "Wrong size on PyAbility_101461_SetTurretState");
static_assert(offsetof(PyAbility_101461_SetTurretState, State) == 0x000000, "Member 'PyAbility_101461_SetTurretState::State' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.MulticastSpawnTurretPrinter
// 0x0018 (0x0018 - 0x0000)
struct PyAbility_101461_MulticastSpawnTurretPrinter final
{
public:
	struct FVector                                Target_loc;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_MulticastSpawnTurretPrinter) == 0x000008, "Wrong alignment on PyAbility_101461_MulticastSpawnTurretPrinter");
static_assert(sizeof(PyAbility_101461_MulticastSpawnTurretPrinter) == 0x000018, "Wrong size on PyAbility_101461_MulticastSpawnTurretPrinter");
static_assert(offsetof(PyAbility_101461_MulticastSpawnTurretPrinter, Target_loc) == 0x000000, "Member 'PyAbility_101461_MulticastSpawnTurretPrinter::Target_loc' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.OnTurretEndTask
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_101461_OnTurretEndTask final
{
public:
	class AActor*                                 Turret;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_OnTurretEndTask) == 0x000008, "Wrong alignment on PyAbility_101461_OnTurretEndTask");
static_assert(sizeof(PyAbility_101461_OnTurretEndTask) == 0x000008, "Wrong size on PyAbility_101461_OnTurretEndTask");
static_assert(offsetof(PyAbility_101461_OnTurretEndTask, Turret) == 0x000000, "Member 'PyAbility_101461_OnTurretEndTask::Turret' has a wrong offset!");

// PythonFunction PyAbility_101461.PyAbility_101461.OnPressTryGetOutTurret
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_101461_OnPressTryGetOutTurret final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_101461_OnPressTryGetOutTurret) == 0x000004, "Wrong alignment on PyAbility_101461_OnPressTryGetOutTurret");
static_assert(sizeof(PyAbility_101461_OnPressTryGetOutTurret) == 0x000004, "Wrong size on PyAbility_101461_OnPressTryGetOutTurret");
static_assert(offsetof(PyAbility_101461_OnPressTryGetOutTurret, TimeWaited) == 0x000000, "Member 'PyAbility_101461_OnPressTryGetOutTurret::TimeWaited' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_SummonerLoop_10146101_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_WhileActive) == 0x000008, "Wrong alignment on PyCue_SummonerLoop_10146101_WhileActive");
static_assert(sizeof(PyCue_SummonerLoop_10146101_WhileActive) == 0x0001C8, "Wrong size on PyCue_SummonerLoop_10146101_WhileActive");
static_assert(offsetof(PyCue_SummonerLoop_10146101_WhileActive, MyTarget) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_WhileActive, Parameters) == 0x000008, "Member 'PyCue_SummonerLoop_10146101_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_SummonerLoop_10146101_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_SummonerLoop_10146101_OnExecuteFX");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_SummonerLoop_10146101_OnExecuteFX");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnExecuteFX, Parameters) == 0x000008, "Member 'PyCue_SummonerLoop_10146101_OnExecuteFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnRemove
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnRemove) == 0x000008, "Wrong alignment on PyCue_SummonerLoop_10146101_OnRemove");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnRemove) == 0x0001C8, "Wrong size on PyCue_SummonerLoop_10146101_OnRemove");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnRemove, MyTarget) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnRemove, Parameters) == 0x000008, "Member 'PyCue_SummonerLoop_10146101_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnRemove, ReturnValue) == 0x0001C0, "Member 'PyCue_SummonerLoop_10146101_OnRemove::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.AudioControl
// 0x0001 (0x0001 - 0x0000)
struct PyCue_SummonerLoop_10146101_AudioControl final
{
public:
	ERotateAudioControl                           RotateAudioControl;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_AudioControl) == 0x000001, "Wrong alignment on PyCue_SummonerLoop_10146101_AudioControl");
static_assert(sizeof(PyCue_SummonerLoop_10146101_AudioControl) == 0x000001, "Wrong size on PyCue_SummonerLoop_10146101_AudioControl");
static_assert(offsetof(PyCue_SummonerLoop_10146101_AudioControl, RotateAudioControl) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_AudioControl::RotateAudioControl' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnWeaponCueFired
// 0x0004 (0x0004 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnWeaponCueFired final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnWeaponCueFired) == 0x000004, "Wrong alignment on PyCue_SummonerLoop_10146101_OnWeaponCueFired");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnWeaponCueFired) == 0x000004, "Wrong size on PyCue_SummonerLoop_10146101_OnWeaponCueFired");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnWeaponCueFired, ModeIndex) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnWeaponCueFired::ModeIndex' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnWeaponCueFireStateChanged
// 0x0008 (0x0008 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewState;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged) == 0x000004, "Wrong alignment on PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged) == 0x000008, "Wrong size on PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged, ModeIndex) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged::ModeIndex' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged, bNewState) == 0x000004, "Member 'PyCue_SummonerLoop_10146101_OnWeaponCueFireStateChanged::bNewState' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.SetTimerCheckFiringAudio
// 0x0001 (0x0001 - 0x0000)
struct PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio) == 0x000001, "Wrong alignment on PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio");
static_assert(sizeof(PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio) == 0x000001, "Wrong size on PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio");
static_assert(offsetof(PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio, Enable) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_SetTimerCheckFiringAudio::Enable' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.AfterEquipWeapon
// 0x02D0 (0x02D0 - 0x0000)
struct PyCue_SummonerLoop_10146101_AfterEquipWeapon final
{
public:
	class AShootingWeapon*                        Weapon;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMarvelEquipmentTable                  WeaponInfo;                                        // 0x0008(0x02C0)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          bState;                                            // 0x02C8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_AfterEquipWeapon) == 0x000008, "Wrong alignment on PyCue_SummonerLoop_10146101_AfterEquipWeapon");
static_assert(sizeof(PyCue_SummonerLoop_10146101_AfterEquipWeapon) == 0x0002D0, "Wrong size on PyCue_SummonerLoop_10146101_AfterEquipWeapon");
static_assert(offsetof(PyCue_SummonerLoop_10146101_AfterEquipWeapon, Weapon) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_AfterEquipWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_AfterEquipWeapon, WeaponInfo) == 0x000008, "Member 'PyCue_SummonerLoop_10146101_AfterEquipWeapon::WeaponInfo' has a wrong offset!");
static_assert(offsetof(PyCue_SummonerLoop_10146101_AfterEquipWeapon, bState) == 0x0002C8, "Member 'PyCue_SummonerLoop_10146101_AfterEquipWeapon::bState' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnTurretEndTask
// 0x0008 (0x0008 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnTurretEndTask final
{
public:
	class AActor*                                 Turret;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnTurretEndTask) == 0x000008, "Wrong alignment on PyCue_SummonerLoop_10146101_OnTurretEndTask");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnTurretEndTask) == 0x000008, "Wrong size on PyCue_SummonerLoop_10146101_OnTurretEndTask");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnTurretEndTask, Turret) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnTurretEndTask::Turret' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnViewTargetChange
// 0x0008 (0x0008 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnViewTargetChange final
{
public:
	class AActor*                                 ViewTarget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnViewTargetChange) == 0x000008, "Wrong alignment on PyCue_SummonerLoop_10146101_OnViewTargetChange");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnViewTargetChange) == 0x000008, "Wrong size on PyCue_SummonerLoop_10146101_OnViewTargetChange");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnViewTargetChange, ViewTarget) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnViewTargetChange::ViewTarget' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_SummonerLoop_10146101.OnUpdateTurretMesh
// 0x0001 (0x0001 - 0x0000)
struct PyCue_SummonerLoop_10146101_OnUpdateTurretMesh final
{
public:
	bool                                          bShow1P;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_SummonerLoop_10146101_OnUpdateTurretMesh) == 0x000001, "Wrong alignment on PyCue_SummonerLoop_10146101_OnUpdateTurretMesh");
static_assert(sizeof(PyCue_SummonerLoop_10146101_OnUpdateTurretMesh) == 0x000001, "Wrong size on PyCue_SummonerLoop_10146101_OnUpdateTurretMesh");
static_assert(offsetof(PyCue_SummonerLoop_10146101_OnUpdateTurretMesh, bShow1P) == 0x000000, "Member 'PyCue_SummonerLoop_10146101_OnUpdateTurretMesh::bShow1P' has a wrong offset!");

// PythonFunction PyAbility_101461.PyCue_Projectile_HitImpact_10146101.OnNiagaraSpawned
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned final
{
public:
	class UNiagaraComponent*                      InFXComponent;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MyTarget;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0010(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned) == 0x000008, "Wrong alignment on PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned");
static_assert(sizeof(PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned) == 0x0001C8, "Wrong size on PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned");
static_assert(offsetof(PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned, InFXComponent) == 0x000000, "Member 'PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned::InFXComponent' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned, MyTarget) == 0x000008, "Member 'PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned, Parameters) == 0x000010, "Member 'PyCue_Projectile_HitImpact_10146101_OnNiagaraSpawned::Parameters' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomMovieSceneTracks

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "MovieSceneTracks_structs.hpp"


namespace SDK
{

// Enum CustomMovieSceneTracks.EDecalKey
// NumValues: 0x0004
enum class EDecalKey : uint8
{
	Deactivate                               = 0,
	FadeIn                                   = 1,
	FadeOut                                  = 2,
	EDecalKey_MAX                            = 3,
};

// ScriptStruct CustomMovieSceneTracks.MovieSceneCablePropertyTemplate
// 0x0528 (0x0548 - 0x0020)
struct FMovieSceneCablePropertyTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneBoolChannel                 AttachStartKeys;                                   // 0x0020(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneBoolChannel                 AttachEndKeys;                                     // 0x0120(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                CableLengthKeys;                                   // 0x0220(0x0110)(NativeAccessSpecifierPublic)
	struct FMovieSceneIntegerChannel              NumSegmentsKeys;                                   // 0x0330(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                GravityScaleKeys;                                  // 0x0430(0x0110)(NativeAccessSpecifierPublic)
	uint8                                         Pad_540[0x8];                                      // 0x0540(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneCablePropertyTemplate) == 0x000008, "Wrong alignment on FMovieSceneCablePropertyTemplate");
static_assert(sizeof(FMovieSceneCablePropertyTemplate) == 0x000548, "Wrong size on FMovieSceneCablePropertyTemplate");
static_assert(offsetof(FMovieSceneCablePropertyTemplate, AttachStartKeys) == 0x000020, "Member 'FMovieSceneCablePropertyTemplate::AttachStartKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneCablePropertyTemplate, AttachEndKeys) == 0x000120, "Member 'FMovieSceneCablePropertyTemplate::AttachEndKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneCablePropertyTemplate, CableLengthKeys) == 0x000220, "Member 'FMovieSceneCablePropertyTemplate::CableLengthKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneCablePropertyTemplate, NumSegmentsKeys) == 0x000330, "Member 'FMovieSceneCablePropertyTemplate::NumSegmentsKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneCablePropertyTemplate, GravityScaleKeys) == 0x000430, "Member 'FMovieSceneCablePropertyTemplate::GravityScaleKeys' has a wrong offset!");

// ScriptStruct CustomMovieSceneTracks.MovieSceneDecalChannel
// 0x0000 (0x0108 - 0x0108)
struct FMovieSceneDecalChannel final : public FMovieSceneByteChannel
{
};
static_assert(alignof(FMovieSceneDecalChannel) == 0x000008, "Wrong alignment on FMovieSceneDecalChannel");
static_assert(sizeof(FMovieSceneDecalChannel) == 0x000108, "Wrong size on FMovieSceneDecalChannel");

// ScriptStruct CustomMovieSceneTracks.MovieSceneDecalFadeSectionTemplate
// 0x0898 (0x08B8 - 0x0020)
struct FMovieSceneDecalFadeSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneDecalChannel                DecalKeys;                                         // 0x0020(0x0108)(NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                FadeInStartDelayKeys;                              // 0x0128(0x0110)(NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                FadeInDurationKeys;                                // 0x0238(0x0110)(NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                FadeStartDelayKeys;                                // 0x0348(0x0110)(NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                FadeDurationKeys;                                  // 0x0458(0x0110)(NativeAccessSpecifierPublic)
	struct FMovieSceneDoubleChannel               DecalSize[0x3];                                    // 0x0568(0x0118)(NativeAccessSpecifierPublic)
	uint8                                         Pad_8B0[0x8];                                      // 0x08B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneDecalFadeSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneDecalFadeSectionTemplate");
static_assert(sizeof(FMovieSceneDecalFadeSectionTemplate) == 0x0008B8, "Wrong size on FMovieSceneDecalFadeSectionTemplate");
static_assert(offsetof(FMovieSceneDecalFadeSectionTemplate, DecalKeys) == 0x000020, "Member 'FMovieSceneDecalFadeSectionTemplate::DecalKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneDecalFadeSectionTemplate, FadeInStartDelayKeys) == 0x000128, "Member 'FMovieSceneDecalFadeSectionTemplate::FadeInStartDelayKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneDecalFadeSectionTemplate, FadeInDurationKeys) == 0x000238, "Member 'FMovieSceneDecalFadeSectionTemplate::FadeInDurationKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneDecalFadeSectionTemplate, FadeStartDelayKeys) == 0x000348, "Member 'FMovieSceneDecalFadeSectionTemplate::FadeStartDelayKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneDecalFadeSectionTemplate, FadeDurationKeys) == 0x000458, "Member 'FMovieSceneDecalFadeSectionTemplate::FadeDurationKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneDecalFadeSectionTemplate, DecalSize) == 0x000568, "Member 'FMovieSceneDecalFadeSectionTemplate::DecalSize' has a wrong offset!");

// ScriptStruct CustomMovieSceneTracks.MovieSceneOverlayMaterialTemplate
// 0x0118 (0x0138 - 0x0020)
struct FMovieSceneOverlayMaterialTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneStringChannel               WorkOnlyArrayNamesKeys;                            // 0x0020(0x0110)(NativeAccessSpecifierPublic)
	uint8                                         Pad_130[0x8];                                      // 0x0130(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneOverlayMaterialTemplate) == 0x000008, "Wrong alignment on FMovieSceneOverlayMaterialTemplate");
static_assert(sizeof(FMovieSceneOverlayMaterialTemplate) == 0x000138, "Wrong size on FMovieSceneOverlayMaterialTemplate");
static_assert(offsetof(FMovieSceneOverlayMaterialTemplate, WorkOnlyArrayNamesKeys) == 0x000020, "Member 'FMovieSceneOverlayMaterialTemplate::WorkOnlyArrayNamesKeys' has a wrong offset!");

// ScriptStruct CustomMovieSceneTracks.MovieSceneSkinnedMeshTemplate
// 0x0518 (0x0538 - 0x0020)
struct FMovieSceneSkinnedMeshTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneIntegerChannel              SectionShownKeys;                                  // 0x0020(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneIntegerChannel              LODIndexKeys;                                      // 0x0120(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneBoolChannel                 DisableMorphTargetKeys;                            // 0x0220(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneBoolChannel                 DisablePostProcessBlueprintKeys;                   // 0x0320(0x0100)(NativeAccessSpecifierPublic)
	struct FMovieSceneStringChannel               HiddenBoneNamesKeys;                               // 0x0420(0x0110)(NativeAccessSpecifierPublic)
	uint8                                         Pad_530[0x8];                                      // 0x0530(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneSkinnedMeshTemplate) == 0x000008, "Wrong alignment on FMovieSceneSkinnedMeshTemplate");
static_assert(sizeof(FMovieSceneSkinnedMeshTemplate) == 0x000538, "Wrong size on FMovieSceneSkinnedMeshTemplate");
static_assert(offsetof(FMovieSceneSkinnedMeshTemplate, SectionShownKeys) == 0x000020, "Member 'FMovieSceneSkinnedMeshTemplate::SectionShownKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneSkinnedMeshTemplate, LODIndexKeys) == 0x000120, "Member 'FMovieSceneSkinnedMeshTemplate::LODIndexKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneSkinnedMeshTemplate, DisableMorphTargetKeys) == 0x000220, "Member 'FMovieSceneSkinnedMeshTemplate::DisableMorphTargetKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneSkinnedMeshTemplate, DisablePostProcessBlueprintKeys) == 0x000320, "Member 'FMovieSceneSkinnedMeshTemplate::DisablePostProcessBlueprintKeys' has a wrong offset!");
static_assert(offsetof(FMovieSceneSkinnedMeshTemplate, HiddenBoneNamesKeys) == 0x000420, "Member 'FMovieSceneSkinnedMeshTemplate::HiddenBoneNamesKeys' has a wrong offset!");

// ScriptStruct CustomMovieSceneTracks.MovieSceneSpringArmSectionTemplate
// 0x0698 (0x06B8 - 0x0020)
struct FMovieSceneSpringArmSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneDoubleChannel               RelativeLocation[0x3];                             // 0x0020(0x0118)(NativeAccessSpecifierPublic)
	struct FMovieSceneDoubleChannel               RelativeRotation[0x3];                             // 0x0368(0x0118)(NativeAccessSpecifierPublic)
	uint8                                         Pad_6B0[0x8];                                      // 0x06B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneSpringArmSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneSpringArmSectionTemplate");
static_assert(sizeof(FMovieSceneSpringArmSectionTemplate) == 0x0006B8, "Wrong size on FMovieSceneSpringArmSectionTemplate");
static_assert(offsetof(FMovieSceneSpringArmSectionTemplate, RelativeLocation) == 0x000020, "Member 'FMovieSceneSpringArmSectionTemplate::RelativeLocation' has a wrong offset!");
static_assert(offsetof(FMovieSceneSpringArmSectionTemplate, RelativeRotation) == 0x000368, "Member 'FMovieSceneSpringArmSectionTemplate::RelativeRotation' has a wrong offset!");

// ScriptStruct CustomMovieSceneTracks.MovieSceneTAAEnableTemplate
// 0x0100 (0x0120 - 0x0020)
struct FMovieSceneTAAEnableTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneBoolChannel                 BoolChannel;                                       // 0x0020(0x0100)(NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneTAAEnableTemplate) == 0x000008, "Wrong alignment on FMovieSceneTAAEnableTemplate");
static_assert(sizeof(FMovieSceneTAAEnableTemplate) == 0x000120, "Wrong size on FMovieSceneTAAEnableTemplate");
static_assert(offsetof(FMovieSceneTAAEnableTemplate, BoolChannel) == 0x000020, "Member 'FMovieSceneTAAEnableTemplate::BoolChannel' has a wrong offset!");

}


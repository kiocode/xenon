#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_DeathMatchPanel_Personal

#include "Basic.hpp"

#include "PyMarvelUserWidget_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// PythonClass PyWidget_DeathMatchPanel_Personal.PyWidget_DeathMatch_Personal_Info
// 0x0050 (0x0640 - 0x05F0)
class UPyWidget_DeathMatch_Personal_Info final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerRank;                                        // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   PlayerName;                                        // 0x05F0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         PlayerHero;                                        // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerScore;                                       // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   TeamColor;                                         // 0x0610(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   EnemyColor;                                        // 0x0620(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   ReplayColor;                                       // 0x0630(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void Destruct();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_DeathMatch_Personal_Info">();
	}
	static class UPyWidget_DeathMatch_Personal_Info* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_DeathMatch_Personal_Info>();
	}
};
static_assert(alignof(UPyWidget_DeathMatch_Personal_Info) == 0x000008, "Wrong alignment on UPyWidget_DeathMatch_Personal_Info");
static_assert(sizeof(UPyWidget_DeathMatch_Personal_Info) == 0x000640, "Wrong size on UPyWidget_DeathMatch_Personal_Info");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, PlayerRank) == 0x0005EC, "Member 'UPyWidget_DeathMatch_Personal_Info::PlayerRank' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, PlayerName) == 0x0005F0, "Member 'UPyWidget_DeathMatch_Personal_Info::PlayerName' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, PlayerHero) == 0x000608, "Member 'UPyWidget_DeathMatch_Personal_Info::PlayerHero' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, PlayerScore) == 0x00060C, "Member 'UPyWidget_DeathMatch_Personal_Info::PlayerScore' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, TeamColor) == 0x000610, "Member 'UPyWidget_DeathMatch_Personal_Info::TeamColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, EnemyColor) == 0x000620, "Member 'UPyWidget_DeathMatch_Personal_Info::EnemyColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatch_Personal_Info, ReplayColor) == 0x000630, "Member 'UPyWidget_DeathMatch_Personal_Info::ReplayColor' has a wrong offset!");

// PythonClass PyWidget_DeathMatchPanel_Personal.PyWidget_Deathmatch_Reborn_Prompt
// 0x0038 (0x0628 - 0x05F0)
class UPyWidget_Deathmatch_Reborn_Prompt : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RebornText;                                        // 0x05F0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   NowRebornText;                                     // 0x0608(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnRevive;                                  // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Deathmatch_Reborn_Prompt">();
	}
	static class UPyWidget_Deathmatch_Reborn_Prompt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Deathmatch_Reborn_Prompt>();
	}
};
static_assert(alignof(UPyWidget_Deathmatch_Reborn_Prompt) == 0x000008, "Wrong alignment on UPyWidget_Deathmatch_Reborn_Prompt");
static_assert(sizeof(UPyWidget_Deathmatch_Reborn_Prompt) == 0x000628, "Wrong size on UPyWidget_Deathmatch_Reborn_Prompt");
static_assert(offsetof(UPyWidget_Deathmatch_Reborn_Prompt, RebornText) == 0x0005F0, "Member 'UPyWidget_Deathmatch_Reborn_Prompt::RebornText' has a wrong offset!");
static_assert(offsetof(UPyWidget_Deathmatch_Reborn_Prompt, NowRebornText) == 0x000608, "Member 'UPyWidget_Deathmatch_Reborn_Prompt::NowRebornText' has a wrong offset!");
static_assert(offsetof(UPyWidget_Deathmatch_Reborn_Prompt, AkEvent_OnRevive) == 0x000620, "Member 'UPyWidget_Deathmatch_Reborn_Prompt::AkEvent_OnRevive' has a wrong offset!");

// PythonClass PyWidget_DeathMatchPanel_Personal.PyWidget_Deathmatch_Tips
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Deathmatch_Tips final : public UPyMarvelUserWidget
{
public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Deathmatch_Tips">();
	}
	static class UPyWidget_Deathmatch_Tips* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Deathmatch_Tips>();
	}
};
static_assert(alignof(UPyWidget_Deathmatch_Tips) == 0x000008, "Wrong alignment on UPyWidget_Deathmatch_Tips");
static_assert(sizeof(UPyWidget_Deathmatch_Tips) == 0x0005F0, "Wrong size on UPyWidget_Deathmatch_Tips");

// PythonClass PyWidget_DeathMatchPanel_Personal.PyWidget_DeathMatchPanel_Personal
// 0x0030 (0x0620 - 0x05F0)
class UPyWidget_DeathMatchPanel_Personal final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            TeamColor;                                         // 0x05EC(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            EnemyColor;                                        // 0x0600(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         NextProgress;                                      // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NextHero;                                          // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShowTipsTime;                                      // 0x061C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Destruct();
	void Construct();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_DeathMatchPanel_Personal">();
	}
	static class UPyWidget_DeathMatchPanel_Personal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_DeathMatchPanel_Personal>();
	}
};
static_assert(alignof(UPyWidget_DeathMatchPanel_Personal) == 0x000008, "Wrong alignment on UPyWidget_DeathMatchPanel_Personal");
static_assert(sizeof(UPyWidget_DeathMatchPanel_Personal) == 0x000620, "Wrong size on UPyWidget_DeathMatchPanel_Personal");
static_assert(offsetof(UPyWidget_DeathMatchPanel_Personal, TeamColor) == 0x0005EC, "Member 'UPyWidget_DeathMatchPanel_Personal::TeamColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatchPanel_Personal, EnemyColor) == 0x000600, "Member 'UPyWidget_DeathMatchPanel_Personal::EnemyColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatchPanel_Personal, NextProgress) == 0x000614, "Member 'UPyWidget_DeathMatchPanel_Personal::NextProgress' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatchPanel_Personal, NextHero) == 0x000618, "Member 'UPyWidget_DeathMatchPanel_Personal::NextHero' has a wrong offset!");
static_assert(offsetof(UPyWidget_DeathMatchPanel_Personal, ShowTipsTime) == 0x00061C, "Member 'UPyWidget_DeathMatchPanel_Personal::ShowTipsTime' has a wrong offset!");

}


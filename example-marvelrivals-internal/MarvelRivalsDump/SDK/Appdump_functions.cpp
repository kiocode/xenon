#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Appdump

#include "Basic.hpp"

#include "Appdump_classes.hpp"
#include "Appdump_parameters.hpp"


namespace SDK
{

// Function Appdump.AppdumpLibrary.AddFiles
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UAppDumpAssociatedFile*>   NtAssociatedFileArray                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAppdumpLibrary::AddFiles(const TArray<class UAppDumpAssociatedFile*>& NtAssociatedFileArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "AddFiles");

	Params::AppdumpLibrary_AddFiles Parms{};

	Parms.NtAssociatedFileArray = std::move(NtAssociatedFileArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.CaptureBacktrace
// (Final, Native, Static, Public, BlueprintCallable)

void UAppdumpLibrary::CaptureBacktrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "CaptureBacktrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.GetUploadFileDir
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAppdumpLibrary::GetUploadFileDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "GetUploadFileDir");

	Params::AppdumpLibrary_GetUploadFileDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Appdump.AppdumpLibrary.InitWithFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DesFileName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SrcContent                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SrcFilePath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FileFeature                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAppDumpAssociatedFile*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAppDumpAssociatedFile* UAppdumpLibrary::InitWithFile(const class FString& DesFileName, const class FString& SrcContent, const class FString& SrcFilePath, const class FString& FileFeature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "InitWithFile");

	Params::AppdumpLibrary_InitWithFile Parms{};

	Parms.DesFileName = std::move(DesFileName);
	Parms.SrcContent = std::move(SrcContent);
	Parms.SrcFilePath = std::move(SrcFilePath);
	Parms.FileFeature = std::move(FileFeature);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Appdump.AppdumpLibrary.IsLastTimeAnr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppdumpLibrary::IsLastTimeAnr()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "IsLastTimeAnr");

	Params::AppdumpLibrary_IsLastTimeAnr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Appdump.AppdumpLibrary.IsLastTimeCrash
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppdumpLibrary::IsLastTimeCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "IsLastTimeCrash");

	Params::AppdumpLibrary_IsLastTimeCrash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Appdump.AppdumpLibrary.PostFiles
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UAppDumpAssociatedFile*           MainFile                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAppDumpAssociatedFile*>   MinorFileArray                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ErrorType                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::PostFiles(const class UAppDumpAssociatedFile* MainFile, const TArray<class UAppDumpAssociatedFile*>& MinorFileArray, const class FString& ErrorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "PostFiles");

	Params::AppdumpLibrary_PostFiles Parms{};

	Parms.MainFile = MainFile;
	Parms.MinorFileArray = std::move(MinorFileArray);
	Parms.ErrorType = std::move(ErrorType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.PostScriptError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ErrorContent                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::PostScriptError(const class FString& ErrorContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "PostScriptError");

	Params::AppdumpLibrary_PostScriptError Parms{};

	Parms.ErrorContent = std::move(ErrorContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.SafelyBindCondition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppdumpLibrary::SafelyBindCondition(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SafelyBindCondition");

	Params::AppdumpLibrary_SafelyBindCondition Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Appdump.AppdumpLibrary.SafelyUnbindCondition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAppdumpLibrary::SafelyUnbindCondition(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SafelyUnbindCondition");

	Params::AppdumpLibrary_SafelyUnbindCondition Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Appdump.AppdumpLibrary.SetBranch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           branch                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::SetBranch(const class FString& branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SetBranch");

	Params::AppdumpLibrary_SetBranch Parms{};

	Parms.branch = std::move(branch);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.SetDebugMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    DebugMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::SetDebugMode(bool DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SetDebugMode");

	Params::AppdumpLibrary_SetDebugMode Parms{};

	Parms.DebugMode = DebugMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.SetEventOccurCallback
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(int32 EventType, const class FString& EventInfo)>TOnEventOccurBLCallback                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::SetEventOccurCallback(const TDelegate<void(int32 EventType, const class FString& EventInfo)>& TOnEventOccurBLCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SetEventOccurCallback");

	Params::AppdumpLibrary_SetEventOccurCallback Parms{};

	Parms.TOnEventOccurBLCallback = TOnEventOccurBLCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.SetHost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Host                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::SetHost(const class FString& Host)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SetHost");

	Params::AppdumpLibrary_SetHost Parms{};

	Parms.Host = std::move(Host);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.SetParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::SetParam(const class FString& Key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SetParam");

	Params::AppdumpLibrary_SetParam Parms{};

	Parms.Key = std::move(Key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.SetUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAppdumpLibrary::SetUrl(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "SetUrl");

	Params::AppdumpLibrary_SetUrl Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.StartHuntingCrash
// (Final, Native, Static, Public, BlueprintCallable)

void UAppdumpLibrary::StartHuntingCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "StartHuntingCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Appdump.AppdumpLibrary.Unseal
// (Final, Native, Static, Public, BlueprintCallable)

void UAppdumpLibrary::Unseal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AppdumpLibrary", "Unseal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}


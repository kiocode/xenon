#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RemoteControlLogic

#include "Basic.hpp"


namespace SDK
{

// Enum RemoteControlLogic.ERCBehaviourConditionType
// NumValues: 0x0008
enum class ERCBehaviourConditionType : uint8
{
	IsEqual                                  = 0,
	IsGreaterThan                            = 1,
	IsLesserThan                             = 2,
	IsGreaterThanOrEqualTo                   = 3,
	IsLesserThanOrEqualTo                    = 4,
	Else                                     = 5,
	None                                     = 6,
	ERCBehaviourConditionType_MAX            = 7,
};

// ScriptStruct RemoteControlLogic.RCBehaviourCondition
// 0x0010 (0x0010 - 0x0000)
struct FRCBehaviourCondition final
{
public:
	ERCBehaviourConditionType                     ConditionType;                                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URCVirtualPropertySelfContainer*        Comparand;                                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FRCBehaviourCondition) == 0x000008, "Wrong alignment on FRCBehaviourCondition");
//static_assert(sizeof(FRCBehaviourCondition) == 0x000010, "Wrong size on FRCBehaviourCondition");
//static_assert(offsetof(FRCBehaviourCondition, ConditionType) == 0x000000, "Member 'FRCBehaviourCondition::ConditionType' has a wrong offset!");
//static_assert(offsetof(FRCBehaviourCondition, Comparand) == 0x000008, "Member 'FRCBehaviourCondition::Comparand' has a wrong offset!");

// ScriptStruct RemoteControlLogic.RCRangeMapInput
// 0x0010 (0x0010 - 0x0000)
struct FRCRangeMapInput final
{
public:
	class URCVirtualPropertySelfContainer*        InputProperty;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URCVirtualPropertySelfContainer*        PropertyValue;                                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FRCRangeMapInput) == 0x000008, "Wrong alignment on FRCRangeMapInput");
//static_assert(sizeof(FRCRangeMapInput) == 0x000010, "Wrong size on FRCRangeMapInput");
//static_assert(offsetof(FRCRangeMapInput, InputProperty) == 0x000000, "Member 'FRCRangeMapInput::InputProperty' has a wrong offset!");
//static_assert(offsetof(FRCRangeMapInput, PropertyValue) == 0x000008, "Member 'FRCRangeMapInput::PropertyValue' has a wrong offset!");

// ScriptStruct RemoteControlLogic.RCSetAssetPath
// 0x0010 (0x0010 - 0x0000)
struct FRCSetAssetPath final
{
public:
	TArray<class FString>                         PathArray;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FRCSetAssetPath) == 0x000008, "Wrong alignment on FRCSetAssetPath");
//static_assert(sizeof(FRCSetAssetPath) == 0x000010, "Wrong size on FRCSetAssetPath");
//static_assert(offsetof(FRCSetAssetPath, PathArray) == 0x000000, "Member 'FRCSetAssetPath::PathArray' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_HurtHintPanel

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_HurtHintPanel.PyWidget_HurtHintPanel
// 0x0020 (0x0600 - 0x05E0)
class UPyWidget_HurtHintPanel : public UWidget_HurtHintPanel
{
public:
	TSubclassOf<class UUserWidget>                Class_HurtOutline;                                 // 0x05E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                Class_HurtCenter;                                  // 0x05E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxOutlineHintWidgetNum;                           // 0x05F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxCenterHintWidgetNum;                            // 0x05F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnInterval;                                     // 0x05F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnTakeDamageDispatcher_Event(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ParmeterHandle);
	void SetTargetCharacter(class AMarvelBaseCharacter* InCharacter);
	void Construct();
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HurtHintPanel">();
	}
	static class UPyWidget_HurtHintPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HurtHintPanel>();
	}
};
static_assert(alignof(UPyWidget_HurtHintPanel) == 0x000008, "Wrong alignment on UPyWidget_HurtHintPanel");
static_assert(sizeof(UPyWidget_HurtHintPanel) == 0x000600, "Wrong size on UPyWidget_HurtHintPanel");
static_assert(offsetof(UPyWidget_HurtHintPanel, Class_HurtOutline) == 0x0005E0, "Member 'UPyWidget_HurtHintPanel::Class_HurtOutline' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtHintPanel, Class_HurtCenter) == 0x0005E8, "Member 'UPyWidget_HurtHintPanel::Class_HurtCenter' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtHintPanel, MaxOutlineHintWidgetNum) == 0x0005F0, "Member 'UPyWidget_HurtHintPanel::MaxOutlineHintWidgetNum' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtHintPanel, MaxCenterHintWidgetNum) == 0x0005F4, "Member 'UPyWidget_HurtHintPanel::MaxCenterHintWidgetNum' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtHintPanel, SpawnInterval) == 0x0005F8, "Member 'UPyWidget_HurtHintPanel::SpawnInterval' has a wrong offset!");

// PythonClass PyWidget_HurtHintPanel.PyWidget_HurtOutlineUnit
// 0x0010 (0x05E0 - 0x05D0)
class UPyWidget_HurtOutlineUnit : public UWidget_HurtOutlineUnit
{
public:
	float                                         PlaySpeed;                                         // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CurveDamage;                                       // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HurtOutlineUnit">();
	}
	static class UPyWidget_HurtOutlineUnit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HurtOutlineUnit>();
	}
};
static_assert(alignof(UPyWidget_HurtOutlineUnit) == 0x000008, "Wrong alignment on UPyWidget_HurtOutlineUnit");
static_assert(sizeof(UPyWidget_HurtOutlineUnit) == 0x0005E0, "Wrong size on UPyWidget_HurtOutlineUnit");
static_assert(offsetof(UPyWidget_HurtOutlineUnit, PlaySpeed) == 0x0005D0, "Member 'UPyWidget_HurtOutlineUnit::PlaySpeed' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtOutlineUnit, CurveDamage) == 0x0005D8, "Member 'UPyWidget_HurtOutlineUnit::CurveDamage' has a wrong offset!");

// PythonClass PyWidget_HurtHintPanel.PyWidget_HurtOutline
// 0x0000 (0x05A8 - 0x05A8)
class UPyWidget_HurtOutline : public UMarvelUserWidget
{
public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HurtOutline">();
	}
	static class UPyWidget_HurtOutline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HurtOutline>();
	}
};
static_assert(alignof(UPyWidget_HurtOutline) == 0x000008, "Wrong alignment on UPyWidget_HurtOutline");
static_assert(sizeof(UPyWidget_HurtOutline) == 0x0005A8, "Wrong size on UPyWidget_HurtOutline");

// PythonClass PyWidget_HurtHintPanel.PyWidget_HurtCenter
// 0x0008 (0x0600 - 0x05F8)
class UPyWidget_HurtCenter : public UWidget_HurtCenter
{
public:
	float                                         SpawnInterval;                                     // 0x05F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnActorDeathDispatcher(class AActor* Source, class AActor* Target, const struct FAttributeModifierHandle& ModifierHandle, const struct FGlobalEventExtraData& ExtraData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HurtCenter">();
	}
	static class UPyWidget_HurtCenter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HurtCenter>();
	}
};
static_assert(alignof(UPyWidget_HurtCenter) == 0x000008, "Wrong alignment on UPyWidget_HurtCenter");
static_assert(sizeof(UPyWidget_HurtCenter) == 0x000600, "Wrong size on UPyWidget_HurtCenter");
static_assert(offsetof(UPyWidget_HurtCenter, SpawnInterval) == 0x0005F8, "Member 'UPyWidget_HurtCenter::SpawnInterval' has a wrong offset!");

// PythonClass PyWidget_HurtHintPanel.PyWidget_HurtCenterUnit
// 0x0018 (0x05E0 - 0x05C8)
class UPyWidget_HurtCenterUnit : public UWidget_HurtCenterUnit
{
public:
	float                                         MinNormalCornerWIdth;                              // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxNormalCornerWidth;                              // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSnipeCornerHeight;                              // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSnipeCornerHeight;                              // 0x05D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HurtCenterUnit">();
	}
	static class UPyWidget_HurtCenterUnit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HurtCenterUnit>();
	}
};
static_assert(alignof(UPyWidget_HurtCenterUnit) == 0x000008, "Wrong alignment on UPyWidget_HurtCenterUnit");
static_assert(sizeof(UPyWidget_HurtCenterUnit) == 0x0005E0, "Wrong size on UPyWidget_HurtCenterUnit");
static_assert(offsetof(UPyWidget_HurtCenterUnit, MinNormalCornerWIdth) == 0x0005C8, "Member 'UPyWidget_HurtCenterUnit::MinNormalCornerWIdth' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtCenterUnit, MaxNormalCornerWidth) == 0x0005CC, "Member 'UPyWidget_HurtCenterUnit::MaxNormalCornerWidth' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtCenterUnit, MinSnipeCornerHeight) == 0x0005D0, "Member 'UPyWidget_HurtCenterUnit::MinSnipeCornerHeight' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtCenterUnit, MaxSnipeCornerHeight) == 0x0005D4, "Member 'UPyWidget_HurtCenterUnit::MaxSnipeCornerHeight' has a wrong offset!");
static_assert(offsetof(UPyWidget_HurtCenterUnit, Duration) == 0x0005D8, "Member 'UPyWidget_HurtCenterUnit::Duration' has a wrong offset!");

}


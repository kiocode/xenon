#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_105051

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_105051.PyAbility_105051.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_105051_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_105051_CanActivate) == 0x000001, "Wrong alignment on PyAbility_105051_CanActivate");
static_assert(sizeof(PyAbility_105051_CanActivate) == 0x000001, "Wrong size on PyAbility_105051_CanActivate");
static_assert(offsetof(PyAbility_105051_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_105051_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_105051.PyAbility_105051.OnCharacterRegisteredProjectileChanged
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_105051_OnCharacterRegisteredProjectileChanged final
{
public:
	class AMarvelAbilityTargetActor_Projectile*   NewProjectile;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_105051_OnCharacterRegisteredProjectileChanged) == 0x000008, "Wrong alignment on PyAbility_105051_OnCharacterRegisteredProjectileChanged");
static_assert(sizeof(PyAbility_105051_OnCharacterRegisteredProjectileChanged) == 0x000008, "Wrong size on PyAbility_105051_OnCharacterRegisteredProjectileChanged");
static_assert(offsetof(PyAbility_105051_OnCharacterRegisteredProjectileChanged, NewProjectile) == 0x000000, "Member 'PyAbility_105051_OnCharacterRegisteredProjectileChanged::NewProjectile' has a wrong offset!");

// PythonFunction PyAbility_105051.PyAbility_105051.OnProjectileSpawn
// 0x0170 (0x0170 - 0x0000)
struct PyAbility_105051_OnProjectileSpawn final
{
public:
	class AActor*                                 SpawnActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0008(0x0168)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_105051_OnProjectileSpawn) == 0x000008, "Wrong alignment on PyAbility_105051_OnProjectileSpawn");
static_assert(sizeof(PyAbility_105051_OnProjectileSpawn) == 0x000170, "Wrong size on PyAbility_105051_OnProjectileSpawn");
static_assert(offsetof(PyAbility_105051_OnProjectileSpawn, SpawnActor) == 0x000000, "Member 'PyAbility_105051_OnProjectileSpawn::SpawnActor' has a wrong offset!");
static_assert(offsetof(PyAbility_105051_OnProjectileSpawn, Data) == 0x000008, "Member 'PyAbility_105051_OnProjectileSpawn::Data' has a wrong offset!");

// PythonFunction PyAbility_105051.PyAbility_105051.OnProjectileEnd
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_105051_OnProjectileEnd final
{
public:
	class AActor*                                 Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_105051_OnProjectileEnd) == 0x000008, "Wrong alignment on PyAbility_105051_OnProjectileEnd");
static_assert(sizeof(PyAbility_105051_OnProjectileEnd) == 0x000008, "Wrong size on PyAbility_105051_OnProjectileEnd");
static_assert(offsetof(PyAbility_105051_OnProjectileEnd, Value) == 0x000000, "Member 'PyAbility_105051_OnProjectileEnd::Value' has a wrong offset!");

// PythonFunction PyAbility_105051.PyAbility_105051.OnBindInputPress
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_105051_OnBindInputPress final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_105051_OnBindInputPress) == 0x000004, "Wrong alignment on PyAbility_105051_OnBindInputPress");
static_assert(sizeof(PyAbility_105051_OnBindInputPress) == 0x000004, "Wrong size on PyAbility_105051_OnBindInputPress");
static_assert(offsetof(PyAbility_105051_OnBindInputPress, TimeWaited) == 0x000000, "Member 'PyAbility_105051_OnBindInputPress::TimeWaited' has a wrong offset!");

// PythonFunction PyAbility_105051.PyAbility_105051.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_105051_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_105051_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_105051_K2_OnEndAbility");
static_assert(sizeof(PyAbility_105051_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_105051_K2_OnEndAbility");
static_assert(offsetof(PyAbility_105051_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_105051_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_105051.PyProjectile_105051.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PyProjectile_105051_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyProjectile_105051_ReceiveEndPlay) == 0x000001, "Wrong alignment on PyProjectile_105051_ReceiveEndPlay");
static_assert(sizeof(PyProjectile_105051_ReceiveEndPlay) == 0x000001, "Wrong size on PyProjectile_105051_ReceiveEndPlay");
static_assert(offsetof(PyProjectile_105051_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PyProjectile_105051_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// PythonFunction PyAbility_105051.PyProjectile_105051.K2_OnProjectileInfoForceChanged_ThreadSafe
// 0x0260 (0x0260 - 0x0000)
struct PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe final
{
public:
	struct FProjectileForceChangedInfo            InProjectileForceChangedInfo;                      // 0x0000(0x0260)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe) == 0x000008, "Wrong alignment on PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe");
static_assert(sizeof(PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe) == 0x000260, "Wrong size on PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe");
static_assert(offsetof(PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe, InProjectileForceChangedInfo) == 0x000000, "Member 'PyProjectile_105051_K2_OnProjectileInfoForceChanged_ThreadSafe::InProjectileForceChangedInfo' has a wrong offset!");

}


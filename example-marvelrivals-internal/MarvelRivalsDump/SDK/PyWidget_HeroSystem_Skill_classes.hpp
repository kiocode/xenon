#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_HeroSystem_Skill

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "PyWidget_ModuleMainPanel_classes.hpp"
#include "PyMarvelUserWidget_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_Skill_ListTitle
// 0x0000 (0x03B8 - 0x03B8)
class UPyWidget_HeroSystem_Skill_ListTitle final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_Skill_ListTitle">();
	}
	static class UPyWidget_HeroSystem_Skill_ListTitle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_Skill_ListTitle>();
	}
};
static_assert(alignof(UPyWidget_HeroSystem_Skill_ListTitle) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_Skill_ListTitle");
static_assert(sizeof(UPyWidget_HeroSystem_Skill_ListTitle) == 0x0003B8, "Wrong size on UPyWidget_HeroSystem_Skill_ListTitle");

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_Skill
// 0x00B0 (0x06C8 - 0x0618)
class UPyWidget_HeroSystem_Skill final : public UPyWidget_ModuleMainPanel
{
public:
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarvelKeyUIAsset*                      KeyAsset;                                          // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   WeaponText;                                        // 0x0620(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   BondText;                                          // 0x0638(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   SkillText;                                         // 0x0650(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   PassiveText;                                       // 0x0668(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   ComboText;                                         // 0x0680(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      MI_Ultimate_Effect;                                // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NetSpeedThreshold;                                 // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultDownloadTestUrl;                            // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSwitchShape;                                     // 0x06B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSwitchShape__DelegateSignature(int32 Shape_id);
	void OnInitialized();
	void Destruct();
	void MarvelSetVisible(bool Visible);
	class UWidget* ScrollBox_skill_nav_rule(EUINavigation Nav_type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_Skill">();
	}
	static class UPyWidget_HeroSystem_Skill* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_Skill>();
	}
};
static_assert(alignof(UPyWidget_HeroSystem_Skill) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_Skill");
static_assert(sizeof(UPyWidget_HeroSystem_Skill) == 0x0006C8, "Wrong size on UPyWidget_HeroSystem_Skill");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, KeyAsset) == 0x000618, "Member 'UPyWidget_HeroSystem_Skill::KeyAsset' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, WeaponText) == 0x000620, "Member 'UPyWidget_HeroSystem_Skill::WeaponText' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, BondText) == 0x000638, "Member 'UPyWidget_HeroSystem_Skill::BondText' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, SkillText) == 0x000650, "Member 'UPyWidget_HeroSystem_Skill::SkillText' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, PassiveText) == 0x000668, "Member 'UPyWidget_HeroSystem_Skill::PassiveText' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, ComboText) == 0x000680, "Member 'UPyWidget_HeroSystem_Skill::ComboText' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, MI_Ultimate_Effect) == 0x000698, "Member 'UPyWidget_HeroSystem_Skill::MI_Ultimate_Effect' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, NetSpeedThreshold) == 0x0006A0, "Member 'UPyWidget_HeroSystem_Skill::NetSpeedThreshold' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, DefaultDownloadTestUrl) == 0x0006A8, "Member 'UPyWidget_HeroSystem_Skill::DefaultDownloadTestUrl' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill, OnSwitchShape) == 0x0006B8, "Member 'UPyWidget_HeroSystem_Skill::OnSwitchShape' has a wrong offset!");

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_Skill_Base
// 0x0000 (0x05F0 - 0x05F0)
#pragma pack(push, 0x1)
class alignas(0x08) UPyWidget_HeroSystem_Skill_Base : public UPyMarvelUserWidget
{
public:
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_Skill_Base">();
	}
	static class UPyWidget_HeroSystem_Skill_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_Skill_Base>();
	}
};
#pragma pack(pop)
static_assert(alignof(UPyWidget_HeroSystem_Skill_Base) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_Skill_Base");
static_assert(sizeof(UPyWidget_HeroSystem_Skill_Base) == 0x0005F0, "Wrong size on UPyWidget_HeroSystem_Skill_Base");

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_Hero_ShapeItem
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_HeroSystem_Hero_ShapeItem final : public UPyMarvelUserWidget
{
public:
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_Hero_ShapeItem">();
	}
	static class UPyWidget_HeroSystem_Hero_ShapeItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_Hero_ShapeItem>();
	}
};
static_assert(alignof(UPyWidget_HeroSystem_Hero_ShapeItem) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_Hero_ShapeItem");
static_assert(sizeof(UPyWidget_HeroSystem_Hero_ShapeItem) == 0x0005F0, "Wrong size on UPyWidget_HeroSystem_Hero_ShapeItem");

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_Skill_ListItem
// 0x00D8 (0x06C8 - 0x05F0)
class UPyWidget_HeroSystem_Skill_ListItem final : public UPyWidget_HeroSystem_Skill_Base
{
public:
	bool                                          IsSkill;                                           // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarvelKeyUIAsset*                      KeyAsset;                                          // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            UltimateSkillColor;                                // 0x05F8(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            NormalSkillColor;                                  // 0x060C(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            SelectedUltimateSkillColor;                        // 0x0620(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            SelectedNormalSkillColor;                          // 0x0634(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            NormalHeadColor;                                   // 0x0648(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            SelectedHeadColor;                                 // 0x065C(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                           NormalImageColor;                                  // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SelectedImageColor;                                // 0x0680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           NormalBgColor;                                     // 0x0690(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SelectedBgColor;                                   // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             TextureNormal;                                     // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             TexturePassive;                                    // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             TextureBond;                                       // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_Skill_ListItem">();
	}
	static class UPyWidget_HeroSystem_Skill_ListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_Skill_ListItem>();
	}
};
static_assert(alignof(UPyWidget_HeroSystem_Skill_ListItem) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_Skill_ListItem");
static_assert(sizeof(UPyWidget_HeroSystem_Skill_ListItem) == 0x0006C8, "Wrong size on UPyWidget_HeroSystem_Skill_ListItem");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, IsSkill) == 0x0005E9, "Member 'UPyWidget_HeroSystem_Skill_ListItem::IsSkill' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, KeyAsset) == 0x0005F0, "Member 'UPyWidget_HeroSystem_Skill_ListItem::KeyAsset' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, UltimateSkillColor) == 0x0005F8, "Member 'UPyWidget_HeroSystem_Skill_ListItem::UltimateSkillColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, NormalSkillColor) == 0x00060C, "Member 'UPyWidget_HeroSystem_Skill_ListItem::NormalSkillColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, SelectedUltimateSkillColor) == 0x000620, "Member 'UPyWidget_HeroSystem_Skill_ListItem::SelectedUltimateSkillColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, SelectedNormalSkillColor) == 0x000634, "Member 'UPyWidget_HeroSystem_Skill_ListItem::SelectedNormalSkillColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, NormalHeadColor) == 0x000648, "Member 'UPyWidget_HeroSystem_Skill_ListItem::NormalHeadColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, SelectedHeadColor) == 0x00065C, "Member 'UPyWidget_HeroSystem_Skill_ListItem::SelectedHeadColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, NormalImageColor) == 0x000670, "Member 'UPyWidget_HeroSystem_Skill_ListItem::NormalImageColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, SelectedImageColor) == 0x000680, "Member 'UPyWidget_HeroSystem_Skill_ListItem::SelectedImageColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, NormalBgColor) == 0x000690, "Member 'UPyWidget_HeroSystem_Skill_ListItem::NormalBgColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, SelectedBgColor) == 0x0006A0, "Member 'UPyWidget_HeroSystem_Skill_ListItem::SelectedBgColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, TextureNormal) == 0x0006B0, "Member 'UPyWidget_HeroSystem_Skill_ListItem::TextureNormal' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, TexturePassive) == 0x0006B8, "Member 'UPyWidget_HeroSystem_Skill_ListItem::TexturePassive' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_Skill_ListItem, TextureBond) == 0x0006C0, "Member 'UPyWidget_HeroSystem_Skill_ListItem::TextureBond' has a wrong offset!");

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_Skill_ListItem_Combo
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_HeroSystem_Skill_ListItem_Combo final : public UPyWidget_HeroSystem_Skill_Base
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_Skill_ListItem_Combo">();
	}
	static class UPyWidget_HeroSystem_Skill_ListItem_Combo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_Skill_ListItem_Combo>();
	}
};
static_assert(alignof(UPyWidget_HeroSystem_Skill_ListItem_Combo) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_Skill_ListItem_Combo");
static_assert(sizeof(UPyWidget_HeroSystem_Skill_ListItem_Combo) == 0x0005F0, "Wrong size on UPyWidget_HeroSystem_Skill_ListItem_Combo");

// PythonClass PyWidget_HeroSystem_Skill.PyWidget_HeroSystem_SkillBanner
// 0x0028 (0x03E0 - 0x03B8)
class UPyWidget_HeroSystem_SkillBanner final : public UUserWidget
{
public:
	class UTexture2D*                             Icon_Tank;                                         // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon_damage;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon_support;                                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             StarEmpty;                                         // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             StarFull;                                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroSystem_SkillBanner">();
	}
	static class UPyWidget_HeroSystem_SkillBanner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroSystem_SkillBanner>();
	}
};
static_assert(alignof(UPyWidget_HeroSystem_SkillBanner) == 0x000008, "Wrong alignment on UPyWidget_HeroSystem_SkillBanner");
static_assert(sizeof(UPyWidget_HeroSystem_SkillBanner) == 0x0003E0, "Wrong size on UPyWidget_HeroSystem_SkillBanner");
static_assert(offsetof(UPyWidget_HeroSystem_SkillBanner, Icon_Tank) == 0x0003B8, "Member 'UPyWidget_HeroSystem_SkillBanner::Icon_Tank' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_SkillBanner, Icon_damage) == 0x0003C0, "Member 'UPyWidget_HeroSystem_SkillBanner::Icon_damage' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_SkillBanner, Icon_support) == 0x0003C8, "Member 'UPyWidget_HeroSystem_SkillBanner::Icon_support' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_SkillBanner, StarEmpty) == 0x0003D0, "Member 'UPyWidget_HeroSystem_SkillBanner::StarEmpty' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroSystem_SkillBanner, StarFull) == 0x0003D8, "Member 'UPyWidget_HeroSystem_SkillBanner::StarFull' has a wrong offset!");

}


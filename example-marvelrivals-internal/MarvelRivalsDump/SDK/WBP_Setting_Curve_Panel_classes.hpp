#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Setting_Curve_Panel

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Setting_Curve_Panel.WBP_Setting_Curve_Panel_C
// 0x0040 (0x03F8 - 0x03B8)
class UWBP_Setting_Curve_Panel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_Setting_Curve_Coordinate_C*        AnchorPointWidget;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelCanvasPanel*                     CanvasPanel_Main;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelSimpleCurveViewWidget*           DoubleSZoneCurve;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelSimpleCurveViewWidget*           ExponentialCurve;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Axis_X;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Axis_Y;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelSimpleCurveViewWidget*           LinearCurve;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Setting_Curve_Panel(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Setting_Curve_Panel_C">();
	}
	static class UWBP_Setting_Curve_Panel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Setting_Curve_Panel_C>();
	}
};
////static_assert(alignof(UWBP_Setting_Curve_Panel_C) == 0x000008, "Wrong alignment on UWBP_Setting_Curve_Panel_C");
////static_assert(sizeof(UWBP_Setting_Curve_Panel_C) == 0x0003F8, "Wrong size on UWBP_Setting_Curve_Panel_C");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, UberGraphFrame) == 0x0003B8, "Member 'UWBP_Setting_Curve_Panel_C::UberGraphFrame' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, AnchorPointWidget) == 0x0003C0, "Member 'UWBP_Setting_Curve_Panel_C::AnchorPointWidget' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, CanvasPanel_Main) == 0x0003C8, "Member 'UWBP_Setting_Curve_Panel_C::CanvasPanel_Main' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, DoubleSZoneCurve) == 0x0003D0, "Member 'UWBP_Setting_Curve_Panel_C::DoubleSZoneCurve' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, ExponentialCurve) == 0x0003D8, "Member 'UWBP_Setting_Curve_Panel_C::ExponentialCurve' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, Img_Axis_X) == 0x0003E0, "Member 'UWBP_Setting_Curve_Panel_C::Img_Axis_X' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, Img_Axis_Y) == 0x0003E8, "Member 'UWBP_Setting_Curve_Panel_C::Img_Axis_Y' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_Curve_Panel_C, LinearCurve) == 0x0003F0, "Member 'UWBP_Setting_Curve_Panel_C::LinearCurve' has a wrong offset!");

}


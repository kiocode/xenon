#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyHulkBannerCharacter

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PyHulkBannerCharacter_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_ReceiveEndPlay) == 0x000001, "Wrong alignment on PyHulkBannerCharacter_ReceiveEndPlay");
static_assert(sizeof(PyHulkBannerCharacter_ReceiveEndPlay) == 0x000001, "Wrong size on PyHulkBannerCharacter_ReceiveEndPlay");
static_assert(offsetof(PyHulkBannerCharacter_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PyHulkBannerCharacter_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.OnHeroReviving
// 0x0001 (0x0001 - 0x0000)
struct PyHulkBannerCharacter_OnHeroReviving final
{
public:
	EPlayerLivingState                            State;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_OnHeroReviving) == 0x000001, "Wrong alignment on PyHulkBannerCharacter_OnHeroReviving");
static_assert(sizeof(PyHulkBannerCharacter_OnHeroReviving) == 0x000001, "Wrong size on PyHulkBannerCharacter_OnHeroReviving");
static_assert(offsetof(PyHulkBannerCharacter_OnHeroReviving, State) == 0x000000, "Member 'PyHulkBannerCharacter_OnHeroReviving::State' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.OnPreDeath
// 0x0028 (0x0028 - 0x0000)
struct PyHulkBannerCharacter_OnPreDeath final
{
public:
	class AController*                            InSource;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InSourceAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierParameter;                                 // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_OnPreDeath) == 0x000008, "Wrong alignment on PyHulkBannerCharacter_OnPreDeath");
static_assert(sizeof(PyHulkBannerCharacter_OnPreDeath) == 0x000028, "Wrong size on PyHulkBannerCharacter_OnPreDeath");
static_assert(offsetof(PyHulkBannerCharacter_OnPreDeath, InSource) == 0x000000, "Member 'PyHulkBannerCharacter_OnPreDeath::InSource' has a wrong offset!");
static_assert(offsetof(PyHulkBannerCharacter_OnPreDeath, InSourceAvatar) == 0x000008, "Member 'PyHulkBannerCharacter_OnPreDeath::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyHulkBannerCharacter_OnPreDeath, ModifierParameter) == 0x000010, "Member 'PyHulkBannerCharacter_OnPreDeath::ModifierParameter' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.K2_OnSculptChanged
// 0x0004 (0x0004 - 0x0000)
struct PyHulkBannerCharacter_K2_OnSculptChanged final
{
public:
	int32                                         SculptID;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_K2_OnSculptChanged) == 0x000004, "Wrong alignment on PyHulkBannerCharacter_K2_OnSculptChanged");
static_assert(sizeof(PyHulkBannerCharacter_K2_OnSculptChanged) == 0x000004, "Wrong size on PyHulkBannerCharacter_K2_OnSculptChanged");
static_assert(offsetof(PyHulkBannerCharacter_K2_OnSculptChanged, SculptID) == 0x000000, "Member 'PyHulkBannerCharacter_K2_OnSculptChanged::SculptID' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.OnLevelForceKill
// 0x0008 (0x0008 - 0x0000)
struct PyHulkBannerCharacter_OnLevelForceKill final
{
public:
	class AActor*                                 Kill_target;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_OnLevelForceKill) == 0x000008, "Wrong alignment on PyHulkBannerCharacter_OnLevelForceKill");
static_assert(sizeof(PyHulkBannerCharacter_OnLevelForceKill) == 0x000008, "Wrong size on PyHulkBannerCharacter_OnLevelForceKill");
static_assert(offsetof(PyHulkBannerCharacter_OnLevelForceKill, Kill_target) == 0x000000, "Member 'PyHulkBannerCharacter_OnLevelForceKill::Kill_target' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.OnTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyHulkBannerCharacter_OnTagUpdate final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_OnTagUpdate) == 0x000004, "Wrong alignment on PyHulkBannerCharacter_OnTagUpdate");
static_assert(sizeof(PyHulkBannerCharacter_OnTagUpdate) == 0x000010, "Wrong size on PyHulkBannerCharacter_OnTagUpdate");
static_assert(offsetof(PyHulkBannerCharacter_OnTagUpdate, Tag) == 0x000000, "Member 'PyHulkBannerCharacter_OnTagUpdate::Tag' has a wrong offset!");
static_assert(offsetof(PyHulkBannerCharacter_OnTagUpdate, Exist) == 0x00000C, "Member 'PyHulkBannerCharacter_OnTagUpdate::Exist' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.OnCharacterReborn
// 0x0740 (0x0740 - 0x0000)
struct PyHulkBannerCharacter_OnCharacterReborn final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterRebornParam                  Param;                                             // 0x0010(0x0730)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyHulkBannerCharacter_OnCharacterReborn) == 0x000010, "Wrong alignment on PyHulkBannerCharacter_OnCharacterReborn");
static_assert(sizeof(PyHulkBannerCharacter_OnCharacterReborn) == 0x000740, "Wrong size on PyHulkBannerCharacter_OnCharacterReborn");
static_assert(offsetof(PyHulkBannerCharacter_OnCharacterReborn, TargetActor) == 0x000000, "Member 'PyHulkBannerCharacter_OnCharacterReborn::TargetActor' has a wrong offset!");
static_assert(offsetof(PyHulkBannerCharacter_OnCharacterReborn, Param) == 0x000010, "Member 'PyHulkBannerCharacter_OnCharacterReborn::Param' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyHulkBannerCharacter.OnActivateAbility
// 0x0004 (0x0004 - 0x0000)
struct PyHulkBannerCharacter_OnActivateAbility final
{
public:
	int32                                         AbilityID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyHulkBannerCharacter_OnActivateAbility) == 0x000004, "Wrong alignment on PyHulkBannerCharacter_OnActivateAbility");
static_assert(sizeof(PyHulkBannerCharacter_OnActivateAbility) == 0x000004, "Wrong size on PyHulkBannerCharacter_OnActivateAbility");
static_assert(offsetof(PyHulkBannerCharacter_OnActivateAbility, AbilityID) == 0x000000, "Member 'PyHulkBannerCharacter_OnActivateAbility::AbilityID' has a wrong offset!");

// PythonFunction PyHulkBannerCharacter.PyBannerBaseChildActor.OnGenericGameplayTagUpdate
// 0x0010 (0x0010 - 0x0000)
struct PyBannerBaseChildActor_OnGenericGameplayTagUpdate final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyBannerBaseChildActor_OnGenericGameplayTagUpdate) == 0x000004, "Wrong alignment on PyBannerBaseChildActor_OnGenericGameplayTagUpdate");
static_assert(sizeof(PyBannerBaseChildActor_OnGenericGameplayTagUpdate) == 0x000010, "Wrong size on PyBannerBaseChildActor_OnGenericGameplayTagUpdate");
static_assert(offsetof(PyBannerBaseChildActor_OnGenericGameplayTagUpdate, InTag) == 0x000000, "Member 'PyBannerBaseChildActor_OnGenericGameplayTagUpdate::InTag' has a wrong offset!");
static_assert(offsetof(PyBannerBaseChildActor_OnGenericGameplayTagUpdate, Count) == 0x00000C, "Member 'PyBannerBaseChildActor_OnGenericGameplayTagUpdate::Count' has a wrong offset!");

}


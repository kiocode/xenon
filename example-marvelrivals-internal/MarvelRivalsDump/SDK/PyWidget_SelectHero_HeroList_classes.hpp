#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_SelectHero_HeroList

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_SelectHero_HeroList.PyWidget_SelectHero_HeroList
// 0x00D8 (0x06C8 - 0x05F0)
class UPyWidget_SelectHero_HeroList : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AKEvent_Select;                                    // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AKEvent_Confirm;                                   // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AKEvent_SelectCanel;                               // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnPreview;                                 // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnClickLocked;                             // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnClickBanPick;                            // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                SelectHero_HeroBtnRing;                            // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                SelectHero_DutyRing;                               // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BtnRingAngle;                                      // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BtnRingTrulyAngle;                                 // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RingStartAngle;                                    // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RingDutyIntervalAngle;                             // 0x063C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BtnAttachTopAngle;                                 // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BtnAttachBottomAngle;                              // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnSelectableTextOpacity;                           // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ToolTipOffset;                                     // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EHeroRole>                             HeroRoleSort;                                      // 0x0660(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UInputAction*                           RequestInputAciton;                                // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPreviewHero;                                     // 0x0678(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSelectHero;                                      // 0x0688(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCancelSelectHero;                                // 0x0698(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSelectableChange;                                // 0x06A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLocalPreviewBanPickHero;                         // 0x06B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void SetTabID(EHeroRole RoleId);
	void OnOpenSelectHeroListChange();
	void Destruct();
	void Construct();
	void OnInitialized();
	void OnLocalPreviewBanPickHero__DelegateSignature(int32 HeroID);
	void OnSelectableChange__DelegateSignature(bool IsSelectable);
	void OnCancelSelectHero__DelegateSignature();
	void OnSelectHero__DelegateSignature(int32 HeroID);
	void OnPreviewHero__DelegateSignature(int32 HeroID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SelectHero_HeroList">();
	}
	static class UPyWidget_SelectHero_HeroList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SelectHero_HeroList>();
	}
};
static_assert(alignof(UPyWidget_SelectHero_HeroList) == 0x000008, "Wrong alignment on UPyWidget_SelectHero_HeroList");
static_assert(sizeof(UPyWidget_SelectHero_HeroList) == 0x0006C8, "Wrong size on UPyWidget_SelectHero_HeroList");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, AKEvent_Select) == 0x0005F0, "Member 'UPyWidget_SelectHero_HeroList::AKEvent_Select' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, AKEvent_Confirm) == 0x0005F8, "Member 'UPyWidget_SelectHero_HeroList::AKEvent_Confirm' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, AKEvent_SelectCanel) == 0x000600, "Member 'UPyWidget_SelectHero_HeroList::AKEvent_SelectCanel' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, AkEvent_OnPreview) == 0x000608, "Member 'UPyWidget_SelectHero_HeroList::AkEvent_OnPreview' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, AkEvent_OnClickLocked) == 0x000610, "Member 'UPyWidget_SelectHero_HeroList::AkEvent_OnClickLocked' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, AkEvent_OnClickBanPick) == 0x000618, "Member 'UPyWidget_SelectHero_HeroList::AkEvent_OnClickBanPick' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, SelectHero_HeroBtnRing) == 0x000620, "Member 'UPyWidget_SelectHero_HeroList::SelectHero_HeroBtnRing' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, SelectHero_DutyRing) == 0x000628, "Member 'UPyWidget_SelectHero_HeroList::SelectHero_DutyRing' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, BtnRingAngle) == 0x000630, "Member 'UPyWidget_SelectHero_HeroList::BtnRingAngle' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, BtnRingTrulyAngle) == 0x000634, "Member 'UPyWidget_SelectHero_HeroList::BtnRingTrulyAngle' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, RingStartAngle) == 0x000638, "Member 'UPyWidget_SelectHero_HeroList::RingStartAngle' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, RingDutyIntervalAngle) == 0x00063C, "Member 'UPyWidget_SelectHero_HeroList::RingDutyIntervalAngle' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, BtnAttachTopAngle) == 0x000640, "Member 'UPyWidget_SelectHero_HeroList::BtnAttachTopAngle' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, BtnAttachBottomAngle) == 0x000644, "Member 'UPyWidget_SelectHero_HeroList::BtnAttachBottomAngle' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, UnSelectableTextOpacity) == 0x000648, "Member 'UPyWidget_SelectHero_HeroList::UnSelectableTextOpacity' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, ToolTipOffset) == 0x000650, "Member 'UPyWidget_SelectHero_HeroList::ToolTipOffset' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, HeroRoleSort) == 0x000660, "Member 'UPyWidget_SelectHero_HeroList::HeroRoleSort' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, RequestInputAciton) == 0x000670, "Member 'UPyWidget_SelectHero_HeroList::RequestInputAciton' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, OnPreviewHero) == 0x000678, "Member 'UPyWidget_SelectHero_HeroList::OnPreviewHero' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, OnSelectHero) == 0x000688, "Member 'UPyWidget_SelectHero_HeroList::OnSelectHero' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, OnCancelSelectHero) == 0x000698, "Member 'UPyWidget_SelectHero_HeroList::OnCancelSelectHero' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, OnSelectableChange) == 0x0006A8, "Member 'UPyWidget_SelectHero_HeroList::OnSelectableChange' has a wrong offset!");
static_assert(offsetof(UPyWidget_SelectHero_HeroList, OnLocalPreviewBanPickHero) == 0x0006B8, "Member 'UPyWidget_SelectHero_HeroList::OnLocalPreviewBanPickHero' has a wrong offset!");

}


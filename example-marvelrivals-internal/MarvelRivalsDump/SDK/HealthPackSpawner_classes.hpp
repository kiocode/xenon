#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HealthPackSpawner

#include "Basic.hpp"

#include "HealthPackType_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PyHealthPackSpawner_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HealthPackSpawner.HealthPackSpawner_C
// 0x00F8 (0x0660 - 0x0568)
class AHealthPackSpawner_C final : public APyHealthPackSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0568(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       LoopRangeCheck;                                    // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       StartRangeCheck;                                   // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionBox;                                      // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      BaseNS;                                            // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CylinderNS;                                        // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelWidgetComponent*                 WidgetCooling;                                     // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        ChargeInterval;                                    // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ChargeTimer;                                       // 0x05B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EHealthPackType                               HealthPackType;                                    // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HealingTimer;                                      // 0x05D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MinBuffId;                                         // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxBuffId;                                         // 0x05F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                SmallBagScale;                                     // 0x0608(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BigBagScale;                                       // 0x0620(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABackTrackManagerActor_C*               BackTrackManager_Appear;                           // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitTransform;                                     // 0x0640(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABackTrackManagerActor_C*               BackTrackManager_Dis;                              // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void ReverseDes_Dis();
	void ReverseDes_Appear();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_HealthPackSpawner(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HealthPackSpawner_C">();
	}
	static class AHealthPackSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHealthPackSpawner_C>();
	}
};
static_assert(alignof(AHealthPackSpawner_C) == 0x000008, "Wrong alignment on AHealthPackSpawner_C");
static_assert(sizeof(AHealthPackSpawner_C) == 0x000660, "Wrong size on AHealthPackSpawner_C");
static_assert(offsetof(AHealthPackSpawner_C, UberGraphFrame) == 0x000568, "Member 'AHealthPackSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, BaseMesh) == 0x000570, "Member 'AHealthPackSpawner_C::BaseMesh' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, LoopRangeCheck) == 0x000578, "Member 'AHealthPackSpawner_C::LoopRangeCheck' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, StartRangeCheck) == 0x000580, "Member 'AHealthPackSpawner_C::StartRangeCheck' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, CollisionBox) == 0x000588, "Member 'AHealthPackSpawner_C::CollisionBox' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, BaseNS) == 0x000590, "Member 'AHealthPackSpawner_C::BaseNS' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, CylinderNS) == 0x000598, "Member 'AHealthPackSpawner_C::CylinderNS' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, WidgetCooling) == 0x0005A0, "Member 'AHealthPackSpawner_C::WidgetCooling' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, DefaultSceneRoot) == 0x0005A8, "Member 'AHealthPackSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, ChargeInterval) == 0x0005B0, "Member 'AHealthPackSpawner_C::ChargeInterval' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, ChargeTimer) == 0x0005B8, "Member 'AHealthPackSpawner_C::ChargeTimer' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, HealthPackType) == 0x0005D0, "Member 'AHealthPackSpawner_C::HealthPackType' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, HealingTimer) == 0x0005D8, "Member 'AHealthPackSpawner_C::HealingTimer' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, MinBuffId) == 0x0005F0, "Member 'AHealthPackSpawner_C::MinBuffId' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, MaxBuffId) == 0x0005F4, "Member 'AHealthPackSpawner_C::MaxBuffId' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, Name_0) == 0x0005F8, "Member 'AHealthPackSpawner_C::Name_0' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, SmallBagScale) == 0x000608, "Member 'AHealthPackSpawner_C::SmallBagScale' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, BigBagScale) == 0x000620, "Member 'AHealthPackSpawner_C::BigBagScale' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, BackTrackManager_Appear) == 0x000638, "Member 'AHealthPackSpawner_C::BackTrackManager_Appear' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, InitTransform) == 0x000640, "Member 'AHealthPackSpawner_C::InitTransform' has a wrong offset!");
static_assert(offsetof(AHealthPackSpawner_C, BackTrackManager_Dis) == 0x000658, "Member 'AHealthPackSpawner_C::BackTrackManager_Dis' has a wrong offset!");

}


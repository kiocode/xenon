#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroState1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HeroState1_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass HeroState1.HeroState1_C
// 0x1440 (0x1AA0 - 0x0660)
class UHeroState1_C final : public UHeroStateSubAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct HeroState1::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0668(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_66A[0x6];                                      // 0x066A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0670(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0678(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0680(0x0038)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x06B8(0x00A0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x0758(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0838(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0880(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0920(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0960(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x09A0(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x09E0(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0A20(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0A60(0x0040)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0AA0(0x0040)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0AE0(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0B40(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0B78(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0BD8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0C10(0x0060)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C70(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0CA8(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0D08(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0D68(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0DC8(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0E28(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E88(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0EE8(0x0060)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0F48(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0F90(0x0078)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1008(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1050(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1088(0x02A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1328(0x0078)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x13A0(0x0160)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1500(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1528(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1570(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x15B8(0x0078)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1630(0x0090)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x16C0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1738(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x17B0(0x0060)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1810(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1858(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x18F8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1940(0x0160)()

public:
	void ExecuteUbergraph_HeroState1(int32 EntryPoint);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroState1_C">();
	}
	static class UHeroState1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroState1_C>();
	}
};
static_assert(alignof(UHeroState1_C) == 0x000010, "Wrong alignment on UHeroState1_C");
static_assert(sizeof(UHeroState1_C) == 0x001AA0, "Wrong size on UHeroState1_C");
static_assert(offsetof(UHeroState1_C, UberGraphFrame) == 0x000660, "Member 'UHeroState1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, __AnimBlueprintMutables) == 0x000668, "Member 'UHeroState1_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimBlueprintExtension_PropertyAccess) == 0x000670, "Member 'UHeroState1_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimBlueprintExtension_Base) == 0x000678, "Member 'UHeroState1_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_Root) == 0x000680, "Member 'UHeroState1_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SaveCachedPose_2) == 0x0006B8, "Member 'UHeroState1_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SubInput) == 0x000758, "Member 'UHeroState1_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose_6) == 0x000838, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SaveCachedPose_1) == 0x000880, "Member 'UHeroState1_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult_6) == 0x000920, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult_5) == 0x000960, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult_4) == 0x0009A0, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult_3) == 0x0009E0, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult_2) == 0x000A20, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult_1) == 0x000A60, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_TransitionResult) == 0x000AA0, "Member 'UHeroState1_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_10) == 0x000AE0, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_StateResult_3) == 0x000B40, "Member 'UHeroState1_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_9) == 0x000B78, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_StateResult_2) == 0x000BD8, "Member 'UHeroState1_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_8) == 0x000C10, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_StateResult_1) == 0x000C70, "Member 'UHeroState1_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_7) == 0x000CA8, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_6) == 0x000D08, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_5) == 0x000D68, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_4) == 0x000DC8, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_3) == 0x000E28, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_2) == 0x000E88, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer_1) == 0x000EE8, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose_5) == 0x000F48, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_BlendListByEnum) == 0x000F90, "Member 'UHeroState1_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose_4) == 0x001008, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_StateResult) == 0x001050, "Member 'UHeroState1_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_StateMachine) == 0x001088, "Member 'UHeroState1_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_BlendListByBool_3) == 0x001328, "Member 'UHeroState1_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0013A0, "Member 'UHeroState1_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_LocalRefPose) == 0x001500, "Member 'UHeroState1_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose_3) == 0x001528, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose_2) == 0x001570, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_BlendListByBool_2) == 0x0015B8, "Member 'UHeroState1_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_BlendSpacePlayer) == 0x001630, "Member 'UHeroState1_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_BlendListByBool_1) == 0x0016C0, "Member 'UHeroState1_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_BlendListByBool) == 0x001738, "Member 'UHeroState1_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SequencePlayer) == 0x0017B0, "Member 'UHeroState1_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose_1) == 0x001810, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_SaveCachedPose) == 0x001858, "Member 'UHeroState1_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_UseCachedPose) == 0x0018F8, "Member 'UHeroState1_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UHeroState1_C, AnimGraphNode_LayeredBoneBlend) == 0x001940, "Member 'UHeroState1_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");

}


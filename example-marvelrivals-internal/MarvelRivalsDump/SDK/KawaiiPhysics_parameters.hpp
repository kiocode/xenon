#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KawaiiPhysics

#include "Basic.hpp"

#include "KawaiiPhysics_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function KawaiiPhysics.KawaiiPhysicsLibrary.ConvertToKawaiiPhysics
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_ConvertToKawaiiPhysics final
{
public:
	struct FAnimNodeReference                     Node;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EAnimNodeReferenceConversionResult            Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysics) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_ConvertToKawaiiPhysics");
static_assert(sizeof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysics) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_ConvertToKawaiiPhysics");
static_assert(offsetof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysics, Node) == 0x000000, "Member 'KawaiiPhysicsLibrary_ConvertToKawaiiPhysics::Node' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysics, Result) == 0x000010, "Member 'KawaiiPhysicsLibrary_ConvertToKawaiiPhysics::Result' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysics, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_ConvertToKawaiiPhysics::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.ConvertToKawaiiPhysicsPure
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure final
{
public:
	struct FAnimNodeReference                     Node;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure");
static_assert(sizeof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure");
static_assert(offsetof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure, Node) == 0x000000, "Member 'KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure::Node' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure, KawaiiPhysics) == 0x000010, "Member 'KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure, Result) == 0x000020, "Member 'KawaiiPhysicsLibrary_ConvertToKawaiiPhysicsPure::Result' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetAllowWorldCollision
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetAllowWorldCollision final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetAllowWorldCollision) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetAllowWorldCollision");
static_assert(sizeof(KawaiiPhysicsLibrary_GetAllowWorldCollision) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetAllowWorldCollision");
static_assert(offsetof(KawaiiPhysicsLibrary_GetAllowWorldCollision, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetAllowWorldCollision::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetAllowWorldCollision, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetAllowWorldCollision::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetDummyBoneLength
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetDummyBoneLength final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetDummyBoneLength) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetDummyBoneLength");
static_assert(sizeof(KawaiiPhysicsLibrary_GetDummyBoneLength) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetDummyBoneLength");
static_assert(offsetof(KawaiiPhysicsLibrary_GetDummyBoneLength, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetDummyBoneLength::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetDummyBoneLength, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetDummyBoneLength::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetEnableWind
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetEnableWind final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetEnableWind) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetEnableWind");
static_assert(sizeof(KawaiiPhysicsLibrary_GetEnableWind) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetEnableWind");
static_assert(offsetof(KawaiiPhysicsLibrary_GetEnableWind, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetEnableWind::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetEnableWind, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetEnableWind::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetGravity
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_GetGravity final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_GetGravity) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetGravity");
static_assert(sizeof(KawaiiPhysicsLibrary_GetGravity) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_GetGravity");
static_assert(offsetof(KawaiiPhysicsLibrary_GetGravity, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetGravity::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetGravity, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetGravity::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetNeedWarmUp
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetNeedWarmUp final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetNeedWarmUp) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetNeedWarmUp");
static_assert(sizeof(KawaiiPhysicsLibrary_GetNeedWarmUp) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetNeedWarmUp");
static_assert(offsetof(KawaiiPhysicsLibrary_GetNeedWarmUp, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetNeedWarmUp::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetNeedWarmUp, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetNeedWarmUp::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetPhysicsSettings
// 0x0030 (0x0030 - 0x0000)
struct KawaiiPhysicsLibrary_GetPhysicsSettings final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsSettings                 ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_GetPhysicsSettings) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetPhysicsSettings");
static_assert(sizeof(KawaiiPhysicsLibrary_GetPhysicsSettings) == 0x000030, "Wrong size on KawaiiPhysicsLibrary_GetPhysicsSettings");
static_assert(offsetof(KawaiiPhysicsLibrary_GetPhysicsSettings, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetPhysicsSettings::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetPhysicsSettings, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetPhysicsSettings::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetTeleportDistanceThreshold
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetTeleportDistanceThreshold final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetTeleportDistanceThreshold) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetTeleportDistanceThreshold");
static_assert(sizeof(KawaiiPhysicsLibrary_GetTeleportDistanceThreshold) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetTeleportDistanceThreshold");
static_assert(offsetof(KawaiiPhysicsLibrary_GetTeleportDistanceThreshold, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetTeleportDistanceThreshold::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetTeleportDistanceThreshold, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetTeleportDistanceThreshold::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetTeleportRotationThreshold
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetTeleportRotationThreshold final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetTeleportRotationThreshold) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetTeleportRotationThreshold");
static_assert(sizeof(KawaiiPhysicsLibrary_GetTeleportRotationThreshold) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetTeleportRotationThreshold");
static_assert(offsetof(KawaiiPhysicsLibrary_GetTeleportRotationThreshold, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetTeleportRotationThreshold::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetTeleportRotationThreshold, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetTeleportRotationThreshold::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.GetWindScale
// 0x0018 (0x0018 - 0x0000)
struct KawaiiPhysicsLibrary_GetWindScale final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_GetWindScale) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_GetWindScale");
static_assert(sizeof(KawaiiPhysicsLibrary_GetWindScale) == 0x000018, "Wrong size on KawaiiPhysicsLibrary_GetWindScale");
static_assert(offsetof(KawaiiPhysicsLibrary_GetWindScale, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_GetWindScale::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_GetWindScale, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_GetWindScale::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.ResetDynamics
// 0x0020 (0x0020 - 0x0000)
struct KawaiiPhysicsLibrary_ResetDynamics final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_ResetDynamics) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_ResetDynamics");
static_assert(sizeof(KawaiiPhysicsLibrary_ResetDynamics) == 0x000020, "Wrong size on KawaiiPhysicsLibrary_ResetDynamics");
static_assert(offsetof(KawaiiPhysicsLibrary_ResetDynamics, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_ResetDynamics::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_ResetDynamics, ReturnValue) == 0x000010, "Member 'KawaiiPhysicsLibrary_ResetDynamics::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetAllowWorldCollision
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetAllowWorldCollision final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          AllowWorldCollision;                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetAllowWorldCollision) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetAllowWorldCollision");
static_assert(sizeof(KawaiiPhysicsLibrary_SetAllowWorldCollision) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetAllowWorldCollision");
static_assert(offsetof(KawaiiPhysicsLibrary_SetAllowWorldCollision, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetAllowWorldCollision::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetAllowWorldCollision, AllowWorldCollision) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetAllowWorldCollision::AllowWorldCollision' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetAllowWorldCollision, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetAllowWorldCollision::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetDummyBoneLength
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetDummyBoneLength final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DummyBoneLength;                                   // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetDummyBoneLength) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetDummyBoneLength");
static_assert(sizeof(KawaiiPhysicsLibrary_SetDummyBoneLength) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetDummyBoneLength");
static_assert(offsetof(KawaiiPhysicsLibrary_SetDummyBoneLength, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetDummyBoneLength::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetDummyBoneLength, DummyBoneLength) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetDummyBoneLength::DummyBoneLength' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetDummyBoneLength, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetDummyBoneLength::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetEnableWind
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetEnableWind final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          EnableWind;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetEnableWind) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetEnableWind");
static_assert(sizeof(KawaiiPhysicsLibrary_SetEnableWind) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetEnableWind");
static_assert(offsetof(KawaiiPhysicsLibrary_SetEnableWind, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetEnableWind::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetEnableWind, EnableWind) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetEnableWind::EnableWind' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetEnableWind, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetEnableWind::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetGravity
// 0x0038 (0x0038 - 0x0000)
struct KawaiiPhysicsLibrary_SetGravity final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Gravity;                                           // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetGravity) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetGravity");
static_assert(sizeof(KawaiiPhysicsLibrary_SetGravity) == 0x000038, "Wrong size on KawaiiPhysicsLibrary_SetGravity");
static_assert(offsetof(KawaiiPhysicsLibrary_SetGravity, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetGravity::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetGravity, Gravity) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetGravity::Gravity' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetGravity, ReturnValue) == 0x000028, "Member 'KawaiiPhysicsLibrary_SetGravity::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetNeedWarmUp
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetNeedWarmUp final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          NeedWarmUp;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetNeedWarmUp) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetNeedWarmUp");
static_assert(sizeof(KawaiiPhysicsLibrary_SetNeedWarmUp) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetNeedWarmUp");
static_assert(offsetof(KawaiiPhysicsLibrary_SetNeedWarmUp, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetNeedWarmUp::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetNeedWarmUp, NeedWarmUp) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetNeedWarmUp::NeedWarmUp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetNeedWarmUp, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetNeedWarmUp::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetPhysicsSettings
// 0x0040 (0x0040 - 0x0000)
struct KawaiiPhysicsLibrary_SetPhysicsSettings final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsSettings                 PhysicsSettings;                                   // 0x0010(0x0020)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetPhysicsSettings) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetPhysicsSettings");
static_assert(sizeof(KawaiiPhysicsLibrary_SetPhysicsSettings) == 0x000040, "Wrong size on KawaiiPhysicsLibrary_SetPhysicsSettings");
static_assert(offsetof(KawaiiPhysicsLibrary_SetPhysicsSettings, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetPhysicsSettings::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetPhysicsSettings, PhysicsSettings) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetPhysicsSettings::PhysicsSettings' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetPhysicsSettings, ReturnValue) == 0x000030, "Member 'KawaiiPhysicsLibrary_SetPhysicsSettings::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetTeleportDistanceThreshold
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetTeleportDistanceThreshold final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TeleportDistanceThreshold;                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetTeleportDistanceThreshold) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetTeleportDistanceThreshold");
static_assert(sizeof(KawaiiPhysicsLibrary_SetTeleportDistanceThreshold) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetTeleportDistanceThreshold");
static_assert(offsetof(KawaiiPhysicsLibrary_SetTeleportDistanceThreshold, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetTeleportDistanceThreshold::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetTeleportDistanceThreshold, TeleportDistanceThreshold) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetTeleportDistanceThreshold::TeleportDistanceThreshold' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetTeleportDistanceThreshold, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetTeleportDistanceThreshold::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetTeleportRotationThreshold
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetTeleportRotationThreshold final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TeleportRotationThreshold;                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetTeleportRotationThreshold) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetTeleportRotationThreshold");
static_assert(sizeof(KawaiiPhysicsLibrary_SetTeleportRotationThreshold) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetTeleportRotationThreshold");
static_assert(offsetof(KawaiiPhysicsLibrary_SetTeleportRotationThreshold, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetTeleportRotationThreshold::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetTeleportRotationThreshold, TeleportRotationThreshold) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetTeleportRotationThreshold::TeleportRotationThreshold' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetTeleportRotationThreshold, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetTeleportRotationThreshold::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.SetWindScale
// 0x0028 (0x0028 - 0x0000)
struct KawaiiPhysicsLibrary_SetWindScale final
{
public:
	struct FKawaiiPhysicsReference                KawaiiPhysics;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         WindScale;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsReference                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysicsLibrary_SetWindScale) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_SetWindScale");
static_assert(sizeof(KawaiiPhysicsLibrary_SetWindScale) == 0x000028, "Wrong size on KawaiiPhysicsLibrary_SetWindScale");
static_assert(offsetof(KawaiiPhysicsLibrary_SetWindScale, KawaiiPhysics) == 0x000000, "Member 'KawaiiPhysicsLibrary_SetWindScale::KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetWindScale, WindScale) == 0x000010, "Member 'KawaiiPhysicsLibrary_SetWindScale::WindScale' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_SetWindScale, ReturnValue) == 0x000018, "Member 'KawaiiPhysicsLibrary_SetWindScale::ReturnValue' has a wrong offset!");

}


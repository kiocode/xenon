#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103931

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_103931.PyScope_10393101.TraceResults
// 0x0018 (0x0018 - 0x0000)
struct PyScope_10393101_TraceResults final
{
public:
	class UObject*                                TraceSource;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     HitResults;                                        // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyScope_10393101_TraceResults) == 0x000008, "Wrong alignment on PyScope_10393101_TraceResults");
static_assert(sizeof(PyScope_10393101_TraceResults) == 0x000018, "Wrong size on PyScope_10393101_TraceResults");
static_assert(offsetof(PyScope_10393101_TraceResults, TraceSource) == 0x000000, "Member 'PyScope_10393101_TraceResults::TraceSource' has a wrong offset!");
static_assert(offsetof(PyScope_10393101_TraceResults, HitResults) == 0x000008, "Member 'PyScope_10393101_TraceResults::HitResults' has a wrong offset!");

// PythonFunction PyAbility_103931.PyCue_Scope_Loop_10393101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10393101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10393101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10393101_WhileActiveFX");
static_assert(sizeof(PyCue_Scope_Loop_10393101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10393101_WhileActiveFX");
static_assert(offsetof(PyCue_Scope_Loop_10393101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10393101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10393101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10393101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103931.PyCue_Scope_Loop_10393101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10393101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10393101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10393101_OnRemoveFX");
static_assert(sizeof(PyCue_Scope_Loop_10393101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10393101_OnRemoveFX");
static_assert(offsetof(PyCue_Scope_Loop_10393101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10393101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10393101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10393101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_103931.PyAbility_103931.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_103931_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103931_CanActivate) == 0x000001, "Wrong alignment on PyAbility_103931_CanActivate");
static_assert(sizeof(PyAbility_103931_CanActivate) == 0x000001, "Wrong size on PyAbility_103931_CanActivate");
static_assert(offsetof(PyAbility_103931_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_103931_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_103931.PyAbility_103931.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_103931_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_103931_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_103931_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_103931_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_103931_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_103931_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_103931_NativeOnMontageCompleted::Tag' has a wrong offset!");

}


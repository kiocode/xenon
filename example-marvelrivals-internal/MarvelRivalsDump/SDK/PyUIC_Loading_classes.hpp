#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyUIC_Loading

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Marvel_classes.hpp"
#include "Python_enums_structs.hpp"


namespace SDK
{

// PythonClass PyUIC_Loading.PyUIC_Loading
// 0x0060 (0x00F0 - 0x0090)
class UPyUIC_Loading : public UUIC_Loading
{
public:
	float                                         PredictLoadingDuration;                            // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpdateProgressInterval;                            // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReportProgressInterval;                            // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReportProgressThreshold;                           // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedFactor;                                       // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            AttackColor;                                       // 0x00A4(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            DefenseColor;                                      // 0x00B8(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         BgTextAlpha;                                       // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayHideLoadingTime;                              // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Test_Enabled;                                      // 0x00D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Test_ModeId;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Test_RoomCamp;                                     // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELoadingPanelType                             Test_LoadingPanelType;                             // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Test_ClearVideoHistory;                            // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Test_ShowLoadingDebugInfo;                         // 0x00E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Init();
	void Destruct();
	void OnLoadingVisibleChanged(bool bVisible);
	void OnPreLoadMapRecord(const class FString& MapName);
	void OnPostLoadMapRecord(class UWorld* WorldObj);
	void PyOnPreLoadMap(const class FString& MapName);
	void PyOnPostLoadMap(class UWorld* WorldObj);
	void OnSelectHeroWorldLoaded(const class FString& LoadedWorld);
	void OnServerFirstMapLoaded();
	void OnEndReached();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIC_Loading">();
	}
	static class UPyUIC_Loading* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIC_Loading>();
	}
};
static_assert(alignof(UPyUIC_Loading) == 0x000010, "Wrong alignment on UPyUIC_Loading");
static_assert(sizeof(UPyUIC_Loading) == 0x0000F0, "Wrong size on UPyUIC_Loading");
static_assert(offsetof(UPyUIC_Loading, PredictLoadingDuration) == 0x000090, "Member 'UPyUIC_Loading::PredictLoadingDuration' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, UpdateProgressInterval) == 0x000094, "Member 'UPyUIC_Loading::UpdateProgressInterval' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, ReportProgressInterval) == 0x000098, "Member 'UPyUIC_Loading::ReportProgressInterval' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, ReportProgressThreshold) == 0x00009C, "Member 'UPyUIC_Loading::ReportProgressThreshold' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, SpeedFactor) == 0x0000A0, "Member 'UPyUIC_Loading::SpeedFactor' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, AttackColor) == 0x0000A4, "Member 'UPyUIC_Loading::AttackColor' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, DefenseColor) == 0x0000B8, "Member 'UPyUIC_Loading::DefenseColor' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, BgTextAlpha) == 0x0000CC, "Member 'UPyUIC_Loading::BgTextAlpha' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, DelayHideLoadingTime) == 0x0000D0, "Member 'UPyUIC_Loading::DelayHideLoadingTime' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, Test_Enabled) == 0x0000D4, "Member 'UPyUIC_Loading::Test_Enabled' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, Test_ModeId) == 0x0000D8, "Member 'UPyUIC_Loading::Test_ModeId' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, Test_RoomCamp) == 0x0000DC, "Member 'UPyUIC_Loading::Test_RoomCamp' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, Test_LoadingPanelType) == 0x0000E0, "Member 'UPyUIC_Loading::Test_LoadingPanelType' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, Test_ClearVideoHistory) == 0x0000E1, "Member 'UPyUIC_Loading::Test_ClearVideoHistory' has a wrong offset!");
static_assert(offsetof(UPyUIC_Loading, Test_ShowLoadingDebugInfo) == 0x0000E2, "Member 'UPyUIC_Loading::Test_ShowLoadingDebugInfo' has a wrong offset!");

}


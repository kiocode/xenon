#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Device_check_utils

#include "Basic.hpp"


namespace SDK::Params
{

// PythonFunction device_check_utils.DeviceFunctionLibrary.GetCpuInfo
// 0x0010 (0x0010 - 0x0000)
struct DeviceFunctionLibrary_GetCpuInfo final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_GetCpuInfo) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_GetCpuInfo");
static_assert(sizeof(DeviceFunctionLibrary_GetCpuInfo) == 0x000010, "Wrong size on DeviceFunctionLibrary_GetCpuInfo");
static_assert(offsetof(DeviceFunctionLibrary_GetCpuInfo, ReturnValue) == 0x000000, "Member 'DeviceFunctionLibrary_GetCpuInfo::ReturnValue' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.GetGpuInfo
// 0x0010 (0x0010 - 0x0000)
struct DeviceFunctionLibrary_GetGpuInfo final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_GetGpuInfo) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_GetGpuInfo");
static_assert(sizeof(DeviceFunctionLibrary_GetGpuInfo) == 0x000010, "Wrong size on DeviceFunctionLibrary_GetGpuInfo");
static_assert(offsetof(DeviceFunctionLibrary_GetGpuInfo, ReturnValue) == 0x000000, "Member 'DeviceFunctionLibrary_GetGpuInfo::ReturnValue' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.QueryCpuVendor
// 0x0020 (0x0020 - 0x0000)
struct DeviceFunctionLibrary_QueryCpuVendor final
{
public:
	class FString                                 Cpu_info;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_QueryCpuVendor) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_QueryCpuVendor");
static_assert(sizeof(DeviceFunctionLibrary_QueryCpuVendor) == 0x000020, "Wrong size on DeviceFunctionLibrary_QueryCpuVendor");
static_assert(offsetof(DeviceFunctionLibrary_QueryCpuVendor, Cpu_info) == 0x000000, "Member 'DeviceFunctionLibrary_QueryCpuVendor::Cpu_info' has a wrong offset!");
static_assert(offsetof(DeviceFunctionLibrary_QueryCpuVendor, ReturnValue) == 0x000010, "Member 'DeviceFunctionLibrary_QueryCpuVendor::ReturnValue' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.QueryGpuVendor
// 0x0020 (0x0020 - 0x0000)
struct DeviceFunctionLibrary_QueryGpuVendor final
{
public:
	class FString                                 Gpu_info;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_QueryGpuVendor) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_QueryGpuVendor");
static_assert(sizeof(DeviceFunctionLibrary_QueryGpuVendor) == 0x000020, "Wrong size on DeviceFunctionLibrary_QueryGpuVendor");
static_assert(offsetof(DeviceFunctionLibrary_QueryGpuVendor, Gpu_info) == 0x000000, "Member 'DeviceFunctionLibrary_QueryGpuVendor::Gpu_info' has a wrong offset!");
static_assert(offsetof(DeviceFunctionLibrary_QueryGpuVendor, ReturnValue) == 0x000010, "Member 'DeviceFunctionLibrary_QueryGpuVendor::ReturnValue' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.GetBenchmarkCpuGrade
// 0x0004 (0x0004 - 0x0000)
struct DeviceFunctionLibrary_GetBenchmarkCpuGrade final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_GetBenchmarkCpuGrade) == 0x000004, "Wrong alignment on DeviceFunctionLibrary_GetBenchmarkCpuGrade");
static_assert(sizeof(DeviceFunctionLibrary_GetBenchmarkCpuGrade) == 0x000004, "Wrong size on DeviceFunctionLibrary_GetBenchmarkCpuGrade");
static_assert(offsetof(DeviceFunctionLibrary_GetBenchmarkCpuGrade, ReturnValue) == 0x000000, "Member 'DeviceFunctionLibrary_GetBenchmarkCpuGrade::ReturnValue' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.GetBenchmarkGpuGrade
// 0x0004 (0x0004 - 0x0000)
struct DeviceFunctionLibrary_GetBenchmarkGpuGrade final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_GetBenchmarkGpuGrade) == 0x000004, "Wrong alignment on DeviceFunctionLibrary_GetBenchmarkGpuGrade");
static_assert(sizeof(DeviceFunctionLibrary_GetBenchmarkGpuGrade) == 0x000004, "Wrong size on DeviceFunctionLibrary_GetBenchmarkGpuGrade");
static_assert(offsetof(DeviceFunctionLibrary_GetBenchmarkGpuGrade, ReturnValue) == 0x000000, "Member 'DeviceFunctionLibrary_GetBenchmarkGpuGrade::ReturnValue' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.SetDefaultSettingByCpuGpuInfo
// 0x0008 (0x0008 - 0x0000)
struct DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo final
{
public:
	class UObject*                                WCO;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo");
static_assert(sizeof(DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo) == 0x000008, "Wrong size on DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo");
static_assert(offsetof(DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo, WCO) == 0x000000, "Member 'DeviceFunctionLibrary_SetDefaultSettingByCpuGpuInfo::WCO' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.BestGraphicsSetting
// 0x0008 (0x0008 - 0x0000)
struct DeviceFunctionLibrary_BestGraphicsSetting final
{
public:
	class UObject*                                WCO;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeviceFunctionLibrary_BestGraphicsSetting) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_BestGraphicsSetting");
static_assert(sizeof(DeviceFunctionLibrary_BestGraphicsSetting) == 0x000008, "Wrong size on DeviceFunctionLibrary_BestGraphicsSetting");
static_assert(offsetof(DeviceFunctionLibrary_BestGraphicsSetting, WCO) == 0x000000, "Member 'DeviceFunctionLibrary_BestGraphicsSetting::WCO' has a wrong offset!");

// PythonFunction device_check_utils.DeviceFunctionLibrary.GetDefaultSettingLevel
// 0x0010 (0x0010 - 0x0000)
struct DeviceFunctionLibrary_GetDefaultSettingLevel final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(DeviceFunctionLibrary_GetDefaultSettingLevel) == 0x000008, "Wrong alignment on DeviceFunctionLibrary_GetDefaultSettingLevel");
static_assert(sizeof(DeviceFunctionLibrary_GetDefaultSettingLevel) == 0x000010, "Wrong size on DeviceFunctionLibrary_GetDefaultSettingLevel");
static_assert(offsetof(DeviceFunctionLibrary_GetDefaultSettingLevel, ReturnValue) == 0x000000, "Member 'DeviceFunctionLibrary_GetDefaultSettingLevel::ReturnValue' has a wrong offset!");

}


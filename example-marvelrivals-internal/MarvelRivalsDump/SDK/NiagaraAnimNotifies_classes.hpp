#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NiagaraAnimNotifies

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"
#include "NiagaraAnimNotifies_structs.hpp"


namespace SDK
{

// Class NiagaraAnimNotifies.AnimNotifyState_TimedNiagaraEffect
// 0x0098 (0x00D0 - 0x0038)
class UAnimNotifyState_TimedNiagaraEffect : public UAnimNotifyState
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Template;                                          // 0x0038(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0068(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationOffset;                                    // 0x0078(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotationOffset;                                    // 0x0090(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDestroyAtEnd;                                     // 0x00A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ComponentTimeScale;                                // 0x00AC(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUsedTranslucencySortPriority : 1;                 // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TranslucencySortPriority;                          // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUsedTranslucencySortDistanceOffset : 1;           // 0x00B8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TranslucencySortDistanceOffset;                    // 0x00BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x10];                                      // 0x00C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFXSystemComponent* GetSpawnedEffect(class UMeshComponent* MeshComp) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotifyState_TimedNiagaraEffect">();
	}
	static class UAnimNotifyState_TimedNiagaraEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_TimedNiagaraEffect>();
	}
};
static_assert(alignof(UAnimNotifyState_TimedNiagaraEffect) == 0x000008, "Wrong alignment on UAnimNotifyState_TimedNiagaraEffect");
static_assert(sizeof(UAnimNotifyState_TimedNiagaraEffect) == 0x0000D0, "Wrong size on UAnimNotifyState_TimedNiagaraEffect");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, Template) == 0x000038, "Member 'UAnimNotifyState_TimedNiagaraEffect::Template' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, SocketName) == 0x000068, "Member 'UAnimNotifyState_TimedNiagaraEffect::SocketName' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, LocationOffset) == 0x000078, "Member 'UAnimNotifyState_TimedNiagaraEffect::LocationOffset' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, RotationOffset) == 0x000090, "Member 'UAnimNotifyState_TimedNiagaraEffect::RotationOffset' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, bDestroyAtEnd) == 0x0000A8, "Member 'UAnimNotifyState_TimedNiagaraEffect::bDestroyAtEnd' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, ComponentTimeScale) == 0x0000AC, "Member 'UAnimNotifyState_TimedNiagaraEffect::ComponentTimeScale' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, TranslucencySortPriority) == 0x0000B4, "Member 'UAnimNotifyState_TimedNiagaraEffect::TranslucencySortPriority' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffect, TranslucencySortDistanceOffset) == 0x0000BC, "Member 'UAnimNotifyState_TimedNiagaraEffect::TranslucencySortDistanceOffset' has a wrong offset!");

// Class NiagaraAnimNotifies.AnimNotifyState_TimedNiagaraEffectAdvanced
// 0x0070 (0x0140 - 0x00D0)
class UAnimNotifyState_TimedNiagaraEffectAdvanced final : public UAnimNotifyState_TimedNiagaraEffect
{
public:
	bool                                          bEnableNormalizedNotifyProgress;                   // 0x00D0(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NotifyProgressUserParameter;                       // 0x00D4(0x000C)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCurveParameterPair>            AnimCurves;                                        // 0x00E0(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x50];                                      // 0x00F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetNotifyProgress(class UMeshComponent* MeshComp) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotifyState_TimedNiagaraEffectAdvanced">();
	}
	static class UAnimNotifyState_TimedNiagaraEffectAdvanced* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_TimedNiagaraEffectAdvanced>();
	}
};
static_assert(alignof(UAnimNotifyState_TimedNiagaraEffectAdvanced) == 0x000008, "Wrong alignment on UAnimNotifyState_TimedNiagaraEffectAdvanced");
static_assert(sizeof(UAnimNotifyState_TimedNiagaraEffectAdvanced) == 0x000140, "Wrong size on UAnimNotifyState_TimedNiagaraEffectAdvanced");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffectAdvanced, bEnableNormalizedNotifyProgress) == 0x0000D0, "Member 'UAnimNotifyState_TimedNiagaraEffectAdvanced::bEnableNormalizedNotifyProgress' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffectAdvanced, NotifyProgressUserParameter) == 0x0000D4, "Member 'UAnimNotifyState_TimedNiagaraEffectAdvanced::NotifyProgressUserParameter' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffectAdvanced, AnimCurves) == 0x0000E0, "Member 'UAnimNotifyState_TimedNiagaraEffectAdvanced::AnimCurves' has a wrong offset!");

// Class NiagaraAnimNotifies.AnimNotifyState_TimedNiagaraEffectWithSpeed
// 0x0010 (0x00E0 - 0x00D0)
class UAnimNotifyState_TimedNiagaraEffectWithSpeed final : public UAnimNotifyState_TimedNiagaraEffect
{
public:
	class UCurveFloat*                            SpeedCurve;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotifyState_TimedNiagaraEffectWithSpeed">();
	}
	static class UAnimNotifyState_TimedNiagaraEffectWithSpeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_TimedNiagaraEffectWithSpeed>();
	}
};
static_assert(alignof(UAnimNotifyState_TimedNiagaraEffectWithSpeed) == 0x000008, "Wrong alignment on UAnimNotifyState_TimedNiagaraEffectWithSpeed");
static_assert(sizeof(UAnimNotifyState_TimedNiagaraEffectWithSpeed) == 0x0000E0, "Wrong size on UAnimNotifyState_TimedNiagaraEffectWithSpeed");
static_assert(offsetof(UAnimNotifyState_TimedNiagaraEffectWithSpeed, SpeedCurve) == 0x0000D0, "Member 'UAnimNotifyState_TimedNiagaraEffectWithSpeed::SpeedCurve' has a wrong offset!");

// Class NiagaraAnimNotifies.AnimNotify_PlayNiagaraEffect
// 0x0220 (0x0260 - 0x0040)
#pragma pack(push, 0x1)
class alignas(0x10) UAnimNotify_PlayNiagaraEffect : public UAnimNotify
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Template;                                          // 0x0040(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCombineEffect;                                 // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          TemplateCombineEffect;                             // 0x0078(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LocationOffset;                                    // 0x00A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotationOffset;                                    // 0x00C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x00D8(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAbsoluteScale;                                    // 0x00F0(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x3F];                                      // 0x00F1(0x003F)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDeactivateOnMontageEnded;                         // 0x0130(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         Attached : 1;                                      // 0x0134(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0138(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EffectLastTime;                                    // 0x0144(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComponentTimeScale;                                // 0x0148(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      FloatUserParameterValues;                          // 0x0150(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FVector>             VectorUserParameterValues;                         // 0x01A0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FLinearColor>        ColorUserParameterValues;                          // 0x01F0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         bUsedCustomStencil : 1;                            // 0x0240(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CustomStencilValue;                                // 0x0244(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUsedTranslucencySortPriority : 1;                 // 0x0248(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TranslucencySortPriority;                          // 0x024C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUsedTranslucencySortDistanceOffset : 1;           // 0x0250(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TranslucencySortDistanceOffset;                    // 0x0254(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotify_PlayNiagaraEffect">();
	}
	static class UAnimNotify_PlayNiagaraEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PlayNiagaraEffect>();
	}
};
#pragma pack(pop)
static_assert(alignof(UAnimNotify_PlayNiagaraEffect) == 0x000010, "Wrong alignment on UAnimNotify_PlayNiagaraEffect");
static_assert(sizeof(UAnimNotify_PlayNiagaraEffect) == 0x000260, "Wrong size on UAnimNotify_PlayNiagaraEffect");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, Template) == 0x000040, "Member 'UAnimNotify_PlayNiagaraEffect::Template' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, bUseCombineEffect) == 0x000070, "Member 'UAnimNotify_PlayNiagaraEffect::bUseCombineEffect' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, TemplateCombineEffect) == 0x000078, "Member 'UAnimNotify_PlayNiagaraEffect::TemplateCombineEffect' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, LocationOffset) == 0x0000A8, "Member 'UAnimNotify_PlayNiagaraEffect::LocationOffset' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, RotationOffset) == 0x0000C0, "Member 'UAnimNotify_PlayNiagaraEffect::RotationOffset' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, Scale) == 0x0000D8, "Member 'UAnimNotify_PlayNiagaraEffect::Scale' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, bAbsoluteScale) == 0x0000F0, "Member 'UAnimNotify_PlayNiagaraEffect::bAbsoluteScale' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, bDeactivateOnMontageEnded) == 0x000130, "Member 'UAnimNotify_PlayNiagaraEffect::bDeactivateOnMontageEnded' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, SocketName) == 0x000138, "Member 'UAnimNotify_PlayNiagaraEffect::SocketName' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, EffectLastTime) == 0x000144, "Member 'UAnimNotify_PlayNiagaraEffect::EffectLastTime' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, ComponentTimeScale) == 0x000148, "Member 'UAnimNotify_PlayNiagaraEffect::ComponentTimeScale' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, FloatUserParameterValues) == 0x000150, "Member 'UAnimNotify_PlayNiagaraEffect::FloatUserParameterValues' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, VectorUserParameterValues) == 0x0001A0, "Member 'UAnimNotify_PlayNiagaraEffect::VectorUserParameterValues' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, ColorUserParameterValues) == 0x0001F0, "Member 'UAnimNotify_PlayNiagaraEffect::ColorUserParameterValues' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, CustomStencilValue) == 0x000244, "Member 'UAnimNotify_PlayNiagaraEffect::CustomStencilValue' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, TranslucencySortPriority) == 0x00024C, "Member 'UAnimNotify_PlayNiagaraEffect::TranslucencySortPriority' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayNiagaraEffect, TranslucencySortDistanceOffset) == 0x000254, "Member 'UAnimNotify_PlayNiagaraEffect::TranslucencySortDistanceOffset' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: One031001_ChildBP

#include "Basic.hpp"

#include "PyLunaSnowCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass 1031001_ChildBP.1031001_ChildBP_C
// 0x0058 (0x0AB8 - 0x0A60)
class AOne031001_ChildBP_C final : public APyLunaSnowChildActor
{
public:
	class UMarvelHitShape_Capsule*                HitCalf_L;                                         // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitThigh_L;                                        // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitCalf_R;                                         // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitThigh_R;                                        // 0x0A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitLowerArm_L;                                     // 0x0A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitUpperArm_L;                                     // 0x0A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitLowerArm_R;                                     // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitUpperArm_R;                                     // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitAbdomen;                                        // 0x0AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitChest;                                          // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMarvelHitShape_Capsule*                HitHead;                                           // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"1031001_ChildBP_C">();
	}
	static class AOne031001_ChildBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOne031001_ChildBP_C>();
	}
};
static_assert(alignof(AOne031001_ChildBP_C) == 0x000008, "Wrong alignment on AOne031001_ChildBP_C");
static_assert(sizeof(AOne031001_ChildBP_C) == 0x000AB8, "Wrong size on AOne031001_ChildBP_C");
static_assert(offsetof(AOne031001_ChildBP_C, HitCalf_L) == 0x000A60, "Member 'AOne031001_ChildBP_C::HitCalf_L' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitThigh_L) == 0x000A68, "Member 'AOne031001_ChildBP_C::HitThigh_L' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitCalf_R) == 0x000A70, "Member 'AOne031001_ChildBP_C::HitCalf_R' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitThigh_R) == 0x000A78, "Member 'AOne031001_ChildBP_C::HitThigh_R' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitLowerArm_L) == 0x000A80, "Member 'AOne031001_ChildBP_C::HitLowerArm_L' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitUpperArm_L) == 0x000A88, "Member 'AOne031001_ChildBP_C::HitUpperArm_L' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitLowerArm_R) == 0x000A90, "Member 'AOne031001_ChildBP_C::HitLowerArm_R' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitUpperArm_R) == 0x000A98, "Member 'AOne031001_ChildBP_C::HitUpperArm_R' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitAbdomen) == 0x000AA0, "Member 'AOne031001_ChildBP_C::HitAbdomen' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitChest) == 0x000AA8, "Member 'AOne031001_ChildBP_C::HitChest' has a wrong offset!");
static_assert(offsetof(AOne031001_ChildBP_C, HitHead) == 0x000AB0, "Member 'AOne031001_ChildBP_C::HitHead' has a wrong offset!");

}


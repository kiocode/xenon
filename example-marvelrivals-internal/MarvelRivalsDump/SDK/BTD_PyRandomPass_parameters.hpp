#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_PyRandomPass

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// PythonFunction BTD_PyRandomPass.BTD_PyRandomPass.PerformConditionCheckAI
// 0x0018 (0x0018 - 0x0000)
struct BTD_PyRandomPass_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTD_PyRandomPass_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_PyRandomPass_PerformConditionCheckAI");
//static_assert(sizeof(BTD_PyRandomPass_PerformConditionCheckAI) == 0x000018, "Wrong size on BTD_PyRandomPass_PerformConditionCheckAI");
//static_assert(offsetof(BTD_PyRandomPass_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_PyRandomPass_PerformConditionCheckAI::OwnerController' has a wrong offset!");
//static_assert(offsetof(BTD_PyRandomPass_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_PyRandomPass_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
//static_assert(offsetof(BTD_PyRandomPass_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_PyRandomPass_PerformConditionCheckAI::ReturnValue' has a wrong offset!");

// PythonFunction BTD_PyRandomPass.BTD_PyRandomPass.ReceiveExecutionFinishAI
// 0x0018 (0x0018 - 0x0000)
struct BTD_PyRandomPass_ReceiveExecutionFinishAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 NodeResult;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BTD_PyRandomPass_ReceiveExecutionFinishAI) == 0x000008, "Wrong alignment on BTD_PyRandomPass_ReceiveExecutionFinishAI");
//static_assert(sizeof(BTD_PyRandomPass_ReceiveExecutionFinishAI) == 0x000018, "Wrong size on BTD_PyRandomPass_ReceiveExecutionFinishAI");
//static_assert(offsetof(BTD_PyRandomPass_ReceiveExecutionFinishAI, OwnerController) == 0x000000, "Member 'BTD_PyRandomPass_ReceiveExecutionFinishAI::OwnerController' has a wrong offset!");
//static_assert(offsetof(BTD_PyRandomPass_ReceiveExecutionFinishAI, ControlledPawn) == 0x000008, "Member 'BTD_PyRandomPass_ReceiveExecutionFinishAI::ControlledPawn' has a wrong offset!");
//static_assert(offsetof(BTD_PyRandomPass_ReceiveExecutionFinishAI, NodeResult) == 0x000010, "Member 'BTD_PyRandomPass_ReceiveExecutionFinishAI::NodeResult' has a wrong offset!");

}


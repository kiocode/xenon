#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Decal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Decal.BP_Decal_C
// 0x0070 (0x0508 - 0x0498)
class ABP_Decal_C final : public ADecalActor
{
public:
	double                                        TotalRow;                                          // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalCol;                                          // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CellSizeX;                                         // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CellSizeZ;                                         // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Roughness;                                         // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SelectX;                                           // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SelectY;                                           // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               BaseColorMap;                                      // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Opacity;                                           // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Normal;                                            // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               MROMap;                                            // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMROMap;                                         // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Decal_C">();
	}
	static class ABP_Decal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Decal_C>();
	}
};
//static_assert(alignof(ABP_Decal_C) == 0x000008, "Wrong alignment on ABP_Decal_C");
//static_assert(sizeof(ABP_Decal_C) == 0x000508, "Wrong size on ABP_Decal_C");
//static_assert(offsetof(ABP_Decal_C, TotalRow) == 0x000498, "Member 'ABP_Decal_C::TotalRow' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, TotalCol) == 0x0004A0, "Member 'ABP_Decal_C::TotalCol' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, CellSizeX) == 0x0004A8, "Member 'ABP_Decal_C::CellSizeX' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, CellSizeZ) == 0x0004B0, "Member 'ABP_Decal_C::CellSizeZ' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, Roughness) == 0x0004B8, "Member 'ABP_Decal_C::Roughness' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, SelectX) == 0x0004C0, "Member 'ABP_Decal_C::SelectX' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, SelectY) == 0x0004C8, "Member 'ABP_Decal_C::SelectY' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, BaseColorMap) == 0x0004D0, "Member 'ABP_Decal_C::BaseColorMap' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, Opacity) == 0x0004D8, "Member 'ABP_Decal_C::Opacity' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, Normal) == 0x0004E0, "Member 'ABP_Decal_C::Normal' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, Color) == 0x0004E8, "Member 'ABP_Decal_C::Color' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, MROMap) == 0x0004F0, "Member 'ABP_Decal_C::MROMap' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, UseMROMap) == 0x0004F8, "Member 'ABP_Decal_C::UseMROMap' has a wrong offset!");
//static_assert(offsetof(ABP_Decal_C, Mid) == 0x000500, "Member 'ABP_Decal_C::Mid' has a wrong offset!");

}


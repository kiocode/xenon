#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XeFGBlueprint

#include "Basic.hpp"

#include "XeFGBlueprint_structs.hpp"


namespace SDK::Params
{

// Function XeFGBlueprint.XeFGBlueprintLibrary.GetSupportedXeFGModes
// 0x0010 (0x0010 - 0x0000)
struct XeFGBlueprintLibrary_GetSupportedXeFGModes final
{
public:
	TArray<EXeFGMode>                             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
////static_assert(alignof(XeFGBlueprintLibrary_GetSupportedXeFGModes) == 0x000008, "Wrong alignment on XeFGBlueprintLibrary_GetSupportedXeFGModes");
////static_assert(sizeof(XeFGBlueprintLibrary_GetSupportedXeFGModes) == 0x000010, "Wrong size on XeFGBlueprintLibrary_GetSupportedXeFGModes");
////static_assert(offsetof(XeFGBlueprintLibrary_GetSupportedXeFGModes, ReturnValue) == 0x000000, "Member 'XeFGBlueprintLibrary_GetSupportedXeFGModes::ReturnValue' has a wrong offset!");

// Function XeFGBlueprint.XeFGBlueprintLibrary.GetXeFGMode
// 0x0001 (0x0001 - 0x0000)
struct XeFGBlueprintLibrary_GetXeFGMode final
{
public:
	EXeFGMode                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
////static_assert(alignof(XeFGBlueprintLibrary_GetXeFGMode) == 0x000001, "Wrong alignment on XeFGBlueprintLibrary_GetXeFGMode");
////static_assert(sizeof(XeFGBlueprintLibrary_GetXeFGMode) == 0x000001, "Wrong size on XeFGBlueprintLibrary_GetXeFGMode");
////static_assert(offsetof(XeFGBlueprintLibrary_GetXeFGMode, ReturnValue) == 0x000000, "Member 'XeFGBlueprintLibrary_GetXeFGMode::ReturnValue' has a wrong offset!");

// Function XeFGBlueprint.XeFGBlueprintLibrary.IfRelaunchRequiredByXeFG
// 0x0001 (0x0001 - 0x0000)
struct XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
////static_assert(alignof(XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG) == 0x000001, "Wrong alignment on XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG");
////static_assert(sizeof(XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG) == 0x000001, "Wrong size on XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG");
////static_assert(offsetof(XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG, ReturnValue) == 0x000000, "Member 'XeFGBlueprintLibrary_IfRelaunchRequiredByXeFG::ReturnValue' has a wrong offset!");

// Function XeFGBlueprint.XeFGBlueprintLibrary.IsXeFGSupported
// 0x0001 (0x0001 - 0x0000)
struct XeFGBlueprintLibrary_IsXeFGSupported final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
////static_assert(alignof(XeFGBlueprintLibrary_IsXeFGSupported) == 0x000001, "Wrong alignment on XeFGBlueprintLibrary_IsXeFGSupported");
////static_assert(sizeof(XeFGBlueprintLibrary_IsXeFGSupported) == 0x000001, "Wrong size on XeFGBlueprintLibrary_IsXeFGSupported");
////static_assert(offsetof(XeFGBlueprintLibrary_IsXeFGSupported, ReturnValue) == 0x000000, "Member 'XeFGBlueprintLibrary_IsXeFGSupported::ReturnValue' has a wrong offset!");

// Function XeFGBlueprint.XeFGBlueprintLibrary.SetXeFGMode
// 0x0001 (0x0001 - 0x0000)
struct XeFGBlueprintLibrary_SetXeFGMode final
{
public:
	EXeFGMode                                     Mode;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
////static_assert(alignof(XeFGBlueprintLibrary_SetXeFGMode) == 0x000001, "Wrong alignment on XeFGBlueprintLibrary_SetXeFGMode");
////static_assert(sizeof(XeFGBlueprintLibrary_SetXeFGMode) == 0x000001, "Wrong size on XeFGBlueprintLibrary_SetXeFGMode");
////static_assert(offsetof(XeFGBlueprintLibrary_SetXeFGMode, Mode) == 0x000000, "Member 'XeFGBlueprintLibrary_SetXeFGMode::Mode' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103161

#include "Basic.hpp"

#include "PyWidget3D_BuffMonitor_classes.hpp"
#include "PyUIC_EffectiveTarget_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_classes.hpp"
#include "Hero_1031_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_103161.PyWidget3D_BuffMarker_10316101
// 0x0000 (0x08A0 - 0x08A0)
class UPyWidget3D_BuffMarker_10316101 : public UPyWidget3D_BuffMonitor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget3D_BuffMarker_10316101">();
	}
	static class UPyWidget3D_BuffMarker_10316101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget3D_BuffMarker_10316101>();
	}
};
static_assert(alignof(UPyWidget3D_BuffMarker_10316101) == 0x000010, "Wrong alignment on UPyWidget3D_BuffMarker_10316101");
static_assert(sizeof(UPyWidget3D_BuffMarker_10316101) == 0x0008A0, "Wrong size on UPyWidget3D_BuffMarker_10316101");

// PythonClass PyAbility_103161.PyUIController_103162_V7
// 0x0000 (0x0D70 - 0x0D70)
class UPyUIController_103162_V7 final : public UPyUIController_EffectiveTargetBase
{
public:
	void Destruct();
	void OnTargetChanged(class AActor* In_target);
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_103162_V7">();
	}
	static class UPyUIController_103162_V7* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_103162_V7>();
	}
};
static_assert(alignof(UPyUIController_103162_V7) == 0x000010, "Wrong alignment on UPyUIController_103162_V7");
static_assert(sizeof(UPyUIController_103162_V7) == 0x000D70, "Wrong size on UPyUIController_103162_V7");

// PythonClass PyAbility_103161.PyUIController_103162
// 0x0000 (0x0C60 - 0x0C60)
class UPyUIController_103162 final : public UUIC_Ability
{
public:
	void OnDestruct();
	void OnTargetTakeTreat(class AActor* Source, class AActor* Target, const struct FAttributeModifierHandle& ModifierParameter);
	void OnTargetAttrChanged(class AActor* SourceActor, const struct FAttributeModifierHandle& Parameter);
	void OnTargetSculptChanged(int32 Sculpt_id);
	void OnTargetChanged(class AActor* In_target);
	void OnTagUpdate(const struct FGameplayTag& Tag, bool Exist);
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_103162">();
	}
	static class UPyUIController_103162* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_103162>();
	}
};
static_assert(alignof(UPyUIController_103162) == 0x000008, "Wrong alignment on UPyUIController_103162");
static_assert(sizeof(UPyUIController_103162) == 0x000C60, "Wrong size on UPyUIController_103162");

// PythonClass PyAbility_103161.PyCue_Buff_10316101
// 0x0048 (0x10F8 - 0x10B0)
class APyCue_Buff_10316101 : public ACue_Buff_10316101
{
public:
	class UFXSystemAsset*                         BuffFx;                                            // 0x10B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FxLocOffset;                                       // 0x10B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFXSystemAsset*>                 SimpleFXs;                                         // 0x10D0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   SimpleFxSocket;                                    // 0x10E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SimpleFxHeightParam;                               // 0x10EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnMarvelSculptChanged(int32 Sculpt_id);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Buff_10316101">();
	}
	static class APyCue_Buff_10316101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Buff_10316101>();
	}
};
static_assert(alignof(APyCue_Buff_10316101) == 0x000008, "Wrong alignment on APyCue_Buff_10316101");
static_assert(sizeof(APyCue_Buff_10316101) == 0x0010F8, "Wrong size on APyCue_Buff_10316101");
static_assert(offsetof(APyCue_Buff_10316101, BuffFx) == 0x0010B0, "Member 'APyCue_Buff_10316101::BuffFx' has a wrong offset!");
static_assert(offsetof(APyCue_Buff_10316101, FxLocOffset) == 0x0010B8, "Member 'APyCue_Buff_10316101::FxLocOffset' has a wrong offset!");
static_assert(offsetof(APyCue_Buff_10316101, SimpleFXs) == 0x0010D0, "Member 'APyCue_Buff_10316101::SimpleFXs' has a wrong offset!");
static_assert(offsetof(APyCue_Buff_10316101, SimpleFxSocket) == 0x0010E0, "Member 'APyCue_Buff_10316101::SimpleFxSocket' has a wrong offset!");
static_assert(offsetof(APyCue_Buff_10316101, SimpleFxHeightParam) == 0x0010EC, "Member 'APyCue_Buff_10316101::SimpleFxHeightParam' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hero_1034

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Marvel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// ScriptStruct Hero_1034.IronManPhysicsSummonerInfo
// 0x0004 (0x0004 - 0x0000)
struct FIronManPhysicsSummonerInfo final
{
public:
	float                                         CurrentParameterValue;                             // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIronManPhysicsSummonerInfo) == 0x000004, "Wrong alignment on FIronManPhysicsSummonerInfo");
static_assert(sizeof(FIronManPhysicsSummonerInfo) == 0x000004, "Wrong size on FIronManPhysicsSummonerInfo");
static_assert(offsetof(FIronManPhysicsSummonerInfo, CurrentParameterValue) == 0x000000, "Member 'FIronManPhysicsSummonerInfo::CurrentParameterValue' has a wrong offset!");

// ScriptStruct Hero_1034.IronManSpline
// 0x0078 (0x0078 - 0x0000)
struct FIronManSpline final
{
public:
	int32                                         CurvesIndex;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurvesTime;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSplineCurves                          SplineCurves;                                      // 0x0008(0x0070)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIronManSpline) == 0x000008, "Wrong alignment on FIronManSpline");
static_assert(sizeof(FIronManSpline) == 0x000078, "Wrong size on FIronManSpline");
static_assert(offsetof(FIronManSpline, CurvesIndex) == 0x000000, "Member 'FIronManSpline::CurvesIndex' has a wrong offset!");
static_assert(offsetof(FIronManSpline, CurvesTime) == 0x000004, "Member 'FIronManSpline::CurvesTime' has a wrong offset!");
static_assert(offsetof(FIronManSpline, SplineCurves) == 0x000008, "Member 'FIronManSpline::SplineCurves' has a wrong offset!");

// ScriptStruct Hero_1034.IronManMissileSpec
// 0x0040 (0x0040 - 0x0000)
struct FIronManMissileSpec final
{
public:
	class FName                                   FireSocket;                                        // 0x0000(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LaunchDir;                                         // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetOffset;                                      // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIronManMissileSpec) == 0x000008, "Wrong alignment on FIronManMissileSpec");
static_assert(sizeof(FIronManMissileSpec) == 0x000040, "Wrong size on FIronManMissileSpec");
static_assert(offsetof(FIronManMissileSpec, FireSocket) == 0x000000, "Member 'FIronManMissileSpec::FireSocket' has a wrong offset!");
static_assert(offsetof(FIronManMissileSpec, LaunchDir) == 0x000010, "Member 'FIronManMissileSpec::LaunchDir' has a wrong offset!");
static_assert(offsetof(FIronManMissileSpec, TargetOffset) == 0x000028, "Member 'FIronManMissileSpec::TargetOffset' has a wrong offset!");

// ScriptStruct Hero_1034.StateBasedTimelineSpec
// 0x0070 (0x0070 - 0x0000)
struct FStateBasedTimelineSpec final
{
public:
	struct FGameplayTagContainer                  RequiredTags;                                      // 0x0000(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         TimelineIndex;                                     // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStateBasedTimelineSpec) == 0x000008, "Wrong alignment on FStateBasedTimelineSpec");
static_assert(sizeof(FStateBasedTimelineSpec) == 0x000070, "Wrong size on FStateBasedTimelineSpec");
static_assert(offsetof(FStateBasedTimelineSpec, RequiredTags) == 0x000000, "Member 'FStateBasedTimelineSpec::RequiredTags' has a wrong offset!");
static_assert(offsetof(FStateBasedTimelineSpec, TimelineIndex) == 0x000068, "Member 'FStateBasedTimelineSpec::TimelineIndex' has a wrong offset!");

// ScriptStruct Hero_1034.CueNiagaraAsset_HitImpact_103461
// 0x0020 (0x0028 - 0x0008)
struct FCueNiagaraAsset_HitImpact_103461 final : public FCue_NiagaraAsset_Base
{
public:
	class UNiagaraSystem*                         NiagaraForCharacter;                               // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         NiagaraForLand;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         NiagaraForWall;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundHiddenZThreshold;                            // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCueNiagaraAsset_HitImpact_103461) == 0x000008, "Wrong alignment on FCueNiagaraAsset_HitImpact_103461");
static_assert(sizeof(FCueNiagaraAsset_HitImpact_103461) == 0x000028, "Wrong size on FCueNiagaraAsset_HitImpact_103461");
static_assert(offsetof(FCueNiagaraAsset_HitImpact_103461, NiagaraForCharacter) == 0x000008, "Member 'FCueNiagaraAsset_HitImpact_103461::NiagaraForCharacter' has a wrong offset!");
static_assert(offsetof(FCueNiagaraAsset_HitImpact_103461, NiagaraForLand) == 0x000010, "Member 'FCueNiagaraAsset_HitImpact_103461::NiagaraForLand' has a wrong offset!");
static_assert(offsetof(FCueNiagaraAsset_HitImpact_103461, NiagaraForWall) == 0x000018, "Member 'FCueNiagaraAsset_HitImpact_103461::NiagaraForWall' has a wrong offset!");
static_assert(offsetof(FCueNiagaraAsset_HitImpact_103461, GroundHiddenZThreshold) == 0x000020, "Member 'FCueNiagaraAsset_HitImpact_103461::GroundHiddenZThreshold' has a wrong offset!");

// ScriptStruct Hero_1034.RemoteRotationSInterp
// 0x00A0 (0x00A0 - 0x0000)
struct alignas(0x10) FRemoteRotationSInterp final
{
public:
	float                                         SmoothingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RemainingTime;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAlphaBlendOption                             BlendOption;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x97];                                       // 0x0009(0x0097)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRemoteRotationSInterp) == 0x000010, "Wrong alignment on FRemoteRotationSInterp");
static_assert(sizeof(FRemoteRotationSInterp) == 0x0000A0, "Wrong size on FRemoteRotationSInterp");
static_assert(offsetof(FRemoteRotationSInterp, SmoothingTime) == 0x000000, "Member 'FRemoteRotationSInterp::SmoothingTime' has a wrong offset!");
static_assert(offsetof(FRemoteRotationSInterp, RemainingTime) == 0x000004, "Member 'FRemoteRotationSInterp::RemainingTime' has a wrong offset!");
static_assert(offsetof(FRemoteRotationSInterp, BlendOption) == 0x000008, "Member 'FRemoteRotationSInterp::BlendOption' has a wrong offset!");

}


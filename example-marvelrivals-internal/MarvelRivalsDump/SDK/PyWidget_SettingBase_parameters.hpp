#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_SettingBase

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetPreBindText
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_SettingDesc_SetPreBindText final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SettingDesc_SetPreBindText) == 0x000008, "Wrong alignment on PyWidget_SettingDesc_SetPreBindText");
static_assert(sizeof(PyWidget_SettingDesc_SetPreBindText) == 0x000010, "Wrong size on PyWidget_SettingDesc_SetPreBindText");
static_assert(offsetof(PyWidget_SettingDesc_SetPreBindText, Text) == 0x000000, "Member 'PyWidget_SettingDesc_SetPreBindText::Text' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetBindSuccessTips
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_SettingDesc_SetBindSuccessTips final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key1;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Key2;                                              // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SettingDesc_SetBindSuccessTips) == 0x000008, "Wrong alignment on PyWidget_SettingDesc_SetBindSuccessTips");
static_assert(sizeof(PyWidget_SettingDesc_SetBindSuccessTips) == 0x000028, "Wrong size on PyWidget_SettingDesc_SetBindSuccessTips");
static_assert(offsetof(PyWidget_SettingDesc_SetBindSuccessTips, Type) == 0x000000, "Member 'PyWidget_SettingDesc_SetBindSuccessTips::Type' has a wrong offset!");
static_assert(offsetof(PyWidget_SettingDesc_SetBindSuccessTips, Key1) == 0x000008, "Member 'PyWidget_SettingDesc_SetBindSuccessTips::Key1' has a wrong offset!");
static_assert(offsetof(PyWidget_SettingDesc_SetBindSuccessTips, Key2) == 0x000018, "Member 'PyWidget_SettingDesc_SetBindSuccessTips::Key2' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_SettingDesc.SetBindConflictTips
// 0x0030 (0x0030 - 0x0000)
struct PyWidget_SettingDesc_SetBindConflictTips final
{
public:
	class FString                                 Key1;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Key2;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Key3;                                              // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_SettingDesc_SetBindConflictTips) == 0x000008, "Wrong alignment on PyWidget_SettingDesc_SetBindConflictTips");
static_assert(sizeof(PyWidget_SettingDesc_SetBindConflictTips) == 0x000030, "Wrong size on PyWidget_SettingDesc_SetBindConflictTips");
static_assert(offsetof(PyWidget_SettingDesc_SetBindConflictTips, Key1) == 0x000000, "Member 'PyWidget_SettingDesc_SetBindConflictTips::Key1' has a wrong offset!");
static_assert(offsetof(PyWidget_SettingDesc_SetBindConflictTips, Key2) == 0x000010, "Member 'PyWidget_SettingDesc_SetBindConflictTips::Key2' has a wrong offset!");
static_assert(offsetof(PyWidget_SettingDesc_SetBindConflictTips, Key3) == 0x000020, "Member 'PyWidget_SettingDesc_SetBindConflictTips::Key3' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.OnSwitchBtn__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature final
{
public:
	int32                                         Is_open;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature) == 0x000004, "Wrong alignment on PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature) == 0x000004, "Wrong size on PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature, Is_open) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_OnSwitchBtn__DelegateSignature::Is_open' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                HoveredWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature) == 0x000008, "Wrong size on PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature, HoveredWidget) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_OnHovered__DelegateSignature::HoveredWidget' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_SwitchButton_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_Setting_SwitchButton_PreConstruct");
static_assert(sizeof(PyWidget_Setting_SwitchButton_PreConstruct) == 0x000001, "Wrong size on PyWidget_Setting_SwitchButton_PreConstruct");
static_assert(offsetof(PyWidget_Setting_SwitchButton_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.SWITCH
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Setting_SwitchButton_SWITCH final
{
public:
	int32                                         Is_open;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_SWITCH) == 0x000004, "Wrong alignment on PyWidget_Setting_SwitchButton_SWITCH");
static_assert(sizeof(PyWidget_Setting_SwitchButton_SWITCH) == 0x000004, "Wrong size on PyWidget_Setting_SwitchButton_SWITCH");
static_assert(offsetof(PyWidget_Setting_SwitchButton_SWITCH, Is_open) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_SWITCH::Is_open' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton.ShowSwitchBg
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Setting_SwitchButton_ShowSwitchBg final
{
public:
	int32                                         Is_open;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_ShowSwitchBg) == 0x000004, "Wrong alignment on PyWidget_Setting_SwitchButton_ShowSwitchBg");
static_assert(sizeof(PyWidget_Setting_SwitchButton_ShowSwitchBg) == 0x000004, "Wrong size on PyWidget_Setting_SwitchButton_ShowSwitchBg");
static_assert(offsetof(PyWidget_Setting_SwitchButton_ShowSwitchBg, Is_open) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_ShowSwitchBg::Is_open' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.OnSwitchBtn__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature final
{
public:
	int32                                         TabId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm)
};
static_assert(alignof(PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature) == 0x000020, "Wrong size on PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature, TabId) == 0x000000, "Member 'PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature, Text) == 0x000008, "Member 'PyWidget_Setting_SwitchShiftButton_OnSwitchBtn__DelegateSignature::Text' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                HoveredWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature) == 0x000008, "Wrong size on PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature, HoveredWidget) == 0x000000, "Member 'PyWidget_Setting_SwitchShiftButton_OnHovered__DelegateSignature::HoveredWidget' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_SwitchShiftButton_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchShiftButton_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_Setting_SwitchShiftButton_PreConstruct");
static_assert(sizeof(PyWidget_Setting_SwitchShiftButton_PreConstruct) == 0x000001, "Wrong size on PyWidget_Setting_SwitchShiftButton_PreConstruct");
static_assert(offsetof(PyWidget_Setting_SwitchShiftButton_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_Setting_SwitchShiftButton_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton.SetTabID
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Setting_SwitchShiftButton_SetTabID final
{
public:
	int32                                         TabId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchShiftButton_SetTabID) == 0x000004, "Wrong alignment on PyWidget_Setting_SwitchShiftButton_SetTabID");
static_assert(sizeof(PyWidget_Setting_SwitchShiftButton_SetTabID) == 0x000004, "Wrong size on PyWidget_Setting_SwitchShiftButton_SetTabID");
static_assert(offsetof(PyWidget_Setting_SwitchShiftButton_SetTabID, TabId) == 0x000000, "Member 'PyWidget_Setting_SwitchShiftButton_SetTabID::TabId' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_Key.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Setting_Key_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                HoveredWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_OnHovered__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_Key_OnHovered__DelegateSignature) == 0x000008, "Wrong size on PyWidget_Setting_Key_OnHovered__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_Key_OnHovered__DelegateSignature, HoveredWidget) == 0x000000, "Member 'PyWidget_Setting_Key_OnHovered__DelegateSignature::HoveredWidget' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.OnKeyDown
// 0x0140 (0x0140 - 0x0000)
struct PyWidget_Setting_Key_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0048)(Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00C0)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PyWidget_Setting_Key_OnKeyDown) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_OnKeyDown");
static_assert(sizeof(PyWidget_Setting_Key_OnKeyDown) == 0x000140, "Wrong size on PyWidget_Setting_Key_OnKeyDown");
static_assert(offsetof(PyWidget_Setting_Key_OnKeyDown, MyGeometry) == 0x000000, "Member 'PyWidget_Setting_Key_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_OnKeyDown, InKeyEvent) == 0x000038, "Member 'PyWidget_Setting_Key_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_OnKeyDown, ReturnValue) == 0x000080, "Member 'PyWidget_Setting_Key_OnKeyDown::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_Key_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_Setting_Key_PreConstruct");
static_assert(sizeof(PyWidget_Setting_Key_PreConstruct) == 0x000001, "Wrong size on PyWidget_Setting_Key_PreConstruct");
static_assert(offsetof(PyWidget_Setting_Key_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_Setting_Key_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetKeyAsset
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Setting_Key_SetKeyAsset final
{
public:
	class UMarvelKeyUIAsset*                      InKeyAsset;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetKeyAsset) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetKeyAsset");
static_assert(sizeof(PyWidget_Setting_Key_SetKeyAsset) == 0x000008, "Wrong size on PyWidget_Setting_Key_SetKeyAsset");
static_assert(offsetof(PyWidget_Setting_Key_SetKeyAsset, InKeyAsset) == 0x000000, "Member 'PyWidget_Setting_Key_SetKeyAsset::InKeyAsset' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetInputChord
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_Setting_Key_SetInputChord final
{
public:
	struct FInputChord                            Chord_0;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetInputChord) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetInputChord");
static_assert(sizeof(PyWidget_Setting_Key_SetInputChord) == 0x000028, "Wrong size on PyWidget_Setting_Key_SetInputChord");
static_assert(offsetof(PyWidget_Setting_Key_SetInputChord, Chord_0) == 0x000000, "Member 'PyWidget_Setting_Key_SetInputChord::Chord_0' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetKey
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_Setting_Key_SetKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetKey) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetKey");
static_assert(sizeof(PyWidget_Setting_Key_SetKey) == 0x000028, "Wrong size on PyWidget_Setting_Key_SetKey");
static_assert(offsetof(PyWidget_Setting_Key_SetKey, InKey) == 0x000000, "Member 'PyWidget_Setting_Key_SetKey::InKey' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_SetKey, ReturnValue) == 0x000020, "Member 'PyWidget_Setting_Key_SetKey::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetMouseKey
// 0x0020 (0x0020 - 0x0000)
struct PyWidget_Setting_Key_SetMouseKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetMouseKey) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetMouseKey");
static_assert(sizeof(PyWidget_Setting_Key_SetMouseKey) == 0x000020, "Wrong size on PyWidget_Setting_Key_SetMouseKey");
static_assert(offsetof(PyWidget_Setting_Key_SetMouseKey, InKey) == 0x000000, "Member 'PyWidget_Setting_Key_SetMouseKey::InKey' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetActionMapping
// 0x0030 (0x0030 - 0x0000)
struct PyWidget_Setting_Key_SetActionMapping final
{
public:
	struct FInputActionKeyMapping                 ActionMap;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWidget_Setting_Key_SetActionMapping) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetActionMapping");
static_assert(sizeof(PyWidget_Setting_Key_SetActionMapping) == 0x000030, "Wrong size on PyWidget_Setting_Key_SetActionMapping");
static_assert(offsetof(PyWidget_Setting_Key_SetActionMapping, ActionMap) == 0x000000, "Member 'PyWidget_Setting_Key_SetActionMapping::ActionMap' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetAxisMapping
// 0x0030 (0x0030 - 0x0000)
struct PyWidget_Setting_Key_SetAxisMapping final
{
public:
	struct FInputAxisKeyMapping                   AxisMap;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWidget_Setting_Key_SetAxisMapping) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetAxisMapping");
static_assert(sizeof(PyWidget_Setting_Key_SetAxisMapping) == 0x000030, "Wrong size on PyWidget_Setting_Key_SetAxisMapping");
static_assert(offsetof(PyWidget_Setting_Key_SetAxisMapping, AxisMap) == 0x000000, "Member 'PyWidget_Setting_Key_SetAxisMapping::AxisMap' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.ConstructChordString
// 0x0038 (0x0038 - 0x0000)
struct PyWidget_Setting_Key_ConstructChordString final
{
public:
	struct FInputChord                            Input;                                             // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_ConstructChordString) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_ConstructChordString");
static_assert(sizeof(PyWidget_Setting_Key_ConstructChordString) == 0x000038, "Wrong size on PyWidget_Setting_Key_ConstructChordString");
static_assert(offsetof(PyWidget_Setting_Key_ConstructChordString, Input) == 0x000000, "Member 'PyWidget_Setting_Key_ConstructChordString::Input' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_ConstructChordString, ReturnValue) == 0x000028, "Member 'PyWidget_Setting_Key_ConstructChordString::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.ConstructActionString
// 0x0040 (0x0040 - 0x0000)
struct PyWidget_Setting_Key_ConstructActionString final
{
public:
	struct FInputActionKeyMapping                 Input;                                             // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_ConstructActionString) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_ConstructActionString");
static_assert(sizeof(PyWidget_Setting_Key_ConstructActionString) == 0x000040, "Wrong size on PyWidget_Setting_Key_ConstructActionString");
static_assert(offsetof(PyWidget_Setting_Key_ConstructActionString, Input) == 0x000000, "Member 'PyWidget_Setting_Key_ConstructActionString::Input' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_ConstructActionString, ReturnValue) == 0x000030, "Member 'PyWidget_Setting_Key_ConstructActionString::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.ConstructAxisString
// 0x0040 (0x0040 - 0x0000)
struct PyWidget_Setting_Key_ConstructAxisString final
{
public:
	struct FInputAxisKeyMapping                   Input;                                             // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_ConstructAxisString) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_ConstructAxisString");
static_assert(sizeof(PyWidget_Setting_Key_ConstructAxisString) == 0x000040, "Wrong size on PyWidget_Setting_Key_ConstructAxisString");
static_assert(offsetof(PyWidget_Setting_Key_ConstructAxisString, Input) == 0x000000, "Member 'PyWidget_Setting_Key_ConstructAxisString::Input' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_ConstructAxisString, ReturnValue) == 0x000030, "Member 'PyWidget_Setting_Key_ConstructAxisString::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetText
// 0x0020 (0x0020 - 0x0000)
struct PyWidget_Setting_Key_SetText final
{
public:
	class FText                                   KeyText;                                           // 0x0000(0x0018)(Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetText) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetText");
static_assert(sizeof(PyWidget_Setting_Key_SetText) == 0x000020, "Wrong size on PyWidget_Setting_Key_SetText");
static_assert(offsetof(PyWidget_Setting_Key_SetText, KeyText) == 0x000000, "Member 'PyWidget_Setting_Key_SetText::KeyText' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_SetText, ReturnValue) == 0x000018, "Member 'PyWidget_Setting_Key_SetText::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetBrush
// 0x00E0 (0x00E0 - 0x0000)
struct PyWidget_Setting_Key_SetBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetBrush) == 0x000010, "Wrong alignment on PyWidget_Setting_Key_SetBrush");
static_assert(sizeof(PyWidget_Setting_Key_SetBrush) == 0x0000E0, "Wrong size on PyWidget_Setting_Key_SetBrush");
static_assert(offsetof(PyWidget_Setting_Key_SetBrush, Brush) == 0x000000, "Member 'PyWidget_Setting_Key_SetBrush::Brush' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_SetBrush, ReturnValue) == 0x0000D0, "Member 'PyWidget_Setting_Key_SetBrush::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Key.SetMultiKeyWidget
// 0x0050 (0x0050 - 0x0000)
struct PyWidget_Setting_Key_SetMultiKeyWidget final
{
public:
	struct FInputChord                            Key1;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FInputChord                            Key2;                                              // 0x0028(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Key_SetMultiKeyWidget) == 0x000008, "Wrong alignment on PyWidget_Setting_Key_SetMultiKeyWidget");
static_assert(sizeof(PyWidget_Setting_Key_SetMultiKeyWidget) == 0x000050, "Wrong size on PyWidget_Setting_Key_SetMultiKeyWidget");
static_assert(offsetof(PyWidget_Setting_Key_SetMultiKeyWidget, Key1) == 0x000000, "Member 'PyWidget_Setting_Key_SetMultiKeyWidget::Key1' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Key_SetMultiKeyWidget, Key2) == 0x000028, "Member 'PyWidget_Setting_Key_SetMultiKeyWidget::Key2' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_DrawBtn.OnSwitchStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature) == 0x000001, "Wrong size on PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature, IsOpen) == 0x000000, "Member 'PyWidget_Setting_DrawBtn_OnSwitchStateChanged__DelegateSignature::IsOpen' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Corona_Item.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Corona_Item_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                HoveredWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Corona_Item_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Corona_Item_OnHovered__DelegateSignature");
static_assert(sizeof(PyWidget_Corona_Item_OnHovered__DelegateSignature) == 0x000008, "Wrong size on PyWidget_Corona_Item_OnHovered__DelegateSignature");
static_assert(offsetof(PyWidget_Corona_Item_OnHovered__DelegateSignature, HoveredWidget) == 0x000000, "Member 'PyWidget_Corona_Item_OnHovered__DelegateSignature::HoveredWidget' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Setting_Item_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                HoveredWidget;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Item_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_Setting_Item_OnHovered__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_Item_OnHovered__DelegateSignature) == 0x000008, "Wrong size on PyWidget_Setting_Item_OnHovered__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_Item_OnHovered__DelegateSignature, HoveredWidget) == 0x000000, "Member 'PyWidget_Setting_Item_OnHovered__DelegateSignature::HoveredWidget' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_Item.TryUnBindHandInput__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature final
{
public:
	int32                                         Keynum;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Isprimary;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature) == 0x000004, "Wrong alignment on PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature) == 0x000008, "Wrong size on PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature, Keynum) == 0x000000, "Member 'PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature::Keynum' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature, Isprimary) == 0x000004, "Member 'PyWidget_Setting_Item_TryUnBindHandInput__DelegateSignature::Isprimary' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnMouseEnter
// 0x00B8 (0x00B8 - 0x0000)
struct PyWidget_Setting_Item_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0080)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWidget_Setting_Item_OnMouseEnter) == 0x000008, "Wrong alignment on PyWidget_Setting_Item_OnMouseEnter");
static_assert(sizeof(PyWidget_Setting_Item_OnMouseEnter) == 0x0000B8, "Wrong size on PyWidget_Setting_Item_OnMouseEnter");
static_assert(offsetof(PyWidget_Setting_Item_OnMouseEnter, MyGeometry) == 0x000000, "Member 'PyWidget_Setting_Item_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(PyWidget_Setting_Item_OnMouseEnter, MouseEvent) == 0x000038, "Member 'PyWidget_Setting_Item_OnMouseEnter::MouseEvent' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnMouseLeave
// 0x0080 (0x0080 - 0x0000)
struct PyWidget_Setting_Item_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWidget_Setting_Item_OnMouseLeave) == 0x000008, "Wrong alignment on PyWidget_Setting_Item_OnMouseLeave");
static_assert(sizeof(PyWidget_Setting_Item_OnMouseLeave) == 0x000080, "Wrong size on PyWidget_Setting_Item_OnMouseLeave");
static_assert(offsetof(PyWidget_Setting_Item_OnMouseLeave, MouseEvent) == 0x000000, "Member 'PyWidget_Setting_Item_OnMouseLeave::MouseEvent' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_Item_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_Item_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_Setting_Item_PreConstruct");
static_assert(sizeof(PyWidget_Setting_Item_PreConstruct) == 0x000001, "Wrong size on PyWidget_Setting_Item_PreConstruct");
static_assert(offsetof(PyWidget_Setting_Item_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_Setting_Item_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_Item.OnPaint
// 0x0030 (0x0030 - 0x0000)
struct PyWidget_Setting_Item_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyWidget_Setting_Item_OnPaint) == 0x000008, "Wrong alignment on PyWidget_Setting_Item_OnPaint");
static_assert(sizeof(PyWidget_Setting_Item_OnPaint) == 0x000030, "Wrong size on PyWidget_Setting_Item_OnPaint");
static_assert(offsetof(PyWidget_Setting_Item_OnPaint, Context) == 0x000000, "Member 'PyWidget_Setting_Item_OnPaint::Context' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_VBox.OnPaint
// 0x0030 (0x0030 - 0x0000)
struct PyWidget_Setting_VBox_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyWidget_Setting_VBox_OnPaint) == 0x000008, "Wrong alignment on PyWidget_Setting_VBox_OnPaint");
static_assert(sizeof(PyWidget_Setting_VBox_OnPaint) == 0x000030, "Wrong size on PyWidget_Setting_VBox_OnPaint");
static_assert(offsetof(PyWidget_Setting_VBox_OnPaint, Context) == 0x000000, "Member 'PyWidget_Setting_VBox_OnPaint::Context' has a wrong offset!");

// DelegateFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.OnSwitchBtn__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature final
{
public:
	int32                                         Is_open;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature) == 0x000004, "Wrong alignment on PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature");
static_assert(sizeof(PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature) == 0x000004, "Wrong size on PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature");
static_assert(offsetof(PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature, Is_open) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_V2_OnSwitchBtn__DelegateSignature::Is_open' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_SwitchButton_V2_SetIsHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_V2_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_Setting_SwitchButton_V2_SetIsHover");
static_assert(sizeof(PyWidget_Setting_SwitchButton_V2_SetIsHover) == 0x000001, "Wrong size on PyWidget_Setting_SwitchButton_V2_SetIsHover");
static_assert(offsetof(PyWidget_Setting_SwitchButton_V2_SetIsHover, IsHover_0) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_V2_SetIsHover::IsHover_0' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.SetBtnIsPressed
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed final
{
public:
	bool                                          IsBtnPressed_0;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed) == 0x000001, "Wrong alignment on PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed");
static_assert(sizeof(PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed) == 0x000001, "Wrong size on PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed");
static_assert(offsetof(PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed, IsBtnPressed_0) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_V2_SetBtnIsPressed::IsBtnPressed_0' has a wrong offset!");

// PythonFunction PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2.SWITCH
// 0x0004 (0x0004 - 0x0000)
struct PyWidget_Setting_SwitchButton_V2_SWITCH final
{
public:
	int32                                         IsOpen;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Setting_SwitchButton_V2_SWITCH) == 0x000004, "Wrong alignment on PyWidget_Setting_SwitchButton_V2_SWITCH");
static_assert(sizeof(PyWidget_Setting_SwitchButton_V2_SWITCH) == 0x000004, "Wrong size on PyWidget_Setting_SwitchButton_V2_SWITCH");
static_assert(offsetof(PyWidget_Setting_SwitchButton_V2_SWITCH, IsOpen) == 0x000000, "Member 'PyWidget_Setting_SwitchButton_V2_SWITCH::IsOpen' has a wrong offset!");

}


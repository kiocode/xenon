#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyDeathMatchRuleComponent

#include "Basic.hpp"

#include "MarvelLevel_classes.hpp"
#include "PyRuleComponent_classes.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyDeathMatchRuleComponent.PyDeathMatchConfig
// 0x0050 (0x0080 - 0x0030)
class UPyDeathMatchConfig final : public UMarvelRuleConfig
{
public:
	int32                                         KillMeScore;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreOnKill;                                       // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreOnKill2;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreOnKill2Time;                                  // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreToWin;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AudioScoreGap;                                     // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PrepareStageBuffID;                                // 0x0048(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<int32>                                 BattleRespawnBuffID;                               // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
	float                                         SuperSkillChargeRate;                              // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndGameWhenLessCount;                              // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 KillOtherBuffID;                                   // 0x0070(0x0010)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyDeathMatchConfig">();
	}
	static class UPyDeathMatchConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyDeathMatchConfig>();
	}
};
static_assert(alignof(UPyDeathMatchConfig) == 0x000008, "Wrong alignment on UPyDeathMatchConfig");
static_assert(sizeof(UPyDeathMatchConfig) == 0x000080, "Wrong size on UPyDeathMatchConfig");
static_assert(offsetof(UPyDeathMatchConfig, KillMeScore) == 0x000030, "Member 'UPyDeathMatchConfig::KillMeScore' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, ScoreOnKill) == 0x000034, "Member 'UPyDeathMatchConfig::ScoreOnKill' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, ScoreOnKill2) == 0x000038, "Member 'UPyDeathMatchConfig::ScoreOnKill2' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, ScoreOnKill2Time) == 0x00003C, "Member 'UPyDeathMatchConfig::ScoreOnKill2Time' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, ScoreToWin) == 0x000040, "Member 'UPyDeathMatchConfig::ScoreToWin' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, AudioScoreGap) == 0x000044, "Member 'UPyDeathMatchConfig::AudioScoreGap' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, PrepareStageBuffID) == 0x000048, "Member 'UPyDeathMatchConfig::PrepareStageBuffID' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, BattleRespawnBuffID) == 0x000058, "Member 'UPyDeathMatchConfig::BattleRespawnBuffID' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, SuperSkillChargeRate) == 0x000068, "Member 'UPyDeathMatchConfig::SuperSkillChargeRate' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, EndGameWhenLessCount) == 0x00006C, "Member 'UPyDeathMatchConfig::EndGameWhenLessCount' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchConfig, KillOtherBuffID) == 0x000070, "Member 'UPyDeathMatchConfig::KillOtherBuffID' has a wrong offset!");

// PythonClass PyDeathMatchRuleComponent.PyDeathMatchRuleComponent
// 0x0070 (0x0160 - 0x00F0)
class UPyDeathMatchRuleComponent : public UPyRuleComponent
{
public:
	int32                                         KillMeScore;                                       // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreOnKill;                                       // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreOnKill2;                                      // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreOnKill2Time;                                  // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HealDistance;                                      // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HealPlayerNum;                                     // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreToWin;                                        // 0x0108(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreToHealthpackCD;                               // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewHealthpackCD;                                   // 0x0110(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AudioScoreGap;                                     // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFinalGapState;                                   // 0x0118(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 PrepareStageBuffID;                                // 0x0120(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<int32>                                 BattleRespawnBuffID;                               // 0x0130(0x0010)(Edit, NativeAccessSpecifierPublic)
	float                                         SuperSkillChargeRate;                              // 0x0140(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrajectoryPortalAbilityID;                         // 0x0144(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndGameWhenLessCount;                              // 0x0148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 KillOtherBuffID;                                   // 0x0150(0x0010)(Edit, NativeAccessSpecifierPublic)

public:
	void OnActorDeath(class AActor* Killer, class AActor* Target, const struct FAttributeModifierHandle& ParameterHandle, const struct FGlobalEventExtraData& ExtraData);
	void OnRep_IsFinalGapState();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyDeathMatchRuleComponent">();
	}
	static class UPyDeathMatchRuleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyDeathMatchRuleComponent>();
	}
};
static_assert(alignof(UPyDeathMatchRuleComponent) == 0x000008, "Wrong alignment on UPyDeathMatchRuleComponent");
static_assert(sizeof(UPyDeathMatchRuleComponent) == 0x000160, "Wrong size on UPyDeathMatchRuleComponent");
static_assert(offsetof(UPyDeathMatchRuleComponent, KillMeScore) == 0x0000F0, "Member 'UPyDeathMatchRuleComponent::KillMeScore' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, ScoreOnKill) == 0x0000F4, "Member 'UPyDeathMatchRuleComponent::ScoreOnKill' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, ScoreOnKill2) == 0x0000F8, "Member 'UPyDeathMatchRuleComponent::ScoreOnKill2' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, ScoreOnKill2Time) == 0x0000FC, "Member 'UPyDeathMatchRuleComponent::ScoreOnKill2Time' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, HealDistance) == 0x000100, "Member 'UPyDeathMatchRuleComponent::HealDistance' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, HealPlayerNum) == 0x000104, "Member 'UPyDeathMatchRuleComponent::HealPlayerNum' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, ScoreToWin) == 0x000108, "Member 'UPyDeathMatchRuleComponent::ScoreToWin' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, ScoreToHealthpackCD) == 0x00010C, "Member 'UPyDeathMatchRuleComponent::ScoreToHealthpackCD' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, NewHealthpackCD) == 0x000110, "Member 'UPyDeathMatchRuleComponent::NewHealthpackCD' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, AudioScoreGap) == 0x000114, "Member 'UPyDeathMatchRuleComponent::AudioScoreGap' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, IsFinalGapState) == 0x000118, "Member 'UPyDeathMatchRuleComponent::IsFinalGapState' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, PrepareStageBuffID) == 0x000120, "Member 'UPyDeathMatchRuleComponent::PrepareStageBuffID' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, BattleRespawnBuffID) == 0x000130, "Member 'UPyDeathMatchRuleComponent::BattleRespawnBuffID' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, SuperSkillChargeRate) == 0x000140, "Member 'UPyDeathMatchRuleComponent::SuperSkillChargeRate' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, TrajectoryPortalAbilityID) == 0x000144, "Member 'UPyDeathMatchRuleComponent::TrajectoryPortalAbilityID' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, EndGameWhenLessCount) == 0x000148, "Member 'UPyDeathMatchRuleComponent::EndGameWhenLessCount' has a wrong offset!");
static_assert(offsetof(UPyDeathMatchRuleComponent, KillOtherBuffID) == 0x000150, "Member 'UPyDeathMatchRuleComponent::KillOtherBuffID' has a wrong offset!");

// PythonClass PyDeathMatchRuleComponent.PyCue_Buff_20060001
// 0x0000 (0x1038 - 0x1038)
class APyCue_Buff_20060001 final : public AMarvelCueNotify_Buff
{
public:
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Buff_20060001">();
	}
	static class APyCue_Buff_20060001* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Buff_20060001>();
	}
};
static_assert(alignof(APyCue_Buff_20060001) == 0x000008, "Wrong alignment on APyCue_Buff_20060001");
static_assert(sizeof(APyCue_Buff_20060001) == 0x001038, "Wrong size on APyCue_Buff_20060001");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_SettingBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "UMG_classes.hpp"
#include "PyWidget_Button_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_SettingBase.PyWidget_SettingDesc
// 0x05F8 (0x09B0 - 0x03B8)
class UPyWidget_SettingDesc : public UUserWidget
{
public:
	class UAkAudioEvent*                          AkOnSettingFailed;                                 // 0x03B8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkOnSettingSuccess;                                // 0x03C0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelKeyUIAsset*                      KeyAsset;                                          // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RichInlineImageWidth;                              // 0x03D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RichInlineImageHeight;                             // 0x03D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RichInlineImageScale;                              // 0x03D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBlockStyle                        DefaultTextStyleOverride;                          // 0x03E0(0x0350)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Img_Bg_Normal;                                     // 0x0730(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Img_Bg_Negative;                                   // 0x0800(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Img_Bg_Positive;                                   // 0x08D0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Undo;                                              // 0x09A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void Undo__DelegateSignature();
	void Construct();
	void PostSetButtonSuccess();
	void PostSetButtonFailed();
	void SetPreBindText(const class FString& Text);
	void SetBindSuccessTips(int32 Type, const class FString& Key1, const class FString& Key2);
	void SetBindConflictTips(const class FString& Key1, const class FString& Key2, const class FString& Key3);
	void SetUndoSuccessTips();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SettingDesc">();
	}
	static class UPyWidget_SettingDesc* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SettingDesc>();
	}
};
static_assert(alignof(UPyWidget_SettingDesc) == 0x000010, "Wrong alignment on UPyWidget_SettingDesc");
static_assert(sizeof(UPyWidget_SettingDesc) == 0x0009B0, "Wrong size on UPyWidget_SettingDesc");
static_assert(offsetof(UPyWidget_SettingDesc, AkOnSettingFailed) == 0x0003B8, "Member 'UPyWidget_SettingDesc::AkOnSettingFailed' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, AkOnSettingSuccess) == 0x0003C0, "Member 'UPyWidget_SettingDesc::AkOnSettingSuccess' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, KeyAsset) == 0x0003C8, "Member 'UPyWidget_SettingDesc::KeyAsset' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, RichInlineImageWidth) == 0x0003D0, "Member 'UPyWidget_SettingDesc::RichInlineImageWidth' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, RichInlineImageHeight) == 0x0003D4, "Member 'UPyWidget_SettingDesc::RichInlineImageHeight' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, RichInlineImageScale) == 0x0003D8, "Member 'UPyWidget_SettingDesc::RichInlineImageScale' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, DefaultTextStyleOverride) == 0x0003E0, "Member 'UPyWidget_SettingDesc::DefaultTextStyleOverride' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, Img_Bg_Normal) == 0x000730, "Member 'UPyWidget_SettingDesc::Img_Bg_Normal' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, Img_Bg_Negative) == 0x000800, "Member 'UPyWidget_SettingDesc::Img_Bg_Negative' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, Img_Bg_Positive) == 0x0008D0, "Member 'UPyWidget_SettingDesc::Img_Bg_Positive' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingDesc, Undo) == 0x0009A0, "Member 'UPyWidget_SettingDesc::Undo' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_SwitchButton
// 0x0830 (0x0E20 - 0x05F0)
class UPyWidget_Setting_SwitchButton final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           SelectBtnStyle;                                    // 0x05F0(0x0400)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FButtonStyle                           UnSelectBtnStyle;                                  // 0x09F0(0x0400)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSwitchBtn;                                       // 0x0DF0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0E00(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0E10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSwitchBtn__DelegateSignature(int32 Is_open);
	void OnHovered__DelegateSignature(class UWidget* HoveredWidget);
	void OnUnhovered__DelegateSignature();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void SWITCH(int32 Is_open);
	void ShowSwitchBg(int32 Is_open);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_SwitchButton">();
	}
	static class UPyWidget_Setting_SwitchButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_SwitchButton>();
	}
};
static_assert(alignof(UPyWidget_Setting_SwitchButton) == 0x000010, "Wrong alignment on UPyWidget_Setting_SwitchButton");
static_assert(sizeof(UPyWidget_Setting_SwitchButton) == 0x000E20, "Wrong size on UPyWidget_Setting_SwitchButton");
static_assert(offsetof(UPyWidget_Setting_SwitchButton, SelectBtnStyle) == 0x0005F0, "Member 'UPyWidget_Setting_SwitchButton::SelectBtnStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchButton, UnSelectBtnStyle) == 0x0009F0, "Member 'UPyWidget_Setting_SwitchButton::UnSelectBtnStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchButton, OnSwitchBtn) == 0x000DF0, "Member 'UPyWidget_Setting_SwitchButton::OnSwitchBtn' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchButton, OnHovered) == 0x000E00, "Member 'UPyWidget_Setting_SwitchButton::OnHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchButton, OnUnhovered) == 0x000E10, "Member 'UPyWidget_Setting_SwitchButton::OnUnhovered' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_SwitchShiftButton
// 0x0830 (0x0E20 - 0x05F0)
class UPyWidget_Setting_SwitchShiftButton : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           SelectBtnStyle;                                    // 0x05F0(0x0400)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FButtonStyle                           UnSelectBtnStyle;                                  // 0x09F0(0x0400)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSwitchBtn;                                       // 0x0DF0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0E00(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0E10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSwitchBtn__DelegateSignature(int32 TabId, const class FText& Text);
	void OnHovered__DelegateSignature(class UWidget* HoveredWidget);
	void OnUnhovered__DelegateSignature();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void SetTabID(int32 TabId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_SwitchShiftButton">();
	}
	static class UPyWidget_Setting_SwitchShiftButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_SwitchShiftButton>();
	}
};
static_assert(alignof(UPyWidget_Setting_SwitchShiftButton) == 0x000010, "Wrong alignment on UPyWidget_Setting_SwitchShiftButton");
static_assert(sizeof(UPyWidget_Setting_SwitchShiftButton) == 0x000E20, "Wrong size on UPyWidget_Setting_SwitchShiftButton");
static_assert(offsetof(UPyWidget_Setting_SwitchShiftButton, SelectBtnStyle) == 0x0005F0, "Member 'UPyWidget_Setting_SwitchShiftButton::SelectBtnStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchShiftButton, UnSelectBtnStyle) == 0x0009F0, "Member 'UPyWidget_Setting_SwitchShiftButton::UnSelectBtnStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchShiftButton, OnSwitchBtn) == 0x000DF0, "Member 'UPyWidget_Setting_SwitchShiftButton::OnSwitchBtn' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchShiftButton, OnHovered) == 0x000E00, "Member 'UPyWidget_Setting_SwitchShiftButton::OnHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_SwitchShiftButton, OnUnhovered) == 0x000E10, "Member 'UPyWidget_Setting_SwitchShiftButton::OnUnhovered' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_Key
// 0x00C8 (0x06B8 - 0x05F0)
class UPyWidget_Setting_Key : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarvelKeyUIAsset*                      KeyAsset;                                          // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMarvelTextStyle                       TextStyle;                                         // 0x05F8(0x0080)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class UObject*                                Chord;                                             // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedUnitBg;                                        // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AkEvent_OnHovered;                                 // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnClicked;                                 // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0698(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x06A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnHovered__DelegateSignature(class UWidget* HoveredWidget);
	void OnUnhovered__DelegateSignature();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void PreConstruct(bool IsDesignTime);
	void OnInitialized();
	void Construct();
	void SetTextIcon();
	void SetKeyAsset(class UMarvelKeyUIAsset* InKeyAsset);
	void SetInputChord(const struct FInputChord& Chord_0);
	bool SetKey(const struct FKey& InKey);
	void SetMouseKey(const struct FKey& InKey);
	void SetActionMapping(const struct FInputActionKeyMapping& ActionMap);
	void SetAxisMapping(const struct FInputAxisKeyMapping& AxisMap);
	class FString ConstructChordString(const struct FInputChord& Input);
	class FString ConstructActionString(const struct FInputActionKeyMapping& Input);
	class FString ConstructAxisString(const struct FInputAxisKeyMapping& Input);
	bool SetText(const class FText& KeyText);
	bool SetBrush(const struct FSlateBrush& Brush);
	void SetMultiKeyWidget(const struct FInputChord& Key1, const struct FInputChord& Key2);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_Key">();
	}
	static class UPyWidget_Setting_Key* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_Key>();
	}
};
static_assert(alignof(UPyWidget_Setting_Key) == 0x000008, "Wrong alignment on UPyWidget_Setting_Key");
static_assert(sizeof(UPyWidget_Setting_Key) == 0x0006B8, "Wrong size on UPyWidget_Setting_Key");
static_assert(offsetof(UPyWidget_Setting_Key, KeyAsset) == 0x0005F0, "Member 'UPyWidget_Setting_Key::KeyAsset' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, TextStyle) == 0x0005F8, "Member 'UPyWidget_Setting_Key::TextStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, Chord) == 0x000678, "Member 'UPyWidget_Setting_Key::Chord' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, NeedUnitBg) == 0x000680, "Member 'UPyWidget_Setting_Key::NeedUnitBg' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, AkEvent_OnHovered) == 0x000688, "Member 'UPyWidget_Setting_Key::AkEvent_OnHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, AkEvent_OnClicked) == 0x000690, "Member 'UPyWidget_Setting_Key::AkEvent_OnClicked' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, OnHovered) == 0x000698, "Member 'UPyWidget_Setting_Key::OnHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Key, OnUnhovered) == 0x0006A8, "Member 'UPyWidget_Setting_Key::OnUnhovered' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_DrawBtn
// 0x0028 (0x03E0 - 0x03B8)
class UPyWidget_Setting_DrawBtn final : public UUserWidget
{
public:
	class UAkAudioEvent*                          AkEvent_OnOpen;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnCollapsed;                               // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDefaultOpen;                                     // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSwitchStateChanged;                              // 0x03D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSwitchStateChanged__DelegateSignature(bool IsOpen);
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_DrawBtn">();
	}
	static class UPyWidget_Setting_DrawBtn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_DrawBtn>();
	}
};
static_assert(alignof(UPyWidget_Setting_DrawBtn) == 0x000008, "Wrong alignment on UPyWidget_Setting_DrawBtn");
static_assert(sizeof(UPyWidget_Setting_DrawBtn) == 0x0003E0, "Wrong size on UPyWidget_Setting_DrawBtn");
static_assert(offsetof(UPyWidget_Setting_DrawBtn, AkEvent_OnOpen) == 0x0003B8, "Member 'UPyWidget_Setting_DrawBtn::AkEvent_OnOpen' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_DrawBtn, AkEvent_OnCollapsed) == 0x0003C0, "Member 'UPyWidget_Setting_DrawBtn::AkEvent_OnCollapsed' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_DrawBtn, IsDefaultOpen) == 0x0003C8, "Member 'UPyWidget_Setting_DrawBtn::IsDefaultOpen' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_DrawBtn, OnSwitchStateChanged) == 0x0003D0, "Member 'UPyWidget_Setting_DrawBtn::OnSwitchStateChanged' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Corona_Item
// 0x0020 (0x0610 - 0x05F0)
class UPyWidget_Corona_Item : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x05F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0600(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnHovered__DelegateSignature(class UWidget* HoveredWidget);
	void OnUnhovered__DelegateSignature();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Corona_Item">();
	}
	static class UPyWidget_Corona_Item* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Corona_Item>();
	}
};
static_assert(alignof(UPyWidget_Corona_Item) == 0x000008, "Wrong alignment on UPyWidget_Corona_Item");
static_assert(sizeof(UPyWidget_Corona_Item) == 0x000610, "Wrong size on UPyWidget_Corona_Item");
static_assert(offsetof(UPyWidget_Corona_Item, OnHovered) == 0x0005F0, "Member 'UPyWidget_Corona_Item::OnHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Corona_Item, OnUnhovered) == 0x000600, "Member 'UPyWidget_Corona_Item::OnUnhovered' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_Item
// 0x0158 (0x0748 - 0x05F0)
class UPyWidget_Setting_Item : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AkEvent_OnItemHovered;                             // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_OnItemClicked;                             // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedBottomLine;                                    // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedCoronaIcon;                                    // 0x0601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_602[0x6];                                      // 0x0602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         HoverFont;                                         // 0x0608(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         UnHoverFont;                                       // 0x0670(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            HoverTextColor;                                    // 0x06D8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            UnHoverTextColor;                                  // 0x06EC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                             AddBtnTexture;                                     // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             SubtractBtnTexture;                                // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             RecoverBtnTexture;                                 // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0718(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0728(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             TryUnBindHandInput;                                // 0x0738(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnHovered__DelegateSignature(class UWidget* HoveredWidget);
	void OnUnhovered__DelegateSignature();
	void TryUnBindHandInput__DelegateSignature(int32 Keynum, bool Isprimary);
	void OnInitialized();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void Construct();

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_Item">();
	}
	static class UPyWidget_Setting_Item* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_Item>();
	}
};
static_assert(alignof(UPyWidget_Setting_Item) == 0x000008, "Wrong alignment on UPyWidget_Setting_Item");
static_assert(sizeof(UPyWidget_Setting_Item) == 0x000748, "Wrong size on UPyWidget_Setting_Item");
static_assert(offsetof(UPyWidget_Setting_Item, AkEvent_OnItemHovered) == 0x0005F0, "Member 'UPyWidget_Setting_Item::AkEvent_OnItemHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, AkEvent_OnItemClicked) == 0x0005F8, "Member 'UPyWidget_Setting_Item::AkEvent_OnItemClicked' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, NeedBottomLine) == 0x000600, "Member 'UPyWidget_Setting_Item::NeedBottomLine' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, NeedCoronaIcon) == 0x000601, "Member 'UPyWidget_Setting_Item::NeedCoronaIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, HoverFont) == 0x000608, "Member 'UPyWidget_Setting_Item::HoverFont' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, UnHoverFont) == 0x000670, "Member 'UPyWidget_Setting_Item::UnHoverFont' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, HoverTextColor) == 0x0006D8, "Member 'UPyWidget_Setting_Item::HoverTextColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, UnHoverTextColor) == 0x0006EC, "Member 'UPyWidget_Setting_Item::UnHoverTextColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, AddBtnTexture) == 0x000700, "Member 'UPyWidget_Setting_Item::AddBtnTexture' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, SubtractBtnTexture) == 0x000708, "Member 'UPyWidget_Setting_Item::SubtractBtnTexture' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, RecoverBtnTexture) == 0x000710, "Member 'UPyWidget_Setting_Item::RecoverBtnTexture' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, OnHovered) == 0x000718, "Member 'UPyWidget_Setting_Item::OnHovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, OnUnhovered) == 0x000728, "Member 'UPyWidget_Setting_Item::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UPyWidget_Setting_Item, TryUnBindHandInput) == 0x000738, "Member 'UPyWidget_Setting_Item::TryUnBindHandInput' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_VBox
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Setting_VBox final : public UPyMarvelUserWidget
{
public:
	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_VBox">();
	}
	static class UPyWidget_Setting_VBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_VBox>();
	}
};
static_assert(alignof(UPyWidget_Setting_VBox) == 0x000008, "Wrong alignment on UPyWidget_Setting_VBox");
static_assert(sizeof(UPyWidget_Setting_VBox) == 0x0005F0, "Wrong size on UPyWidget_Setting_VBox");

// PythonClass PyWidget_SettingBase.PyWidget_Setting_SwitchButton_V2
// 0x0010 (0x0760 - 0x0750)
class UPyWidget_Setting_SwitchButton_V2 : public UPyWidget_Button
{
public:
	FMulticastInlineDelegateProperty_             OnSwitchBtn;                                       // 0x0750(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSwitchBtn__DelegateSignature(int32 Is_open);
	void SetIsHover(bool IsHover_0);
	void SetBtnIsPressed(bool IsBtnPressed_0);
	void OnInitialized();
	void Construct();
	void SWITCH(int32 IsOpen);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Setting_SwitchButton_V2">();
	}
	static class UPyWidget_Setting_SwitchButton_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Setting_SwitchButton_V2>();
	}
};
static_assert(alignof(UPyWidget_Setting_SwitchButton_V2) == 0x000008, "Wrong alignment on UPyWidget_Setting_SwitchButton_V2");
static_assert(sizeof(UPyWidget_Setting_SwitchButton_V2) == 0x000760, "Wrong size on UPyWidget_Setting_SwitchButton_V2");
static_assert(offsetof(UPyWidget_Setting_SwitchButton_V2, OnSwitchBtn) == 0x000750, "Member 'UPyWidget_Setting_SwitchButton_V2::OnSwitchBtn' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_SettingSelectHeroShape_Btn
// 0x0060 (0x0650 - 0x05F0)
class UPyWidget_SettingSelectHeroShape_Btn : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Normal_Scale;                                      // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Hovered_Scale;                                     // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Normal_Color;                                      // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Hovered_Color;                                     // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Selected_Color;                                    // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSelectShape;                                     // 0x0640(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void OnSelectShape__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SettingSelectHeroShape_Btn">();
	}
	static class UPyWidget_SettingSelectHeroShape_Btn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SettingSelectHeroShape_Btn>();
	}
};
static_assert(alignof(UPyWidget_SettingSelectHeroShape_Btn) == 0x000008, "Wrong alignment on UPyWidget_SettingSelectHeroShape_Btn");
static_assert(sizeof(UPyWidget_SettingSelectHeroShape_Btn) == 0x000650, "Wrong size on UPyWidget_SettingSelectHeroShape_Btn");
static_assert(offsetof(UPyWidget_SettingSelectHeroShape_Btn, Normal_Scale) == 0x0005F0, "Member 'UPyWidget_SettingSelectHeroShape_Btn::Normal_Scale' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingSelectHeroShape_Btn, Hovered_Scale) == 0x000600, "Member 'UPyWidget_SettingSelectHeroShape_Btn::Hovered_Scale' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingSelectHeroShape_Btn, Normal_Color) == 0x000610, "Member 'UPyWidget_SettingSelectHeroShape_Btn::Normal_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingSelectHeroShape_Btn, Hovered_Color) == 0x000620, "Member 'UPyWidget_SettingSelectHeroShape_Btn::Hovered_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingSelectHeroShape_Btn, Selected_Color) == 0x000630, "Member 'UPyWidget_SettingSelectHeroShape_Btn::Selected_Color' has a wrong offset!");
static_assert(offsetof(UPyWidget_SettingSelectHeroShape_Btn, OnSelectShape) == 0x000640, "Member 'UPyWidget_SettingSelectHeroShape_Btn::OnSelectShape' has a wrong offset!");

// PythonClass PyWidget_SettingBase.PyWidget_SettingSelectHeroShape
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_SettingSelectHeroShape : public UPyMarvelUserWidget
{
public:
	void OnInitialized();
	void Construct();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_SettingSelectHeroShape">();
	}
	static class UPyWidget_SettingSelectHeroShape* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_SettingSelectHeroShape>();
	}
};
static_assert(alignof(UPyWidget_SettingSelectHeroShape) == 0x000008, "Wrong alignment on UPyWidget_SettingSelectHeroShape");
static_assert(sizeof(UPyWidget_SettingSelectHeroShape) == 0x0005F0, "Wrong size on UPyWidget_SettingSelectHeroShape");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyObjective

#include "Basic.hpp"

#include "PyCamp_classes.hpp"
#include "MarvelLevel_structs.hpp"
#include "DeclarativeUnreal_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyObjective.PyObjective
// 0x0210 (0x0830 - 0x0620)
class APyObjective : public APyCamp
{
public:
	float                                         OccupyProgress;                                    // 0x0620(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProgressSpeed;                                     // 0x0624(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentStage;                                      // 0x0628(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OccupyLosingSpeed;                                 // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, float>                            OccupyRaisingSpeed;                                // 0x0648(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, float>                            OccupyProgressStage;                               // 0x0698(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         TimeToLoseOccupy;                                  // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetOccupyProgress;                              // 0x06EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FObjectiveLevelEventConfig             SingleLevelEvent;                                  // 0x06F0(0x0028)(Edit, NativeAccessSpecifierPublic)
	TMap<int32, struct FObjectiveLevelEventConfig> RoundLevelEvents;                                  // 0x0718(0x0050)(Edit, NativeAccessSpecifierPublic)
	class UParticleSystem*                        EmitterTemplate;                                   // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         EmitterTemplateNS;                                 // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      MaterialColorWhite;                                // 0x0778(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      MaterialColorBlue;                                 // 0x0780(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      MaterialColorRed;                                  // 0x0788(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             ProgressChangedDispatcher;                         // 0x0790(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             ProgressFinish;                                    // 0x07A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             DispatcherProgressInfoChange;                      // 0x07B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             UpdateColorDispatcher;                             // 0x07C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             ClientCampEndDispatcher;                           // 0x07D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBothSideIn;                                      // 0x07E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBothSideOut;                                     // 0x07F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnlyAttackIn;                                      // 0x0800(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnlyDefendIn;                                      // 0x0810(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnStageChange;                                     // 0x0820(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void ProgressChangedDispatcher__DelegateSignature(class AActor* Objective, float Progress);
	void ProgressFinish__DelegateSignature();
	void DispatcherProgressInfoChange__DelegateSignature(float Progress, float Speed);
	void UpdateColorDispatcher__DelegateSignature();
	void ClientCampEndDispatcher__DelegateSignature();
	void ReceiveInit();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void PyPostEditChangeEventTag();
	void S_Initialize();
	void Update();
	void BroadcastAttacked();
	void RewindForReplayForPy();
	void OnRep_ProgressSpeed();
	void OnRep_CurrentStage();
	void OnRep_OccupyProgress();
	void ObjectiveEndFight(EBattleSide Win_side);
	void SetProgressSpeed(float Speed);
	float GetProgressSpeed();
	void SetProgressSpeedFromAttack();
	void OnBothSideIn__DelegateSignature();
	void OnBothSideOut__DelegateSignature();
	void OnlyAttackIn__DelegateSignature(int32 AttackCount);
	void OnlyDefendIn__DelegateSignature(int32 DefendCount);
	void OnStageChange__DelegateSignature(int32 Stage);
	void DelayBack(float Speed, float Delay_time);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyObjective">();
	}
	static class APyObjective* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyObjective>();
	}
};
static_assert(alignof(APyObjective) == 0x000008, "Wrong alignment on APyObjective");
static_assert(sizeof(APyObjective) == 0x000830, "Wrong size on APyObjective");
static_assert(offsetof(APyObjective, OccupyProgress) == 0x000620, "Member 'APyObjective::OccupyProgress' has a wrong offset!");
static_assert(offsetof(APyObjective, ProgressSpeed) == 0x000624, "Member 'APyObjective::ProgressSpeed' has a wrong offset!");
static_assert(offsetof(APyObjective, CurrentStage) == 0x000628, "Member 'APyObjective::CurrentStage' has a wrong offset!");
static_assert(offsetof(APyObjective, Name_0) == 0x000630, "Member 'APyObjective::Name_0' has a wrong offset!");
static_assert(offsetof(APyObjective, OccupyLosingSpeed) == 0x000640, "Member 'APyObjective::OccupyLosingSpeed' has a wrong offset!");
static_assert(offsetof(APyObjective, OccupyRaisingSpeed) == 0x000648, "Member 'APyObjective::OccupyRaisingSpeed' has a wrong offset!");
static_assert(offsetof(APyObjective, OccupyProgressStage) == 0x000698, "Member 'APyObjective::OccupyProgressStage' has a wrong offset!");
static_assert(offsetof(APyObjective, TimeToLoseOccupy) == 0x0006E8, "Member 'APyObjective::TimeToLoseOccupy' has a wrong offset!");
static_assert(offsetof(APyObjective, TargetOccupyProgress) == 0x0006EC, "Member 'APyObjective::TargetOccupyProgress' has a wrong offset!");
static_assert(offsetof(APyObjective, SingleLevelEvent) == 0x0006F0, "Member 'APyObjective::SingleLevelEvent' has a wrong offset!");
static_assert(offsetof(APyObjective, RoundLevelEvents) == 0x000718, "Member 'APyObjective::RoundLevelEvents' has a wrong offset!");
static_assert(offsetof(APyObjective, EmitterTemplate) == 0x000768, "Member 'APyObjective::EmitterTemplate' has a wrong offset!");
static_assert(offsetof(APyObjective, EmitterTemplateNS) == 0x000770, "Member 'APyObjective::EmitterTemplateNS' has a wrong offset!");
static_assert(offsetof(APyObjective, MaterialColorWhite) == 0x000778, "Member 'APyObjective::MaterialColorWhite' has a wrong offset!");
static_assert(offsetof(APyObjective, MaterialColorBlue) == 0x000780, "Member 'APyObjective::MaterialColorBlue' has a wrong offset!");
static_assert(offsetof(APyObjective, MaterialColorRed) == 0x000788, "Member 'APyObjective::MaterialColorRed' has a wrong offset!");
static_assert(offsetof(APyObjective, ProgressChangedDispatcher) == 0x000790, "Member 'APyObjective::ProgressChangedDispatcher' has a wrong offset!");
static_assert(offsetof(APyObjective, ProgressFinish) == 0x0007A0, "Member 'APyObjective::ProgressFinish' has a wrong offset!");
static_assert(offsetof(APyObjective, DispatcherProgressInfoChange) == 0x0007B0, "Member 'APyObjective::DispatcherProgressInfoChange' has a wrong offset!");
static_assert(offsetof(APyObjective, UpdateColorDispatcher) == 0x0007C0, "Member 'APyObjective::UpdateColorDispatcher' has a wrong offset!");
static_assert(offsetof(APyObjective, ClientCampEndDispatcher) == 0x0007D0, "Member 'APyObjective::ClientCampEndDispatcher' has a wrong offset!");
static_assert(offsetof(APyObjective, OnBothSideIn) == 0x0007E0, "Member 'APyObjective::OnBothSideIn' has a wrong offset!");
static_assert(offsetof(APyObjective, OnBothSideOut) == 0x0007F0, "Member 'APyObjective::OnBothSideOut' has a wrong offset!");
static_assert(offsetof(APyObjective, OnlyAttackIn) == 0x000800, "Member 'APyObjective::OnlyAttackIn' has a wrong offset!");
static_assert(offsetof(APyObjective, OnlyDefendIn) == 0x000810, "Member 'APyObjective::OnlyDefendIn' has a wrong offset!");
static_assert(offsetof(APyObjective, OnStageChange) == 0x000820, "Member 'APyObjective::OnStageChange' has a wrong offset!");

// PythonClass PyObjective.PyObjectiveV2
// 0x0000 (0x0830 - 0x0830)
class APyObjectiveV2 final : public APyObjective
{
public:
	void BroadcastAttacked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyObjectiveV2">();
	}
	static class APyObjectiveV2* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyObjectiveV2>();
	}
};
static_assert(alignof(APyObjectiveV2) == 0x000008, "Wrong alignment on APyObjectiveV2");
static_assert(sizeof(APyObjectiveV2) == 0x000830, "Wrong size on APyObjectiveV2");

// PythonClass PyObjective.PyCue_Level_100002
// 0x00B8 (0x0F80 - 0x0EC8)
class APyCue_Level_100002 final : public AMarvelCueNotify_Loop
{
public:
	class UMaterialInstance*                      MaterialColorWhite;                                // 0x0EC8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      MaterialColorBlue;                                 // 0x0ED0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      MaterialColorRed;                                  // 0x0ED8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               DynamicColorWhite;                                 // 0x0EE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               DynamicColorBlue;                                  // 0x0EE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               DynamicColorRed;                                   // 0x0EF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorDefaultBlue;                                  // 0x0EF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorDefaultRed;                                   // 0x0F08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LatticeUV;                                         // 0x0F18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           AllyColor;                                         // 0x0F28(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           EnemyColor;                                        // 0x0F38(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            LightUpCurve;                                      // 0x0F48(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            LightDownCurve;                                    // 0x0F50(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            FadeOutCurve;                                      // 0x0F58(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ProgressLightUpCurve;                              // 0x0F60(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ProgressLightDownCurve;                            // 0x0F68(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeclarationHolder                     ViewTargetWatcher;                                 // 0x0F70(0x0010)(BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void ReceiveTick(float DeltaSeconds);
	bool WhileActive(class AActor* ObjectiveActor, const struct FGameplayCueParameters& Parameters);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnStageChange(int32 Index_0);
	void OnUpdateColor();
	void OnClientCampEnd();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Level_100002">();
	}
	static class APyCue_Level_100002* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Level_100002>();
	}
};
static_assert(alignof(APyCue_Level_100002) == 0x000008, "Wrong alignment on APyCue_Level_100002");
static_assert(sizeof(APyCue_Level_100002) == 0x000F80, "Wrong size on APyCue_Level_100002");
static_assert(offsetof(APyCue_Level_100002, MaterialColorWhite) == 0x000EC8, "Member 'APyCue_Level_100002::MaterialColorWhite' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, MaterialColorBlue) == 0x000ED0, "Member 'APyCue_Level_100002::MaterialColorBlue' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, MaterialColorRed) == 0x000ED8, "Member 'APyCue_Level_100002::MaterialColorRed' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, DynamicColorWhite) == 0x000EE0, "Member 'APyCue_Level_100002::DynamicColorWhite' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, DynamicColorBlue) == 0x000EE8, "Member 'APyCue_Level_100002::DynamicColorBlue' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, DynamicColorRed) == 0x000EF0, "Member 'APyCue_Level_100002::DynamicColorRed' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, ColorDefaultBlue) == 0x000EF8, "Member 'APyCue_Level_100002::ColorDefaultBlue' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, ColorDefaultRed) == 0x000F08, "Member 'APyCue_Level_100002::ColorDefaultRed' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, LatticeUV) == 0x000F18, "Member 'APyCue_Level_100002::LatticeUV' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, AllyColor) == 0x000F28, "Member 'APyCue_Level_100002::AllyColor' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, EnemyColor) == 0x000F38, "Member 'APyCue_Level_100002::EnemyColor' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, LightUpCurve) == 0x000F48, "Member 'APyCue_Level_100002::LightUpCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, LightDownCurve) == 0x000F50, "Member 'APyCue_Level_100002::LightDownCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, FadeOutCurve) == 0x000F58, "Member 'APyCue_Level_100002::FadeOutCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, ProgressLightUpCurve) == 0x000F60, "Member 'APyCue_Level_100002::ProgressLightUpCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, ProgressLightDownCurve) == 0x000F68, "Member 'APyCue_Level_100002::ProgressLightDownCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Level_100002, ViewTargetWatcher) == 0x000F70, "Member 'APyCue_Level_100002::ViewTargetWatcher' has a wrong offset!");

}


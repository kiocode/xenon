#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102092

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102092.PyAbility_10209_Base.CanActivate
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_10209_Base_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10209_Base_CanActivate) == 0x000001, "Wrong alignment on PyAbility_10209_Base_CanActivate");
static_assert(sizeof(PyAbility_10209_Base_CanActivate) == 0x000001, "Wrong size on PyAbility_10209_Base_CanActivate");
static_assert(offsetof(PyAbility_10209_Base_CanActivate, ReturnValue) == 0x000000, "Member 'PyAbility_10209_Base_CanActivate::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102092.PyAbility_10209_Base.TryMakeTriggerContext
// 0x0298 (0x0298 - 0x0000)
struct PyAbility_10209_Base_TryMakeTriggerContext final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10209_Base_TryMakeTriggerContext) == 0x000008, "Wrong alignment on PyAbility_10209_Base_TryMakeTriggerContext");
static_assert(sizeof(PyAbility_10209_Base_TryMakeTriggerContext) == 0x000298, "Wrong size on PyAbility_10209_Base_TryMakeTriggerContext");
static_assert(offsetof(PyAbility_10209_Base_TryMakeTriggerContext, EventData) == 0x000000, "Member 'PyAbility_10209_Base_TryMakeTriggerContext::EventData' has a wrong offset!");
static_assert(offsetof(PyAbility_10209_Base_TryMakeTriggerContext, ReturnValue) == 0x000290, "Member 'PyAbility_10209_Base_TryMakeTriggerContext::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_102092.PyAbility_10209_Base.K2_ActivateAbilityFromEvent
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_10209_Base_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_10209_Base_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on PyAbility_10209_Base_K2_ActivateAbilityFromEvent");
static_assert(sizeof(PyAbility_10209_Base_K2_ActivateAbilityFromEvent) == 0x000290, "Wrong size on PyAbility_10209_Base_K2_ActivateAbilityFromEvent");
static_assert(offsetof(PyAbility_10209_Base_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'PyAbility_10209_Base_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// PythonFunction PyAbility_102092.PyAbility_10209_Base.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_10209_Base_NativeOnMontageEvent final
{
public:
	class FString                                 EventTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10209_Base_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_10209_Base_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_10209_Base_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_10209_Base_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_10209_Base_NativeOnMontageEvent, EventTag) == 0x000000, "Member 'PyAbility_10209_Base_NativeOnMontageEvent::EventTag' has a wrong offset!");

// PythonFunction PyAbility_102092.PyAbility_10209_Base.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_10209_Base_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_10209_Base_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_10209_Base_K2_OnEndAbility");
static_assert(sizeof(PyAbility_10209_Base_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_10209_Base_K2_OnEndAbility");
static_assert(offsetof(PyAbility_10209_Base_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_10209_Base_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_102092.PyTraceComponent_10209_Base.OnTrace
// 0x0018 (0x0018 - 0x0000)
struct PyTraceComponent_10209_Base_OnTrace final
{
public:
	class UObject*                                TraceSource;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     HitResults;                                        // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyTraceComponent_10209_Base_OnTrace) == 0x000008, "Wrong alignment on PyTraceComponent_10209_Base_OnTrace");
static_assert(sizeof(PyTraceComponent_10209_Base_OnTrace) == 0x000018, "Wrong size on PyTraceComponent_10209_Base_OnTrace");
static_assert(offsetof(PyTraceComponent_10209_Base_OnTrace, TraceSource) == 0x000000, "Member 'PyTraceComponent_10209_Base_OnTrace::TraceSource' has a wrong offset!");
static_assert(offsetof(PyTraceComponent_10209_Base_OnTrace, HitResults) == 0x000008, "Member 'PyTraceComponent_10209_Base_OnTrace::HitResults' has a wrong offset!");

// PythonFunction PyAbility_102092.PyCue_Scope_Loop_10209201.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10209201_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10209201_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10209201_WhileActiveFX");
static_assert(sizeof(PyCue_Scope_Loop_10209201_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10209201_WhileActiveFX");
static_assert(offsetof(PyCue_Scope_Loop_10209201_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10209201_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10209201_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10209201_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102092.PyCue_Scope_Loop_10209201.OnExecuteFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_Loop_10209201_OnExecuteFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_Loop_10209201_OnExecuteFX) == 0x000008, "Wrong alignment on PyCue_Scope_Loop_10209201_OnExecuteFX");
static_assert(sizeof(PyCue_Scope_Loop_10209201_OnExecuteFX) == 0x0001C0, "Wrong size on PyCue_Scope_Loop_10209201_OnExecuteFX");
static_assert(offsetof(PyCue_Scope_Loop_10209201_OnExecuteFX, MyTarget) == 0x000000, "Member 'PyCue_Scope_Loop_10209201_OnExecuteFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_Loop_10209201_OnExecuteFX, Parameters) == 0x000008, "Member 'PyCue_Scope_Loop_10209201_OnExecuteFX::Parameters' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyGameSubtitles

#include "Basic.hpp"

#include "PyMarvelUserWidget_classes.hpp"
#include "Marvel_structs.hpp"


namespace SDK
{

// PythonClass PyGameSubtitles.PyWidget_GameSubtitle
// 0x0018 (0x0608 - 0x05F0)
class UPyWidget_GameSubtitle : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimaryDataAsset*                      SubtitleSettings;                                  // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsBattlePanelSlot;                                 // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxWidth;                                          // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NameReservedWidth;                                 // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_GameSubtitle">();
	}
	static class UPyWidget_GameSubtitle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_GameSubtitle>();
	}
};
static_assert(alignof(UPyWidget_GameSubtitle) == 0x000008, "Wrong alignment on UPyWidget_GameSubtitle");
static_assert(sizeof(UPyWidget_GameSubtitle) == 0x000608, "Wrong size on UPyWidget_GameSubtitle");
static_assert(offsetof(UPyWidget_GameSubtitle, SubtitleSettings) == 0x0005F0, "Member 'UPyWidget_GameSubtitle::SubtitleSettings' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitle, IsBattlePanelSlot) == 0x0005F8, "Member 'UPyWidget_GameSubtitle::IsBattlePanelSlot' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitle, MaxWidth) == 0x0005FC, "Member 'UPyWidget_GameSubtitle::MaxWidth' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitle, NameReservedWidth) == 0x000600, "Member 'UPyWidget_GameSubtitle::NameReservedWidth' has a wrong offset!");

// PythonClass PyGameSubtitles.PyWidget_GameSubtitleItem
// 0x0058 (0x0648 - 0x05F0)
class UPyWidget_GameSubtitleItem : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimaryDataAsset*                      SubtitleSettings;                                  // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMarvelVoiceType                              PreviewVoiceType;                                  // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleSide                                   PreviewBattleSide;                                 // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5FA[0x6];                                      // 0x05FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TargetPreviewLine;                                 // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetPreviewHeroName;                             // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetPreviewPlayerName;                           // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomColorPreview;                               // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnVoicelineEnded;                                  // 0x0638(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnVoicelineEnded__DelegateSignature();
	void OnInitialized();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_GameSubtitleItem">();
	}
	static class UPyWidget_GameSubtitleItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_GameSubtitleItem>();
	}
};
static_assert(alignof(UPyWidget_GameSubtitleItem) == 0x000008, "Wrong alignment on UPyWidget_GameSubtitleItem");
static_assert(sizeof(UPyWidget_GameSubtitleItem) == 0x000648, "Wrong size on UPyWidget_GameSubtitleItem");
static_assert(offsetof(UPyWidget_GameSubtitleItem, SubtitleSettings) == 0x0005F0, "Member 'UPyWidget_GameSubtitleItem::SubtitleSettings' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, PreviewVoiceType) == 0x0005F8, "Member 'UPyWidget_GameSubtitleItem::PreviewVoiceType' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, PreviewBattleSide) == 0x0005F9, "Member 'UPyWidget_GameSubtitleItem::PreviewBattleSide' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, TargetPreviewLine) == 0x000600, "Member 'UPyWidget_GameSubtitleItem::TargetPreviewLine' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, TargetPreviewHeroName) == 0x000610, "Member 'UPyWidget_GameSubtitleItem::TargetPreviewHeroName' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, TargetPreviewPlayerName) == 0x000620, "Member 'UPyWidget_GameSubtitleItem::TargetPreviewPlayerName' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, bCustomColorPreview) == 0x000630, "Member 'UPyWidget_GameSubtitleItem::bCustomColorPreview' has a wrong offset!");
static_assert(offsetof(UPyWidget_GameSubtitleItem, OnVoicelineEnded) == 0x000638, "Member 'UPyWidget_GameSubtitleItem::OnVoicelineEnded' has a wrong offset!");

}


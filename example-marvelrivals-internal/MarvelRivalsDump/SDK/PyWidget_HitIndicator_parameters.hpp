#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_HitIndicator

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Marvel_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_HitIndicator.PyWidget_HitSpecialBuff.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_HitSpecialBuff_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitSpecialBuff_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_HitSpecialBuff_OnAnimationFinished");
static_assert(sizeof(PyWidget_HitSpecialBuff_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_HitSpecialBuff_OnAnimationFinished");
static_assert(offsetof(PyWidget_HitSpecialBuff_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_HitSpecialBuff_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.OnDamageImmunized
// 0x0068 (0x0068 - 0x0000)
struct PyWidget_HitIndicator_OnDamageImmunized final
{
public:
	struct FGameplayTagContainer                  ImmunitySpecTags;                                  // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyWidget_HitIndicator_OnDamageImmunized) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_OnDamageImmunized");
static_assert(sizeof(PyWidget_HitIndicator_OnDamageImmunized) == 0x000068, "Wrong size on PyWidget_HitIndicator_OnDamageImmunized");
static_assert(offsetof(PyWidget_HitIndicator_OnDamageImmunized, ImmunitySpecTags) == 0x000000, "Member 'PyWidget_HitIndicator_OnDamageImmunized::ImmunitySpecTags' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.OnApplyDamageOnDestruction
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_HitIndicator_OnApplyDamageOnDestruction final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         RealDeltaValue;                                    // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_OnApplyDamageOnDestruction) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_OnApplyDamageOnDestruction");
static_assert(sizeof(PyWidget_HitIndicator_OnApplyDamageOnDestruction) == 0x000018, "Wrong size on PyWidget_HitIndicator_OnApplyDamageOnDestruction");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamageOnDestruction, InSourceAvatar) == 0x000000, "Member 'PyWidget_HitIndicator_OnApplyDamageOnDestruction::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamageOnDestruction, InTargetAvatar) == 0x000008, "Member 'PyWidget_HitIndicator_OnApplyDamageOnDestruction::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamageOnDestruction, RealDeltaValue) == 0x000010, "Member 'PyWidget_HitIndicator_OnApplyDamageOnDestruction::RealDeltaValue' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.OnApplyDamageByField
// 0x0018 (0x0018 - 0x0000)
struct PyWidget_HitIndicator_OnApplyDamageByField final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         RealDeltaValue;                                    // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_OnApplyDamageByField) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_OnApplyDamageByField");
static_assert(sizeof(PyWidget_HitIndicator_OnApplyDamageByField) == 0x000018, "Wrong size on PyWidget_HitIndicator_OnApplyDamageByField");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamageByField, InSourceAvatar) == 0x000000, "Member 'PyWidget_HitIndicator_OnApplyDamageByField::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamageByField, InTargetAvatar) == 0x000008, "Member 'PyWidget_HitIndicator_OnApplyDamageByField::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamageByField, RealDeltaValue) == 0x000010, "Member 'PyWidget_HitIndicator_OnApplyDamageByField::RealDeltaValue' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.ApplyDamageEffect
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_HitIndicator_ApplyDamageEffect final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParameterHandle;                                   // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_ApplyDamageEffect) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_ApplyDamageEffect");
static_assert(sizeof(PyWidget_HitIndicator_ApplyDamageEffect) == 0x000028, "Wrong size on PyWidget_HitIndicator_ApplyDamageEffect");
static_assert(offsetof(PyWidget_HitIndicator_ApplyDamageEffect, InSourceAvatar) == 0x000000, "Member 'PyWidget_HitIndicator_ApplyDamageEffect::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_ApplyDamageEffect, InTargetAvatar) == 0x000008, "Member 'PyWidget_HitIndicator_ApplyDamageEffect::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_ApplyDamageEffect, ParameterHandle) == 0x000010, "Member 'PyWidget_HitIndicator_ApplyDamageEffect::ParameterHandle' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.OnApplyDamage
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_HitIndicator_OnApplyDamage final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierHandle;                                    // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_OnApplyDamage) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_OnApplyDamage");
static_assert(sizeof(PyWidget_HitIndicator_OnApplyDamage) == 0x000028, "Wrong size on PyWidget_HitIndicator_OnApplyDamage");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamage, InSourceAvatar) == 0x000000, "Member 'PyWidget_HitIndicator_OnApplyDamage::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamage, InTargetAvatar) == 0x000008, "Member 'PyWidget_HitIndicator_OnApplyDamage::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyDamage, ModifierHandle) == 0x000010, "Member 'PyWidget_HitIndicator_OnApplyDamage::ModifierHandle' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.OnApplyTreat
// 0x0028 (0x0028 - 0x0000)
struct PyWidget_HitIndicator_OnApplyTreat final
{
public:
	class AActor*                                 InSourceAvatar;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTargetAvatar;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ModifierHandle;                                    // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_OnApplyTreat) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_OnApplyTreat");
static_assert(sizeof(PyWidget_HitIndicator_OnApplyTreat) == 0x000028, "Wrong size on PyWidget_HitIndicator_OnApplyTreat");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyTreat, InSourceAvatar) == 0x000000, "Member 'PyWidget_HitIndicator_OnApplyTreat::InSourceAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyTreat, InTargetAvatar) == 0x000008, "Member 'PyWidget_HitIndicator_OnApplyTreat::InTargetAvatar' has a wrong offset!");
static_assert(offsetof(PyWidget_HitIndicator_OnApplyTreat, ModifierHandle) == 0x000010, "Member 'PyWidget_HitIndicator_OnApplyTreat::ModifierHandle' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.SetCharacter
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_HitIndicator_SetCharacter final
{
public:
	class AMarvelBaseCharacter*                   ViewingCharacter;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_SetCharacter) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_SetCharacter");
static_assert(sizeof(PyWidget_HitIndicator_SetCharacter) == 0x000008, "Wrong size on PyWidget_HitIndicator_SetCharacter");
static_assert(offsetof(PyWidget_HitIndicator_SetCharacter, ViewingCharacter) == 0x000000, "Member 'PyWidget_HitIndicator_SetCharacter::ViewingCharacter' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_HitIndicator.OnViewingTargetChanged
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_HitIndicator_OnViewingTargetChanged final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_HitIndicator_OnViewingTargetChanged) == 0x000008, "Wrong alignment on PyWidget_HitIndicator_OnViewingTargetChanged");
static_assert(sizeof(PyWidget_HitIndicator_OnViewingTargetChanged) == 0x000008, "Wrong size on PyWidget_HitIndicator_OnViewingTargetChanged");
static_assert(offsetof(PyWidget_HitIndicator_OnViewingTargetChanged, InActor) == 0x000000, "Member 'PyWidget_HitIndicator_OnViewingTargetChanged::InActor' has a wrong offset!");

// PythonFunction PyWidget_HitIndicator.PyWidget_Healing.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_Healing_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_Healing_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_Healing_OnAnimationFinished");
static_assert(sizeof(PyWidget_Healing_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_Healing_OnAnimationFinished");
static_assert(offsetof(PyWidget_Healing_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_Healing_OnAnimationFinished::Animation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_102131

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Hero_1021_structs.hpp"
#include "Marvel_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_102131.PyAbility_102131.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_102131_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102131_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_102131_K2_OnEndAbility");
static_assert(sizeof(PyAbility_102131_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_102131_K2_OnEndAbility");
static_assert(offsetof(PyAbility_102131_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_102131_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_102131.PyAbility_102131.NativeOnMontageCompleted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_102131_NativeOnMontageCompleted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102131_NativeOnMontageCompleted) == 0x000008, "Wrong alignment on PyAbility_102131_NativeOnMontageCompleted");
static_assert(sizeof(PyAbility_102131_NativeOnMontageCompleted) == 0x000010, "Wrong size on PyAbility_102131_NativeOnMontageCompleted");
static_assert(offsetof(PyAbility_102131_NativeOnMontageCompleted, Tag) == 0x000000, "Member 'PyAbility_102131_NativeOnMontageCompleted::Tag' has a wrong offset!");

// PythonFunction PyAbility_102131.PyAbility_102131.NativeOnMontageCancelled
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_102131_NativeOnMontageCancelled final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102131_NativeOnMontageCancelled) == 0x000008, "Wrong alignment on PyAbility_102131_NativeOnMontageCancelled");
static_assert(sizeof(PyAbility_102131_NativeOnMontageCancelled) == 0x000010, "Wrong size on PyAbility_102131_NativeOnMontageCancelled");
static_assert(offsetof(PyAbility_102131_NativeOnMontageCancelled, Tag) == 0x000000, "Member 'PyAbility_102131_NativeOnMontageCancelled::Tag' has a wrong offset!");

// PythonFunction PyAbility_102131.PyAbility_102131.NativeOnMontageInterrupted
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_102131_NativeOnMontageInterrupted final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102131_NativeOnMontageInterrupted) == 0x000008, "Wrong alignment on PyAbility_102131_NativeOnMontageInterrupted");
static_assert(sizeof(PyAbility_102131_NativeOnMontageInterrupted) == 0x000010, "Wrong size on PyAbility_102131_NativeOnMontageInterrupted");
static_assert(offsetof(PyAbility_102131_NativeOnMontageInterrupted, Tag) == 0x000000, "Member 'PyAbility_102131_NativeOnMontageInterrupted::Tag' has a wrong offset!");

// PythonFunction PyAbility_102131.PyAbility_102131.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_102131_NativeOnMontageEvent final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102131_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_102131_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_102131_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_102131_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_102131_NativeOnMontageEvent, Tag) == 0x000000, "Member 'PyAbility_102131_NativeOnMontageEvent::Tag' has a wrong offset!");

// PythonFunction PyAbility_102131.PyAbility_102131.OnApplyDamage
// 0x0028 (0x0028 - 0x0000)
struct PyAbility_102131_OnApplyDamage final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAttributeModifierHandle               ParamterHandle;                                    // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_102131_OnApplyDamage) == 0x000008, "Wrong alignment on PyAbility_102131_OnApplyDamage");
static_assert(sizeof(PyAbility_102131_OnApplyDamage) == 0x000028, "Wrong size on PyAbility_102131_OnApplyDamage");
static_assert(offsetof(PyAbility_102131_OnApplyDamage, Instigator) == 0x000000, "Member 'PyAbility_102131_OnApplyDamage::Instigator' has a wrong offset!");
static_assert(offsetof(PyAbility_102131_OnApplyDamage, Target) == 0x000008, "Member 'PyAbility_102131_OnApplyDamage::Target' has a wrong offset!");
static_assert(offsetof(PyAbility_102131_OnApplyDamage, ParamterHandle) == 0x000010, "Member 'PyAbility_102131_OnApplyDamage::ParamterHandle' has a wrong offset!");

// DelegateFunction PyAbility_102131.PyAbility_102131.QATestArrowData__DelegateSignature
// 0x0058 (0x0058 - 0x0000)
struct PyAbility_102131_QATestArrowData__DelegateSignature final
{
public:
	struct FHawkeyeArrowData                      ArrowData;                                         // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyAbility_102131_QATestArrowData__DelegateSignature) == 0x000008, "Wrong alignment on PyAbility_102131_QATestArrowData__DelegateSignature");
static_assert(sizeof(PyAbility_102131_QATestArrowData__DelegateSignature) == 0x000058, "Wrong size on PyAbility_102131_QATestArrowData__DelegateSignature");
static_assert(offsetof(PyAbility_102131_QATestArrowData__DelegateSignature, ArrowData) == 0x000000, "Member 'PyAbility_102131_QATestArrowData__DelegateSignature::ArrowData' has a wrong offset!");

// PythonFunction PyAbility_102131.PyCue_Projectile_Loop_10213101.WhileActiveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10213101_WhileActiveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10213101_WhileActiveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10213101_WhileActiveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10213101_WhileActiveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10213101_WhileActiveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_WhileActiveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10213101_WhileActiveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_WhileActiveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10213101_WhileActiveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102131.PyCue_Projectile_Loop_10213101.UpdateArrowMesh
// 0x0178 (0x0178 - 0x0000)
struct PyCue_Projectile_Loop_10213101_UpdateArrowMesh final
{
public:
	bool                                          NeedHidden;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             ImpactResult;                                      // 0x0008(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10213101_UpdateArrowMesh) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10213101_UpdateArrowMesh");
static_assert(sizeof(PyCue_Projectile_Loop_10213101_UpdateArrowMesh) == 0x000178, "Wrong size on PyCue_Projectile_Loop_10213101_UpdateArrowMesh");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_UpdateArrowMesh, NeedHidden) == 0x000000, "Member 'PyCue_Projectile_Loop_10213101_UpdateArrowMesh::NeedHidden' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_UpdateArrowMesh, ImpactResult) == 0x000008, "Member 'PyCue_Projectile_Loop_10213101_UpdateArrowMesh::ImpactResult' has a wrong offset!");

// PythonFunction PyAbility_102131.PyCue_Projectile_Loop_10213101.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Projectile_Loop_10213101_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10213101_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10213101_OnRemoveFX");
static_assert(sizeof(PyCue_Projectile_Loop_10213101_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Projectile_Loop_10213101_OnRemoveFX");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Projectile_Loop_10213101_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Projectile_Loop_10213101_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102131.PyCue_Projectile_Loop_10213101.AdjustArrowTransform
// 0x0170 (0x0170 - 0x0000)
struct PyCue_Projectile_Loop_10213101_AdjustArrowTransform final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Projectile_Loop_10213101_AdjustArrowTransform) == 0x000008, "Wrong alignment on PyCue_Projectile_Loop_10213101_AdjustArrowTransform");
static_assert(sizeof(PyCue_Projectile_Loop_10213101_AdjustArrowTransform) == 0x000170, "Wrong size on PyCue_Projectile_Loop_10213101_AdjustArrowTransform");
static_assert(offsetof(PyCue_Projectile_Loop_10213101_AdjustArrowTransform, ImpactResult) == 0x000000, "Member 'PyCue_Projectile_Loop_10213101_AdjustArrowTransform::ImpactResult' has a wrong offset!");

// PythonFunction PyAbility_102131.PyProjectile_10213101.K2_OnProcessHit
// 0x0170 (0x0170 - 0x0000)
struct PyProjectile_10213101_K2_OnProcessHit final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10213101_K2_OnProcessHit) == 0x000008, "Wrong alignment on PyProjectile_10213101_K2_OnProcessHit");
static_assert(sizeof(PyProjectile_10213101_K2_OnProcessHit) == 0x000170, "Wrong size on PyProjectile_10213101_K2_OnProcessHit");
static_assert(offsetof(PyProjectile_10213101_K2_OnProcessHit, ImpactResult) == 0x000000, "Member 'PyProjectile_10213101_K2_OnProcessHit::ImpactResult' has a wrong offset!");

// DelegateFunction PyAbility_102131.PyProjectile_10213101.DelegateShowArrowMesh__DelegateSignature
// 0x0178 (0x0178 - 0x0000)
struct PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature final
{
public:
	bool                                          Is_hidden;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             ImpactResult;                                      // 0x0008(0x0170)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature) == 0x000008, "Wrong alignment on PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature");
static_assert(sizeof(PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature) == 0x000178, "Wrong size on PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature");
static_assert(offsetof(PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature, Is_hidden) == 0x000000, "Member 'PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature::Is_hidden' has a wrong offset!");
static_assert(offsetof(PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature, ImpactResult) == 0x000008, "Member 'PyProjectile_10213101_DelegateShowArrowMesh__DelegateSignature::ImpactResult' has a wrong offset!");

// PythonFunction PyAbility_102131.PyUIController_102131.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_102131_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_102131_SetAbility) == 0x000008, "Wrong alignment on PyUIController_102131_SetAbility");
static_assert(sizeof(PyUIController_102131_SetAbility) == 0x000010, "Wrong size on PyUIController_102131_SetAbility");
static_assert(offsetof(PyUIController_102131_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_102131_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_102131_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_102131_SetAbility::InAbility' has a wrong offset!");

// PythonFunction PyAbility_102131.PyCue_Ability_Loop_10213101.WhileActiveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10213101_WhileActiveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10213101_WhileActiveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10213101_WhileActiveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10213101_WhileActiveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10213101_WhileActiveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10213101_WhileActiveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10213101_WhileActiveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10213101_WhileActiveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10213101_WhileActiveAudio::Parameters' has a wrong offset!");

// PythonFunction PyAbility_102131.PyCue_Ability_Loop_10213101.OnRemoveAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Ability_Loop_10213101_OnRemoveAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Ability_Loop_10213101_OnRemoveAudio) == 0x000008, "Wrong alignment on PyCue_Ability_Loop_10213101_OnRemoveAudio");
static_assert(sizeof(PyCue_Ability_Loop_10213101_OnRemoveAudio) == 0x0001C0, "Wrong size on PyCue_Ability_Loop_10213101_OnRemoveAudio");
static_assert(offsetof(PyCue_Ability_Loop_10213101_OnRemoveAudio, MyTarget) == 0x000000, "Member 'PyCue_Ability_Loop_10213101_OnRemoveAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Ability_Loop_10213101_OnRemoveAudio, Parameters) == 0x000008, "Member 'PyCue_Ability_Loop_10213101_OnRemoveAudio::Parameters' has a wrong offset!");

}


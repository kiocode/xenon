#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103901

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "PyWidget_AbilityCharge_V5_classes.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Hero_1039_structs.hpp"
#include "Hero_1039_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_103901.PyUIController_103901
// 0x0010 (0x0C70 - 0x0C60)
class UPyUIController_103901 final : public UUIC_Ability
{
public:
	float                                         EnergyCur;                                         // 0x0C60(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnergyMax;                                         // 0x0C64(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttackEnergyRegenBuffID;                           // 0x0C68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Construct();
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void OnDestruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_103901">();
	}
	static class UPyUIController_103901* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_103901>();
	}
};
static_assert(alignof(UPyUIController_103901) == 0x000008, "Wrong alignment on UPyUIController_103901");
static_assert(sizeof(UPyUIController_103901) == 0x000C70, "Wrong size on UPyUIController_103901");
static_assert(offsetof(UPyUIController_103901, EnergyCur) == 0x000C60, "Member 'UPyUIController_103901::EnergyCur' has a wrong offset!");
static_assert(offsetof(UPyUIController_103901, EnergyMax) == 0x000C64, "Member 'UPyUIController_103901::EnergyMax' has a wrong offset!");
static_assert(offsetof(UPyUIController_103901, AttackEnergyRegenBuffID) == 0x000C68, "Member 'UPyUIController_103901::AttackEnergyRegenBuffID' has a wrong offset!");

// PythonClass PyAbility_103901.PyBuffAbility_10390101
// 0x0060 (0x1318 - 0x12B8)
class UPyBuffAbility_10390101 : public UMarvelNotTreatFallAbility
{
public:
	TMap<float, float>                            ConversionDict;                                    // 0x12B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CostType;                                          // 0x1308(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnActorNoTreatShieldChanged(class AActor* Source, const struct FAttributeModifierHandle& ParamHandle, const struct FNoTreatShieldChangeEventExtraData& ExtraData);
	void OtherAbilityApplyCost(class UMarvelGameplayAbility* Ability, float CostValue, const struct FGameplayTag& CostType_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyBuffAbility_10390101">();
	}
	static class UPyBuffAbility_10390101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyBuffAbility_10390101>();
	}
};
static_assert(alignof(UPyBuffAbility_10390101) == 0x000008, "Wrong alignment on UPyBuffAbility_10390101");
static_assert(sizeof(UPyBuffAbility_10390101) == 0x001318, "Wrong size on UPyBuffAbility_10390101");
static_assert(offsetof(UPyBuffAbility_10390101, ConversionDict) == 0x0012B8, "Member 'UPyBuffAbility_10390101::ConversionDict' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390101, CostType) == 0x001308, "Member 'UPyBuffAbility_10390101::CostType' has a wrong offset!");

// PythonClass PyAbility_103901.PyBuffAbility_10390102
// 0x0030 (0x14B8 - 0x1488)
class UPyBuffAbility_10390102 : public UBuffAbility_10390102
{
public:
	TArray<int32>                                 AbilityIDs;                                        // 0x1488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         DamageRadio;                                       // 0x1498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FixedReplyValue;                                   // 0x149C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           EnergyTag;                                         // 0x14A0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Consume;                                           // 0x14AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14AD[0x3];                                     // 0x14AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BuffID;                                            // 0x14B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherReplyBuffID;                                  // 0x14B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	void K2_ActivateAbility();
	void OnAbilityDamage(class UGameplayAbility* Ability, const struct FAttributeModifierHandle& ParamHandle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyBuffAbility_10390102">();
	}
	static class UPyBuffAbility_10390102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyBuffAbility_10390102>();
	}
};
static_assert(alignof(UPyBuffAbility_10390102) == 0x000008, "Wrong alignment on UPyBuffAbility_10390102");
static_assert(sizeof(UPyBuffAbility_10390102) == 0x0014B8, "Wrong size on UPyBuffAbility_10390102");
static_assert(offsetof(UPyBuffAbility_10390102, AbilityIDs) == 0x001488, "Member 'UPyBuffAbility_10390102::AbilityIDs' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390102, DamageRadio) == 0x001498, "Member 'UPyBuffAbility_10390102::DamageRadio' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390102, FixedReplyValue) == 0x00149C, "Member 'UPyBuffAbility_10390102::FixedReplyValue' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390102, EnergyTag) == 0x0014A0, "Member 'UPyBuffAbility_10390102::EnergyTag' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390102, Consume) == 0x0014AC, "Member 'UPyBuffAbility_10390102::Consume' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390102, BuffID) == 0x0014B0, "Member 'UPyBuffAbility_10390102::BuffID' has a wrong offset!");
static_assert(offsetof(UPyBuffAbility_10390102, OtherReplyBuffID) == 0x0014B4, "Member 'UPyBuffAbility_10390102::OtherReplyBuffID' has a wrong offset!");

// PythonClass PyAbility_103901.PyConfig_103901
// 0x0018 (0x00B0 - 0x0098)
class UPyConfig_103901 final : public UMarvelAbilityConfig
{
public:
	int32                                         ArmorManagerBuffID;                                // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttackEnergyRegenBuffID;                           // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FThorEnergyConfig>              EnergyConfig;                                      // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_103901">();
	}
	static class UPyConfig_103901* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_103901>();
	}
};
static_assert(alignof(UPyConfig_103901) == 0x000008, "Wrong alignment on UPyConfig_103901");
static_assert(sizeof(UPyConfig_103901) == 0x0000B0, "Wrong size on UPyConfig_103901");
static_assert(offsetof(UPyConfig_103901, ArmorManagerBuffID) == 0x000098, "Member 'UPyConfig_103901::ArmorManagerBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_103901, AttackEnergyRegenBuffID) == 0x00009C, "Member 'UPyConfig_103901::AttackEnergyRegenBuffID' has a wrong offset!");
static_assert(offsetof(UPyConfig_103901, EnergyConfig) == 0x0000A0, "Member 'UPyConfig_103901::EnergyConfig' has a wrong offset!");

// PythonClass PyAbility_103901.MarterialAnimHandlerComponent
// 0x0020 (0x0110 - 0x00F0)
class UMarterialAnimHandlerComponent final : public UActorComponent
{
public:
	TArray<struct FMaterialAnimState>             StartMaterialCurve;                                // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FMaterialAnimState>             StopMaterialCurve;                                 // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MarterialAnimHandlerComponent">();
	}
	static class UMarterialAnimHandlerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMarterialAnimHandlerComponent>();
	}
};
static_assert(alignof(UMarterialAnimHandlerComponent) == 0x000008, "Wrong alignment on UMarterialAnimHandlerComponent");
static_assert(sizeof(UMarterialAnimHandlerComponent) == 0x000110, "Wrong size on UMarterialAnimHandlerComponent");
static_assert(offsetof(UMarterialAnimHandlerComponent, StartMaterialCurve) == 0x0000F0, "Member 'UMarterialAnimHandlerComponent::StartMaterialCurve' has a wrong offset!");
static_assert(offsetof(UMarterialAnimHandlerComponent, StopMaterialCurve) == 0x000100, "Member 'UMarterialAnimHandlerComponent::StopMaterialCurve' has a wrong offset!");

// PythonClass PyAbility_103901.PyAbility_103901
// 0x0010 (0x2590 - 0x2580)
class UPyAbility_103901 : public UMarvelGameplayAbility
{
public:
	FMulticastInlineDelegateProperty_             OnBuffRecoveredEnergy;                             // 0x2580(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnBuffRecoveredEnergy__DelegateSignature();
	void BeginPlay();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void BroadcastBuffRecoveredEnergy();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_103901">();
	}
	static class UPyAbility_103901* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_103901>();
	}
};
static_assert(alignof(UPyAbility_103901) == 0x000008, "Wrong alignment on UPyAbility_103901");
static_assert(sizeof(UPyAbility_103901) == 0x002590, "Wrong size on UPyAbility_103901");
static_assert(offsetof(UPyAbility_103901, OnBuffRecoveredEnergy) == 0x002580, "Member 'UPyAbility_103901::OnBuffRecoveredEnergy' has a wrong offset!");

// PythonClass PyAbility_103901.PyWidget_Extra_103901
// 0x0120 (0x08C8 - 0x07A8)
class UPyWidget_Extra_103901 final : public UWidget_AbilityStatus_Normal
{
public:
	struct FWidgetStyle_AbilityCharge             ChargeStyle;                                       // 0x07A8(0x0110)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         EnergyCur;                                         // 0x08B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnergyMax;                                         // 0x08BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          VisibleWhenCharging;                               // 0x08C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttackEnergyRegenBuffID;                           // 0x08C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void SetAbility(class UMarvelGameplayAbility* Ability_0);
	void SetEnergyCur(float InEnergyCur);
	void SetEnergyMax(float InEnergyMax);
	void UpdateVisible();
	void Deactivate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Extra_103901">();
	}
	static class UPyWidget_Extra_103901* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Extra_103901>();
	}
};
static_assert(alignof(UPyWidget_Extra_103901) == 0x000008, "Wrong alignment on UPyWidget_Extra_103901");
static_assert(sizeof(UPyWidget_Extra_103901) == 0x0008C8, "Wrong size on UPyWidget_Extra_103901");
static_assert(offsetof(UPyWidget_Extra_103901, ChargeStyle) == 0x0007A8, "Member 'UPyWidget_Extra_103901::ChargeStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Extra_103901, EnergyCur) == 0x0008B8, "Member 'UPyWidget_Extra_103901::EnergyCur' has a wrong offset!");
static_assert(offsetof(UPyWidget_Extra_103901, EnergyMax) == 0x0008BC, "Member 'UPyWidget_Extra_103901::EnergyMax' has a wrong offset!");
static_assert(offsetof(UPyWidget_Extra_103901, VisibleWhenCharging) == 0x0008C0, "Member 'UPyWidget_Extra_103901::VisibleWhenCharging' has a wrong offset!");
static_assert(offsetof(UPyWidget_Extra_103901, AttackEnergyRegenBuffID) == 0x0008C4, "Member 'UPyWidget_Extra_103901::AttackEnergyRegenBuffID' has a wrong offset!");

// PythonClass PyAbility_103901.PyWidget_EnergyUnit_103901
// 0x0000 (0x0618 - 0x0618)
class UPyWidget_EnergyUnit_103901 final : public UPyWidget_AbilityChargeSingle_v5
{
public:
	void Restore();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_EnergyUnit_103901">();
	}
	static class UPyWidget_EnergyUnit_103901* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_EnergyUnit_103901>();
	}
};
static_assert(alignof(UPyWidget_EnergyUnit_103901) == 0x000008, "Wrong alignment on UPyWidget_EnergyUnit_103901");
static_assert(sizeof(UPyWidget_EnergyUnit_103901) == 0x000618, "Wrong size on UPyWidget_EnergyUnit_103901");

// PythonClass PyAbility_103901.PyCue_Buff_10390102
// 0x0008 (0x1040 - 0x1038)
class APyCue_Buff_10390102 final : public AMarvelCueNotify_Buff
{
public:
	class UMarterialAnimHandlerComponent*         MarterialAnimHandler;                              // 0x1038(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Buff_10390102">();
	}
	static class APyCue_Buff_10390102* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Buff_10390102>();
	}
};
static_assert(alignof(APyCue_Buff_10390102) == 0x000008, "Wrong alignment on APyCue_Buff_10390102");
static_assert(sizeof(APyCue_Buff_10390102) == 0x001040, "Wrong size on APyCue_Buff_10390102");
static_assert(offsetof(APyCue_Buff_10390102, MarterialAnimHandler) == 0x001038, "Member 'APyCue_Buff_10390102::MarterialAnimHandler' has a wrong offset!");

}


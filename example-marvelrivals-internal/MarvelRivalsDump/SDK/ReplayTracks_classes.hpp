#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReplayTracks

#include "Basic.hpp"

#include "MovieScene_classes.hpp"


namespace SDK
{

// Class ReplayTracks.MovieSceneReplaySection
// 0x0048 (0x0140 - 0x00F8)
class UMovieSceneReplaySection final : public UMovieSceneSection
{
public:
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReplayName;                                        // 0x0100(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AdditionalOptions;                                 // 0x0110(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 ViewTargetCharacterName;                           // 0x0120(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SpecifiedPlayerName;                               // 0x0130(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneReplaySection">();
	}
	static class UMovieSceneReplaySection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneReplaySection>();
	}
};
//static_assert(alignof(UMovieSceneReplaySection) == 0x000008, "Wrong alignment on UMovieSceneReplaySection");
//static_assert(sizeof(UMovieSceneReplaySection) == 0x000140, "Wrong size on UMovieSceneReplaySection");
//static_assert(offsetof(UMovieSceneReplaySection, ReplayName) == 0x000100, "Member 'UMovieSceneReplaySection::ReplayName' has a wrong offset!");
//static_assert(offsetof(UMovieSceneReplaySection, AdditionalOptions) == 0x000110, "Member 'UMovieSceneReplaySection::AdditionalOptions' has a wrong offset!");
//static_assert(offsetof(UMovieSceneReplaySection, ViewTargetCharacterName) == 0x000120, "Member 'UMovieSceneReplaySection::ViewTargetCharacterName' has a wrong offset!");
//static_assert(offsetof(UMovieSceneReplaySection, SpecifiedPlayerName) == 0x000130, "Member 'UMovieSceneReplaySection::SpecifiedPlayerName' has a wrong offset!");

// Class ReplayTracks.MovieSceneReplaySystem
// 0x0020 (0x0068 - 0x0048)
class UMovieSceneReplaySystem final : public UMovieSceneEntitySystem
{
public:
	uint8                                         Pad_48[0x20];                                      // 0x0048(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneReplaySystem">();
	}
	static class UMovieSceneReplaySystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneReplaySystem>();
	}
};
//static_assert(alignof(UMovieSceneReplaySystem) == 0x000008, "Wrong alignment on UMovieSceneReplaySystem");
//static_assert(sizeof(UMovieSceneReplaySystem) == 0x000068, "Wrong size on UMovieSceneReplaySystem");

// Class ReplayTracks.MovieSceneReplayTrack
// 0x0010 (0x00B0 - 0x00A0)
class UMovieSceneReplayTrack final : public UMovieSceneTrack
{
public:
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00A0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneReplayTrack">();
	}
	static class UMovieSceneReplayTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneReplayTrack>();
	}
};
//static_assert(alignof(UMovieSceneReplayTrack) == 0x000008, "Wrong alignment on UMovieSceneReplayTrack");
//static_assert(sizeof(UMovieSceneReplayTrack) == 0x0000B0, "Wrong size on UMovieSceneReplayTrack");
//static_assert(offsetof(UMovieSceneReplayTrack, Sections) == 0x0000A0, "Member 'UMovieSceneReplayTrack::Sections' has a wrong offset!");

}


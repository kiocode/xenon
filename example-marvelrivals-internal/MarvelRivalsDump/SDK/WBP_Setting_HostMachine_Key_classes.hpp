#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Setting_HostMachine_Key

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "PyWidget_SettingMiniKeyboard_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Setting_HostMachine_Key.WBP_Setting_HostMachine_Key_C
// 0x0270 (0x08F0 - 0x0680)
class UWBP_Setting_HostMachine_Key_C final : public UPyWidget_MiniHost
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Press;                                        // 0x0688(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UMarvelHorizontalBox*                   HBox_Centent;                                      // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Icon_Key_Left;                                     // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Icon_Key_Left_Press;                               // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Icon_Key_Right;                                    // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Icon_Key_Right_Press;                              // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_KeyBg_Combine;                                 // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_KeyBg_Conflict;                                // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_KeyBg_Hover;                                   // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_KeyBg_Normal;                                  // 0x06D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Icon_Left;                                 // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Icon_Right;                                // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_text;                                      // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_Key;                                          // 0x06F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ____;                                              // 0x06F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            UnchangedColor;                                    // 0x0710(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsShowLeft;                                        // 0x0724(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsShowRight;                                       // 0x0725(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsShowMask;                                        // 0x0726(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_727[0x9];                                      // 0x0727(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ___;                                               // 0x0730(0x00D0)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateBrush                            ____0;                                             // 0x0800(0x00D0)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          ______;                                            // 0x08D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x3];                                      // 0x08D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            ChangedColor;                                      // 0x08D4(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void _6____();
	void _6_____0();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_WBP_Setting_HostMachine_Key(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Setting_HostMachine_Key_C">();
	}
	static class UWBP_Setting_HostMachine_Key_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Setting_HostMachine_Key_C>();
	}
};
////static_assert(alignof(UWBP_Setting_HostMachine_Key_C) == 0x000010, "Wrong alignment on UWBP_Setting_HostMachine_Key_C");
////static_assert(sizeof(UWBP_Setting_HostMachine_Key_C) == 0x0008F0, "Wrong size on UWBP_Setting_HostMachine_Key_C");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, UberGraphFrame) == 0x000680, "Member 'UWBP_Setting_HostMachine_Key_C::UberGraphFrame' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Anim_Press) == 0x000688, "Member 'UWBP_Setting_HostMachine_Key_C::Anim_Press' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, HBox_Centent) == 0x000690, "Member 'UWBP_Setting_HostMachine_Key_C::HBox_Centent' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Icon_Key_Left) == 0x000698, "Member 'UWBP_Setting_HostMachine_Key_C::Icon_Key_Left' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Icon_Key_Left_Press) == 0x0006A0, "Member 'UWBP_Setting_HostMachine_Key_C::Icon_Key_Left_Press' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Icon_Key_Right) == 0x0006A8, "Member 'UWBP_Setting_HostMachine_Key_C::Icon_Key_Right' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Icon_Key_Right_Press) == 0x0006B0, "Member 'UWBP_Setting_HostMachine_Key_C::Icon_Key_Right_Press' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Img_KeyBg_Combine) == 0x0006B8, "Member 'UWBP_Setting_HostMachine_Key_C::Img_KeyBg_Combine' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Img_KeyBg_Conflict) == 0x0006C0, "Member 'UWBP_Setting_HostMachine_Key_C::Img_KeyBg_Conflict' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Img_KeyBg_Hover) == 0x0006C8, "Member 'UWBP_Setting_HostMachine_Key_C::Img_KeyBg_Hover' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Img_KeyBg_Normal) == 0x0006D0, "Member 'UWBP_Setting_HostMachine_Key_C::Img_KeyBg_Normal' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, SizeBox_Icon_Left) == 0x0006D8, "Member 'UWBP_Setting_HostMachine_Key_C::SizeBox_Icon_Left' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, SizeBox_Icon_Right) == 0x0006E0, "Member 'UWBP_Setting_HostMachine_Key_C::SizeBox_Icon_Right' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, SizeBox_text) == 0x0006E8, "Member 'UWBP_Setting_HostMachine_Key_C::SizeBox_text' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, Text_Key) == 0x0006F0, "Member 'UWBP_Setting_HostMachine_Key_C::Text_Key' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, ____) == 0x0006F8, "Member 'UWBP_Setting_HostMachine_Key_C::____' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, UnchangedColor) == 0x000710, "Member 'UWBP_Setting_HostMachine_Key_C::UnchangedColor' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, IsShowLeft) == 0x000724, "Member 'UWBP_Setting_HostMachine_Key_C::IsShowLeft' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, IsShowRight) == 0x000725, "Member 'UWBP_Setting_HostMachine_Key_C::IsShowRight' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, IsShowMask) == 0x000726, "Member 'UWBP_Setting_HostMachine_Key_C::IsShowMask' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, ___) == 0x000730, "Member 'UWBP_Setting_HostMachine_Key_C::___' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, ____0) == 0x000800, "Member 'UWBP_Setting_HostMachine_Key_C::____0' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, ______) == 0x0008D0, "Member 'UWBP_Setting_HostMachine_Key_C::______' has a wrong offset!");
////static_assert(offsetof(UWBP_Setting_HostMachine_Key_C, ChangedColor) == 0x0008D4, "Member 'UWBP_Setting_HostMachine_Key_C::ChangedColor' has a wrong offset!");

}


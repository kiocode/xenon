#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelTrainingEntryController

#include "Basic.hpp"

#include "PyLevelTrainingEntryController_classes.hpp"
#include "PyLevelTrainingEntryController_parameters.hpp"


namespace SDK
{

// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.ReceiveInit
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void APyTrainingEntryController::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "ReceiveInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.OnRep_IsPlaying
// (Native, Public, BlueprintCallable)

void APyTrainingEntryController::OnRep_IsPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "OnRep_IsPlaying");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.TrainingEntryActivate
// (Native, Public, BlueprintCallable)

void APyTrainingEntryController::TrainingEntryActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "TrainingEntryActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.OnTrainingEntryStartPlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APyTrainingEntryController::OnTrainingEntryStartPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "OnTrainingEntryStartPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.TrainingEntryEndPlay
// (Native, Public, BlueprintCallable)

void APyTrainingEntryController::TrainingEntryEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "TrainingEntryEndPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.PlayLevelSequence
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::PlayLevelSequence(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "PlayLevelSequence");

	Params::PyTrainingEntryController_PlayLevelSequence Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.OnLevelSequenceEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::OnLevelSequenceEnd(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "OnLevelSequenceEnd");

	Params::PyTrainingEntryController_OnLevelSequenceEnd Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.PostVoice
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::PostVoice(int32 VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "PostVoice");

	Params::PyTrainingEntryController_PostVoice Parms{};

	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.OnVoiceEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::OnVoiceEnd(int32 VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "OnVoiceEnd");

	Params::PyTrainingEntryController_OnVoiceEnd Parms{};

	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.ShowUITask
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             TaskContent                                            (Parm)

void APyTrainingEntryController::ShowUITask(const class FText& TaskContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "ShowUITask");

	Params::PyTrainingEntryController_ShowUITask Parms{};

	Parms.TaskContent = std::move(TaskContent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.HideUITask
// (Native, Public, BlueprintCallable)

void APyTrainingEntryController::HideUITask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "HideUITask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.ListenLevelSequenceAndVoiceEnd
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::ListenLevelSequenceAndVoiceEnd(int32 SequenceIndex, int32 VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "ListenLevelSequenceAndVoiceEnd");

	Params::PyTrainingEntryController_ListenLevelSequenceAndVoiceEnd Parms{};

	Parms.SequenceIndex = SequenceIndex;
	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.SpawnEnrtyActor
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::SpawnEnrtyActor(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "SpawnEnrtyActor");

	Params::PyTrainingEntryController_SpawnEnrtyActor Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.DestroyEnrtyActor
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::DestroyEnrtyActor(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "DestroyEnrtyActor");

	Params::PyTrainingEntryController_DestroyEnrtyActor Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.OnVoiceAndLevelSequenceEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SequenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   VoiceID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APyTrainingEntryController::OnVoiceAndLevelSequenceEnd(int32 SequenceIndex, int32 VoiceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "OnVoiceAndLevelSequenceEnd");

	Params::PyTrainingEntryController_OnVoiceAndLevelSequenceEnd Parms{};

	Parms.SequenceIndex = SequenceIndex;
	Parms.VoiceID = VoiceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.TriggerChaosDestruction
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyTrainingEntryController::TriggerChaosDestruction(const class FString& ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "TriggerChaosDestruction");

	Params::PyTrainingEntryController_TriggerChaosDestruction Parms{};

	Parms.ActorName = std::move(ActorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelTrainingEntryController.PyTrainingEntryController.TriggerChaosRecovery
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void APyTrainingEntryController::TriggerChaosRecovery(const class FString& ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PyTrainingEntryController", "TriggerChaosRecovery");

	Params::PyTrainingEntryController_TriggerChaosRecovery Parms{};

	Parms.ActorName = std::move(ActorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}


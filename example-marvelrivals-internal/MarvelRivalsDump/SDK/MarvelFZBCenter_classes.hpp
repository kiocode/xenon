#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarvelFZBCenter

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class MarvelFZBCenter.ClientComputeFactory
// 0x0090 (0x00C0 - 0x0030)
class alignas(0x10) UClientComputeFactory final : public UObject
{
public:
	uint8                                         Pad_30[0x4];                                       // 0x0030(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastTickTime;                                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNNEModelData*                          ModelData;                                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x80];                                      // 0x0040(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClientComputeFactory">();
	}
	static class UClientComputeFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClientComputeFactory>();
	}
};
static_assert(alignof(UClientComputeFactory) == 0x000010, "Wrong alignment on UClientComputeFactory");
static_assert(sizeof(UClientComputeFactory) == 0x0000C0, "Wrong size on UClientComputeFactory");
static_assert(offsetof(UClientComputeFactory, LastTickTime) == 0x000034, "Member 'UClientComputeFactory::LastTickTime' has a wrong offset!");
static_assert(offsetof(UClientComputeFactory, ModelData) == 0x000038, "Member 'UClientComputeFactory::ModelData' has a wrong offset!");

// Class MarvelFZBCenter.MarvelFZBSubsystem
// 0x0010 (0x0048 - 0x0038)
class UMarvelFZBSubsystem final : public UWorldSubsystem
{
public:
	TWeakObjectPtr<class UWorld>                  CurrentWorld;                                      // 0x0038(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClientComputeFactory*                  ClientComputeFactory;                              // 0x0040(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnEnterGameRound();
	void OnMatchStateChange(EMatchState InMatchState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MarvelFZBSubsystem">();
	}
	static class UMarvelFZBSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMarvelFZBSubsystem>();
	}
};
static_assert(alignof(UMarvelFZBSubsystem) == 0x000008, "Wrong alignment on UMarvelFZBSubsystem");
static_assert(sizeof(UMarvelFZBSubsystem) == 0x000048, "Wrong size on UMarvelFZBSubsystem");
static_assert(offsetof(UMarvelFZBSubsystem, CurrentWorld) == 0x000038, "Member 'UMarvelFZBSubsystem::CurrentWorld' has a wrong offset!");
static_assert(offsetof(UMarvelFZBSubsystem, ClientComputeFactory) == 0x000040, "Member 'UMarvelFZBSubsystem::ClientComputeFactory' has a wrong offset!");

}


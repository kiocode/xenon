#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyShowActorControl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Python_enums_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// PythonClass PyShowActorControl.PyShowActorControl
// 0x01B8 (0x0648 - 0x0490)
class APyShowActorControl : public AShowActorControl
{
public:
	bool                                          IsDisableAllCameras;                               // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsOnlyUseOwnCamera;                                // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TurnCameraGaze;                                    // 0x0492(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseCameraBlur;                                     // 0x0493(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraAperture;                                    // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraFocusSmoothingInterpSpeed;                   // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CameraBlurRelativeOffset;                          // 0x04A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESceneCaptureCameraType                       SC_CameraType;                                     // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESceneCapturePrimitiveRenderMode              SC_PrimitiveRenderMode;                            // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BA[0x2];                                      // 0x04BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SC_RTSizeMultiple;                                 // 0x04BC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SC_RtScale;                                        // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SC_NeedCalculateViewportOffset;                    // 0x04D0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SC_MaxViewPortSize;                                // 0x04D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SC_FixedSizeAndFov;                                // 0x04D8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          VisibleInSceneCaptureOnly;                         // 0x04D9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAutoClearRenderTarget;                           // 0x04DA(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget*                   CachedHeroRT;                                      // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoPlayTime;                                      // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPlayShowAnim;                                    // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAutoPlay;                                        // 0x04ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsUpdateAnimation;                                 // 0x04EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnimationMode                                AnimationMode;                                     // 0x04EF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EShowBPLightType                              ShowBPLightType;                                   // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LightMaskBoxOn;                                    // 0x04F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnabledPhysics;                                  // 0x04F2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAutoPlayHeroVoice;                               // 0x04F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnabledPostProcess;                              // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UVOffset;                                          // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialParameterCollection*           MPC_Background;                                    // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAnglePerSecond;                                 // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorRotationSpeed;                                // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorDefaultRotationYaw;                           // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAutoPlaySwitchEffect;                            // 0x0514(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsWaitExtraAssetLoaded;                            // 0x0515(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLoadHeroGalleryAsset;                            // 0x0516(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnableMouseEvents;                               // 0x0517(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExtensionID;                                       // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETickingGroup                                 ShowActorTickGroup;                                // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CurActorClass;                                     // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EShowActorStage                               DefaultShowActorStage;                             // 0x0528(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EShowActorResType                             ShowActorResType;                                  // 0x0529(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        DefaultScene;                                      // 0x0530(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        SC_Scene;                                          // 0x0538(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 MainMesh;                                          // 0x0540(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraComponent*                      NS_SwitchHero;                                     // 0x0548(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        CameraScene;                                       // 0x0550(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChildActorComponent*                   SH_Stand_Camera;                                   // 0x0558(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChildActorComponent*                   SH_Half_Camera;                                    // 0x0560(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*               SceneCapture2D;                                    // 0x0568(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                  PostProcessComponent;                              // 0x0570(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLoadShowActorFinish;                             // 0x0578(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnViewShowActorChanged;                            // 0x0588(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnViewShowActorVisibleChanged;                     // 0x0598(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRotationShowActor;                               // 0x05A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnIsHalfChanged;                                   // 0x05B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnTextureTargetChanged;                            // 0x05C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnReceiveEndPlay;                                  // 0x05D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPlayHoverStandFinished;                          // 0x05E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnShowActorClicked;                                // 0x05F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnShowActorHovered;                                // 0x0608(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnShowActorToggleHalf;                             // 0x0618(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnShowActorStageChanged;                           // 0x0628(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPlayIdleAnim;                                    // 0x0638(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void SetIsRotationShowActor(bool IsRotationShowActor);
	void PlayHoverStandFinished();
	void LoadShowActorAssetFinished(class AActor* ShowActor);
	void LoadShowActor(const TArray<class UObject*>& Assets);
	void ShowHeroActor(int32 HeroID, int32 SkinID, int32 ShapeID);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnPlayIdleAnim__DelegateSignature(bool IsPlayIdleAnim);
	void OnShowActorStageChanged__DelegateSignature(EShowActorStage ShowActorStage);
	void OnShowActorToggleHalf__DelegateSignature(bool IsToggleHal);
	void OnShowActorHovered__DelegateSignature(bool IsHovered);
	void OnShowActorClicked__DelegateSignature();
	void OnPlayHoverStandFinished__DelegateSignature();
	void OnReceiveEndPlay__DelegateSignature(class AActor* ShowActorControl);
	void OnTextureTargetChanged__DelegateSignature(class UTextureRenderTarget* TextureTarget, const struct FVector2D& ViewportSize);
	void OnIsHalfChanged__DelegateSignature(bool IsToggleHalf);
	void OnRotationShowActor__DelegateSignature(bool IsSuccess, float Angle);
	void OnViewShowActorVisibleChanged__DelegateSignature(bool bVisible);
	void OnViewShowActorChanged__DelegateSignature(class AActor* ShowBP);
	void OnLoadShowActorFinish__DelegateSignature(class AActor* ShowBP);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyShowActorControl">();
	}
	static class APyShowActorControl* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyShowActorControl>();
	}
};
static_assert(alignof(APyShowActorControl) == 0x000008, "Wrong alignment on APyShowActorControl");
static_assert(sizeof(APyShowActorControl) == 0x000648, "Wrong size on APyShowActorControl");
static_assert(offsetof(APyShowActorControl, IsDisableAllCameras) == 0x000490, "Member 'APyShowActorControl::IsDisableAllCameras' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsOnlyUseOwnCamera) == 0x000491, "Member 'APyShowActorControl::IsOnlyUseOwnCamera' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, TurnCameraGaze) == 0x000492, "Member 'APyShowActorControl::TurnCameraGaze' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, UseCameraBlur) == 0x000493, "Member 'APyShowActorControl::UseCameraBlur' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, CameraAperture) == 0x000494, "Member 'APyShowActorControl::CameraAperture' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, CameraFocusSmoothingInterpSpeed) == 0x000498, "Member 'APyShowActorControl::CameraFocusSmoothingInterpSpeed' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, CameraBlurRelativeOffset) == 0x0004A0, "Member 'APyShowActorControl::CameraBlurRelativeOffset' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_CameraType) == 0x0004B8, "Member 'APyShowActorControl::SC_CameraType' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_PrimitiveRenderMode) == 0x0004B9, "Member 'APyShowActorControl::SC_PrimitiveRenderMode' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_RTSizeMultiple) == 0x0004BC, "Member 'APyShowActorControl::SC_RTSizeMultiple' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_RtScale) == 0x0004C0, "Member 'APyShowActorControl::SC_RtScale' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_NeedCalculateViewportOffset) == 0x0004D0, "Member 'APyShowActorControl::SC_NeedCalculateViewportOffset' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_MaxViewPortSize) == 0x0004D4, "Member 'APyShowActorControl::SC_MaxViewPortSize' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_FixedSizeAndFov) == 0x0004D8, "Member 'APyShowActorControl::SC_FixedSizeAndFov' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, VisibleInSceneCaptureOnly) == 0x0004D9, "Member 'APyShowActorControl::VisibleInSceneCaptureOnly' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsAutoClearRenderTarget) == 0x0004DA, "Member 'APyShowActorControl::IsAutoClearRenderTarget' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, CachedHeroRT) == 0x0004E0, "Member 'APyShowActorControl::CachedHeroRT' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, AutoPlayTime) == 0x0004E8, "Member 'APyShowActorControl::AutoPlayTime' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsPlayShowAnim) == 0x0004EC, "Member 'APyShowActorControl::IsPlayShowAnim' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsAutoPlay) == 0x0004ED, "Member 'APyShowActorControl::IsAutoPlay' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsUpdateAnimation) == 0x0004EE, "Member 'APyShowActorControl::IsUpdateAnimation' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, AnimationMode) == 0x0004EF, "Member 'APyShowActorControl::AnimationMode' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, ShowBPLightType) == 0x0004F0, "Member 'APyShowActorControl::ShowBPLightType' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, LightMaskBoxOn) == 0x0004F1, "Member 'APyShowActorControl::LightMaskBoxOn' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsEnabledPhysics) == 0x0004F2, "Member 'APyShowActorControl::IsEnabledPhysics' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsAutoPlayHeroVoice) == 0x0004F3, "Member 'APyShowActorControl::IsAutoPlayHeroVoice' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsEnabledPostProcess) == 0x0004F4, "Member 'APyShowActorControl::IsEnabledPostProcess' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, UVOffset) == 0x0004F8, "Member 'APyShowActorControl::UVOffset' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, MPC_Background) == 0x000500, "Member 'APyShowActorControl::MPC_Background' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, MaxAnglePerSecond) == 0x000508, "Member 'APyShowActorControl::MaxAnglePerSecond' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, ActorRotationSpeed) == 0x00050C, "Member 'APyShowActorControl::ActorRotationSpeed' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, ActorDefaultRotationYaw) == 0x000510, "Member 'APyShowActorControl::ActorDefaultRotationYaw' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsAutoPlaySwitchEffect) == 0x000514, "Member 'APyShowActorControl::IsAutoPlaySwitchEffect' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsWaitExtraAssetLoaded) == 0x000515, "Member 'APyShowActorControl::IsWaitExtraAssetLoaded' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsLoadHeroGalleryAsset) == 0x000516, "Member 'APyShowActorControl::IsLoadHeroGalleryAsset' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, IsEnableMouseEvents) == 0x000517, "Member 'APyShowActorControl::IsEnableMouseEvents' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, ExtensionID) == 0x000518, "Member 'APyShowActorControl::ExtensionID' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, ShowActorTickGroup) == 0x00051C, "Member 'APyShowActorControl::ShowActorTickGroup' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, CurActorClass) == 0x000520, "Member 'APyShowActorControl::CurActorClass' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, DefaultShowActorStage) == 0x000528, "Member 'APyShowActorControl::DefaultShowActorStage' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, ShowActorResType) == 0x000529, "Member 'APyShowActorControl::ShowActorResType' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, DefaultScene) == 0x000530, "Member 'APyShowActorControl::DefaultScene' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SC_Scene) == 0x000538, "Member 'APyShowActorControl::SC_Scene' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, MainMesh) == 0x000540, "Member 'APyShowActorControl::MainMesh' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, NS_SwitchHero) == 0x000548, "Member 'APyShowActorControl::NS_SwitchHero' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, CameraScene) == 0x000550, "Member 'APyShowActorControl::CameraScene' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SH_Stand_Camera) == 0x000558, "Member 'APyShowActorControl::SH_Stand_Camera' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SH_Half_Camera) == 0x000560, "Member 'APyShowActorControl::SH_Half_Camera' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, SceneCapture2D) == 0x000568, "Member 'APyShowActorControl::SceneCapture2D' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, PostProcessComponent) == 0x000570, "Member 'APyShowActorControl::PostProcessComponent' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnLoadShowActorFinish) == 0x000578, "Member 'APyShowActorControl::OnLoadShowActorFinish' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnViewShowActorChanged) == 0x000588, "Member 'APyShowActorControl::OnViewShowActorChanged' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnViewShowActorVisibleChanged) == 0x000598, "Member 'APyShowActorControl::OnViewShowActorVisibleChanged' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnRotationShowActor) == 0x0005A8, "Member 'APyShowActorControl::OnRotationShowActor' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnIsHalfChanged) == 0x0005B8, "Member 'APyShowActorControl::OnIsHalfChanged' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnTextureTargetChanged) == 0x0005C8, "Member 'APyShowActorControl::OnTextureTargetChanged' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnReceiveEndPlay) == 0x0005D8, "Member 'APyShowActorControl::OnReceiveEndPlay' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnPlayHoverStandFinished) == 0x0005E8, "Member 'APyShowActorControl::OnPlayHoverStandFinished' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnShowActorClicked) == 0x0005F8, "Member 'APyShowActorControl::OnShowActorClicked' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnShowActorHovered) == 0x000608, "Member 'APyShowActorControl::OnShowActorHovered' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnShowActorToggleHalf) == 0x000618, "Member 'APyShowActorControl::OnShowActorToggleHalf' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnShowActorStageChanged) == 0x000628, "Member 'APyShowActorControl::OnShowActorStageChanged' has a wrong offset!");
static_assert(offsetof(APyShowActorControl, OnPlayIdleAnim) == 0x000638, "Member 'APyShowActorControl::OnPlayIdleAnim' has a wrong offset!");

}


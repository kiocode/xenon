#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scalability

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass Scalability.UISettingEntryViewDistanceQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryViewDistanceQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryViewDistanceQuality">();
	}
	static class UUISettingEntryViewDistanceQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryViewDistanceQuality>();
	}
};
//static_assert(alignof(UUISettingEntryViewDistanceQuality) == 0x000008, "Wrong alignment on UUISettingEntryViewDistanceQuality");
//static_assert(sizeof(UUISettingEntryViewDistanceQuality) == 0x000030, "Wrong size on UUISettingEntryViewDistanceQuality");

// PythonClass Scalability.UISettingEntryScalabilityGenerator
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryScalabilityGenerator final : public UUISettingEntryOptionsGenerator
{
public:
	TMap<int32, class FText> BP_Gen(class UObject* Obj, const class FString& Setting_key, const TMap<int32, class FText>& OPTIONS);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryScalabilityGenerator">();
	}
	static class UUISettingEntryScalabilityGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryScalabilityGenerator>();
	}
};
//static_assert(alignof(UUISettingEntryScalabilityGenerator) == 0x000008, "Wrong alignment on UUISettingEntryScalabilityGenerator");
//static_assert(sizeof(UUISettingEntryScalabilityGenerator) == 0x000030, "Wrong size on UUISettingEntryScalabilityGenerator");

// PythonClass Scalability.UISettingEntryScalabilityHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryScalabilityHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryScalabilityHandler">();
	}
	static class UUISettingEntryScalabilityHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryScalabilityHandler>();
	}
};
//static_assert(alignof(UUISettingEntryScalabilityHandler) == 0x000008, "Wrong alignment on UUISettingEntryScalabilityHandler");
//static_assert(sizeof(UUISettingEntryScalabilityHandler) == 0x000030, "Wrong size on UUISettingEntryScalabilityHandler");

// PythonClass Scalability.UISettingEntryShadowQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryShadowQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryShadowQuality">();
	}
	static class UUISettingEntryShadowQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryShadowQuality>();
	}
};
//static_assert(alignof(UUISettingEntryShadowQuality) == 0x000008, "Wrong alignment on UUISettingEntryShadowQuality");
//static_assert(sizeof(UUISettingEntryShadowQuality) == 0x000030, "Wrong size on UUISettingEntryShadowQuality");

// PythonClass Scalability.UISettingEntryGlobalIlluminationQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryGlobalIlluminationQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryGlobalIlluminationQuality">();
	}
	static class UUISettingEntryGlobalIlluminationQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryGlobalIlluminationQuality>();
	}
};
//static_assert(alignof(UUISettingEntryGlobalIlluminationQuality) == 0x000008, "Wrong alignment on UUISettingEntryGlobalIlluminationQuality");
//static_assert(sizeof(UUISettingEntryGlobalIlluminationQuality) == 0x000030, "Wrong size on UUISettingEntryGlobalIlluminationQuality");

// PythonClass Scalability.UISettingEntryReflectionQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryReflectionQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryReflectionQuality">();
	}
	static class UUISettingEntryReflectionQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryReflectionQuality>();
	}
};
//static_assert(alignof(UUISettingEntryReflectionQuality) == 0x000008, "Wrong alignment on UUISettingEntryReflectionQuality");
//static_assert(sizeof(UUISettingEntryReflectionQuality) == 0x000030, "Wrong size on UUISettingEntryReflectionQuality");

// PythonClass Scalability.UISettingEntryTextureQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryTextureQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryTextureQuality">();
	}
	static class UUISettingEntryTextureQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryTextureQuality>();
	}
};
//static_assert(alignof(UUISettingEntryTextureQuality) == 0x000008, "Wrong alignment on UUISettingEntryTextureQuality");
//static_assert(sizeof(UUISettingEntryTextureQuality) == 0x000030, "Wrong size on UUISettingEntryTextureQuality");

// PythonClass Scalability.UISettingEntryVisualEffectQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryVisualEffectQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryVisualEffectQuality">();
	}
	static class UUISettingEntryVisualEffectQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryVisualEffectQuality>();
	}
};
//static_assert(alignof(UUISettingEntryVisualEffectQuality) == 0x000008, "Wrong alignment on UUISettingEntryVisualEffectQuality");
//static_assert(sizeof(UUISettingEntryVisualEffectQuality) == 0x000030, "Wrong size on UUISettingEntryVisualEffectQuality");

// PythonClass Scalability.UISettingEntryPostProcessingQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryPostProcessingQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryPostProcessingQuality">();
	}
	static class UUISettingEntryPostProcessingQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryPostProcessingQuality>();
	}
};
//static_assert(alignof(UUISettingEntryPostProcessingQuality) == 0x000008, "Wrong alignment on UUISettingEntryPostProcessingQuality");
//static_assert(sizeof(UUISettingEntryPostProcessingQuality) == 0x000030, "Wrong size on UUISettingEntryPostProcessingQuality");

// PythonClass Scalability.UISettingEntryFoliageQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryFoliageQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryFoliageQuality">();
	}
	static class UUISettingEntryFoliageQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryFoliageQuality>();
	}
};
//static_assert(alignof(UUISettingEntryFoliageQuality) == 0x000008, "Wrong alignment on UUISettingEntryFoliageQuality");
//static_assert(sizeof(UUISettingEntryFoliageQuality) == 0x000030, "Wrong size on UUISettingEntryFoliageQuality");

// PythonClass Scalability.UISettingEntryShadingQuality
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryShadingQuality final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryShadingQuality">();
	}
	static class UUISettingEntryShadingQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryShadingQuality>();
	}
};
//static_assert(alignof(UUISettingEntryShadingQuality) == 0x000008, "Wrong alignment on UUISettingEntryShadingQuality");
//static_assert(sizeof(UUISettingEntryShadingQuality) == 0x000030, "Wrong size on UUISettingEntryShadingQuality");

// PythonClass Scalability.UISettingEntryAntiAliasingQualityHandler
// 0x0000 (0x0030 - 0x0030)
class UUISettingEntryAntiAliasingQualityHandler final : public UUISettingEntrySettingHandler
{
public:
	void BP_OnApply(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& OPTIONS, float Value);
	float BP_GetCurrentValue(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& P, const TMap<int32, class FText>& O);
	TMap<class FString, int32> BP_OnChanged(class UObject* Obj, const class FString& Setting_key, const TMap<class FString, class FString>& Params_0, const TMap<int32, class FText>& OPTIONS, float Value, const TMap<class FString, int32>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UISettingEntryAntiAliasingQualityHandler">();
	}
	static class UUISettingEntryAntiAliasingQualityHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUISettingEntryAntiAliasingQualityHandler>();
	}
};
//static_assert(alignof(UUISettingEntryAntiAliasingQualityHandler) == 0x000008, "Wrong alignment on UUISettingEntryAntiAliasingQualityHandler");
//static_assert(sizeof(UUISettingEntryAntiAliasingQualityHandler) == 0x000030, "Wrong size on UUISettingEntryAntiAliasingQualityHandler");

}


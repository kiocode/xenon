#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104761

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Marvel_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_104761.PyUIController_104761.SetAbility
// 0x0010 (0x0010 - 0x0000)
struct PyUIController_104761_SetAbility final
{
public:
	int32                                         InAbilityId;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       InAbility;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyUIController_104761_SetAbility) == 0x000008, "Wrong alignment on PyUIController_104761_SetAbility");
static_assert(sizeof(PyUIController_104761_SetAbility) == 0x000010, "Wrong size on PyUIController_104761_SetAbility");
static_assert(offsetof(PyUIController_104761_SetAbility, InAbilityId) == 0x000000, "Member 'PyUIController_104761_SetAbility::InAbilityId' has a wrong offset!");
static_assert(offsetof(PyUIController_104761_SetAbility, InAbility) == 0x000008, "Member 'PyUIController_104761_SetAbility::InAbility' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.ServerSetAbilityState
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_104761_New_ServerSetAbilityState final
{
public:
	int32                                         PredictionSerial;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AbilityState;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104761_New_ServerSetAbilityState) == 0x000004, "Wrong alignment on PyAbility_104761_New_ServerSetAbilityState");
static_assert(sizeof(PyAbility_104761_New_ServerSetAbilityState) == 0x000008, "Wrong size on PyAbility_104761_New_ServerSetAbilityState");
static_assert(offsetof(PyAbility_104761_New_ServerSetAbilityState, PredictionSerial) == 0x000000, "Member 'PyAbility_104761_New_ServerSetAbilityState::PredictionSerial' has a wrong offset!");
static_assert(offsetof(PyAbility_104761_New_ServerSetAbilityState, AbilityState) == 0x000004, "Member 'PyAbility_104761_New_ServerSetAbilityState::AbilityState' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.ClientSetAbilityState
// 0x0008 (0x0008 - 0x0000)
struct PyAbility_104761_New_ClientSetAbilityState final
{
public:
	int32                                         PredictionSerial;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AbilityState;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104761_New_ClientSetAbilityState) == 0x000004, "Wrong alignment on PyAbility_104761_New_ClientSetAbilityState");
static_assert(sizeof(PyAbility_104761_New_ClientSetAbilityState) == 0x000008, "Wrong size on PyAbility_104761_New_ClientSetAbilityState");
static_assert(offsetof(PyAbility_104761_New_ClientSetAbilityState, PredictionSerial) == 0x000000, "Member 'PyAbility_104761_New_ClientSetAbilityState::PredictionSerial' has a wrong offset!");
static_assert(offsetof(PyAbility_104761_New_ClientSetAbilityState, AbilityState) == 0x000004, "Member 'PyAbility_104761_New_ClientSetAbilityState::AbilityState' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.TryMakeTriggerContext
// 0x0298 (0x0298 - 0x0000)
struct PyAbility_104761_New_TryMakeTriggerContext final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104761_New_TryMakeTriggerContext) == 0x000008, "Wrong alignment on PyAbility_104761_New_TryMakeTriggerContext");
static_assert(sizeof(PyAbility_104761_New_TryMakeTriggerContext) == 0x000298, "Wrong size on PyAbility_104761_New_TryMakeTriggerContext");
static_assert(offsetof(PyAbility_104761_New_TryMakeTriggerContext, EventData) == 0x000000, "Member 'PyAbility_104761_New_TryMakeTriggerContext::EventData' has a wrong offset!");
static_assert(offsetof(PyAbility_104761_New_TryMakeTriggerContext, ReturnValue) == 0x000290, "Member 'PyAbility_104761_New_TryMakeTriggerContext::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.K2_ActivateAbilityFromEvent
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_104761_New_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104761_New_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on PyAbility_104761_New_K2_ActivateAbilityFromEvent");
static_assert(sizeof(PyAbility_104761_New_K2_ActivateAbilityFromEvent) == 0x000290, "Wrong size on PyAbility_104761_New_K2_ActivateAbilityFromEvent");
static_assert(offsetof(PyAbility_104761_New_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'PyAbility_104761_New_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.OnWallRunningEnd
// 0x0020 (0x0020 - 0x0000)
struct PyAbility_104761_New_OnWallRunningEnd final
{
public:
	struct FWallRunningEndInfo                    InWallRunningEndInfo;                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(PyAbility_104761_New_OnWallRunningEnd) == 0x000008, "Wrong alignment on PyAbility_104761_New_OnWallRunningEnd");
static_assert(sizeof(PyAbility_104761_New_OnWallRunningEnd) == 0x000020, "Wrong size on PyAbility_104761_New_OnWallRunningEnd");
static_assert(offsetof(PyAbility_104761_New_OnWallRunningEnd, InWallRunningEndInfo) == 0x000000, "Member 'PyAbility_104761_New_OnWallRunningEnd::InWallRunningEndInfo' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.OnJeffDivingUIWindowStateChanged
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104761_New_OnJeffDivingUIWindowStateChanged final
{
public:
	bool                                          IsWindowOpen;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104761_New_OnJeffDivingUIWindowStateChanged) == 0x000001, "Wrong alignment on PyAbility_104761_New_OnJeffDivingUIWindowStateChanged");
static_assert(sizeof(PyAbility_104761_New_OnJeffDivingUIWindowStateChanged) == 0x000001, "Wrong size on PyAbility_104761_New_OnJeffDivingUIWindowStateChanged");
static_assert(offsetof(PyAbility_104761_New_OnJeffDivingUIWindowStateChanged, IsWindowOpen) == 0x000000, "Member 'PyAbility_104761_New_OnJeffDivingUIWindowStateChanged::IsWindowOpen' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104761_New_OnMovementModeChanged final
{
public:
	class ACharacter*                             Char;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Pre;                                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Precustom;                                         // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104761_New_OnMovementModeChanged) == 0x000008, "Wrong alignment on PyAbility_104761_New_OnMovementModeChanged");
static_assert(sizeof(PyAbility_104761_New_OnMovementModeChanged) == 0x000010, "Wrong size on PyAbility_104761_New_OnMovementModeChanged");
static_assert(offsetof(PyAbility_104761_New_OnMovementModeChanged, Char) == 0x000000, "Member 'PyAbility_104761_New_OnMovementModeChanged::Char' has a wrong offset!");
static_assert(offsetof(PyAbility_104761_New_OnMovementModeChanged, Pre) == 0x000008, "Member 'PyAbility_104761_New_OnMovementModeChanged::Pre' has a wrong offset!");
static_assert(offsetof(PyAbility_104761_New_OnMovementModeChanged, Precustom) == 0x000009, "Member 'PyAbility_104761_New_OnMovementModeChanged::Precustom' has a wrong offset!");

// PythonFunction PyAbility_104761.PyAbility_104761_New.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104761_New_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104761_New_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_104761_New_K2_OnEndAbility");
static_assert(sizeof(PyAbility_104761_New_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_104761_New_K2_OnEndAbility");
static_assert(offsetof(PyAbility_104761_New_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_104761_New_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LimitTimeTrainComputer

#include "Basic.hpp"

#include "PyWidget_Training_TerminalIndicator_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LimitTimeTrainComputer.WBP_LimitTimeTrainComputer_C
// 0x0040 (0x0900 - 0x08C0)
class UWBP_LimitTimeTrainComputer_C final : public UPywidget_Traning_LimitTimeTraning_Indicator
{
public:
	class UWidgetAnimation*                       Anim_Active;                                       // 0x08B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UMarvelImage*                           Img_Icon_Activate_Add;                             // 0x08C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_Icon_Activate_Bg;                              // 0x08C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_Icon_Normal_Add;                               // 0x08D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_Icon_Normal_Bg;                                // 0x08D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelOverlay*                         Overlay_Icon_Activate;                             // 0x08E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelOverlay*                         Overlay_Icon_Normal;                               // 0x08E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_TerminalName;                                 // 0x08F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LimitTimeTrainComputer_C">();
	}
	static class UWBP_LimitTimeTrainComputer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LimitTimeTrainComputer_C>();
	}
};
////static_assert(alignof(UWBP_LimitTimeTrainComputer_C) == 0x000010, "Wrong alignment on UWBP_LimitTimeTrainComputer_C");
////static_assert(sizeof(UWBP_LimitTimeTrainComputer_C) == 0x000900, "Wrong size on UWBP_LimitTimeTrainComputer_C");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Anim_Active) == 0x0008B8, "Member 'UWBP_LimitTimeTrainComputer_C::Anim_Active' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Img_Icon_Activate_Add) == 0x0008C0, "Member 'UWBP_LimitTimeTrainComputer_C::Img_Icon_Activate_Add' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Img_Icon_Activate_Bg) == 0x0008C8, "Member 'UWBP_LimitTimeTrainComputer_C::Img_Icon_Activate_Bg' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Img_Icon_Normal_Add) == 0x0008D0, "Member 'UWBP_LimitTimeTrainComputer_C::Img_Icon_Normal_Add' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Img_Icon_Normal_Bg) == 0x0008D8, "Member 'UWBP_LimitTimeTrainComputer_C::Img_Icon_Normal_Bg' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Overlay_Icon_Activate) == 0x0008E0, "Member 'UWBP_LimitTimeTrainComputer_C::Overlay_Icon_Activate' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Overlay_Icon_Normal) == 0x0008E8, "Member 'UWBP_LimitTimeTrainComputer_C::Overlay_Icon_Normal' has a wrong offset!");
////static_assert(offsetof(UWBP_LimitTimeTrainComputer_C, Text_TerminalName) == 0x0008F0, "Member 'UWBP_LimitTimeTrainComputer_C::Text_TerminalName' has a wrong offset!");

}


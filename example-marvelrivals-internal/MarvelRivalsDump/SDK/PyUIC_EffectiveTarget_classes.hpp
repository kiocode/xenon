#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyUIC_EffectiveTarget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Marvel_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// PythonClass PyUIC_EffectiveTarget.PyWidget_EffectiveTarget
// 0x0008 (0x05B0 - 0x05A8)
class UPyWidget_EffectiveTarget final : public UMarvelUserWidget
{
public:
	float                                         HpPerSlot;                                         // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnHPBarBreakEnded();
	bool ShouldBeVisible();
	void Destruct();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_EffectiveTarget">();
	}
	static class UPyWidget_EffectiveTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_EffectiveTarget>();
	}
};
static_assert(alignof(UPyWidget_EffectiveTarget) == 0x000008, "Wrong alignment on UPyWidget_EffectiveTarget");
static_assert(sizeof(UPyWidget_EffectiveTarget) == 0x0005B0, "Wrong size on UPyWidget_EffectiveTarget");
static_assert(offsetof(UPyWidget_EffectiveTarget, HpPerSlot) == 0x0005A8, "Member 'UPyWidget_EffectiveTarget::HpPerSlot' has a wrong offset!");

// PythonClass PyUIC_EffectiveTarget.PyUIController_EffectiveTargetBase
// 0x0110 (0x0D70 - 0x0C60)
class UPyUIController_EffectiveTargetBase : public UUIC_Ability
{
public:
	float                                         HpPerSlot;                                         // 0x0C60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UPyWidget_EffectiveTarget>  TargetWidgetClass;                                 // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPyWidget_EffectiveTarget*              TargetWidget;                                      // 0x0C70(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C78[0x8];                                      // 0x0C78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            WidgetBuffBrush;                                   // 0x0C80(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                             BuffIcon;                                          // 0x0D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           WidgetBuffColor;                                   // 0x0D58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnDestruct();
	void OnTargetTakeTreat(class AActor* Source, class AActor* Target, const struct FAttributeModifierHandle& ModifierParameterHandle);
	void OnTargetAttrChanged(class AActor* SourceActor, const struct FAttributeModifierHandle& ModifierParameterHandle);
	void OnTargetSculptChanged(int32 Sculpt_id);
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_EffectiveTargetBase">();
	}
	static class UPyUIController_EffectiveTargetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_EffectiveTargetBase>();
	}
};
static_assert(alignof(UPyUIController_EffectiveTargetBase) == 0x000010, "Wrong alignment on UPyUIController_EffectiveTargetBase");
static_assert(sizeof(UPyUIController_EffectiveTargetBase) == 0x000D70, "Wrong size on UPyUIController_EffectiveTargetBase");
static_assert(offsetof(UPyUIController_EffectiveTargetBase, HpPerSlot) == 0x000C60, "Member 'UPyUIController_EffectiveTargetBase::HpPerSlot' has a wrong offset!");
static_assert(offsetof(UPyUIController_EffectiveTargetBase, TargetWidgetClass) == 0x000C68, "Member 'UPyUIController_EffectiveTargetBase::TargetWidgetClass' has a wrong offset!");
static_assert(offsetof(UPyUIController_EffectiveTargetBase, TargetWidget) == 0x000C70, "Member 'UPyUIController_EffectiveTargetBase::TargetWidget' has a wrong offset!");
static_assert(offsetof(UPyUIController_EffectiveTargetBase, WidgetBuffBrush) == 0x000C80, "Member 'UPyUIController_EffectiveTargetBase::WidgetBuffBrush' has a wrong offset!");
static_assert(offsetof(UPyUIController_EffectiveTargetBase, BuffIcon) == 0x000D50, "Member 'UPyUIController_EffectiveTargetBase::BuffIcon' has a wrong offset!");
static_assert(offsetof(UPyUIController_EffectiveTargetBase, WidgetBuffColor) == 0x000D58, "Member 'UPyUIController_EffectiveTargetBase::WidgetBuffColor' has a wrong offset!");

}


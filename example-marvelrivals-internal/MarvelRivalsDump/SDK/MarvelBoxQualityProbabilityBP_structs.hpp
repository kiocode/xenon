#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarvelBoxQualityProbabilityBP

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct MarvelBoxQualityProbabilityBP.MarvelBoxQualityProbabilityBP
// 0x0030 (0x0030 - 0x0000)
struct FMarvelBoxQualityProbabilityBP final
{
public:
	int32                                         BoxID_25_030C4FCC4DE9868E40666F830700036B;         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Red_Probability_30_FA4CEB4E4E457A38ADA73E83FA48E3CE; // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Orange_Probability_35_E70906384AF16E5FF18C4DB419AE7118; // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Purple_Probability_39_1CCC8AE3406BF43CB93DF2891AE990D9; // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Blue_Probability_37_7251259441F33B33DD2F9D8712E6A727; // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        White_Probability_38_DE27D1A547E69A6625E7B7A3A2E0E543; // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FMarvelBoxQualityProbabilityBP) == 0x000008, "Wrong alignment on FMarvelBoxQualityProbabilityBP");
static_assert(sizeof(FMarvelBoxQualityProbabilityBP) == 0x000030, "Wrong size on FMarvelBoxQualityProbabilityBP");
static_assert(offsetof(FMarvelBoxQualityProbabilityBP, BoxID_25_030C4FCC4DE9868E40666F830700036B) == 0x000000, "Member 'FMarvelBoxQualityProbabilityBP::BoxID_25_030C4FCC4DE9868E40666F830700036B' has a wrong offset!");
static_assert(offsetof(FMarvelBoxQualityProbabilityBP, Red_Probability_30_FA4CEB4E4E457A38ADA73E83FA48E3CE) == 0x000008, "Member 'FMarvelBoxQualityProbabilityBP::Red_Probability_30_FA4CEB4E4E457A38ADA73E83FA48E3CE' has a wrong offset!");
static_assert(offsetof(FMarvelBoxQualityProbabilityBP, Orange_Probability_35_E70906384AF16E5FF18C4DB419AE7118) == 0x000010, "Member 'FMarvelBoxQualityProbabilityBP::Orange_Probability_35_E70906384AF16E5FF18C4DB419AE7118' has a wrong offset!");
static_assert(offsetof(FMarvelBoxQualityProbabilityBP, Purple_Probability_39_1CCC8AE3406BF43CB93DF2891AE990D9) == 0x000018, "Member 'FMarvelBoxQualityProbabilityBP::Purple_Probability_39_1CCC8AE3406BF43CB93DF2891AE990D9' has a wrong offset!");
static_assert(offsetof(FMarvelBoxQualityProbabilityBP, Blue_Probability_37_7251259441F33B33DD2F9D8712E6A727) == 0x000020, "Member 'FMarvelBoxQualityProbabilityBP::Blue_Probability_37_7251259441F33B33DD2F9D8712E6A727' has a wrong offset!");
static_assert(offsetof(FMarvelBoxQualityProbabilityBP, White_Probability_38_DE27D1A547E69A6625E7B7A3A2E0E543) == 0x000028, "Member 'FMarvelBoxQualityProbabilityBP::White_Probability_38_DE27D1A547E69A6625E7B7A3A2E0E543' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103321

#include "Basic.hpp"

#include "Hero_1033_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Marvel_classes.hpp"
#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_103321.PyUIController_103321
// 0x0000 (0x0C60 - 0x0C60)
class UPyUIController_103321 final : public UUIC_Ability
{
public:
	void OnInit();
	void SetAbility(int32 InAbilityId, class UGameplayAbility* InAbility);
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_103321">();
	}
	static class UPyUIController_103321* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_103321>();
	}
};
static_assert(alignof(UPyUIController_103321) == 0x000008, "Wrong alignment on UPyUIController_103321");
static_assert(sizeof(UPyUIController_103321) == 0x000C60, "Wrong size on UPyUIController_103321");

// PythonClass PyAbility_103321.PyConfig_103321
// 0x0010 (0x04B0 - 0x04A0)
class UPyConfig_103321 final : public UMarvelAbilityConfig_AimDownSights
{
public:
	bool                                          NoHideSelf;                                        // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           AimingTag;                                         // 0x04A4(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_103321">();
	}
	static class UPyConfig_103321* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_103321>();
	}
};
static_assert(alignof(UPyConfig_103321) == 0x000008, "Wrong alignment on UPyConfig_103321");
static_assert(sizeof(UPyConfig_103321) == 0x0004B0, "Wrong size on UPyConfig_103321");
static_assert(offsetof(UPyConfig_103321, NoHideSelf) == 0x0004A0, "Member 'UPyConfig_103321::NoHideSelf' has a wrong offset!");
static_assert(offsetof(UPyConfig_103321, AimingTag) == 0x0004A4, "Member 'UPyConfig_103321::AimingTag' has a wrong offset!");

// PythonClass PyAbility_103321.PyAbility_103321
// 0x0028 (0x2610 - 0x25E8)
class UPyAbility_103321 : public UMarvelAbility_AimDownSights
{
public:
	int32                                         AimingShootingMode;                                // 0x25E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NormalShootingMode;                                // 0x25EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SnipperRifleID;                                    // 0x25F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SwitchWeaponAbilityID;                             // 0x25F4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoadBulletAbilityID;                               // 0x25F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25FC[0x4];                                     // 0x25FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnUIStateChanged;                                  // 0x2600(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnUIStateChanged__DelegateSignature(bool Opened);
	void BeginPlay();
	void OnActivateFailed(const struct FGameplayTagContainer& FailReason);
	void SetFppMode(bool bInAiming);
	void K2_ActivateAbility();
	void MissileEventNotify();
	void NativeOnMontageCompleted(const class FString& EventTag);
	void NativeOnMontageCancelled(const class FString& EventTag);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnInputStateEnd(float StateIntervalTime);
	void OnLeftShootEnd(class UGameplayAbility* Ability);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_103321">();
	}
	static class UPyAbility_103321* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_103321>();
	}
};
static_assert(alignof(UPyAbility_103321) == 0x000008, "Wrong alignment on UPyAbility_103321");
static_assert(sizeof(UPyAbility_103321) == 0x002610, "Wrong size on UPyAbility_103321");
static_assert(offsetof(UPyAbility_103321, AimingShootingMode) == 0x0025E8, "Member 'UPyAbility_103321::AimingShootingMode' has a wrong offset!");
static_assert(offsetof(UPyAbility_103321, NormalShootingMode) == 0x0025EC, "Member 'UPyAbility_103321::NormalShootingMode' has a wrong offset!");
static_assert(offsetof(UPyAbility_103321, SnipperRifleID) == 0x0025F0, "Member 'UPyAbility_103321::SnipperRifleID' has a wrong offset!");
static_assert(offsetof(UPyAbility_103321, SwitchWeaponAbilityID) == 0x0025F4, "Member 'UPyAbility_103321::SwitchWeaponAbilityID' has a wrong offset!");
static_assert(offsetof(UPyAbility_103321, LoadBulletAbilityID) == 0x0025F8, "Member 'UPyAbility_103321::LoadBulletAbilityID' has a wrong offset!");
static_assert(offsetof(UPyAbility_103321, OnUIStateChanged) == 0x002600, "Member 'UPyAbility_103321::OnUIStateChanged' has a wrong offset!");

// PythonClass PyAbility_103321.PyWidget_Reticle_103321
// 0x0000 (0x05F0 - 0x05F0)
class UPyWidget_Reticle_103321 final : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinishAnimOffset;                                  // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void MarvelSetVisible(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Reticle_103321">();
	}
	static class UPyWidget_Reticle_103321* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Reticle_103321>();
	}
};
static_assert(alignof(UPyWidget_Reticle_103321) == 0x000008, "Wrong alignment on UPyWidget_Reticle_103321");
static_assert(sizeof(UPyWidget_Reticle_103321) == 0x0005F0, "Wrong size on UPyWidget_Reticle_103321");
static_assert(offsetof(UPyWidget_Reticle_103321, FinishAnimOffset) == 0x0005EC, "Member 'UPyWidget_Reticle_103321::FinishAnimOffset' has a wrong offset!");

}


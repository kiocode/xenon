#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MarvelWidgets

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function MarvelWidgets.MarvelListView.SimulateClickItemByIndex
// 0x0004 (0x0004 - 0x0000)
struct MarvelListView_SimulateClickItemByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MarvelListView_SimulateClickItemByIndex) == 0x000004, "Wrong alignment on MarvelListView_SimulateClickItemByIndex");
static_assert(sizeof(MarvelListView_SimulateClickItemByIndex) == 0x000004, "Wrong size on MarvelListView_SimulateClickItemByIndex");
static_assert(offsetof(MarvelListView_SimulateClickItemByIndex, Index_0) == 0x000000, "Member 'MarvelListView_SimulateClickItemByIndex::Index_0' has a wrong offset!");

// Function MarvelWidgets.MarvelListView.GetEntryWidgetAt
// 0x0010 (0x0010 - 0x0000)
struct MarvelListView_GetEntryWidgetAt final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MarvelListView_GetEntryWidgetAt) == 0x000008, "Wrong alignment on MarvelListView_GetEntryWidgetAt");
static_assert(sizeof(MarvelListView_GetEntryWidgetAt) == 0x000010, "Wrong size on MarvelListView_GetEntryWidgetAt");
static_assert(offsetof(MarvelListView_GetEntryWidgetAt, Index_0) == 0x000000, "Member 'MarvelListView_GetEntryWidgetAt::Index_0' has a wrong offset!");
static_assert(offsetof(MarvelListView_GetEntryWidgetAt, ReturnValue) == 0x000008, "Member 'MarvelListView_GetEntryWidgetAt::ReturnValue' has a wrong offset!");

// Function MarvelWidgets.MarvelTileView.SimulateClickItemByIndex
// 0x0004 (0x0004 - 0x0000)
struct MarvelTileView_SimulateClickItemByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MarvelTileView_SimulateClickItemByIndex) == 0x000004, "Wrong alignment on MarvelTileView_SimulateClickItemByIndex");
static_assert(sizeof(MarvelTileView_SimulateClickItemByIndex) == 0x000004, "Wrong size on MarvelTileView_SimulateClickItemByIndex");
static_assert(offsetof(MarvelTileView_SimulateClickItemByIndex, Index_0) == 0x000000, "Member 'MarvelTileView_SimulateClickItemByIndex::Index_0' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetMainTexture
// 0x0008 (0x0008 - 0x0000)
struct MaskImage_SetMainTexture final
{
public:
	class UTexture2D*                             InTexture_Main;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetMainTexture) == 0x000008, "Wrong alignment on MaskImage_SetMainTexture");
static_assert(sizeof(MaskImage_SetMainTexture) == 0x000008, "Wrong size on MaskImage_SetMainTexture");
static_assert(offsetof(MaskImage_SetMainTexture, InTexture_Main) == 0x000000, "Member 'MaskImage_SetMainTexture::InTexture_Main' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetMaskTexture
// 0x0008 (0x0008 - 0x0000)
struct MaskImage_SetMaskTexture final
{
public:
	class UTexture2D*                             InTexture_Mask;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetMaskTexture) == 0x000008, "Wrong alignment on MaskImage_SetMaskTexture");
static_assert(sizeof(MaskImage_SetMaskTexture) == 0x000008, "Wrong size on MaskImage_SetMaskTexture");
static_assert(offsetof(MaskImage_SetMaskTexture, InTexture_Mask) == 0x000000, "Member 'MaskImage_SetMaskTexture::InTexture_Mask' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetMaskUsable
// 0x0001 (0x0001 - 0x0000)
struct MaskImage_SetMaskUsable final
{
public:
	bool                                          Usable;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetMaskUsable) == 0x000001, "Wrong alignment on MaskImage_SetMaskUsable");
static_assert(sizeof(MaskImage_SetMaskUsable) == 0x000001, "Wrong size on MaskImage_SetMaskUsable");
static_assert(offsetof(MaskImage_SetMaskUsable, Usable) == 0x000000, "Member 'MaskImage_SetMaskUsable::Usable' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetScalarParameterValueOnMaterials
// 0x0010 (0x0010 - 0x0000)
struct MaskImage_SetScalarParameterValueOnMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParameterValue;                                    // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetScalarParameterValueOnMaterials) == 0x000004, "Wrong alignment on MaskImage_SetScalarParameterValueOnMaterials");
static_assert(sizeof(MaskImage_SetScalarParameterValueOnMaterials) == 0x000010, "Wrong size on MaskImage_SetScalarParameterValueOnMaterials");
static_assert(offsetof(MaskImage_SetScalarParameterValueOnMaterials, ParameterName) == 0x000000, "Member 'MaskImage_SetScalarParameterValueOnMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(MaskImage_SetScalarParameterValueOnMaterials, ParameterValue) == 0x00000C, "Member 'MaskImage_SetScalarParameterValueOnMaterials::ParameterValue' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetTextureOffsetUV
// 0x0010 (0x0010 - 0x0000)
struct MaskImage_SetTextureOffsetUV final
{
public:
	struct FVector2D                              InOffsetUV;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetTextureOffsetUV) == 0x000008, "Wrong alignment on MaskImage_SetTextureOffsetUV");
static_assert(sizeof(MaskImage_SetTextureOffsetUV) == 0x000010, "Wrong size on MaskImage_SetTextureOffsetUV");
static_assert(offsetof(MaskImage_SetTextureOffsetUV, InOffsetUV) == 0x000000, "Member 'MaskImage_SetTextureOffsetUV::InOffsetUV' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetTextureScale
// 0x0004 (0x0004 - 0x0000)
struct MaskImage_SetTextureScale final
{
public:
	float                                         InScale;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetTextureScale) == 0x000004, "Wrong alignment on MaskImage_SetTextureScale");
static_assert(sizeof(MaskImage_SetTextureScale) == 0x000004, "Wrong size on MaskImage_SetTextureScale");
static_assert(offsetof(MaskImage_SetTextureScale, InScale) == 0x000000, "Member 'MaskImage_SetTextureScale::InScale' has a wrong offset!");

// Function MarvelWidgets.MaskImage.SetVectorParameterValueOnMaterials
// 0x001C (0x001C - 0x0000)
struct MaskImage_SetVectorParameterValueOnMaterials final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ParameterValue;                                    // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MaskImage_SetVectorParameterValueOnMaterials) == 0x000004, "Wrong alignment on MaskImage_SetVectorParameterValueOnMaterials");
static_assert(sizeof(MaskImage_SetVectorParameterValueOnMaterials) == 0x00001C, "Wrong size on MaskImage_SetVectorParameterValueOnMaterials");
static_assert(offsetof(MaskImage_SetVectorParameterValueOnMaterials, ParameterName) == 0x000000, "Member 'MaskImage_SetVectorParameterValueOnMaterials::ParameterName' has a wrong offset!");
static_assert(offsetof(MaskImage_SetVectorParameterValueOnMaterials, ParameterValue) == 0x00000C, "Member 'MaskImage_SetVectorParameterValueOnMaterials::ParameterValue' has a wrong offset!");

// Function MarvelWidgets.PaintContextUtils.GetAllotedLocation
// 0x0040 (0x0040 - 0x0000)
struct PaintContextUtils_GetAllotedLocation final
{
public:
	struct FPaintContext                          InContext;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaintContextUtils_GetAllotedLocation) == 0x000008, "Wrong alignment on PaintContextUtils_GetAllotedLocation");
static_assert(sizeof(PaintContextUtils_GetAllotedLocation) == 0x000040, "Wrong size on PaintContextUtils_GetAllotedLocation");
static_assert(offsetof(PaintContextUtils_GetAllotedLocation, InContext) == 0x000000, "Member 'PaintContextUtils_GetAllotedLocation::InContext' has a wrong offset!");
static_assert(offsetof(PaintContextUtils_GetAllotedLocation, ReturnValue) == 0x000030, "Member 'PaintContextUtils_GetAllotedLocation::ReturnValue' has a wrong offset!");

// Function MarvelWidgets.PaintContextUtils.GetAllotedSize
// 0x0040 (0x0040 - 0x0000)
struct PaintContextUtils_GetAllotedSize final
{
public:
	struct FPaintContext                          InContext;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaintContextUtils_GetAllotedSize) == 0x000008, "Wrong alignment on PaintContextUtils_GetAllotedSize");
static_assert(sizeof(PaintContextUtils_GetAllotedSize) == 0x000040, "Wrong size on PaintContextUtils_GetAllotedSize");
static_assert(offsetof(PaintContextUtils_GetAllotedSize, InContext) == 0x000000, "Member 'PaintContextUtils_GetAllotedSize::InContext' has a wrong offset!");
static_assert(offsetof(PaintContextUtils_GetAllotedSize, ReturnValue) == 0x000030, "Member 'PaintContextUtils_GetAllotedSize::ReturnValue' has a wrong offset!");

// Function MarvelWidgets.PaintContextUtils.GetColorAndOpacityTint
// 0x0040 (0x0040 - 0x0000)
struct PaintContextUtils_GetColorAndOpacityTint final
{
public:
	struct FPaintContext                          InContext;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaintContextUtils_GetColorAndOpacityTint) == 0x000008, "Wrong alignment on PaintContextUtils_GetColorAndOpacityTint");
static_assert(sizeof(PaintContextUtils_GetColorAndOpacityTint) == 0x000040, "Wrong size on PaintContextUtils_GetColorAndOpacityTint");
static_assert(offsetof(PaintContextUtils_GetColorAndOpacityTint, InContext) == 0x000000, "Member 'PaintContextUtils_GetColorAndOpacityTint::InContext' has a wrong offset!");
static_assert(offsetof(PaintContextUtils_GetColorAndOpacityTint, ReturnValue) == 0x000030, "Member 'PaintContextUtils_GetColorAndOpacityTint::ReturnValue' has a wrong offset!");

// Function MarvelWidgets.PaintContextUtils.GetLocalLocation
// 0x0038 (0x0038 - 0x0000)
struct PaintContextUtils_GetLocalLocation final
{
public:
	struct FPaintContext                          InContext;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2f                              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaintContextUtils_GetLocalLocation) == 0x000008, "Wrong alignment on PaintContextUtils_GetLocalLocation");
static_assert(sizeof(PaintContextUtils_GetLocalLocation) == 0x000038, "Wrong size on PaintContextUtils_GetLocalLocation");
static_assert(offsetof(PaintContextUtils_GetLocalLocation, InContext) == 0x000000, "Member 'PaintContextUtils_GetLocalLocation::InContext' has a wrong offset!");
static_assert(offsetof(PaintContextUtils_GetLocalLocation, ReturnValue) == 0x000030, "Member 'PaintContextUtils_GetLocalLocation::ReturnValue' has a wrong offset!");

// Function MarvelWidgets.UIDebugSubsystem.GetSelectedUserWidget
// 0x0008 (0x0008 - 0x0000)
struct UIDebugSubsystem_GetSelectedUserWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIDebugSubsystem_GetSelectedUserWidget) == 0x000008, "Wrong alignment on UIDebugSubsystem_GetSelectedUserWidget");
static_assert(sizeof(UIDebugSubsystem_GetSelectedUserWidget) == 0x000008, "Wrong size on UIDebugSubsystem_GetSelectedUserWidget");
static_assert(offsetof(UIDebugSubsystem_GetSelectedUserWidget, ReturnValue) == 0x000000, "Member 'UIDebugSubsystem_GetSelectedUserWidget::ReturnValue' has a wrong offset!");

// Function MarvelWidgets.UIDebugSubsystem.GetSelectedUserWidgets
// 0x0010 (0x0010 - 0x0000)
struct UIDebugSubsystem_GetSelectedUserWidgets final
{
public:
	TArray<class UUserWidget*>                    ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIDebugSubsystem_GetSelectedUserWidgets) == 0x000008, "Wrong alignment on UIDebugSubsystem_GetSelectedUserWidgets");
static_assert(sizeof(UIDebugSubsystem_GetSelectedUserWidgets) == 0x000010, "Wrong size on UIDebugSubsystem_GetSelectedUserWidgets");
static_assert(offsetof(UIDebugSubsystem_GetSelectedUserWidgets, ReturnValue) == 0x000000, "Member 'UIDebugSubsystem_GetSelectedUserWidgets::ReturnValue' has a wrong offset!");

}


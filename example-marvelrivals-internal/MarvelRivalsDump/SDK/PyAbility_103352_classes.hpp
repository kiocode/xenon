#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_103352

#include "Basic.hpp"

#include "Hero_1033_classes.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_103352.PyCue_Scope_Start_10335201
// 0x0020 (0x0388 - 0x0368)
class UPyCue_Scope_Start_10335201 final : public UMarvelCueNotify_Base
{
public:
	class UFXSystemAsset*                         GroundFX;                                          // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalCheckHeight;                                  // 0x0370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Ignores;                                           // 0x0378(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters) const;
	void SetFXParameter(class UNiagaraComponent* InFXComponent, const class AActor* MyTarget, const struct FGameplayCueParameters& Parameters) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Scope_Start_10335201">();
	}
	static class UPyCue_Scope_Start_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCue_Scope_Start_10335201>();
	}
};
static_assert(alignof(UPyCue_Scope_Start_10335201) == 0x000008, "Wrong alignment on UPyCue_Scope_Start_10335201");
static_assert(sizeof(UPyCue_Scope_Start_10335201) == 0x000388, "Wrong size on UPyCue_Scope_Start_10335201");
static_assert(offsetof(UPyCue_Scope_Start_10335201, GroundFX) == 0x000368, "Member 'UPyCue_Scope_Start_10335201::GroundFX' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_Start_10335201, DecalCheckHeight) == 0x000370, "Member 'UPyCue_Scope_Start_10335201::DecalCheckHeight' has a wrong offset!");
static_assert(offsetof(UPyCue_Scope_Start_10335201, Ignores) == 0x000378, "Member 'UPyCue_Scope_Start_10335201::Ignores' has a wrong offset!");

// PythonClass PyAbility_103352.PyEffectiveComponent_10335201
// 0x0000 (0x1C00 - 0x1C00)
class UPyEffectiveComponent_10335201 final : public UMarvelAgentEffectiveComponent
{
public:
	void K2_Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyEffectiveComponent_10335201">();
	}
	static class UPyEffectiveComponent_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyEffectiveComponent_10335201>();
	}
};
static_assert(alignof(UPyEffectiveComponent_10335201) == 0x000010, "Wrong alignment on UPyEffectiveComponent_10335201");
static_assert(sizeof(UPyEffectiveComponent_10335201) == 0x001C00, "Wrong size on UPyEffectiveComponent_10335201");

// PythonClass PyAbility_103352.PyConfig_103352
// 0x0048 (0x0108 - 0x00C0)
class UPyConfig_103352 final : public UConfig_103352
{
public:
	int32                                         WeaponFireMode;                                    // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EquipmentID;                                       // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireDuration;                                      // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ElectroProjectileID;                               // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinExplosionDamage;                                // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxExplosionDamage;                                // 0x00D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinExplosionRadius;                                // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxExplosionRadius;                                // 0x00DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinPlasmaNum;                                      // 0x00E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlasmaNum;                                      // 0x00E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinOutAngle;                                       // 0x00E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxOutAngle;                                       // 0x00EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutBlendTime;                                      // 0x00F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UltiDerivativeAngleMax;                            // 0x00F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DebugNoRandomAngle;                                // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugOutAngle;                                     // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DebugNoRandomSpeed;                                // 0x0100(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugSpeed;                                        // 0x0104(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_103352">();
	}
	static class UPyConfig_103352* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_103352>();
	}
};
static_assert(alignof(UPyConfig_103352) == 0x000008, "Wrong alignment on UPyConfig_103352");
static_assert(sizeof(UPyConfig_103352) == 0x000108, "Wrong size on UPyConfig_103352");
static_assert(offsetof(UPyConfig_103352, WeaponFireMode) == 0x0000C0, "Member 'UPyConfig_103352::WeaponFireMode' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, EquipmentID) == 0x0000C4, "Member 'UPyConfig_103352::EquipmentID' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, FireDuration) == 0x0000C8, "Member 'UPyConfig_103352::FireDuration' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, ElectroProjectileID) == 0x0000CC, "Member 'UPyConfig_103352::ElectroProjectileID' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MinExplosionDamage) == 0x0000D0, "Member 'UPyConfig_103352::MinExplosionDamage' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MaxExplosionDamage) == 0x0000D4, "Member 'UPyConfig_103352::MaxExplosionDamage' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MinExplosionRadius) == 0x0000D8, "Member 'UPyConfig_103352::MinExplosionRadius' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MaxExplosionRadius) == 0x0000DC, "Member 'UPyConfig_103352::MaxExplosionRadius' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MinPlasmaNum) == 0x0000E0, "Member 'UPyConfig_103352::MinPlasmaNum' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MaxPlasmaNum) == 0x0000E4, "Member 'UPyConfig_103352::MaxPlasmaNum' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MinOutAngle) == 0x0000E8, "Member 'UPyConfig_103352::MinOutAngle' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, MaxOutAngle) == 0x0000EC, "Member 'UPyConfig_103352::MaxOutAngle' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, OutBlendTime) == 0x0000F0, "Member 'UPyConfig_103352::OutBlendTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, UltiDerivativeAngleMax) == 0x0000F4, "Member 'UPyConfig_103352::UltiDerivativeAngleMax' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, DebugNoRandomAngle) == 0x0000F8, "Member 'UPyConfig_103352::DebugNoRandomAngle' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, DebugOutAngle) == 0x0000FC, "Member 'UPyConfig_103352::DebugOutAngle' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, DebugNoRandomSpeed) == 0x000100, "Member 'UPyConfig_103352::DebugNoRandomSpeed' has a wrong offset!");
static_assert(offsetof(UPyConfig_103352, DebugSpeed) == 0x000104, "Member 'UPyConfig_103352::DebugSpeed' has a wrong offset!");

// PythonClass PyAbility_103352.PyProjectile_10335201
// 0x0010 (0x3060 - 0x3050)
class APyProjectile_10335201 final : public AMarvelAbilityTargetActor_Projectile
{
public:
	float                                         ChargeDuration;                                    // 0x3050(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChargePercent;                                     // 0x3054(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void K2_OnInitializeData();
	void K2_OnBeginAgentTask();
	void K2_OnProcessHit(const struct FHitResult& ImpactResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10335201">();
	}
	static class APyProjectile_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10335201>();
	}
};
static_assert(alignof(APyProjectile_10335201) == 0x000010, "Wrong alignment on APyProjectile_10335201");
static_assert(sizeof(APyProjectile_10335201) == 0x003060, "Wrong size on APyProjectile_10335201");
static_assert(offsetof(APyProjectile_10335201, ChargeDuration) == 0x003050, "Member 'APyProjectile_10335201::ChargeDuration' has a wrong offset!");
static_assert(offsetof(APyProjectile_10335201, ChargePercent) == 0x003054, "Member 'APyProjectile_10335201::ChargePercent' has a wrong offset!");

// PythonClass PyAbility_103352.PySummoned_10335201
// 0x0010 (0x08A0 - 0x0890)
#pragma pack(push, 0x1)
class alignas(0x10) APySummoned_10335201 : public AMarvelSummonerBase
{
public:
	int32                                         ScopeId;                                           // 0x0890(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChargeDuration;                                    // 0x0894(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveBeginPlay();
	void K2_OnSummonedBeginAgentTask();
	void DelaySpawnScope();
	void K2_OnSummonedEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoned_10335201">();
	}
	static class APySummoned_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoned_10335201>();
	}
};
#pragma pack(pop)
static_assert(alignof(APySummoned_10335201) == 0x000010, "Wrong alignment on APySummoned_10335201");
static_assert(sizeof(APySummoned_10335201) == 0x0008A0, "Wrong size on APySummoned_10335201");
static_assert(offsetof(APySummoned_10335201, ScopeId) == 0x000890, "Member 'APySummoned_10335201::ScopeId' has a wrong offset!");
static_assert(offsetof(APySummoned_10335201, ChargeDuration) == 0x000894, "Member 'APySummoned_10335201::ChargeDuration' has a wrong offset!");

// PythonClass PyAbility_103352.PyTraceComponent_10335201
// 0x0000 (0x1710 - 0x1710)
class UPyTraceComponent_10335201 final : public UMarvelAgentTraceComponent
{
public:
	void K2_Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyTraceComponent_10335201">();
	}
	static class UPyTraceComponent_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyTraceComponent_10335201>();
	}
};
static_assert(alignof(UPyTraceComponent_10335201) == 0x000010, "Wrong alignment on UPyTraceComponent_10335201");
static_assert(sizeof(UPyTraceComponent_10335201) == 0x001710, "Wrong size on UPyTraceComponent_10335201");

// PythonClass PyAbility_103352.PyProjectile_10335202
// 0x0000 (0x3060 - 0x3060)
class APyProjectile_10335202 final : public AProjectile_10335202
{
public:
	void K2_OnBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10335202">();
	}
	static class APyProjectile_10335202* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10335202>();
	}
};
static_assert(alignof(APyProjectile_10335202) == 0x000010, "Wrong alignment on APyProjectile_10335202");
static_assert(sizeof(APyProjectile_10335202) == 0x003060, "Wrong size on APyProjectile_10335202");

// PythonClass PyAbility_103352.PyAbility_103352
// 0x0010 (0x25A0 - 0x2590)
class UPyAbility_103352 : public UAbility_103352
{
public:
	TSubclassOf<class AMarvelSummonerBase>        SummonedClass;                                     // 0x2590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AMarvelAbilityTargetActor_Projectile> ProjectileClass;                                   // 0x2598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	bool CanActivate();
	void OnPreLoadedSummonedSpawned(class AActor* SpawnedActor);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnDurationEnd();
	void NativeOnMontageEvent(const class FString& Tag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_103352">();
	}
	static class UPyAbility_103352* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_103352>();
	}
};
static_assert(alignof(UPyAbility_103352) == 0x000008, "Wrong alignment on UPyAbility_103352");
static_assert(sizeof(UPyAbility_103352) == 0x0025A0, "Wrong size on UPyAbility_103352");
static_assert(offsetof(UPyAbility_103352, SummonedClass) == 0x002590, "Member 'UPyAbility_103352::SummonedClass' has a wrong offset!");
static_assert(offsetof(UPyAbility_103352, ProjectileClass) == 0x002598, "Member 'UPyAbility_103352::ProjectileClass' has a wrong offset!");

// PythonClass PyAbility_103352.PyCue_Ability_Loop_10335201
// 0x0008 (0x0E58 - 0x0E50)
class APyCue_Ability_Loop_10335201 final : public AMarvelCueNotify_Ability
{
public:
	int32                                         MaxEnergyAudioID;                                  // 0x0E50(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_10335201">();
	}
	static class APyCue_Ability_Loop_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_10335201>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_10335201) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_10335201");
static_assert(sizeof(APyCue_Ability_Loop_10335201) == 0x000E58, "Wrong size on APyCue_Ability_Loop_10335201");
static_assert(offsetof(APyCue_Ability_Loop_10335201, MaxEnergyAudioID) == 0x000E50, "Member 'APyCue_Ability_Loop_10335201::MaxEnergyAudioID' has a wrong offset!");

// PythonClass PyAbility_103352.PyCue_Projectile_Loop_10335201
// 0x0000 (0x0DB0 - 0x0DB0)
class APyCue_Projectile_Loop_10335201 final : public AMarvelCueNotify_Projectile
{
public:
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Projectile_Loop_10335201">();
	}
	static class APyCue_Projectile_Loop_10335201* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Projectile_Loop_10335201>();
	}
};
static_assert(alignof(APyCue_Projectile_Loop_10335201) == 0x000008, "Wrong alignment on APyCue_Projectile_Loop_10335201");
static_assert(sizeof(APyCue_Projectile_Loop_10335201) == 0x000DB0, "Wrong size on APyCue_Projectile_Loop_10335201");

}


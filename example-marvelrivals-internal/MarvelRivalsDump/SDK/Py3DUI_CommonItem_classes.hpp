#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Py3DUI_CommonItem

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass Py3DUI_CommonItem.Py3DUI_CommonItem
// 0x0078 (0x0508 - 0x0490)
class APy3DUI_CommonItem final : public AActor
{
public:
	float                                         MaximumRotationAngle;                              // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationInterpSpeed;                               // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAnglePerSecond;                                 // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActorRotationSpeed;                                // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            Curve_InterpSpeed;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprayAnimTime;                                     // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MouseSensitivity;                                  // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          AkEvent_ShowSpray;                                 // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EItemType, TSubclassOf<class AActor>>    ItemLightBP;                                       // 0x04B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Py3DUI_CommonItem">();
	}
	static class APy3DUI_CommonItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<APy3DUI_CommonItem>();
	}
};
static_assert(alignof(APy3DUI_CommonItem) == 0x000008, "Wrong alignment on APy3DUI_CommonItem");
static_assert(sizeof(APy3DUI_CommonItem) == 0x000508, "Wrong size on APy3DUI_CommonItem");
static_assert(offsetof(APy3DUI_CommonItem, MaximumRotationAngle) == 0x000490, "Member 'APy3DUI_CommonItem::MaximumRotationAngle' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, RotationInterpSpeed) == 0x000494, "Member 'APy3DUI_CommonItem::RotationInterpSpeed' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, MaxAnglePerSecond) == 0x000498, "Member 'APy3DUI_CommonItem::MaxAnglePerSecond' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, ActorRotationSpeed) == 0x00049C, "Member 'APy3DUI_CommonItem::ActorRotationSpeed' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, Curve_InterpSpeed) == 0x0004A0, "Member 'APy3DUI_CommonItem::Curve_InterpSpeed' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, SprayAnimTime) == 0x0004A8, "Member 'APy3DUI_CommonItem::SprayAnimTime' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, MouseSensitivity) == 0x0004AC, "Member 'APy3DUI_CommonItem::MouseSensitivity' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, AkEvent_ShowSpray) == 0x0004B0, "Member 'APy3DUI_CommonItem::AkEvent_ShowSpray' has a wrong offset!");
static_assert(offsetof(APy3DUI_CommonItem, ItemLightBP) == 0x0004B8, "Member 'APy3DUI_CommonItem::ItemLightBP' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_BattlePass_PropView

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PageItem.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattlePass_PageItem_SetIsHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PageItem_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_BattlePass_PageItem_SetIsHover");
static_assert(sizeof(PyWidget_BattlePass_PageItem_SetIsHover) == 0x000001, "Wrong size on PyWidget_BattlePass_PageItem_SetIsHover");
static_assert(offsetof(PyWidget_BattlePass_PageItem_SetIsHover, IsHover_0) == 0x000000, "Member 'PyWidget_BattlePass_PageItem_SetIsHover::IsHover_0' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PageItem.SetBtnIsPressed
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattlePass_PageItem_SetBtnIsPressed final
{
public:
	bool                                          IsBtnPressed_0;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PageItem_SetBtnIsPressed) == 0x000001, "Wrong alignment on PyWidget_BattlePass_PageItem_SetBtnIsPressed");
static_assert(sizeof(PyWidget_BattlePass_PageItem_SetBtnIsPressed) == 0x000001, "Wrong size on PyWidget_BattlePass_PageItem_SetBtnIsPressed");
static_assert(offsetof(PyWidget_BattlePass_PageItem_SetBtnIsPressed, IsBtnPressed_0) == 0x000000, "Member 'PyWidget_BattlePass_PageItem_SetBtnIsPressed::IsBtnPressed_0' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItem.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattlePass_CuttingItem_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_CuttingItem_PreConstruct) == 0x000001, "Wrong alignment on PyWidget_BattlePass_CuttingItem_PreConstruct");
static_assert(sizeof(PyWidget_BattlePass_CuttingItem_PreConstruct) == 0x000001, "Wrong size on PyWidget_BattlePass_CuttingItem_PreConstruct");
static_assert(offsetof(PyWidget_BattlePass_CuttingItem_PreConstruct, IsDesignTime) == 0x000000, "Member 'PyWidget_BattlePass_CuttingItem_PreConstruct::IsDesignTime' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItem.SetIsHover
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattlePass_CuttingItem_SetIsHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_CuttingItem_SetIsHover) == 0x000001, "Wrong alignment on PyWidget_BattlePass_CuttingItem_SetIsHover");
static_assert(sizeof(PyWidget_BattlePass_CuttingItem_SetIsHover) == 0x000001, "Wrong size on PyWidget_BattlePass_CuttingItem_SetIsHover");
static_assert(offsetof(PyWidget_BattlePass_CuttingItem_SetIsHover, IsHover_0) == 0x000000, "Member 'PyWidget_BattlePass_CuttingItem_SetIsHover::IsHover_0' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItem.OnImgMaskLoaded
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded final
{
public:
	class UObject*                                ImgMask;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded) == 0x000008, "Wrong alignment on PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded");
static_assert(sizeof(PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded) == 0x000008, "Wrong size on PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded");
static_assert(offsetof(PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded, ImgMask) == 0x000000, "Member 'PyWidget_BattlePass_CuttingItem_OnImgMaskLoaded::ImgMask' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItem.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_BattlePass_CuttingItem_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_CuttingItem_OnAnimationFinished) == 0x000008, "Wrong alignment on PyWidget_BattlePass_CuttingItem_OnAnimationFinished");
static_assert(sizeof(PyWidget_BattlePass_CuttingItem_OnAnimationFinished) == 0x000008, "Wrong size on PyWidget_BattlePass_CuttingItem_OnAnimationFinished");
static_assert(offsetof(PyWidget_BattlePass_CuttingItem_OnAnimationFinished, Animation) == 0x000000, "Member 'PyWidget_BattlePass_CuttingItem_OnAnimationFinished::Animation' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItemList.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattlePass_CuttingItemList_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_CuttingItemList_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_BattlePass_CuttingItemList_MarvelSetVisible");
static_assert(sizeof(PyWidget_BattlePass_CuttingItemList_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_BattlePass_CuttingItemList_MarvelSetVisible");
static_assert(offsetof(PyWidget_BattlePass_CuttingItemList_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_BattlePass_CuttingItemList_MarvelSetVisible::Visible' has a wrong offset!");

// DelegateFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_Confirm_Popup.OnConfirmPopupAnimFinish__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature final
{
public:
	class FString                                 Anim_name;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature) == 0x000008, "Wrong alignment on PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature");
static_assert(sizeof(PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature) == 0x000010, "Wrong size on PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature");
static_assert(offsetof(PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature, Anim_name) == 0x000000, "Member 'PyWidget_BattlePass_Confirm_Popup_OnConfirmPopupAnimFinish__DelegateSignature::Anim_name' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.MarvelSetVisible
// 0x0001 (0x0001 - 0x0000)
struct PyWidget_BattlePass_PropView_MarvelSetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_MarvelSetVisible) == 0x000001, "Wrong alignment on PyWidget_BattlePass_PropView_MarvelSetVisible");
static_assert(sizeof(PyWidget_BattlePass_PropView_MarvelSetVisible) == 0x000001, "Wrong size on PyWidget_BattlePass_PropView_MarvelSetVisible");
static_assert(offsetof(PyWidget_BattlePass_PropView_MarvelSetVisible, Visible) == 0x000000, "Member 'PyWidget_BattlePass_PropView_MarvelSetVisible::Visible' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavLeft_Confirm_Popup
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavLeft_Confirm_Popup::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavRight_Confirm_Popup
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavRight_Confirm_Popup::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavRight_Btn_GetBattlePass
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavRight_Btn_GetBattlePass_1
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1 final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavRight_Btn_GetBattlePass_1::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavRight_WBP_BattlePass_SeeDetailsBtn
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_SeeDetailsBtn::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavRight_WBP_BattlePass_StartBtn_Senior
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavRight_WBP_BattlePass_StartBtn_Senior::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavBtnHome
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavBtnHome final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavBtnHome) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavBtnHome");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavBtnHome) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavBtnHome");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnHome, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavBtnHome::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnHome, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavBtnHome::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavBtnPinTop
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavBtnPinTop final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavBtnPinTop) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavBtnPinTop");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavBtnPinTop) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavBtnPinTop");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnPinTop, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavBtnPinTop::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnPinTop, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavBtnPinTop::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavBtnPre
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavBtnPre final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavBtnPre) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavBtnPre");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavBtnPre) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavBtnPre");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnPre, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavBtnPre::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnPre, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavBtnPre::ReturnValue' has a wrong offset!");

// PythonFunction PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView.OnNavBtnNext
// 0x0010 (0x0010 - 0x0000)
struct PyWidget_BattlePass_PropView_OnNavBtnNext final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_BattlePass_PropView_OnNavBtnNext) == 0x000008, "Wrong alignment on PyWidget_BattlePass_PropView_OnNavBtnNext");
static_assert(sizeof(PyWidget_BattlePass_PropView_OnNavBtnNext) == 0x000010, "Wrong size on PyWidget_BattlePass_PropView_OnNavBtnNext");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnNext, Navigation_0) == 0x000000, "Member 'PyWidget_BattlePass_PropView_OnNavBtnNext::Navigation_0' has a wrong offset!");
static_assert(offsetof(PyWidget_BattlePass_PropView_OnNavBtnNext, ReturnValue) == 0x000008, "Member 'PyWidget_BattlePass_PropView_OnNavBtnNext::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyLevelCommonNodes

#include "Basic.hpp"

#include "PyLevelCommonNodes_classes.hpp"
#include "PyLevelCommonNodes_parameters.hpp"


namespace SDK
{

// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SpawnSummoner
// (Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SummonerId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SpawnCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   VelocityScale                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InitialRototor                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FRotator                         GapRotator                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void UPyLevelCommonNodes::SpawnSummoner(class AActor* Instance, const struct FVector& Location, int32 SummonerId, int32 SpawnCount, float VelocityScale, const struct FRotator& InitialRototor, const struct FRotator& GapRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "SpawnSummoner");

	Params::PyLevelCommonNodes_SpawnSummoner Parms{};

	Parms.Instance = Instance;
	Parms.Location = std::move(Location);
	Parms.SummonerId = SummonerId;
	Parms.SpawnCount = SpawnCount;
	Parms.VelocityScale = VelocityScale;
	Parms.InitialRototor = std::move(InitialRototor);
	Parms.GapRotator = std::move(GapRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SetEditorLevelStreaming
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelStreaming*                  Level_streaming                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::SetEditorLevelStreaming(class ULevelStreaming* Level_streaming, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "SetEditorLevelStreaming");

	Params::PyLevelCommonNodes_SetEditorLevelStreaming Parms{};

	Parms.Level_streaming = Level_streaming;
	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.StartShrinkCircle
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ActorName                                              (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::StartShrinkCircle(class AActor* Instance, const class FString& ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "StartShrinkCircle");

	Params::PyLevelCommonNodes_StartShrinkCircle Parms{};

	Parms.Instance = Instance;
	Parms.ActorName = std::move(ActorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.ChangeAttackTime
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   NewTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCover                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::ChangeAttackTime(class AActor* Instance, float NewTime, bool IsCover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "ChangeAttackTime");

	Params::PyLevelCommonNodes_ChangeAttackTime Parms{};

	Parms.Instance = Instance;
	Parms.NewTime = NewTime;
	Parms.IsCover = IsCover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.DisableLastSelectHero
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AMarvelBaseCharacter*             Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::DisableLastSelectHero(class AActor* Instance, class AMarvelBaseCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "DisableLastSelectHero");

	Params::PyLevelCommonNodes_DisableLastSelectHero Parms{};

	Parms.Instance = Instance;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.ApplyBuffToTarget
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AMarvelBaseCharacter*             TargetChar                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   BuffID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DelayTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::ApplyBuffToTarget(class AActor* Instance, class AMarvelBaseCharacter* TargetChar, int32 BuffID, float DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "ApplyBuffToTarget");

	Params::PyLevelCommonNodes_ApplyBuffToTarget Parms{};

	Parms.Instance = Instance;
	Parms.TargetChar = TargetChar;
	Parms.BuffID = BuffID;
	Parms.DelayTime = DelayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SpawnSummonerWhenCharDeath
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SummonerId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELevelSummonerSide                      BattleSideParamter                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::SpawnSummonerWhenCharDeath(class AActor* Instance, int32 SummonerId, ELevelSummonerSide BattleSideParamter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "SpawnSummonerWhenCharDeath");

	Params::PyLevelCommonNodes_SpawnSummonerWhenCharDeath Parms{};

	Parms.Instance = Instance;
	Parms.SummonerId = SummonerId;
	Parms.BattleSideParamter = BattleSideParamter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.SetMultiRoundParameters
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   WinRoundNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalRoundNum                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::SetMultiRoundParameters(class AActor* Instance, int32 WinRoundNum, int32 TotalRoundNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "SetMultiRoundParameters");

	Params::PyLevelCommonNodes_SetMultiRoundParameters Parms{};

	Parms.Instance = Instance;
	Parms.WinRoundNum = WinRoundNum;
	Parms.TotalRoundNum = TotalRoundNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.CloseDoor
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           DoorName                                               (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::CloseDoor(class AActor* Instance, const class FString& DoorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "CloseDoor");

	Params::PyLevelCommonNodes_CloseDoor Parms{};

	Parms.Instance = Instance;
	Parms.DoorName = std::move(DoorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// PythonFunction PyLevelCommonNodes.PyLevelCommonNodes.OpenDoor
// (Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Instance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           DoorName                                               (Parm, ZeroConstructor, HasGetValueTypeHash)

void UPyLevelCommonNodes::OpenDoor(class AActor* Instance, const class FString& DoorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PyLevelCommonNodes", "OpenDoor");

	Params::PyLevelCommonNodes_OpenDoor Parms{};

	Parms.Instance = Instance;
	Parms.DoorName = std::move(DoorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}


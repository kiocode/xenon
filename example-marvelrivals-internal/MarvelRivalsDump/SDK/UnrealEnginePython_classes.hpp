#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEnginePython

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "UnrealEnginePython_structs.hpp"


namespace SDK
{

// Class UnrealEnginePython.PyActor
// 0x0038 (0x04C8 - 0x0490)
class APyActor final : public AActor
{
public:
	class FString                                 PythonModule;                                      // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PythonClass;                                       // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickForceDisabled;                           // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonDisableAutoBinding;                          // 0x04B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B2[0x16];                                     // 0x04B2(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallPythonActorMethod(class FName Method_Name, const class FString& Args);
	bool CallPythonActorMethodBool(class FName Method_Name, const class FString& Args);
	class FString CallPythonActorMethodString(class FName Method_Name, const class FString& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyActor">();
	}
	static class APyActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyActor>();
	}
};
//static_assert(alignof(APyActor) == 0x000008, "Wrong alignment on APyActor");
//static_assert(sizeof(APyActor) == 0x0004C8, "Wrong size on APyActor");
//static_assert(offsetof(APyActor, PythonModule) == 0x000490, "Member 'APyActor::PythonModule' has a wrong offset!");
//static_assert(offsetof(APyActor, PythonClass) == 0x0004A0, "Member 'APyActor::PythonClass' has a wrong offset!");
//static_assert(offsetof(APyActor, PythonTickForceDisabled) == 0x0004B0, "Member 'APyActor::PythonTickForceDisabled' has a wrong offset!");
//static_assert(offsetof(APyActor, PythonDisableAutoBinding) == 0x0004B1, "Member 'APyActor::PythonDisableAutoBinding' has a wrong offset!");

// Class UnrealEnginePython.PyCharacter
// 0x0040 (0x0A50 - 0x0A10)
class APyCharacter final : public ACharacter
{
public:
	class FString                                 PythonModule;                                      // 0x0A10(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PythonClass;                                       // 0x0A20(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickForceDisabled;                           // 0x0A30(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonDisableAutoBinding;                          // 0x0A31(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A32[0x1E];                                     // 0x0A32(0x001E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallPyCharacterMethod(class FName Method_Name, const class FString& Args);
	bool CallPyCharacterMethodBool(class FName Method_Name, const class FString& Args);
	float CallPyCharacterMethodFloat(class FName Method_Name, const class FString& Args);
	class FString CallPyCharacterMethodString(class FName Method_Name, const class FString& Args);
	void SetPythonAttrBool(class FName Attr, bool Boolean);
	void SetPythonAttrFloat(class FName Attr, float Float);
	void SetPythonAttrInt(class FName Attr, int32 Integer);
	void SetPythonAttrObject(class FName Attr, class UObject* Object);
	void SetPythonAttrRotator(class FName Attr, const struct FRotator& Rotator);
	void SetPythonAttrString(class FName Attr, const class FString& String);
	void SetPythonAttrVector(class FName Attr, const struct FVector& Vector);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCharacter">();
	}
	static class APyCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCharacter>();
	}
};
//static_assert(alignof(APyCharacter) == 0x000010, "Wrong alignment on APyCharacter");
//static_assert(sizeof(APyCharacter) == 0x000A50, "Wrong size on APyCharacter");
//static_assert(offsetof(APyCharacter, PythonModule) == 0x000A10, "Member 'APyCharacter::PythonModule' has a wrong offset!");
//static_assert(offsetof(APyCharacter, PythonClass) == 0x000A20, "Member 'APyCharacter::PythonClass' has a wrong offset!");
//static_assert(offsetof(APyCharacter, PythonTickForceDisabled) == 0x000A30, "Member 'APyCharacter::PythonTickForceDisabled' has a wrong offset!");
//static_assert(offsetof(APyCharacter, PythonDisableAutoBinding) == 0x000A31, "Member 'APyCharacter::PythonDisableAutoBinding' has a wrong offset!");

// Class UnrealEnginePython.PyCommandlet
// 0x0000 (0x0088 - 0x0088)
class UPyCommandlet final : public UCommandlet
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCommandlet">();
	}
	static class UPyCommandlet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCommandlet>();
	}
};
//static_assert(alignof(UPyCommandlet) == 0x000008, "Wrong alignment on UPyCommandlet");
//static_assert(sizeof(UPyCommandlet) == 0x000088, "Wrong size on UPyCommandlet");

// Class UnrealEnginePython.PyHUD
// 0x0038 (0x05B8 - 0x0580)
class APyHUD final : public AHUD
{
public:
	class FString                                 PythonModule;                                      // 0x0580(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PythonClass;                                       // 0x0590(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickForceDisabled;                           // 0x05A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonDisableAutoBinding;                          // 0x05A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A2[0x16];                                     // 0x05A2(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallPythonHUDMethod(class FName Method_Name, const class FString& Args);
	bool CallPythonHUDMethodBool(class FName Method_Name, const class FString& Args);
	class FString CallPythonHUDMethodString(class FName Method_Name, const class FString& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyHUD">();
	}
	static class APyHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyHUD>();
	}
};
//static_assert(alignof(APyHUD) == 0x000008, "Wrong alignment on APyHUD");
//static_assert(sizeof(APyHUD) == 0x0005B8, "Wrong size on APyHUD");
//static_assert(offsetof(APyHUD, PythonModule) == 0x000580, "Member 'APyHUD::PythonModule' has a wrong offset!");
//static_assert(offsetof(APyHUD, PythonClass) == 0x000590, "Member 'APyHUD::PythonClass' has a wrong offset!");
//static_assert(offsetof(APyHUD, PythonTickForceDisabled) == 0x0005A0, "Member 'APyHUD::PythonTickForceDisabled' has a wrong offset!");
//static_assert(offsetof(APyHUD, PythonDisableAutoBinding) == 0x0005A1, "Member 'APyHUD::PythonDisableAutoBinding' has a wrong offset!");

// Class UnrealEnginePython.PyNativeWidgetHost
// 0x0000 (0x01C8 - 0x01C8)
class UPyNativeWidgetHost final : public UNativeWidgetHost
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyNativeWidgetHost">();
	}
	static class UPyNativeWidgetHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyNativeWidgetHost>();
	}
};
//static_assert(alignof(UPyNativeWidgetHost) == 0x000008, "Wrong alignment on UPyNativeWidgetHost");
//static_assert(sizeof(UPyNativeWidgetHost) == 0x0001C8, "Wrong size on UPyNativeWidgetHost");

// Class UnrealEnginePython.PyPawn
// 0x0038 (0x0568 - 0x0530)
class APyPawn final : public APawn
{
public:
	class FString                                 PythonModule;                                      // 0x0530(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PythonClass;                                       // 0x0540(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickForceDisabled;                           // 0x0550(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonDisableAutoBinding;                          // 0x0551(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_552[0x16];                                     // 0x0552(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallPythonPawnMethod(class FName Method_Name);
	bool CallPythonPawnMethodBool(class FName Method_Name);
	class FString CallPythonPawnMethodString(class FName Method_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyPawn">();
	}
	static class APyPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyPawn>();
	}
};
//static_assert(alignof(APyPawn) == 0x000008, "Wrong alignment on APyPawn");
//static_assert(sizeof(APyPawn) == 0x000568, "Wrong size on APyPawn");
//static_assert(offsetof(APyPawn, PythonModule) == 0x000530, "Member 'APyPawn::PythonModule' has a wrong offset!");
//static_assert(offsetof(APyPawn, PythonClass) == 0x000540, "Member 'APyPawn::PythonClass' has a wrong offset!");
//static_assert(offsetof(APyPawn, PythonTickForceDisabled) == 0x000550, "Member 'APyPawn::PythonTickForceDisabled' has a wrong offset!");
//static_assert(offsetof(APyPawn, PythonDisableAutoBinding) == 0x000551, "Member 'APyPawn::PythonDisableAutoBinding' has a wrong offset!");

// Class UnrealEnginePython.TestOnlyObject
// 0x0000 (0x0030 - 0x0030)
class UTestOnlyObject final : public UObject
{
public:
	static int32 AddRefCount(struct FTestOnlyRefCount& InOutRefCount);
	static int32 GetOwnedRefs(const struct FTestOnlyRefCount& RefCount);
	static int32 GetTotalRefs();
	static struct FTestOnlyRefCount NewRefCount();
	static struct FTestOnlyRefCount NewRefCount2();
	static void OutRefCount(struct FTestOnlyRefCount* OutRefCount_0);
	static void OutRefCount2(struct FTestOnlyRefCount* OutRefCount);
	static void OutRefCount_NoImpl(struct FTestOnlyRefCount* OutRefCount);

	struct FTestOnlyRefCount BP_NewRefCount();
	struct FTestOnlyRefCount Call_BP_NewRefCount();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TestOnlyObject">();
	}
	static class UTestOnlyObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestOnlyObject>();
	}
};
//static_assert(alignof(UTestOnlyObject) == 0x000008, "Wrong alignment on UTestOnlyObject");
//static_assert(sizeof(UTestOnlyObject) == 0x000030, "Wrong size on UTestOnlyObject");

// Class UnrealEnginePython.PythonBlueprintFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UPythonBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ExecutePythonScript(const class FString& Script);
	static void ExecutePythonString(const class FString& PythonCmd);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonBlueprintFunctionLibrary">();
	}
	static class UPythonBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonBlueprintFunctionLibrary>();
	}
};
//static_assert(alignof(UPythonBlueprintFunctionLibrary) == 0x000008, "Wrong alignment on UPythonBlueprintFunctionLibrary");
//static_assert(sizeof(UPythonBlueprintFunctionLibrary) == 0x000030, "Wrong size on UPythonBlueprintFunctionLibrary");

// Class UnrealEnginePython.PythonClass
// 0x0048 (0x02C8 - 0x0280)
class UPythonClass final : public UClass
{
public:
	uint8                                         Pad_280[0x8];                                      // 0x0280(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LegacyClass;                                       // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 AuthoritativeClass;                                // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_298[0x28];                                     // 0x0298(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumReplicatedProperties;                           // 0x02C0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonClass">();
	}
	static class UPythonClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonClass>();
	}
};
//static_assert(alignof(UPythonClass) == 0x000008, "Wrong alignment on UPythonClass");
//static_assert(sizeof(UPythonClass) == 0x0002C8, "Wrong size on UPythonClass");
//static_assert(offsetof(UPythonClass, LegacyClass) == 0x000288, "Member 'UPythonClass::LegacyClass' has a wrong offset!");
//static_assert(offsetof(UPythonClass, AuthoritativeClass) == 0x000290, "Member 'UPythonClass::AuthoritativeClass' has a wrong offset!");
//static_assert(offsetof(UPythonClass, NumReplicatedProperties) == 0x0002C0, "Member 'UPythonClass::NumReplicatedProperties' has a wrong offset!");

// Class UnrealEnginePython.PythonComponent
// 0x0040 (0x0130 - 0x00F0)
class UPythonComponent final : public UActorComponent
{
public:
	class FString                                 PythonModule;                                      // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PythonClass;                                       // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickForceDisabled;                           // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonDisableAutoBinding;                          // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickEnableGenerator;                         // 0x0112(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113[0x1D];                                     // 0x0113(0x001D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallPythonComponentMethod(class FName Method_Name, const class FString& Args);
	bool CallPythonComponentMethodBool(class FName Method_Name, const class FString& Args);
	float CallPythonComponentMethodFloat(class FName Method_Name, const class FString& Args);
	int32 CallPythonComponentMethodInt(class FName Method_Name, const class FString& Args);
	TMap<class FString, class FString> CallPythonComponentMethodMap(class FName Method_Name, const class FString& Args);
	class UObject* CallPythonComponentMethodObject(class FName Method_Name, class UObject* Arg);
	class FString CallPythonComponentMethodString(class FName Method_Name, const class FString& Args);
	void CallPythonComponentMethodStringArray(class FName Method_Name, const class FString& Args, TArray<class FString>* Output_strings);
	void InitializePythonComponent();
	void SetPythonAttrBool(class FName Attr, bool Boolean);
	void SetPythonAttrFloat(class FName Attr, float Float);
	void SetPythonAttrInt(class FName Attr, int32 Integer);
	void SetPythonAttrObject(class FName Attr, class UObject* Object);
	void SetPythonAttrRotator(class FName Attr, const struct FRotator& Rotator);
	void SetPythonAttrString(class FName Attr, const class FString& String);
	void SetPythonAttrVector(class FName Attr, const struct FVector& Vector);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonComponent">();
	}
	static class UPythonComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonComponent>();
	}
};
//static_assert(alignof(UPythonComponent) == 0x000008, "Wrong alignment on UPythonComponent");
//static_assert(sizeof(UPythonComponent) == 0x000130, "Wrong size on UPythonComponent");
//static_assert(offsetof(UPythonComponent, PythonModule) == 0x0000F0, "Member 'UPythonComponent::PythonModule' has a wrong offset!");
//static_assert(offsetof(UPythonComponent, PythonClass) == 0x000100, "Member 'UPythonComponent::PythonClass' has a wrong offset!");
//static_assert(offsetof(UPythonComponent, PythonTickForceDisabled) == 0x000110, "Member 'UPythonComponent::PythonTickForceDisabled' has a wrong offset!");
//static_assert(offsetof(UPythonComponent, PythonDisableAutoBinding) == 0x000111, "Member 'UPythonComponent::PythonDisableAutoBinding' has a wrong offset!");
//static_assert(offsetof(UPythonComponent, PythonTickEnableGenerator) == 0x000112, "Member 'UPythonComponent::PythonTickEnableGenerator' has a wrong offset!");

// Class UnrealEnginePython.PythonDelegate
// 0x0028 (0x0058 - 0x0030)
class UPythonDelegate final : public UObject
{
public:
	TWeakObjectPtr<class UObject>                 OwningObject;                                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObject>                 CallerObject;                                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFunction*                              DelegateSignature;                                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PyFakeCallable();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonDelegate">();
	}
	static class UPythonDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonDelegate>();
	}
};
//static_assert(alignof(UPythonDelegate) == 0x000008, "Wrong alignment on UPythonDelegate");
//static_assert(sizeof(UPythonDelegate) == 0x000058, "Wrong size on UPythonDelegate");
//static_assert(offsetof(UPythonDelegate, OwningObject) == 0x000030, "Member 'UPythonDelegate::OwningObject' has a wrong offset!");
//static_assert(offsetof(UPythonDelegate, CallerObject) == 0x000038, "Member 'UPythonDelegate::CallerObject' has a wrong offset!");
//static_assert(offsetof(UPythonDelegate, DelegateSignature) == 0x000040, "Member 'UPythonDelegate::DelegateSignature' has a wrong offset!");

// Class UnrealEnginePython.PythonEnum
// 0x0008 (0x00D0 - 0x00C8)
class UPythonEnum final : public UUserDefinedEnum
{
public:
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonEnum">();
	}
	static class UPythonEnum* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonEnum>();
	}
};
//static_assert(alignof(UPythonEnum) == 0x000008, "Wrong alignment on UPythonEnum");
//static_assert(sizeof(UPythonEnum) == 0x0000D0, "Wrong size on UPythonEnum");

// Class UnrealEnginePython.PythonFunction
// 0x0018 (0x0108 - 0x00F0)
class UPythonFunction final : public UFunction
{
public:
	uint8                                         Pad_F0[0x18];                                      // 0x00F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonFunction">();
	}
	static class UPythonFunction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonFunction>();
	}
};
//static_assert(alignof(UPythonFunction) == 0x000008, "Wrong alignment on UPythonFunction");
//static_assert(sizeof(UPythonFunction) == 0x000108, "Wrong size on UPythonFunction");

// Class UnrealEnginePython.PythonScript
// 0x0030 (0x0060 - 0x0030)
class UPythonScript final : public UObject
{
public:
	class FString                                 ScriptPath;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FunctionToCall;                                    // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         FunctionArgs;                                      // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void Run();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonScript">();
	}
	static class UPythonScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonScript>();
	}
};
//static_assert(alignof(UPythonScript) == 0x000008, "Wrong alignment on UPythonScript");
//static_assert(sizeof(UPythonScript) == 0x000060, "Wrong size on UPythonScript");
//static_assert(offsetof(UPythonScript, ScriptPath) == 0x000030, "Member 'UPythonScript::ScriptPath' has a wrong offset!");
//static_assert(offsetof(UPythonScript, FunctionToCall) == 0x000040, "Member 'UPythonScript::FunctionToCall' has a wrong offset!");
//static_assert(offsetof(UPythonScript, FunctionArgs) == 0x000050, "Member 'UPythonScript::FunctionArgs' has a wrong offset!");

// Class UnrealEnginePython.PythonSettings
// 0x0068 (0x0098 - 0x0030)
class UPythonSettings final : public UObject
{
public:
	bool                                          bWritePycFiles;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPythonSourceMode                             PySourceMode;                                      // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ScriptPack;                                        // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourcePath;                                        // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StdLibraryPath;                                    // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         SitePackagePaths;                                  // 0x0068(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         PreImportModules;                                  // 0x0078(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          bEnableMainGILHold;                                // 0x0088(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GILCheckerInterval;                                // 0x0090(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonSettings">();
	}
	static class UPythonSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonSettings>();
	}
};
//static_assert(alignof(UPythonSettings) == 0x000008, "Wrong alignment on UPythonSettings");
//static_assert(sizeof(UPythonSettings) == 0x000098, "Wrong size on UPythonSettings");
//static_assert(offsetof(UPythonSettings, bWritePycFiles) == 0x000030, "Member 'UPythonSettings::bWritePycFiles' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, PySourceMode) == 0x000031, "Member 'UPythonSettings::PySourceMode' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, ScriptPack) == 0x000038, "Member 'UPythonSettings::ScriptPack' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, SourcePath) == 0x000048, "Member 'UPythonSettings::SourcePath' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, StdLibraryPath) == 0x000058, "Member 'UPythonSettings::StdLibraryPath' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, SitePackagePaths) == 0x000068, "Member 'UPythonSettings::SitePackagePaths' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, PreImportModules) == 0x000078, "Member 'UPythonSettings::PreImportModules' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, bEnableMainGILHold) == 0x000088, "Member 'UPythonSettings::bEnableMainGILHold' has a wrong offset!");
//static_assert(offsetof(UPythonSettings, GILCheckerInterval) == 0x000090, "Member 'UPythonSettings::GILCheckerInterval' has a wrong offset!");

// Class UnrealEnginePython.PythonEditorSettings
// 0x0030 (0x0060 - 0x0030)
class UPythonEditorSettings final : public UObject
{
public:
	class FString                                 EditorSourcePath;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         EditorPreImportModules;                            // 0x0040(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         ExcludedImportModules;                             // 0x0050(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonEditorSettings">();
	}
	static class UPythonEditorSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonEditorSettings>();
	}
};
//static_assert(alignof(UPythonEditorSettings) == 0x000008, "Wrong alignment on UPythonEditorSettings");
//static_assert(sizeof(UPythonEditorSettings) == 0x000060, "Wrong size on UPythonEditorSettings");
//static_assert(offsetof(UPythonEditorSettings, EditorSourcePath) == 0x000030, "Member 'UPythonEditorSettings::EditorSourcePath' has a wrong offset!");
//static_assert(offsetof(UPythonEditorSettings, EditorPreImportModules) == 0x000040, "Member 'UPythonEditorSettings::EditorPreImportModules' has a wrong offset!");
//static_assert(offsetof(UPythonEditorSettings, ExcludedImportModules) == 0x000050, "Member 'UPythonEditorSettings::ExcludedImportModules' has a wrong offset!");

// Class UnrealEnginePython.PythonUserSettings
// 0x0008 (0x0038 - 0x0030)
class UPythonUserSettings final : public UObject
{
public:
	bool                                          bHotReloadAll;                                     // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EExceptionNotificationEnabled                 EnableExceptionNotification;                       // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonUserSettings">();
	}
	static class UPythonUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonUserSettings>();
	}
};
//static_assert(alignof(UPythonUserSettings) == 0x000008, "Wrong alignment on UPythonUserSettings");
//static_assert(sizeof(UPythonUserSettings) == 0x000038, "Wrong size on UPythonUserSettings");
//static_assert(offsetof(UPythonUserSettings, bHotReloadAll) == 0x000030, "Member 'UPythonUserSettings::bHotReloadAll' has a wrong offset!");
//static_assert(offsetof(UPythonUserSettings, EnableExceptionNotification) == 0x000031, "Member 'UPythonUserSettings::EnableExceptionNotification' has a wrong offset!");

// Class UnrealEnginePython.PythonStruct
// 0x0020 (0x0138 - 0x0118)
class UPythonStruct final : public UUserDefinedStruct
{
public:
	uint8                                         Pad_118[0x20];                                     // 0x0118(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PythonStruct">();
	}
	static class UPythonStruct* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPythonStruct>();
	}
};
//static_assert(alignof(UPythonStruct) == 0x000008, "Wrong alignment on UPythonStruct");
//static_assert(sizeof(UPythonStruct) == 0x000138, "Wrong size on UPythonStruct");

// Class UnrealEnginePython.PyUserWidget
// 0x0040 (0x03F8 - 0x03B8)
class UPyUserWidget final : public UUserWidget
{
public:
	class FString                                 PythonModule;                                      // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PythonClass;                                       // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonTickForceDisabled;                           // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PythonPaintForceDisabled;                          // 0x03D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UPyNativeWidgetHost>     PyNativeWidgetHost;                                // 0x03DC(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E4[0x14];                                     // 0x03E4(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallPythonUserWidgetMethod(class FName Method_Name, const class FString& Args);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUserWidget">();
	}
	static class UPyUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUserWidget>();
	}
};
//static_assert(alignof(UPyUserWidget) == 0x000008, "Wrong alignment on UPyUserWidget");
//static_assert(sizeof(UPyUserWidget) == 0x0003F8, "Wrong size on UPyUserWidget");
//static_assert(offsetof(UPyUserWidget, PythonModule) == 0x0003B8, "Member 'UPyUserWidget::PythonModule' has a wrong offset!");
//static_assert(offsetof(UPyUserWidget, PythonClass) == 0x0003C8, "Member 'UPyUserWidget::PythonClass' has a wrong offset!");
//static_assert(offsetof(UPyUserWidget, PythonTickForceDisabled) == 0x0003D8, "Member 'UPyUserWidget::PythonTickForceDisabled' has a wrong offset!");
//static_assert(offsetof(UPyUserWidget, PythonPaintForceDisabled) == 0x0003D9, "Member 'UPyUserWidget::PythonPaintForceDisabled' has a wrong offset!");
//static_assert(offsetof(UPyUserWidget, PyNativeWidgetHost) == 0x0003DC, "Member 'UPyUserWidget::PyNativeWidgetHost' has a wrong offset!");

// Class UnrealEnginePython.TestInvokeInnerObject
// 0x0000 (0x0030 - 0x0030)
class UTestInvokeInnerObject final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TestInvokeInnerObject">();
	}
	static class UTestInvokeInnerObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestInvokeInnerObject>();
	}
};
//static_assert(alignof(UTestInvokeInnerObject) == 0x000008, "Wrong alignment on UTestInvokeInnerObject");
//static_assert(sizeof(UTestInvokeInnerObject) == 0x000030, "Wrong size on UTestInvokeInnerObject");

// Class UnrealEnginePython.TestInvokeObject
// 0x0060 (0x0090 - 0x0030)
class UTestInvokeObject final : public UObject
{
public:
	int32                                         Int32Val;                                          // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StrVal;                                            // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTestInvokeStruct                      StructValue;                                       // 0x0048(0x0040)(Edit, NativeAccessSpecifierPublic)
	class UTestInvokeInnerObject*                 ObjectValue;                                       // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	int32 Call_int();
	class UTestInvokeObject* Call_obj();
	class FString Call_str();
	struct FTestInvokeStruct Call_struct();
	void Call_void();
	void Call_void_int(int32 InArg1);
	void Call_void_int_int(int32 InArg1, int32 InArg2);
	void Call_void_int_int_float(int32 InArg1, int32 InArg2, float IntArg3);
	void Call_void_object(class UTestInvokeObject* InArg1);
	void Call_void_str(const class FString& InArg1);
	void Call_void_struct(const struct FTestInvokeStruct& InArg1);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TestInvokeObject">();
	}
	static class UTestInvokeObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestInvokeObject>();
	}
};
//static_assert(alignof(UTestInvokeObject) == 0x000008, "Wrong alignment on UTestInvokeObject");
//static_assert(sizeof(UTestInvokeObject) == 0x000090, "Wrong size on UTestInvokeObject");
//static_assert(offsetof(UTestInvokeObject, Int32Val) == 0x000030, "Member 'UTestInvokeObject::Int32Val' has a wrong offset!");
//static_assert(offsetof(UTestInvokeObject, StrVal) == 0x000038, "Member 'UTestInvokeObject::StrVal' has a wrong offset!");
//static_assert(offsetof(UTestInvokeObject, StructValue) == 0x000048, "Member 'UTestInvokeObject::StructValue' has a wrong offset!");
//static_assert(offsetof(UTestInvokeObject, ObjectValue) == 0x000088, "Member 'UTestInvokeObject::ObjectValue' has a wrong offset!");

}


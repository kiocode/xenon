#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadingScreen

#include "Basic.hpp"

#include "MoviePlayer_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// ScriptStruct LoadingScreen.LoadingScreenDescription
// 0x0078 (0x0078 - 0x0000)
struct FLoadingScreenDescription final
{
public:
	TSubclassOf<class UUserWidget>                LoadingWidgetClass;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumLoadingScreenDisplayTime;                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCompleteWhenLoadingCompletes;                 // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoviesAreSkippable;                               // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForManualStop;                                // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoviePlaybackType                            PlaybackType;                                      // 0x000F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         MoviePaths;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowUIOverlay;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LoadingText;                                       // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                Images;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EStretch                                      ImageStretch;                                      // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x0054(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TipBackgroundColor;                                // 0x0064(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLoadingScreenDescription) == 0x000008, "Wrong alignment on FLoadingScreenDescription");
static_assert(sizeof(FLoadingScreenDescription) == 0x000078, "Wrong size on FLoadingScreenDescription");
static_assert(offsetof(FLoadingScreenDescription, LoadingWidgetClass) == 0x000000, "Member 'FLoadingScreenDescription::LoadingWidgetClass' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, MinimumLoadingScreenDisplayTime) == 0x000008, "Member 'FLoadingScreenDescription::MinimumLoadingScreenDisplayTime' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bAutoCompleteWhenLoadingCompletes) == 0x00000C, "Member 'FLoadingScreenDescription::bAutoCompleteWhenLoadingCompletes' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bMoviesAreSkippable) == 0x00000D, "Member 'FLoadingScreenDescription::bMoviesAreSkippable' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bWaitForManualStop) == 0x00000E, "Member 'FLoadingScreenDescription::bWaitForManualStop' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, PlaybackType) == 0x00000F, "Member 'FLoadingScreenDescription::PlaybackType' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, MoviePaths) == 0x000010, "Member 'FLoadingScreenDescription::MoviePaths' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, bShowUIOverlay) == 0x000020, "Member 'FLoadingScreenDescription::bShowUIOverlay' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, LoadingText) == 0x000028, "Member 'FLoadingScreenDescription::LoadingText' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, Images) == 0x000040, "Member 'FLoadingScreenDescription::Images' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, ImageStretch) == 0x000050, "Member 'FLoadingScreenDescription::ImageStretch' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, BackgroundColor) == 0x000054, "Member 'FLoadingScreenDescription::BackgroundColor' has a wrong offset!");
static_assert(offsetof(FLoadingScreenDescription, TipBackgroundColor) == 0x000064, "Member 'FLoadingScreenDescription::TipBackgroundColor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104771

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// PythonFunction PyAbility_104771.PyWidget_104771.SetAbility
// 0x0008 (0x0008 - 0x0000)
struct PyWidget_104771_SetAbility final
{
public:
	class UMarvelGameplayAbility*                 Ability_0;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyWidget_104771_SetAbility) == 0x000008, "Wrong alignment on PyWidget_104771_SetAbility");
static_assert(sizeof(PyWidget_104771_SetAbility) == 0x000008, "Wrong size on PyWidget_104771_SetAbility");
static_assert(offsetof(PyWidget_104771_SetAbility, Ability_0) == 0x000000, "Member 'PyWidget_104771_SetAbility::Ability_0' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104771_New_OnMovementModeChanged final
{
public:
	class ACharacter*                             Char;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Pre;                                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Precustom;                                         // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnMovementModeChanged) == 0x000008, "Wrong alignment on PyAbility_104771_New_OnMovementModeChanged");
static_assert(sizeof(PyAbility_104771_New_OnMovementModeChanged) == 0x000010, "Wrong size on PyAbility_104771_New_OnMovementModeChanged");
static_assert(offsetof(PyAbility_104771_New_OnMovementModeChanged, Char) == 0x000000, "Member 'PyAbility_104771_New_OnMovementModeChanged::Char' has a wrong offset!");
static_assert(offsetof(PyAbility_104771_New_OnMovementModeChanged, Pre) == 0x000008, "Member 'PyAbility_104771_New_OnMovementModeChanged::Pre' has a wrong offset!");
static_assert(offsetof(PyAbility_104771_New_OnMovementModeChanged, Precustom) == 0x000009, "Member 'PyAbility_104771_New_OnMovementModeChanged::Precustom' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnSelectRegionFinish
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104771_New_OnSelectRegionFinish final
{
public:
	bool                                          bActivateByTimerOrMT;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnSelectRegionFinish) == 0x000001, "Wrong alignment on PyAbility_104771_New_OnSelectRegionFinish");
static_assert(sizeof(PyAbility_104771_New_OnSelectRegionFinish) == 0x000001, "Wrong size on PyAbility_104771_New_OnSelectRegionFinish");
static_assert(offsetof(PyAbility_104771_New_OnSelectRegionFinish, bActivateByTimerOrMT) == 0x000000, "Member 'PyAbility_104771_New_OnSelectRegionFinish::bActivateByTimerOrMT' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnPressCameraChangeKey
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104771_New_OnPressCameraChangeKey final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnPressCameraChangeKey) == 0x000004, "Wrong alignment on PyAbility_104771_New_OnPressCameraChangeKey");
static_assert(sizeof(PyAbility_104771_New_OnPressCameraChangeKey) == 0x000004, "Wrong size on PyAbility_104771_New_OnPressCameraChangeKey");
static_assert(offsetof(PyAbility_104771_New_OnPressCameraChangeKey, TimeWaited) == 0x000000, "Member 'PyAbility_104771_New_OnPressCameraChangeKey::TimeWaited' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnReleaseCameraChangeKey
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104771_New_OnReleaseCameraChangeKey final
{
public:
	float                                         TimeWait;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnReleaseCameraChangeKey) == 0x000004, "Wrong alignment on PyAbility_104771_New_OnReleaseCameraChangeKey");
static_assert(sizeof(PyAbility_104771_New_OnReleaseCameraChangeKey) == 0x000004, "Wrong size on PyAbility_104771_New_OnReleaseCameraChangeKey");
static_assert(offsetof(PyAbility_104771_New_OnReleaseCameraChangeKey, TimeWait) == 0x000000, "Member 'PyAbility_104771_New_OnReleaseCameraChangeKey::TimeWait' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnDevourSwimMontageEvent
// 0x02A0 (0x02A0 - 0x0000)
struct PyAbility_104771_New_OnDevourSwimMontageEvent final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Data;                                              // 0x0010(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104771_New_OnDevourSwimMontageEvent) == 0x000008, "Wrong alignment on PyAbility_104771_New_OnDevourSwimMontageEvent");
static_assert(sizeof(PyAbility_104771_New_OnDevourSwimMontageEvent) == 0x0002A0, "Wrong size on PyAbility_104771_New_OnDevourSwimMontageEvent");
static_assert(offsetof(PyAbility_104771_New_OnDevourSwimMontageEvent, Tag) == 0x000000, "Member 'PyAbility_104771_New_OnDevourSwimMontageEvent::Tag' has a wrong offset!");
static_assert(offsetof(PyAbility_104771_New_OnDevourSwimMontageEvent, Data) == 0x000010, "Member 'PyAbility_104771_New_OnDevourSwimMontageEvent::Data' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnSpitOutEnemy
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104771_New_OnSpitOutEnemy final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnSpitOutEnemy) == 0x000004, "Wrong alignment on PyAbility_104771_New_OnSpitOutEnemy");
static_assert(sizeof(PyAbility_104771_New_OnSpitOutEnemy) == 0x000004, "Wrong size on PyAbility_104771_New_OnSpitOutEnemy");
static_assert(offsetof(PyAbility_104771_New_OnSpitOutEnemy, TimeWaited) == 0x000000, "Member 'PyAbility_104771_New_OnSpitOutEnemy::TimeWaited' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnSpitOutAlly
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104771_New_OnSpitOutAlly final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnSpitOutAlly) == 0x000004, "Wrong alignment on PyAbility_104771_New_OnSpitOutAlly");
static_assert(sizeof(PyAbility_104771_New_OnSpitOutAlly) == 0x000004, "Wrong size on PyAbility_104771_New_OnSpitOutAlly");
static_assert(offsetof(PyAbility_104771_New_OnSpitOutAlly, TimeWaited) == 0x000000, "Member 'PyAbility_104771_New_OnSpitOutAlly::TimeWaited' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnJeffDivingWindowStateChanged
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104771_New_OnJeffDivingWindowStateChanged final
{
public:
	bool                                          IsWindowOpen;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnJeffDivingWindowStateChanged) == 0x000001, "Wrong alignment on PyAbility_104771_New_OnJeffDivingWindowStateChanged");
static_assert(sizeof(PyAbility_104771_New_OnJeffDivingWindowStateChanged) == 0x000001, "Wrong size on PyAbility_104771_New_OnJeffDivingWindowStateChanged");
static_assert(offsetof(PyAbility_104771_New_OnJeffDivingWindowStateChanged, IsWindowOpen) == 0x000000, "Member 'PyAbility_104771_New_OnJeffDivingWindowStateChanged::IsWindowOpen' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnTryGetOnWallBegin
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104771_New_OnTryGetOnWallBegin final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnTryGetOnWallBegin) == 0x000004, "Wrong alignment on PyAbility_104771_New_OnTryGetOnWallBegin");
static_assert(sizeof(PyAbility_104771_New_OnTryGetOnWallBegin) == 0x000004, "Wrong size on PyAbility_104771_New_OnTryGetOnWallBegin");
static_assert(offsetof(PyAbility_104771_New_OnTryGetOnWallBegin, Time) == 0x000000, "Member 'PyAbility_104771_New_OnTryGetOnWallBegin::Time' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnTryGetOnWallCancelled
// 0x0004 (0x0004 - 0x0000)
struct PyAbility_104771_New_OnTryGetOnWallCancelled final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_OnTryGetOnWallCancelled) == 0x000004, "Wrong alignment on PyAbility_104771_New_OnTryGetOnWallCancelled");
static_assert(sizeof(PyAbility_104771_New_OnTryGetOnWallCancelled) == 0x000004, "Wrong size on PyAbility_104771_New_OnTryGetOnWallCancelled");
static_assert(offsetof(PyAbility_104771_New_OnTryGetOnWallCancelled, Time) == 0x000000, "Member 'PyAbility_104771_New_OnTryGetOnWallCancelled::Time' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.OnNetSync
// 0x0168 (0x0168 - 0x0000)
struct PyAbility_104771_New_OnNetSync final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0168)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104771_New_OnNetSync) == 0x000008, "Wrong alignment on PyAbility_104771_New_OnNetSync");
static_assert(sizeof(PyAbility_104771_New_OnNetSync) == 0x000168, "Wrong size on PyAbility_104771_New_OnNetSync");
static_assert(offsetof(PyAbility_104771_New_OnNetSync, Data) == 0x000000, "Member 'PyAbility_104771_New_OnNetSync::Data' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.TryMakeTriggerContext
// 0x0298 (0x0298 - 0x0000)
struct PyAbility_104771_New_TryMakeTriggerContext final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_TryMakeTriggerContext) == 0x000008, "Wrong alignment on PyAbility_104771_New_TryMakeTriggerContext");
static_assert(sizeof(PyAbility_104771_New_TryMakeTriggerContext) == 0x000298, "Wrong size on PyAbility_104771_New_TryMakeTriggerContext");
static_assert(offsetof(PyAbility_104771_New_TryMakeTriggerContext, EventData) == 0x000000, "Member 'PyAbility_104771_New_TryMakeTriggerContext::EventData' has a wrong offset!");
static_assert(offsetof(PyAbility_104771_New_TryMakeTriggerContext, ReturnValue) == 0x000290, "Member 'PyAbility_104771_New_TryMakeTriggerContext::ReturnValue' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.K2_ActivateAbilityFromEvent
// 0x0290 (0x0290 - 0x0000)
struct PyAbility_104771_New_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyAbility_104771_New_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on PyAbility_104771_New_K2_ActivateAbilityFromEvent");
static_assert(sizeof(PyAbility_104771_New_K2_ActivateAbilityFromEvent) == 0x000290, "Wrong size on PyAbility_104771_New_K2_ActivateAbilityFromEvent");
static_assert(offsetof(PyAbility_104771_New_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'PyAbility_104771_New_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.NativeOnMontageEvent
// 0x0010 (0x0010 - 0x0000)
struct PyAbility_104771_New_NativeOnMontageEvent final
{
public:
	class FString                                 EventTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_NativeOnMontageEvent) == 0x000008, "Wrong alignment on PyAbility_104771_New_NativeOnMontageEvent");
static_assert(sizeof(PyAbility_104771_New_NativeOnMontageEvent) == 0x000010, "Wrong size on PyAbility_104771_New_NativeOnMontageEvent");
static_assert(offsetof(PyAbility_104771_New_NativeOnMontageEvent, EventTag) == 0x000000, "Member 'PyAbility_104771_New_NativeOnMontageEvent::EventTag' has a wrong offset!");

// PythonFunction PyAbility_104771.PyAbility_104771_New.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct PyAbility_104771_New_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyAbility_104771_New_K2_OnEndAbility) == 0x000001, "Wrong alignment on PyAbility_104771_New_K2_OnEndAbility");
static_assert(sizeof(PyAbility_104771_New_K2_OnEndAbility) == 0x000001, "Wrong size on PyAbility_104771_New_K2_OnEndAbility");
static_assert(offsetof(PyAbility_104771_New_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'PyAbility_104771_New_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// PythonFunction PyAbility_104771.PyCue_Buff_10477110.OnWidgetShowUp
// 0x0010 (0x0010 - 0x0000)
struct PyCue_Buff_10477110_OnWidgetShowUp final
{
public:
	class AMarvelBaseCharacter*                   TargetCharacter;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            DisplayWidget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Buff_10477110_OnWidgetShowUp) == 0x000008, "Wrong alignment on PyCue_Buff_10477110_OnWidgetShowUp");
static_assert(sizeof(PyCue_Buff_10477110_OnWidgetShowUp) == 0x000010, "Wrong size on PyCue_Buff_10477110_OnWidgetShowUp");
static_assert(offsetof(PyCue_Buff_10477110_OnWidgetShowUp, TargetCharacter) == 0x000000, "Member 'PyCue_Buff_10477110_OnWidgetShowUp::TargetCharacter' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10477110_OnWidgetShowUp, DisplayWidget) == 0x000008, "Member 'PyCue_Buff_10477110_OnWidgetShowUp::DisplayWidget' has a wrong offset!");

// PythonFunction PyAbility_104771.PyCue_Buff_10477110.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Buff_10477110_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Buff_10477110_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Buff_10477110_OnRemoveFX");
static_assert(sizeof(PyCue_Buff_10477110_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Buff_10477110_OnRemoveFX");
static_assert(offsetof(PyCue_Buff_10477110_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Buff_10477110_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Buff_10477110_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Buff_10477110_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyAbility_104771.PyCue_Scope_HitImpact_10477101.OnExecuteAudio
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Scope_HitImpact_10477101_OnExecuteAudio final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Scope_HitImpact_10477101_OnExecuteAudio) == 0x000008, "Wrong alignment on PyCue_Scope_HitImpact_10477101_OnExecuteAudio");
static_assert(sizeof(PyCue_Scope_HitImpact_10477101_OnExecuteAudio) == 0x0001C0, "Wrong size on PyCue_Scope_HitImpact_10477101_OnExecuteAudio");
static_assert(offsetof(PyCue_Scope_HitImpact_10477101_OnExecuteAudio, MyTarget) == 0x000000, "Member 'PyCue_Scope_HitImpact_10477101_OnExecuteAudio::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Scope_HitImpact_10477101_OnExecuteAudio, Parameters) == 0x000008, "Member 'PyCue_Scope_HitImpact_10477101_OnExecuteAudio::Parameters' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Amb_Practicerange_Gorge_Far

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Amb_Practicerange_Gorge_Far.Amb_Practicerange_Gorge_Far_C
// 0x0060 (0x04F0 - 0x0490)
class AAmb_Practicerange_Gorge_Far_C final : public AActor
{
public:
	class USphereComponent*                       Sphere9;                                           // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere8;                                           // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere7;                                           // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere6;                                           // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere5;                                           // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere4;                                           // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere3;                                           // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere2;                                           // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere1;                                           // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMultiPositionComponent*                MultiPosition;                                     // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Amb_Practicerange_Gorge_Far_C">();
	}
	static class AAmb_Practicerange_Gorge_Far_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmb_Practicerange_Gorge_Far_C>();
	}
};
//static_assert(alignof(AAmb_Practicerange_Gorge_Far_C) == 0x000008, "Wrong alignment on AAmb_Practicerange_Gorge_Far_C");
//static_assert(sizeof(AAmb_Practicerange_Gorge_Far_C) == 0x0004F0, "Wrong size on AAmb_Practicerange_Gorge_Far_C");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere9) == 0x000490, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere9' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere8) == 0x000498, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere8' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere7) == 0x0004A0, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere7' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere6) == 0x0004A8, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere6' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere5) == 0x0004B0, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere5' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere4) == 0x0004B8, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere4' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere3) == 0x0004C0, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere3' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere2) == 0x0004C8, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere2' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere1) == 0x0004D0, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere1' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, Sphere) == 0x0004D8, "Member 'AAmb_Practicerange_Gorge_Far_C::Sphere' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, MultiPosition) == 0x0004E0, "Member 'AAmb_Practicerange_Gorge_Far_C::MultiPosition' has a wrong offset!");
//static_assert(offsetof(AAmb_Practicerange_Gorge_Far_C, DefaultSceneRoot) == 0x0004E8, "Member 'AAmb_Practicerange_Gorge_Far_C::DefaultSceneRoot' has a wrong offset!");

}


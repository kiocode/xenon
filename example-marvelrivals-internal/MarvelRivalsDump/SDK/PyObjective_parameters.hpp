#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyObjective

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// DelegateFunction PyObjective.PyObjective.ProgressChangedDispatcher__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PyObjective_ProgressChangedDispatcher__DelegateSignature final
{
public:
	class AActor*                                 Objective;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_ProgressChangedDispatcher__DelegateSignature) == 0x000008, "Wrong alignment on PyObjective_ProgressChangedDispatcher__DelegateSignature");
static_assert(sizeof(PyObjective_ProgressChangedDispatcher__DelegateSignature) == 0x000010, "Wrong size on PyObjective_ProgressChangedDispatcher__DelegateSignature");
static_assert(offsetof(PyObjective_ProgressChangedDispatcher__DelegateSignature, Objective) == 0x000000, "Member 'PyObjective_ProgressChangedDispatcher__DelegateSignature::Objective' has a wrong offset!");
static_assert(offsetof(PyObjective_ProgressChangedDispatcher__DelegateSignature, Progress) == 0x000008, "Member 'PyObjective_ProgressChangedDispatcher__DelegateSignature::Progress' has a wrong offset!");

// DelegateFunction PyObjective.PyObjective.DispatcherProgressInfoChange__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PyObjective_DispatcherProgressInfoChange__DelegateSignature final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_DispatcherProgressInfoChange__DelegateSignature) == 0x000004, "Wrong alignment on PyObjective_DispatcherProgressInfoChange__DelegateSignature");
static_assert(sizeof(PyObjective_DispatcherProgressInfoChange__DelegateSignature) == 0x000008, "Wrong size on PyObjective_DispatcherProgressInfoChange__DelegateSignature");
static_assert(offsetof(PyObjective_DispatcherProgressInfoChange__DelegateSignature, Progress) == 0x000000, "Member 'PyObjective_DispatcherProgressInfoChange__DelegateSignature::Progress' has a wrong offset!");
static_assert(offsetof(PyObjective_DispatcherProgressInfoChange__DelegateSignature, Speed) == 0x000004, "Member 'PyObjective_DispatcherProgressInfoChange__DelegateSignature::Speed' has a wrong offset!");

// PythonFunction PyObjective.PyObjective.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PyObjective_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_ReceiveEndPlay) == 0x000001, "Wrong alignment on PyObjective_ReceiveEndPlay");
static_assert(sizeof(PyObjective_ReceiveEndPlay) == 0x000001, "Wrong size on PyObjective_ReceiveEndPlay");
static_assert(offsetof(PyObjective_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PyObjective_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// PythonFunction PyObjective.PyObjective.ObjectiveEndFight
// 0x0001 (0x0001 - 0x0000)
struct PyObjective_ObjectiveEndFight final
{
public:
	EBattleSide                                   Win_side;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_ObjectiveEndFight) == 0x000001, "Wrong alignment on PyObjective_ObjectiveEndFight");
static_assert(sizeof(PyObjective_ObjectiveEndFight) == 0x000001, "Wrong size on PyObjective_ObjectiveEndFight");
static_assert(offsetof(PyObjective_ObjectiveEndFight, Win_side) == 0x000000, "Member 'PyObjective_ObjectiveEndFight::Win_side' has a wrong offset!");

// PythonFunction PyObjective.PyObjective.SetProgressSpeed
// 0x0004 (0x0004 - 0x0000)
struct PyObjective_SetProgressSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_SetProgressSpeed) == 0x000004, "Wrong alignment on PyObjective_SetProgressSpeed");
static_assert(sizeof(PyObjective_SetProgressSpeed) == 0x000004, "Wrong size on PyObjective_SetProgressSpeed");
static_assert(offsetof(PyObjective_SetProgressSpeed, Speed) == 0x000000, "Member 'PyObjective_SetProgressSpeed::Speed' has a wrong offset!");

// PythonFunction PyObjective.PyObjective.GetProgressSpeed
// 0x0004 (0x0004 - 0x0000)
struct PyObjective_GetProgressSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_GetProgressSpeed) == 0x000004, "Wrong alignment on PyObjective_GetProgressSpeed");
static_assert(sizeof(PyObjective_GetProgressSpeed) == 0x000004, "Wrong size on PyObjective_GetProgressSpeed");
static_assert(offsetof(PyObjective_GetProgressSpeed, ReturnValue) == 0x000000, "Member 'PyObjective_GetProgressSpeed::ReturnValue' has a wrong offset!");

// DelegateFunction PyObjective.PyObjective.OnlyAttackIn__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyObjective_OnlyAttackIn__DelegateSignature final
{
public:
	int32                                         AttackCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_OnlyAttackIn__DelegateSignature) == 0x000004, "Wrong alignment on PyObjective_OnlyAttackIn__DelegateSignature");
static_assert(sizeof(PyObjective_OnlyAttackIn__DelegateSignature) == 0x000004, "Wrong size on PyObjective_OnlyAttackIn__DelegateSignature");
static_assert(offsetof(PyObjective_OnlyAttackIn__DelegateSignature, AttackCount) == 0x000000, "Member 'PyObjective_OnlyAttackIn__DelegateSignature::AttackCount' has a wrong offset!");

// DelegateFunction PyObjective.PyObjective.OnlyDefendIn__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyObjective_OnlyDefendIn__DelegateSignature final
{
public:
	int32                                         DefendCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_OnlyDefendIn__DelegateSignature) == 0x000004, "Wrong alignment on PyObjective_OnlyDefendIn__DelegateSignature");
static_assert(sizeof(PyObjective_OnlyDefendIn__DelegateSignature) == 0x000004, "Wrong size on PyObjective_OnlyDefendIn__DelegateSignature");
static_assert(offsetof(PyObjective_OnlyDefendIn__DelegateSignature, DefendCount) == 0x000000, "Member 'PyObjective_OnlyDefendIn__DelegateSignature::DefendCount' has a wrong offset!");

// DelegateFunction PyObjective.PyObjective.OnStageChange__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PyObjective_OnStageChange__DelegateSignature final
{
public:
	int32                                         Stage;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_OnStageChange__DelegateSignature) == 0x000004, "Wrong alignment on PyObjective_OnStageChange__DelegateSignature");
static_assert(sizeof(PyObjective_OnStageChange__DelegateSignature) == 0x000004, "Wrong size on PyObjective_OnStageChange__DelegateSignature");
static_assert(offsetof(PyObjective_OnStageChange__DelegateSignature, Stage) == 0x000000, "Member 'PyObjective_OnStageChange__DelegateSignature::Stage' has a wrong offset!");

// PythonFunction PyObjective.PyObjective.DelayBack
// 0x0008 (0x0008 - 0x0000)
struct PyObjective_DelayBack final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_time;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyObjective_DelayBack) == 0x000004, "Wrong alignment on PyObjective_DelayBack");
static_assert(sizeof(PyObjective_DelayBack) == 0x000008, "Wrong size on PyObjective_DelayBack");
static_assert(offsetof(PyObjective_DelayBack, Speed) == 0x000000, "Member 'PyObjective_DelayBack::Speed' has a wrong offset!");
static_assert(offsetof(PyObjective_DelayBack, Delay_time) == 0x000004, "Member 'PyObjective_DelayBack::Delay_time' has a wrong offset!");

// PythonFunction PyObjective.PyCue_Level_100002.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Level_100002_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Level_100002_ReceiveTick) == 0x000004, "Wrong alignment on PyCue_Level_100002_ReceiveTick");
static_assert(sizeof(PyCue_Level_100002_ReceiveTick) == 0x000004, "Wrong size on PyCue_Level_100002_ReceiveTick");
static_assert(offsetof(PyCue_Level_100002_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PyCue_Level_100002_ReceiveTick::DeltaSeconds' has a wrong offset!");

// PythonFunction PyObjective.PyCue_Level_100002.WhileActive
// 0x01C8 (0x01C8 - 0x0000)
struct PyCue_Level_100002_WhileActive final
{
public:
	class AActor*                                 ObjectiveActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Level_100002_WhileActive) == 0x000008, "Wrong alignment on PyCue_Level_100002_WhileActive");
static_assert(sizeof(PyCue_Level_100002_WhileActive) == 0x0001C8, "Wrong size on PyCue_Level_100002_WhileActive");
static_assert(offsetof(PyCue_Level_100002_WhileActive, ObjectiveActor) == 0x000000, "Member 'PyCue_Level_100002_WhileActive::ObjectiveActor' has a wrong offset!");
static_assert(offsetof(PyCue_Level_100002_WhileActive, Parameters) == 0x000008, "Member 'PyCue_Level_100002_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(PyCue_Level_100002_WhileActive, ReturnValue) == 0x0001C0, "Member 'PyCue_Level_100002_WhileActive::ReturnValue' has a wrong offset!");

// PythonFunction PyObjective.PyCue_Level_100002.OnRemoveFX
// 0x01C0 (0x01C0 - 0x0000)
struct PyCue_Level_100002_OnRemoveFX final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x01B8)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PyCue_Level_100002_OnRemoveFX) == 0x000008, "Wrong alignment on PyCue_Level_100002_OnRemoveFX");
static_assert(sizeof(PyCue_Level_100002_OnRemoveFX) == 0x0001C0, "Wrong size on PyCue_Level_100002_OnRemoveFX");
static_assert(offsetof(PyCue_Level_100002_OnRemoveFX, MyTarget) == 0x000000, "Member 'PyCue_Level_100002_OnRemoveFX::MyTarget' has a wrong offset!");
static_assert(offsetof(PyCue_Level_100002_OnRemoveFX, Parameters) == 0x000008, "Member 'PyCue_Level_100002_OnRemoveFX::Parameters' has a wrong offset!");

// PythonFunction PyObjective.PyCue_Level_100002.OnStageChange
// 0x0004 (0x0004 - 0x0000)
struct PyCue_Level_100002_OnStageChange final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PyCue_Level_100002_OnStageChange) == 0x000004, "Wrong alignment on PyCue_Level_100002_OnStageChange");
static_assert(sizeof(PyCue_Level_100002_OnStageChange) == 0x000004, "Wrong size on PyCue_Level_100002_OnStageChange");
static_assert(offsetof(PyCue_Level_100002_OnStageChange, Index_0) == 0x000000, "Member 'PyCue_Level_100002_OnStageChange::Index_0' has a wrong offset!");

}


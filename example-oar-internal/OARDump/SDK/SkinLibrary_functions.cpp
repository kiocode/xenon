#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkinLibrary

#include "Basic.hpp"

#include "SkinLibrary_classes.hpp"
#include "SkinLibrary_parameters.hpp"


namespace SDK
{

// Function SkinLibrary.SkinLibrary_C.Get Current Rotation Number
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rotation_number                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        Time_left                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USkinLibrary_C::Get_Current_Rotation_Number(class UObject* __WorldContext, int32* Rotation_number, struct FTimespan* Time_left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkinLibrary_C", "Get Current Rotation Number");

	Params::SkinLibrary_C_Get_Current_Rotation_Number Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Rotation_number != nullptr)
		*Rotation_number = Parms.Rotation_number;

	if (Time_left != nullptr)
		*Time_left = std::move(Parms.Time_left);
}


// Function SkinLibrary.SkinLibrary_C.GetCoinBundleSkin
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EShopItemCategory                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_be_already_owned_                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Skin                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkinLibrary_C::GetCoinBundleSkin(int32 Rotation, EShopItemCategory Type, bool Can_be_already_owned_, int32 Number, class UObject* __WorldContext, class UClass** Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkinLibrary_C", "GetCoinBundleSkin");

	Params::SkinLibrary_C_GetCoinBundleSkin Parms{};

	Parms.Rotation = Rotation;
	Parms.Type = Type;
	Parms.Can_be_already_owned_ = Can_be_already_owned_;
	Parms.Number = Number;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Skin != nullptr)
		*Skin = Parms.Skin;
}


// Function SkinLibrary.SkinLibrary_C.SkinsInCoinBundle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Skins                                                  (Parm, OutParm)

void USkinLibrary_C::SkinsInCoinBundle(class UObject* __WorldContext, TArray<class UClass*>* Skins)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkinLibrary_C", "SkinsInCoinBundle");

	Params::SkinLibrary_C_SkinsInCoinBundle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Skins != nullptr)
		*Skins = std::move(Parms.Skins);
}

}


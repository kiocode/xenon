#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitchComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HitchComponent.HitchComponent_C
// 0x0040 (0x0240 - 0x0200)
class UHitchComponent_C final : public USceneComponent
{
public:
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0200(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_TowSpline_C*                        TowSpline;                                         // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0210(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             EnableHitch;                                       // 0x0218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsBeingTowed_;                                     // 0x0228(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TowSpeed;                                          // 0x022C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShouldSpinWheels_;                                 // 0x0234(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TowPaused_;                                        // 0x0235(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void EnableHitch__DelegateSignature(class ABP_HitchHook_C* Hitch);
	void ExecuteUbergraph_HitchComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void HalfTowSpeedServer();
	void AttachHitch(class ABP_HitchHook_C* Hitch);
	void HitchMulticast(class ABP_HitchHook_C* Hitch);
	void MoveAlongSpline();
	void ReceiveTick(float DeltaSeconds);
	void UpdateSplineDistance();
	void AlarmDisabledInterfaceCall();
	void AlarmTriggeredInterfaceCall();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HitchComponent_C">();
	}
	static class UHitchComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitchComponent_C>();
	}
};
static_assert(alignof(UHitchComponent_C) == 0x000010, "Wrong alignment on UHitchComponent_C");
static_assert(sizeof(UHitchComponent_C) == 0x000240, "Wrong size on UHitchComponent_C");
static_assert(offsetof(UHitchComponent_C, UberGraphFrame) == 0x000200, "Member 'UHitchComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, TowSpline) == 0x000208, "Member 'UHitchComponent_C::TowSpline' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, Distance) == 0x000210, "Member 'UHitchComponent_C::Distance' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, EnableHitch) == 0x000218, "Member 'UHitchComponent_C::EnableHitch' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, IsBeingTowed_) == 0x000228, "Member 'UHitchComponent_C::IsBeingTowed_' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, TowSpeed) == 0x00022C, "Member 'UHitchComponent_C::TowSpeed' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, Value) == 0x000230, "Member 'UHitchComponent_C::Value' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, ShouldSpinWheels_) == 0x000234, "Member 'UHitchComponent_C::ShouldSpinWheels_' has a wrong offset!");
static_assert(offsetof(UHitchComponent_C, TowPaused_) == 0x000235, "Member 'UHitchComponent_C::TowPaused_' has a wrong offset!");

}


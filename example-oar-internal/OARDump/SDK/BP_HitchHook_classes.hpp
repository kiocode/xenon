#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitchHook

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HitchHook.BP_HitchHook_C
// 0x0030 (0x0260 - 0x0230)
class ABP_HitchHook_C final : public AStaticMeshActor
{
public:
	class UHighlightWhenHolding_C*                HighlightWhenHolding;                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHighlightInRangeComponent_C*           HighlightInRangeComponent;                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPickupItemComponent_C*                 PickupItemComponent;                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USmoothSync*                            SmoothSync;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHooked;                                          // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnHooked__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HitchHook_C">();
	}
	static class ABP_HitchHook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HitchHook_C>();
	}
};
static_assert(alignof(ABP_HitchHook_C) == 0x000008, "Wrong alignment on ABP_HitchHook_C");
static_assert(sizeof(ABP_HitchHook_C) == 0x000260, "Wrong size on ABP_HitchHook_C");
static_assert(offsetof(ABP_HitchHook_C, HighlightWhenHolding) == 0x000230, "Member 'ABP_HitchHook_C::HighlightWhenHolding' has a wrong offset!");
static_assert(offsetof(ABP_HitchHook_C, HighlightInRangeComponent) == 0x000238, "Member 'ABP_HitchHook_C::HighlightInRangeComponent' has a wrong offset!");
static_assert(offsetof(ABP_HitchHook_C, PickupItemComponent) == 0x000240, "Member 'ABP_HitchHook_C::PickupItemComponent' has a wrong offset!");
static_assert(offsetof(ABP_HitchHook_C, SmoothSync) == 0x000248, "Member 'ABP_HitchHook_C::SmoothSync' has a wrong offset!");
static_assert(offsetof(ABP_HitchHook_C, OnHooked) == 0x000250, "Member 'ABP_HitchHook_C::OnHooked' has a wrong offset!");

}


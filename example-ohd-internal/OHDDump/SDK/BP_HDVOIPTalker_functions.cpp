#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDVOIPTalker

#include "Basic.hpp"

#include "BP_HDVOIPTalker_classes.hpp"
#include "BP_HDVOIPTalker_parameters.hpp"


namespace SDK
{

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.ExecuteUbergraph_BP_HDVOIPTalker
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HDVOIPTalker_C::ExecuteUbergraph_BP_HDVOIPTalker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "ExecuteUbergraph_BP_HDVOIPTalker");

	Params::BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.TalkStateChangedOnChannel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDFCommChannel*                   MsgTalkerChannel                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     MsgTalkerPS                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMsgIsTalking                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HDVOIPTalker_C::TalkStateChangedOnChannel(class UDFCommChannel* MsgTalkerChannel, class APlayerState* MsgTalkerPS, bool bMsgIsTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "TalkStateChangedOnChannel");

	Params::BP_HDVOIPTalker_C_TalkStateChangedOnChannel Parms{};

	Parms.MsgTalkerChannel = MsgTalkerChannel;
	Parms.MsgTalkerPS = MsgTalkerPS;
	Parms.bMsgIsTalking = bMsgIsTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.BPOnTalkingEnd
// (Event, Protected, BlueprintEvent)

void UBP_HDVOIPTalker_C::BPOnTalkingEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "BPOnTalkingEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.BPOnTalkingBegin
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  AudioComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HDVOIPTalker_C::BPOnTalkingBegin(class UAudioComponent* AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "BPOnTalkingBegin");

	Params::BP_HDVOIPTalker_C_BPOnTalkingBegin Parms{};

	Parms.AudioComponent = AudioComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.RegisterTalker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     InRegisteredPS                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVoiceSettings                   InSpatializedSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// struct FVoiceSettings                   InNonSpatializedSettings                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    bStartSpatialized                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HDVOIPTalker_C::RegisterTalker(class APlayerState* InRegisteredPS, struct FVoiceSettings& InSpatializedSettings, struct FVoiceSettings& InNonSpatializedSettings, bool bStartSpatialized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "RegisterTalker");

	Params::BP_HDVOIPTalker_C_RegisterTalker Parms{};

	Parms.InRegisteredPS = InRegisteredPS;
	Parms.InSpatializedSettings = std::move(InSpatializedSettings);
	Parms.InNonSpatializedSettings = std::move(InNonSpatializedSettings);
	Parms.bStartSpatialized = bStartSpatialized;

	UObject::ProcessEvent(Func, &Parms);

	InSpatializedSettings = std::move(Parms.InSpatializedSettings);
	InNonSpatializedSettings = std::move(Parms.InNonSpatializedSettings);
}


// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.UpdateSettingsUsageForNextBeginTalk
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUseSpatialized                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSettingsUpdated                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HDVOIPTalker_C::UpdateSettingsUsageForNextBeginTalk(bool bUseSpatialized, bool* bSettingsUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "UpdateSettingsUsageForNextBeginTalk");

	Params::BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk Parms{};

	Parms.bUseSpatialized = bUseSpatialized;

	UObject::ProcessEvent(Func, &Parms);

	if (bSettingsUpdated != nullptr)
		*bSettingsUpdated = Parms.bSettingsUpdated;
}


// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.ListenForTalkingStateChangedEvents
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_HDVOIPTalker_C::ListenForTalkingStateChangedEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDVOIPTalker_C", "ListenForTalkingStateChangedEvents");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponStatus

#include "Basic.hpp"

#include "DonkehFramework_structs.hpp"
#include "HDMain_structs.hpp"
#include "HDMain_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WeaponStatus.WBP_WeaponStatus_C
// 0x0040 (0x02A0 - 0x0260)
class UWBP_WeaponStatus_C final : public UHDUIUWWeaponStatus
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       MagCounterChangeUIAnim;                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AimStyleInputUIAnim;                               // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FireModeInputUIAnim;                               // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             AimStyleText;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FireModeText;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MagCounterText;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Separator;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_WeaponStatus(int32 EntryPoint);
	void OwnerSetAimStyle(EHDWeaponAimStyle NewAimStyle, EHDWeaponAimStyle PrevAimStyle, bool bFromPlayerInput);
	void BPOwnerWeaponAmmoUpdated(const struct FHDUIWeaponAmmoState& AmmoState, bool bFromReload, bool bTotalFreeAmmoUpdated, bool bNumFreeAmmoClipsUpdated);
	void BPOwnerWeaponSetFireMode(EFireMode NewFireMode, EFireMode PreviousFireMode, bool bFromPlayerInput);
	void BPOwnerWeaponChanged(class AHDBaseWeapon* NewWeap, class AHDBaseWeapon* PrevWeap);
	void PreConstruct(bool IsDesignTime);
	void UpdateElementVisibility();
	void ShouldDisplayTotalAmmo(bool* bDisplayTotalAmmo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WeaponStatus_C">();
	}
	static class UWBP_WeaponStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WeaponStatus_C>();
	}
};
static_assert(alignof(UWBP_WeaponStatus_C) == 0x000008, "Wrong alignment on UWBP_WeaponStatus_C");
static_assert(sizeof(UWBP_WeaponStatus_C) == 0x0002A0, "Wrong size on UWBP_WeaponStatus_C");
static_assert(offsetof(UWBP_WeaponStatus_C, UberGraphFrame) == 0x000260, "Member 'UWBP_WeaponStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, MagCounterChangeUIAnim) == 0x000268, "Member 'UWBP_WeaponStatus_C::MagCounterChangeUIAnim' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, AimStyleInputUIAnim) == 0x000270, "Member 'UWBP_WeaponStatus_C::AimStyleInputUIAnim' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, FireModeInputUIAnim) == 0x000278, "Member 'UWBP_WeaponStatus_C::FireModeInputUIAnim' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, AimStyleText) == 0x000280, "Member 'UWBP_WeaponStatus_C::AimStyleText' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, FireModeText) == 0x000288, "Member 'UWBP_WeaponStatus_C::FireModeText' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, MagCounterText) == 0x000290, "Member 'UWBP_WeaponStatus_C::MagCounterText' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponStatus_C, Separator) == 0x000298, "Member 'UWBP_WeaponStatus_C::Separator' has a wrong offset!");

}


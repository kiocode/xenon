#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HDWeaponAnimSet

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_HDWeaponAnimSet.BPI_HDWeaponAnimSet_C.GetLocoAnimSet
// 0x0050 (0x0050 - 0x0000)
struct BPI_HDWeaponAnimSet_C_GetLocoAnimSet final
{
public:
	TMap<class FName, class UAnimSequenceBase*>   OutAnimSet;                                        // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BPI_HDWeaponAnimSet_C_GetLocoAnimSet) == 0x000008, "Wrong alignment on BPI_HDWeaponAnimSet_C_GetLocoAnimSet");
static_assert(sizeof(BPI_HDWeaponAnimSet_C_GetLocoAnimSet) == 0x000050, "Wrong size on BPI_HDWeaponAnimSet_C_GetLocoAnimSet");
static_assert(offsetof(BPI_HDWeaponAnimSet_C_GetLocoAnimSet, OutAnimSet) == 0x000000, "Member 'BPI_HDWeaponAnimSet_C_GetLocoAnimSet::OutAnimSet' has a wrong offset!");

// Function BPI_HDWeaponAnimSet.BPI_HDWeaponAnimSet_C.GetLocoTPPAnimSet
// 0x0050 (0x0050 - 0x0000)
struct BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet final
{
public:
	TMap<class FName, class UAnimSequenceBase*>   OutAnimSet;                                        // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet) == 0x000008, "Wrong alignment on BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet");
static_assert(sizeof(BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet) == 0x000050, "Wrong size on BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet");
static_assert(offsetof(BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet, OutAnimSet) == 0x000000, "Member 'BPI_HDWeaponAnimSet_C_GetLocoTPPAnimSet::OutAnimSet' has a wrong offset!");

// Function BPI_HDWeaponAnimSet.BPI_HDWeaponAnimSet_C.ShouldUseMirroredLowerBodyLoco
// 0x0001 (0x0001 - 0x0000)
struct BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco final
{
public:
	bool                                          bOutUseMirrored;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco) == 0x000001, "Wrong alignment on BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco");
static_assert(sizeof(BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco) == 0x000001, "Wrong size on BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco");
static_assert(offsetof(BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco, bOutUseMirrored) == 0x000000, "Member 'BPI_HDWeaponAnimSet_C_ShouldUseMirroredLowerBodyLoco::bOutUseMirrored' has a wrong offset!");

}


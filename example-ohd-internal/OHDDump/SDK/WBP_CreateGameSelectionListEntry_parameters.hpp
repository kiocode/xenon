#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CreateGameSelectionListEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FSelectionItemTextStyle_structs.hpp"


namespace SDK::Params
{

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.OnSelectionStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature final
{
public:
	class UWBP_CreateGameSelectionListEntry_C*    Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature) == 0x000010, "Wrong size on WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature, Item) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature, bSelected) == 0x000008, "Member 'WBP_CreateGameSelectionListEntry_C_OnSelectionStateChanged__DelegateSignature::bSelected' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.ExecuteUbergraph_WBP_CreateGameSelectionListEntry
// 0x001C (0x001C - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry) == 0x000004, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry) == 0x00001C, "Wrong size on WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, EntryPoint) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_bool_Variable) == 0x000004, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable) == 0x000005, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_2) == 0x000008, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_3) == 0x000009, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_bool_Variable_2) == 0x00000A, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_4) == 0x00000B, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_5) == 0x00000C, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, K2Node_Event_IsDesignTime) == 0x00000D, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, K2Node_ComponentBoundEvent_bIsChecked) == 0x00000E, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, K2Node_Select_Default) == 0x00000F, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_bool_Variable_3) == 0x000011, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, CallFunc_IsChecked_ReturnValue) == 0x000012, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, K2Node_Select_Default_1) == 0x000013, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, CallFunc_BooleanAND_ReturnValue_1) == 0x000014, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, K2Node_Select_Default_2) == 0x000015, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_6) == 0x000016, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, Temp_byte_Variable_7) == 0x000017, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry, K2Node_Select_Default_3) == 0x000018, "Member 'WBP_CreateGameSelectionListEntry_C_ExecuteUbergraph_WBP_CreateGameSelectionListEntry::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_BndEvt__ItemCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_PreConstruct");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_CreateGameSelectionListEntry_C_PreConstruct");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemSelectionState
// 0x000E (0x000E - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemSelectionState final
{
public:
	ECheckBoxState                                InSelectionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                CallFunc_GetCheckedState_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState) == 0x000001, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemSelectionState");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState) == 0x00000E, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemSelectionState");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, InSelectionState) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::InSelectionState' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, Temp_bool_Variable) == 0x000001, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, Temp_byte_Variable) == 0x000004, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, Temp_bool_Variable_1) == 0x000008, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, K2Node_Select_Default) == 0x00000A, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, K2Node_Select_Default_1) == 0x00000B, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, CallFunc_GetCheckedState_ReturnValue) == 0x00000C, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::CallFunc_GetCheckedState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSelectionState, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSelectionState::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemIsSelected
// 0x000C (0x000C - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemIsSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected) == 0x000001, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemIsSelected");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected) == 0x00000C, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemIsSelected");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, bSelected) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, Temp_byte_Variable) == 0x000001, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, Temp_bool_Variable) == 0x000002, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, K2Node_Select_Default) == 0x000008, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, K2Node_Select_Default_1) == 0x000009, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, CallFunc_IsChecked_ReturnValue) == 0x00000A, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemIsSelected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000B, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemIsSelected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemSelectionState
// 0x0002 (0x0002 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemSelectionState final
{
public:
	ECheckBoxState                                SelectionState;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                CallFunc_GetCheckedState_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemSelectionState) == 0x000001, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemSelectionState");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemSelectionState) == 0x000002, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemSelectionState");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemSelectionState, SelectionState) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemSelectionState::SelectionState' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemSelectionState, CallFunc_GetCheckedState_ReturnValue) == 0x000001, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemSelectionState::CallFunc_GetCheckedState_ReturnValue' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.IsItemSelected
// 0x0002 (0x0002 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_IsItemSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_IsItemSelected) == 0x000001, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_IsItemSelected");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_IsItemSelected) == 0x000002, "Wrong size on WBP_CreateGameSelectionListEntry_C_IsItemSelected");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_IsItemSelected, bSelected) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_IsItemSelected::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_IsItemSelected, CallFunc_IsChecked_ReturnValue) == 0x000001, "Member 'WBP_CreateGameSelectionListEntry_C_IsItemSelected::CallFunc_IsChecked_ReturnValue' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.InternalApplyStyleToText
// 0x0140 (0x0140 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText final
{
public:
	class UTextBlock*                             Text_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSelectionItemTextStyle               TextStyle;                                         // 0x0008(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText) == 0x000140, "Wrong size on WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText, Text_0) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText::Text_0' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText, TextStyle) == 0x000008, "Member 'WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText::TextStyle' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000138, "Member 'WBP_CreateGameSelectionListEntry_C_InternalApplyStyleToText::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.InternalUpdateItemBgTintColor
// 0x0080 (0x0080 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0058(0x0028)()
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor) == 0x000080, "Wrong size on WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor, bSelected) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor::bSelected' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor, Temp_bool_Variable) == 0x000001, "Member 'WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor, K2Node_Select_Default) == 0x000058, "Member 'WBP_CreateGameSelectionListEntry_C_InternalUpdateItemBgTintColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemStyle
// 0x0580 (0x0580 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemStyle final
{
public:
	struct FCheckBoxStyle                         InItemStyle;                                       // 0x0000(0x0580)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemStyle) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemStyle");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemStyle) == 0x000580, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemStyle");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemStyle, InItemStyle) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemStyle::InItemStyle' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemTextStyle
// 0x0130 (0x0130 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemTextStyle final
{
public:
	struct FFSelectionItemTextStyle               InItemTextStyle;                                   // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemTextStyle) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemTextStyle");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemTextStyle) == 0x000130, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemTextStyle");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemTextStyle, InItemTextStyle) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemTextStyle::InItemTextStyle' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemSubTextStyle
// 0x0130 (0x0130 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle final
{
public:
	struct FFSelectionItemTextStyle               InItemSubTextStyle;                                // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle) == 0x000130, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle, InItemSubTextStyle) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSubTextStyle::InItemSubTextStyle' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemImage
// 0x0008 (0x0008 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemImage final
{
public:
	class UTexture2D*                             InItemImg;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemImage) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemImage");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemImage) == 0x000008, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemImage");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemImage, InItemImg) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemImage::InItemImg' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemStyle
// 0x0580 (0x0580 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemStyle final
{
public:
	struct FCheckBoxStyle                         ItemStyle_0;                                       // 0x0000(0x0580)(Parm, OutParm)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemStyle) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemStyle");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemStyle) == 0x000580, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemStyle");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemStyle, ItemStyle_0) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemStyle::ItemStyle_0' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemTextStyle
// 0x0130 (0x0130 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemTextStyle final
{
public:
	struct FFSelectionItemTextStyle               TextStyle;                                         // 0x0000(0x0130)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemTextStyle) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemTextStyle");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemTextStyle) == 0x000130, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemTextStyle");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemTextStyle, TextStyle) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemTextStyle::TextStyle' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemSubTextStyle
// 0x0130 (0x0130 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle final
{
public:
	struct FFSelectionItemTextStyle               TextStyle;                                         // 0x0000(0x0130)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle) == 0x000130, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle, TextStyle) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemSubTextStyle::TextStyle' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemText
// 0x0018 (0x0018 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemText) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemText");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemText) == 0x000018, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemText");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemText, InText) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemText::InText' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemSubText
// 0x0018 (0x0018 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemSubText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemSubText) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemSubText");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemSubText) == 0x000018, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemSubText");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemSubText, InText) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemSubText::InText' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemText
// 0x0030 (0x0030 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemText) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemText");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemText) == 0x000030, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemText");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemText, Text_0) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemText::Text_0' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemText::CallFunc_GetText_ReturnValue' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemSubText
// 0x0030 (0x0030 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemSubText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemSubText) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemSubText");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemSubText) == 0x000030, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemSubText");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemSubText, Text_0) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemSubText::Text_0' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemSubText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemSubText::CallFunc_GetText_ReturnValue' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.SetItemMinDimensions
// 0x0008 (0x0008 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions final
{
public:
	int32                                         InMinWidth;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMinHeight;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions) == 0x000004, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions) == 0x000008, "Wrong size on WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions, InMinWidth) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions::InMinWidth' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions, InMinHeight) == 0x000004, "Member 'WBP_CreateGameSelectionListEntry_C_SetItemMinDimensions::InMinHeight' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemMinWidth
// 0x0004 (0x0004 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemMinWidth final
{
public:
	int32                                         MinWidth;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemMinWidth) == 0x000004, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemMinWidth");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemMinWidth) == 0x000004, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemMinWidth");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemMinWidth, MinWidth) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemMinWidth::MinWidth' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetItemMinHeight
// 0x0004 (0x0004 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetItemMinHeight final
{
public:
	int32                                         MinHeight;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetItemMinHeight) == 0x000004, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetItemMinHeight");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetItemMinHeight) == 0x000004, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetItemMinHeight");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetItemMinHeight, MinHeight) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetItemMinHeight::MinHeight' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.InternalRefreshDimensions
// 0x0008 (0x0008 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions) == 0x000004, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions) == 0x000008, "Wrong size on WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000004, "Member 'WBP_CreateGameSelectionListEntry_C_InternalRefreshDimensions::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function WBP_CreateGameSelectionListEntry.WBP_CreateGameSelectionListEntry_C.GetBrushWithImageTexture
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             Image;                                             // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            UpdatedBrush;                                      // 0x0090(0x0088)(Parm, OutParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0118(0x0088)()
};
static_assert(alignof(WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture) == 0x000008, "Wrong alignment on WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture");
static_assert(sizeof(WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture) == 0x0001A0, "Wrong size on WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture, Brush) == 0x000000, "Member 'WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture::Brush' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture, Image) == 0x000088, "Member 'WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture::Image' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture, UpdatedBrush) == 0x000090, "Member 'WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture::UpdatedBrush' has a wrong offset!");
static_assert(offsetof(WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture, K2Node_MakeStruct_SlateBrush) == 0x000118, "Member 'WBP_CreateGameSelectionListEntry_C_GetBrushWithImageTexture::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

}


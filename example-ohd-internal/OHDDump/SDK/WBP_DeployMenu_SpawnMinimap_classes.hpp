#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DeployMenu_SpawnMinimap

#include "Basic.hpp"

#include "HDMain_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DeployMenu_SpawnMinimap.WBP_DeployMenu_SpawnMinimap_C
// 0x00A8 (0x0340 - 0x0298)
class UWBP_DeployMenu_SpawnMinimap_C final : public UDeployMenu_SpawnMinimap
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInstanceDynamic*               MapMI;                                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              MapTexture;                                        // 0x02A8(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         InitialZoom;                                       // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MapMaterial;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PanSpeedFactor;                                    // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomDivisor;                                       // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomStep;                                          // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MapTint;                                           // 0x02EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDonePreloading;                                   // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMenuInitialized;                                  // 0x02FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CurrentMapTexture;                                 // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumContentToLoad;                                  // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLoadedContent;                                  // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnPreloadFinished;                                 // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSpawnPointSelected;                              // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSpawnPointDeselected;                            // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnPreloadFinished__DelegateSignature();
	void OnSpawnPointSelected__DelegateSignature(class AActor* POISpawnPointActor);
	void OnSpawnPointDeselected__DelegateSignature(class AActor* POISpawnPointActor);
	void ExecuteUbergraph_WBP_DeployMenu_SpawnMinimap(int32 EntryPoint);
	void ReceiveOnPOISelectionStateChanged(class UDFPOIWidget* POI, bool bSelected);
	void OnAsyncLoadCompleted();
	void OnContentPreloadFinished();
	void OnContentPreloadStarted(const TArray<TSoftObjectPtr<class UObject>>& AssetsToLoad, const TArray<TSoftClassPtr<class UClass>>& ClassesToLoad);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnLoaded_BB8D079144A98AFE7BD3849D43A40947(class UClass* Loaded);
	void OnLoaded_BACDC4954F814289E55DD7AAEBE3E34E(class UObject* Loaded);
	void InitMapBg(class UTexture2D* MapTexture_0);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void GetLocalCursorDelta(struct FGeometry& Geometry, struct FPointerEvent& MouseEvent, struct FVector2D* LocalDelta);
	void UpdateMapMatParams();
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void ZoomIn(float ZoomIncrement);
	void ZoomOut(float ZoomDecrement);
	void PreloadContent();
	void ApplyPreloadedContent();
	void HasPreloadInProgress(bool* bPreloading);
	void SetCurrentMapTexture(class UTexture2D* NewMapTexture);
	void UpdatePlayerPOIs();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DeployMenu_SpawnMinimap_C">();
	}
	static class UWBP_DeployMenu_SpawnMinimap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DeployMenu_SpawnMinimap_C>();
	}
};
static_assert(alignof(UWBP_DeployMenu_SpawnMinimap_C) == 0x000008, "Wrong alignment on UWBP_DeployMenu_SpawnMinimap_C");
static_assert(sizeof(UWBP_DeployMenu_SpawnMinimap_C) == 0x000340, "Wrong size on UWBP_DeployMenu_SpawnMinimap_C");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, UberGraphFrame) == 0x000298, "Member 'UWBP_DeployMenu_SpawnMinimap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, MapMI) == 0x0002A0, "Member 'UWBP_DeployMenu_SpawnMinimap_C::MapMI' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, MapTexture) == 0x0002A8, "Member 'UWBP_DeployMenu_SpawnMinimap_C::MapTexture' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, InitialZoom) == 0x0002D0, "Member 'UWBP_DeployMenu_SpawnMinimap_C::InitialZoom' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, MapMaterial) == 0x0002D8, "Member 'UWBP_DeployMenu_SpawnMinimap_C::MapMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, PanSpeedFactor) == 0x0002E0, "Member 'UWBP_DeployMenu_SpawnMinimap_C::PanSpeedFactor' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, ZoomDivisor) == 0x0002E4, "Member 'UWBP_DeployMenu_SpawnMinimap_C::ZoomDivisor' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, ZoomStep) == 0x0002E8, "Member 'UWBP_DeployMenu_SpawnMinimap_C::ZoomStep' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, MapTint) == 0x0002EC, "Member 'UWBP_DeployMenu_SpawnMinimap_C::MapTint' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, bDonePreloading) == 0x0002FC, "Member 'UWBP_DeployMenu_SpawnMinimap_C::bDonePreloading' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, bMenuInitialized) == 0x0002FD, "Member 'UWBP_DeployMenu_SpawnMinimap_C::bMenuInitialized' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, CurrentMapTexture) == 0x000300, "Member 'UWBP_DeployMenu_SpawnMinimap_C::CurrentMapTexture' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, NumContentToLoad) == 0x000308, "Member 'UWBP_DeployMenu_SpawnMinimap_C::NumContentToLoad' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, NumLoadedContent) == 0x00030C, "Member 'UWBP_DeployMenu_SpawnMinimap_C::NumLoadedContent' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, OnPreloadFinished) == 0x000310, "Member 'UWBP_DeployMenu_SpawnMinimap_C::OnPreloadFinished' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, OnSpawnPointSelected) == 0x000320, "Member 'UWBP_DeployMenu_SpawnMinimap_C::OnSpawnPointSelected' has a wrong offset!");
static_assert(offsetof(UWBP_DeployMenu_SpawnMinimap_C, OnSpawnPointDeselected) == 0x000330, "Member 'UWBP_DeployMenu_SpawnMinimap_C::OnSpawnPointDeselected' has a wrong offset!");

}


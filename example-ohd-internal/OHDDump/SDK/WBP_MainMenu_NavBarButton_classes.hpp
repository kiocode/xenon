#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MainMenu_NavBarButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MainMenu_NavBarButton.WBP_MainMenu_NavBarButton_C
// 0x0138 (0x0368 - 0x0230)
class UWBP_MainMenu_NavBarButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                NavBarBtn;                                         // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NavBarText;                                        // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bHasAssociatedOptionMenu;                          // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 OptionMenuClass;                                   // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   BtnText;                                           // 0x0258(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             ButtonClicked;                                     // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bActive;                                           // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                TextPadding;                                       // 0x0284(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bDisabledInDemoBuilds;                             // 0x0294(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bHiddenInDemoBuilds;                               // 0x0295(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            TextColor;                                         // 0x0298(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextColorActive;                                   // 0x02C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bUseBtnTint;                                       // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            BtnTint;                                           // 0x02F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextColorPressed;                                  // 0x0318(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            TextColorHovered;                                  // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ButtonClicked__DelegateSignature(class UWBP_MainMenu_NavBarButton_C* ClickedBtn);
	void ExecuteUbergraph_WBP_MainMenu_NavBarButton(int32 EntryPoint);
	void OnInitialized();
	void BndEvt__NavBarBtn_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NavBarBtn_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NavBarBtn_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__NavBarBtn_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__NavBarBtn_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void SetActive(bool bNewActive);
	void UpdateAppearance();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MainMenu_NavBarButton_C">();
	}
	static class UWBP_MainMenu_NavBarButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MainMenu_NavBarButton_C>();
	}
};
static_assert(alignof(UWBP_MainMenu_NavBarButton_C) == 0x000008, "Wrong alignment on UWBP_MainMenu_NavBarButton_C");
static_assert(sizeof(UWBP_MainMenu_NavBarButton_C) == 0x000368, "Wrong size on UWBP_MainMenu_NavBarButton_C");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, UberGraphFrame) == 0x000230, "Member 'UWBP_MainMenu_NavBarButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, NavBarBtn) == 0x000238, "Member 'UWBP_MainMenu_NavBarButton_C::NavBarBtn' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, NavBarText) == 0x000240, "Member 'UWBP_MainMenu_NavBarButton_C::NavBarText' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, bHasAssociatedOptionMenu) == 0x000248, "Member 'UWBP_MainMenu_NavBarButton_C::bHasAssociatedOptionMenu' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, OptionMenuClass) == 0x000250, "Member 'UWBP_MainMenu_NavBarButton_C::OptionMenuClass' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, BtnText) == 0x000258, "Member 'UWBP_MainMenu_NavBarButton_C::BtnText' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, ButtonClicked) == 0x000270, "Member 'UWBP_MainMenu_NavBarButton_C::ButtonClicked' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, bActive) == 0x000280, "Member 'UWBP_MainMenu_NavBarButton_C::bActive' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, TextPadding) == 0x000284, "Member 'UWBP_MainMenu_NavBarButton_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, bDisabledInDemoBuilds) == 0x000294, "Member 'UWBP_MainMenu_NavBarButton_C::bDisabledInDemoBuilds' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, bHiddenInDemoBuilds) == 0x000295, "Member 'UWBP_MainMenu_NavBarButton_C::bHiddenInDemoBuilds' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, TextColor) == 0x000298, "Member 'UWBP_MainMenu_NavBarButton_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, TextColorActive) == 0x0002C0, "Member 'UWBP_MainMenu_NavBarButton_C::TextColorActive' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, bUseBtnTint) == 0x0002E8, "Member 'UWBP_MainMenu_NavBarButton_C::bUseBtnTint' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, BtnTint) == 0x0002F0, "Member 'UWBP_MainMenu_NavBarButton_C::BtnTint' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, TextColorPressed) == 0x000318, "Member 'UWBP_MainMenu_NavBarButton_C::TextColorPressed' has a wrong offset!");
static_assert(offsetof(UWBP_MainMenu_NavBarButton_C, TextColorHovered) == 0x000340, "Member 'UWBP_MainMenu_NavBarButton_C::TextColorHovered' has a wrong offset!");

}


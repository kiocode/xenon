#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OptionMenu_CreateGame

#include "Basic.hpp"

#include "FMapInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FGameModeInfo_structs.hpp"
#include "DonkehFramework_structs.hpp"


namespace SDK::Params
{

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ExecuteUbergraph_WBP_OptionMenu_CreateGame
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item_3;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSelected_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GMListItemData_C*                   K2Node_DynamicCast_AsBP_GMList_Item_Data;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MapListItemData_C*                  K2Node_DynamicCast_AsBP_Map_List_Item_Data;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item_2;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_ComponentBoundEvent_Widget_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BP_GetNumItemsSelected_ReturnValue;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item_1;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_ComponentBoundEvent_Widget;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BP_GetNumItemsSelected_ReturnValue_1;     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSelected;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MapListItemData_C*                  K2Node_DynamicCast_AsBP_Map_List_Item_Data_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GMListItemData_C*                   K2Node_DynamicCast_AsBP_GMList_Item_Data_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameModifierSettings_C> K2Node_DynamicCast_AsBPI_Game_Modifier_Settings;   // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList; // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds; // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UObject*>                        CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets;  // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UObject*>                        Temp_object_Variable;                              // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UHDGameModeDefinition*            K2Node_DynamicCast_AsHDGame_Mode_Definition;       // 0x0150(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAddGMListing_bAddListing;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncActionLoadPrimaryAssetList*       CallFunc_AsyncLoadPrimaryAssetList_ReturnValue;    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        K2Node_CustomEvent_Loaded;                         // 0x0170(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UObject*>& Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FPrimaryAssetId>                CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1; // 0x0198(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame) == 0x0001A8, "Wrong size on WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, EntryPoint) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_Item_3) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_bIsSelected_1) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_bIsSelected_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_AsBP_GMList_Item_Data) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_AsBP_GMList_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_AsBP_Map_List_Item_Data) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_AsBP_Map_List_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_IsValid_ReturnValue_1) == 0x00004A, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_Item_2) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_Widget_1) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BP_GetNumItemsSelected_ReturnValue) == 0x000060, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BP_GetNumItemsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_Item_1) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_Widget) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BP_GetNumItemsSelected_ReturnValue_1) == 0x00007C, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BP_GetNumItemsSelected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_Item) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_ComponentBoundEvent_bIsSelected) == 0x000090, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_ComponentBoundEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BooleanAND_ReturnValue_1) == 0x000091, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_AsBP_Map_List_Item_Data_1) == 0x000098, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_AsBP_Map_List_Item_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_IsValid_ReturnValue_2) == 0x0000A1, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_IsValid_ReturnValue_3) == 0x0000A2, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, Temp_int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BP_GetSelectedItem_ReturnValue_1) == 0x0000A8, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BP_GetSelectedItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_AsBP_GMList_Item_Data_1) == 0x0000B0, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_AsBP_GMList_Item_Data_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_IsValid_ReturnValue_4) == 0x0000B9, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_BooleanAND_ReturnValue_2) == 0x0000BA, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_GetAllChildren_ReturnValue) == 0x0000C0, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_AsBPI_Game_Modifier_Settings) == 0x0000E0, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_AsBPI_Game_Modifier_Settings' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F1, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList) == 0x0000F8, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_MakeArray_Array) == 0x000108, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds) == 0x000118, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_SplitLoadedPrimaryAssetIds_UnloadedAssetIds' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets) == 0x000128, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_SplitLoadedPrimaryAssetIds_LoadedAssets' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, Temp_object_Variable) == 0x000138, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_AsHDGame_Mode_Definition) == 0x000150, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_AsHDGame_Mode_Definition' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_DynamicCast_bSuccess_5) == 0x000158, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Array_Length_ReturnValue_1) == 0x00015C, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_ShouldAddGMListing_bAddListing) == 0x000160, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_ShouldAddGMListing_bAddListing' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Less_IntInt_ReturnValue_3) == 0x000161, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_AsyncLoadPrimaryAssetList_ReturnValue) == 0x000168, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_AsyncLoadPrimaryAssetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_CustomEvent_Loaded) == 0x000170, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_IsValid_ReturnValue_5) == 0x000180, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_Array_Add_ReturnValue) == 0x000184, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, K2Node_CreateDelegate_OutputDelegate) == 0x000188, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame, CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1) == 0x000198, "Member 'WBP_OptionMenu_CreateGame_C_ExecuteUbergraph_WBP_OptionMenu_CreateGame::CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList_1' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature, bIsSelected) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_1_OnListItemSelectionChangedDynamic__DelegateSignature::bIsSelected' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature, Item) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature, Widget) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__MapList_K2Node_ComponentBoundEvent_5_OnListEntryInitializedDynamic__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature, Item) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature, Widget) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_3_OnListEntryInitializedDynamic__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature, bIsSelected) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_BndEvt__GMList_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature::bIsSelected' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481 final
{
public:
	TArray<class UObject*>                        Loaded;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481) == 0x000010, "Wrong size on WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481, Loaded) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_Completed_D5E8D9AE41A0DF3C4DEC0184D72FF481::Loaded' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FetchMapsFromRegistry
// 0x02B8 (0x02B8 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry final
{
public:
	TArray<struct FFMapInfo>                      MapsFound;                                         // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FFMapInfo                              NewMap;                                            // 0x0010(0x0048)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FFMapInfo>                      MapInfos;                                          // 0x0058(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimaryAssetId>                CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList; // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef; // 0x00A0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetMapAssetPreviewBannerImg_ReturnValue;  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue; // 0x00F0(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetMapAssetNameForDisplay_ReturnValue;    // 0x0118(0x0018)()
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPluginDisplayNameFromPath_ModName;     // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0160(0x0018)()
	bool                                          CallFunc_GetPackageShortName_bSuccess;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPackageShortName_ShortName;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef; // 0x0190(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetMapAssetPreviewImg_ReturnValue;        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value;                           // 0x01C8(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAddMapListing_bAddListing;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203[0x5];                                      // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0208(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMapInfo                              K2Node_MakeStruct_FMapInfo;                        // 0x0228(0x0048)(HasGetValueTypeHash)
	struct FFMapInfo                              K2Node_SetFieldsInStruct_StructOut;                // 0x0270(0x0048)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry) == 0x0002B8, "Wrong size on WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, MapsFound) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::MapsFound' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, NewMap) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::NewMap' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, MapInfos) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::MapInfos' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetPrimaryAssetIdList_OutPrimaryAssetIdList' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Array_Get_Item) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef) == 0x0000A0, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetMapAssetPreviewBannerImg_OutMapPreviewBannerImgRef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetMapAssetPreviewBannerImg_ReturnValue) == 0x0000C8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetMapAssetPreviewBannerImg_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Less_IntInt_ReturnValue) == 0x0000C9, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000D0, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000D8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_DynamicCast_AsTexture_2D) == 0x0000E0, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue) == 0x0000F0, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetSoftObjectReferenceFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetMapAssetNameForDisplay_ReturnValue) == 0x000118, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetMapAssetNameForDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000130, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetPluginDisplayNameFromPath_ModName) == 0x000140, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetPluginDisplayNameFromPath_ModName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Conv_NameToString_ReturnValue) == 0x000150, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Conv_StringToText_ReturnValue) == 0x000160, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetPackageShortName_bSuccess) == 0x000178, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetPackageShortName_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetPackageShortName_ShortName) == 0x000180, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetPackageShortName_ShortName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef) == 0x000190, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetMapAssetPreviewImg_OutMapPreviewImgRef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_GetMapAssetPreviewImg_ReturnValue) == 0x0001B8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_GetMapAssetPreviewImg_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Conv_StringToName_ReturnValue) == 0x0001BC, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Map_Find_Value) == 0x0001C8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Map_Find_ReturnValue) == 0x0001E0, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0001E8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0001F0, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_DynamicCast_AsTexture_2D_1) == 0x0001F8, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_ShouldAddMapListing_bAddListing) == 0x000201, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_ShouldAddMapListing_bAddListing' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, Temp_bool_Variable) == 0x000202, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_Select_Default) == 0x000208, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, CallFunc_Array_Add_ReturnValue) == 0x000220, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_MakeStruct_FMapInfo) == 0x000228, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_MakeStruct_FMapInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry, K2Node_SetFieldsInStruct_StructOut) == 0x000270, "Member 'WBP_OptionMenu_CreateGame_C_FetchMapsFromRegistry::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ShouldAddMapListing
// 0x0170 (0x0170 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_ShouldAddMapListing final
{
public:
	struct FPrimaryAssetId                        MapAssetId;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAddListing;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLegacyMap;                                        // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ContentRootName;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MapName;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           GameModes;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesMapIDSupportGMDefinition_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPackageShortName_bSuccess;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPackageShortName_ShortName;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContentRootFromPackageName_bSuccess;   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetContentRootFromPackageName_ContentRootName; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef; // 0x0088(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetMapAssetDefaultGameMode_ReturnValue;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI; // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue; // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TSoftClassPtr<class UClass>>             CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes; // 0x00B8(0x0050)()
	bool                                          CallFunc_GetMapAssetSupportedGameModes_ReturnValue; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           CallFunc_Set_ToArray_Result;                       // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0130(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_FilterExcludesGMClass_bExcludeGM;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_ShouldAddMapListing");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing) == 0x000170, "Wrong size on WBP_OptionMenu_CreateGame_C_ShouldAddMapListing");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, MapAssetId) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::MapAssetId' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, bAddListing) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::bAddListing' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, bLegacyMap) == 0x000011, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::bLegacyMap' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, ContentRootName) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::ContentRootName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, MapName) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::MapName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, GameModes) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::GameModes' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_DoesMapIDSupportGMDefinition_ReturnValue) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_DoesMapIDSupportGMDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetPackageShortName_bSuccess) == 0x000059, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetPackageShortName_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetPackageShortName_ShortName) == 0x000060, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetPackageShortName_ShortName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetContentRootFromPackageName_bSuccess) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetContentRootFromPackageName_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetContentRootFromPackageName_ContentRootName) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetContentRootFromPackageName_ContentRootName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetMapAssetDefaultGameMode_OutDefaultGameModeRef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetMapAssetDefaultGameMode_ReturnValue) == 0x0000B0, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetMapAssetDefaultGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI) == 0x0000B1, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetMapAssetVisibleInMapSelectUI_bOutVisibleInMapSelectUI' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue) == 0x0000B2, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetMapAssetVisibleInMapSelectUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_BooleanAND_ReturnValue) == 0x0000B3, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes) == 0x0000B8, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetMapAssetSupportedGameModes_OutSupportedGameModes' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_GetMapAssetSupportedGameModes_ReturnValue) == 0x000108, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_GetMapAssetSupportedGameModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Set_ToArray_Result) == 0x000110, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, Temp_int_Loop_Counter_Variable) == 0x000120, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, Temp_int_Array_Index_Variable) == 0x000128, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Array_Get_Item) == 0x000130, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_FilterExcludesGMClass_bExcludeGM) == 0x000158, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_FilterExcludesGMClass_bExcludeGM' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Array_Length_ReturnValue) == 0x00015C, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Array_Add_ReturnValue) == 0x000164, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue) == 0x000168, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_DoesModPluginUseLegacyMapScanning_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddMapListing, CallFunc_Not_PreBool_ReturnValue) == 0x000169, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddMapListing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FetchGameModesFromRegistry
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry final
{
public:
	TArray<struct FFGameModeInfo>                 GMsFound;                                          // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FFGameModeInfo>                 GMInfos;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHDGameModeDefinition*            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetValidDisplayNameForGMDefinition_DisplayName; // 0x0058(0x0018)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFGameModeInfo                         K2Node_MakeStruct_FGameModeInfo;                   // 0x0088(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry) == 0x0000B8, "Wrong size on WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, GMsFound) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::GMsFound' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, GMInfos) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::GMInfos' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Conv_StringToName_ReturnValue) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_GetValidDisplayNameForGMDefinition_DisplayName) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_GetValidDisplayNameForGMDefinition_DisplayName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, K2Node_DynamicCast_AsTexture_2D) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, K2Node_MakeStruct_FGameModeInfo) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::K2Node_MakeStruct_FGameModeInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'WBP_OptionMenu_CreateGame_C_FetchGameModesFromRegistry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ShouldAddGMListing
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_ShouldAddGMListing final
{
public:
	const class UHDGameModeDefinition*            GMDef;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAddListing;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_ShouldAddGMListing) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_ShouldAddGMListing");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_ShouldAddGMListing) == 0x000010, "Wrong size on WBP_OptionMenu_CreateGame_C_ShouldAddGMListing");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddGMListing, GMDef) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddGMListing::GMDef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddGMListing, bAddListing) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddGMListing::bAddListing' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddGMListing, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddGMListing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ShouldAddGMListing, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00000A, "Member 'WBP_OptionMenu_CreateGame_C_ShouldAddGMListing::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.RepopulateGameListFromRegistry
// 0x0098 (0x0098 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry final
{
public:
	TArray<struct FFGameModeInfo>                 GMListSorted;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UBP_GMListItemData_C*>           GMItemsArr;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFGameModeInfo>                 CallFunc_FetchGameModesFromRegistry_GMsFound;      // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFGameModeInfo                         CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GMListItemData_C*                   CallFunc_CreateGMListItem_GMItem;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFGameModeInfo>                 K2Node_Select_Default;                             // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry) == 0x000098, "Wrong size on WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, GMListSorted) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::GMListSorted' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, GMItemsArr) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::GMItemsArr' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_FetchGameModesFromRegistry_GMsFound) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_FetchGameModesFromRegistry_GMsFound' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_CreateGMListItem_GMItem) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_CreateGMListItem_GMItem' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, Temp_bool_Variable) == 0x000079, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry, K2Node_Select_Default) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateGameListFromRegistry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.RepopulateMapListFromRegistry
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry final
{
public:
	class UBP_GMListItemData_C*                   GMItemFilter;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFMapInfo>                      MapListSorted;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UBP_MapListItemData_C*>          MapItemsArr;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UHDGameModeDefinition*            CallFunc_FindGMDefinitionByClassName_GMDef;        // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMapInfo                              CallFunc_Array_Get_Item;                           // 0x0058(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MapListItemData_C*                  CallFunc_CreateMapListItem_MapItem;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFMapInfo>                      CallFunc_FetchMapsFromRegistry_MapsFound;          // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFMapInfo>                      K2Node_Select_Default;                             // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry) == 0x0000E0, "Wrong size on WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, GMItemFilter) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::GMItemFilter' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, MapListSorted) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::MapListSorted' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, MapItemsArr) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::MapItemsArr' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_FindGMDefinitionByClassName_GMDef) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_FindGMDefinitionByClassName_GMDef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_CreateMapListItem_MapItem) == 0x0000A8, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_CreateMapListItem_MapItem' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, Temp_bool_Variable) == 0x0000B1, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, CallFunc_FetchMapsFromRegistry_MapsFound) == 0x0000C0, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::CallFunc_FetchMapsFromRegistry_MapsFound' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry, K2Node_Select_Default) == 0x0000D0, "Member 'WBP_OptionMenu_CreateGame_C_RepopulateMapListFromRegistry::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.CreateMapListItem
// 0x0058 (0x0058 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_CreateMapListItem final
{
public:
	struct FFMapInfo                              MapInfo;                                           // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UBP_MapListItemData_C*                  MapItem;                                           // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MapListItemData_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_CreateMapListItem) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_CreateMapListItem");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_CreateMapListItem) == 0x000058, "Wrong size on WBP_OptionMenu_CreateGame_C_CreateMapListItem");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateMapListItem, MapInfo) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_CreateMapListItem::MapInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateMapListItem, MapItem) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_CreateMapListItem::MapItem' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateMapListItem, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_CreateMapListItem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AddMapToList
// 0x0058 (0x0058 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_AddMapToList final
{
public:
	struct FFMapInfo                              MapInfo;                                           // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UBP_MapListItemData_C*                  NewMapItem;                                        // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MapListItemData_C*                  CallFunc_CreateMapListItem_MapItem;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_AddMapToList) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_AddMapToList");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_AddMapToList) == 0x000058, "Wrong size on WBP_OptionMenu_CreateGame_C_AddMapToList");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AddMapToList, MapInfo) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_AddMapToList::MapInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AddMapToList, NewMapItem) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_AddMapToList::NewMapItem' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AddMapToList, CallFunc_CreateMapListItem_MapItem) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_AddMapToList::CallFunc_CreateMapListItem_MapItem' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AppendTravelURL
// 0x0030 (0x0030 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_AppendTravelURL final
{
public:
	class FString                                 OptionsToAdd;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_AppendTravelURL) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_AppendTravelURL");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_AppendTravelURL) == 0x000030, "Wrong size on WBP_OptionMenu_CreateGame_C_AppendTravelURL");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendTravelURL, OptionsToAdd) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_AppendTravelURL::OptionsToAdd' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendTravelURL, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_AppendTravelURL::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendTravelURL, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_AppendTravelURL::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.GetActiveModifiers
// 0x0078 (0x0078 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_GetActiveModifiers final
{
public:
	TArray<TScriptInterface<class IBPI_GameModifierSettings_C>> ActiveModifiers;                                   // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TScriptInterface<class IBPI_GameModifierSettings_C>> ActiveModifierList;                                // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameModifierSettings_C> K2Node_DynamicCast_AsBPI_Game_Modifier_Settings;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabled_bEnabled;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_GetActiveModifiers");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers) == 0x000078, "Wrong size on WBP_OptionMenu_CreateGame_C_GetActiveModifiers");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, ActiveModifiers) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::ActiveModifiers' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, ActiveModifierList) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::ActiveModifierList' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, K2Node_DynamicCast_AsBPI_Game_Modifier_Settings) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::K2Node_DynamicCast_AsBPI_Game_Modifier_Settings' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetActiveModifiers, CallFunc_IsEnabled_bEnabled) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_GetActiveModifiers::CallFunc_IsEnabled_bEnabled' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AppendOptionsFromActiveModifiers
// 0x0050 (0x0050 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IBPI_GameModifierSettings_C>> CallFunc_GetActiveModifiers_ActiveModifiers;       // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameModifierSettings_C> CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTravelURLOptions_Options;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers) == 0x000050, "Wrong size on WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, CallFunc_GetActiveModifiers_ActiveModifiers) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::CallFunc_GetActiveModifiers_ActiveModifiers' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers, CallFunc_GetTravelURLOptions_Options) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_AppendOptionsFromActiveModifiers::CallFunc_GetTravelURLOptions_Options' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.HandleStartGame
// 0x0090 (0x0090 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_HandleStartGame final
{
public:
	struct FFMapInfo                              SelectedMapInfo;                                   // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FFGameModeInfo                         SelectedGMInfo;                                    // 0x0048(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_HandleStartGame) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_HandleStartGame");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_HandleStartGame) == 0x000090, "Wrong size on WBP_OptionMenu_CreateGame_C_HandleStartGame");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_HandleStartGame, SelectedMapInfo) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_HandleStartGame::SelectedMapInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_HandleStartGame, SelectedGMInfo) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_HandleStartGame::SelectedGMInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_HandleStartGame, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_HandleStartGame::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_HandleStartGame, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_HandleStartGame::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.CreateGMListItem
// 0x0068 (0x0068 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_CreateGMListItem final
{
public:
	struct FFGameModeInfo                         GMInfo;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UBP_GMListItemData_C*                   GMItem;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFGameModeInfo                         GMInfoToUse;                                       // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UBP_GMListItemData_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_CreateGMListItem) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_CreateGMListItem");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_CreateGMListItem) == 0x000068, "Wrong size on WBP_OptionMenu_CreateGame_C_CreateGMListItem");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateGMListItem, GMInfo) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_CreateGMListItem::GMInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateGMListItem, GMItem) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_CreateGMListItem::GMItem' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateGMListItem, GMInfoToUse) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_CreateGMListItem::GMInfoToUse' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateGMListItem, CallFunc_SpawnObject_ReturnValue) == 0x000058, "Member 'WBP_OptionMenu_CreateGame_C_CreateGMListItem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_CreateGMListItem, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WBP_OptionMenu_CreateGame_C_CreateGMListItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.AddGMToList
// 0x0038 (0x0038 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_AddGMToList final
{
public:
	struct FFGameModeInfo                         GMInfo;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UBP_GMListItemData_C*                   NewGMItem;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GMListItemData_C*                   CallFunc_CreateGMListItem_GMItem;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_AddGMToList) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_AddGMToList");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_AddGMToList) == 0x000038, "Wrong size on WBP_OptionMenu_CreateGame_C_AddGMToList");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AddGMToList, GMInfo) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_AddGMToList::GMInfo' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AddGMToList, NewGMItem) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_AddGMToList::NewGMItem' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_AddGMToList, CallFunc_CreateGMListItem_GMItem) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_AddGMToList::CallFunc_CreateGMListItem_GMItem' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.SetMapPreviewImage
// 0x0008 (0x0008 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_SetMapPreviewImage final
{
public:
	class UTexture2D*                             NewImg;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_SetMapPreviewImage) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_SetMapPreviewImage");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_SetMapPreviewImage) == 0x000008, "Wrong size on WBP_OptionMenu_CreateGame_C_SetMapPreviewImage");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SetMapPreviewImage, NewImg) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_SetMapPreviewImage::NewImg' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.UpdateStartButtonState
// 0x000C (0x000C - 0x0000)
struct WBP_OptionMenu_CreateGame_C_UpdateStartButtonState final
{
public:
	int32                                         CallFunc_BP_GetNumItemsSelected_ReturnValue;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BP_GetNumItemsSelected_ReturnValue_1;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState) == 0x000004, "Wrong alignment on WBP_OptionMenu_CreateGame_C_UpdateStartButtonState");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState) == 0x00000C, "Wrong size on WBP_OptionMenu_CreateGame_C_UpdateStartButtonState");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState, CallFunc_BP_GetNumItemsSelected_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_UpdateStartButtonState::CallFunc_BP_GetNumItemsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState, CallFunc_BP_GetNumItemsSelected_ReturnValue_1) == 0x000004, "Member 'WBP_OptionMenu_CreateGame_C_UpdateStartButtonState::CallFunc_BP_GetNumItemsSelected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_UpdateStartButtonState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000009, "Member 'WBP_OptionMenu_CreateGame_C_UpdateStartButtonState::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_UpdateStartButtonState, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'WBP_OptionMenu_CreateGame_C_UpdateStartButtonState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.SortMapList
// 0x0200 (0x0200 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_SortMapList final
{
public:
	TArray<struct FFMapInfo>                      MapListToSort;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bDescending;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FFMapInfo>           InfoMap;                                           // 0x0018(0x0050)(Edit, BlueprintVisible)
	TArray<struct FAssetDescriptor>               MapDescriptors;                                    // 0x0068(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMapInfo                              CallFunc_Array_Get_Item;                           // 0x0098(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetDescriptor                       CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0020)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMapInfo                              CallFunc_Map_Find_Value;                           // 0x0110(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFMapInfo>                      CallFunc_Map_Values_Values;                        // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFMapInfo                              CallFunc_Array_Get_Item_2;                         // 0x0180(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetDescriptor                       K2Node_MakeStruct_AssetDescriptor;                 // 0x01D0(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_SortMapList) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_SortMapList");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_SortMapList) == 0x000200, "Wrong size on WBP_OptionMenu_CreateGame_C_SortMapList");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, MapListToSort) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::MapListToSort' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, bDescending) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::bDescending' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, InfoMap) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::InfoMap' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, MapDescriptors) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::MapDescriptors' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, Temp_int_Array_Index_Variable) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Get_Item) == 0x000098, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, Temp_int_Loop_Counter_Variable_1) == 0x0000E0, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Map_Find_Value) == 0x000110, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Length_ReturnValue_1) == 0x00015C, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, Temp_int_Loop_Counter_Variable_2) == 0x000160, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000164, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Add_IntInt_ReturnValue_2) == 0x000168, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Map_Values_Values) == 0x000170, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Get_Item_2) == 0x000180, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Length_ReturnValue_2) == 0x0001C8, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, K2Node_MakeStruct_AssetDescriptor) == 0x0001D0, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::K2Node_MakeStruct_AssetDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Length_ReturnValue_3) == 0x0001F0, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001F4, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortMapList, CallFunc_Array_Add_ReturnValue) == 0x0001F8, "Member 'WBP_OptionMenu_CreateGame_C_SortMapList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.SortGMList
// 0x0198 (0x0198 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_SortGMList final
{
public:
	TArray<struct FFGameModeInfo>                 GMListToSort;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          bDescending;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FFGameModeInfo>      InfoMap;                                           // 0x0018(0x0050)(Edit, BlueprintVisible)
	TArray<struct FAssetDescriptor>               GMDescriptors;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFGameModeInfo                         CallFunc_Array_Get_Item;                           // 0x0080(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetDescriptor                       CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFGameModeInfo                         CallFunc_Map_Find_Value;                           // 0x00F8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFGameModeInfo>                 CallFunc_Map_Values_Values;                        // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFGameModeInfo                         CallFunc_Array_Get_Item_2;                         // 0x0140(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetDescriptor                       K2Node_MakeStruct_AssetDescriptor;                 // 0x0170(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_SortGMList) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_SortGMList");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_SortGMList) == 0x000198, "Wrong size on WBP_OptionMenu_CreateGame_C_SortGMList");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, GMListToSort) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::GMListToSort' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, bDescending) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::bDescending' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, InfoMap) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::InfoMap' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, GMDescriptors) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::GMDescriptors' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, Temp_int_Array_Index_Variable) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, Temp_int_Array_Index_Variable_2) == 0x0000B4, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, Temp_int_Loop_Counter_Variable_2) == 0x0000C0, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Map_Find_Value) == 0x0000F8, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Map_Find_ReturnValue) == 0x000120, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000121, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Map_Values_Values) == 0x000128, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Length_ReturnValue_2) == 0x000138, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Length_ReturnValue_3) == 0x000168, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, K2Node_MakeStruct_AssetDescriptor) == 0x000170, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::K2Node_MakeStruct_AssetDescriptor' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Less_IntInt_ReturnValue_2) == 0x000190, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_SortGMList, CallFunc_Array_Add_ReturnValue) == 0x000194, "Member 'WBP_OptionMenu_CreateGame_C_SortGMList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FilterExcludesMapPrefix
// 0x0078 (0x0078 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bExcludePrefix;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameModeForMapName_ReturnValue;        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         CallFunc_MakeSoftClassPath_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue; // 0x0048(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftClassReference_ReturnValue;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix) == 0x000078, "Wrong size on WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, MapName) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::MapName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, bExcludePrefix) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::bExcludePrefix' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, CallFunc_GetGameModeForMapName_ReturnValue) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::CallFunc_GetGameModeForMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, CallFunc_MakeSoftClassPath_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::CallFunc_MakeSoftClassPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::CallFunc_Conv_SoftClassPathToSoftClassRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix, CallFunc_NotEqual_SoftClassReference_ReturnValue) == 0x000070, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesMapPrefix::CallFunc_NotEqual_SoftClassReference_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FilterExcludesGMClass
// 0x0038 (0x0038 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass final
{
public:
	TSoftClassPtr<class UClass>                   GMClass;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bLegacyAASSupport;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bExcludeGM;                                        // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_SoftClassReference_ReturnValue;  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass) == 0x000038, "Wrong size on WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, GMClass) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::GMClass' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, bLegacyAASSupport) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::bLegacyAASSupport' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, bExcludeGM) == 0x000029, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::bExcludeGM' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x00002C, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00002D, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_NotEqual_SoftClassReference_ReturnValue) == 0x00002F, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_NotEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'WBP_OptionMenu_CreateGame_C_FilterExcludesGMClass::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.ContainsGMByClass
// 0x0048 (0x0048 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_ContainsGMByClass final
{
public:
	TSoftClassPtr<class UClass>                   GMClass;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bContainsGM;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UHDGameModeDefinition*            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_ContainsGMByClass");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass) == 0x000048, "Wrong size on WBP_OptionMenu_CreateGame_C_ContainsGMByClass");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, GMClass) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::GMClass' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, bContainsGM) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::bContainsGM' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_ContainsGMByClass, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000045, "Member 'WBP_OptionMenu_CreateGame_C_ContainsGMByClass::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.FindGMDefinitionByClassName
// 0x0050 (0x0050 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName final
{
public:
	class FString                                 ClassName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class UHDGameModeDefinition*                  GMDef;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UHDGameModeDefinition*            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName) == 0x000050, "Wrong size on WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, ClassName) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::ClassName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, GMDef) == 0x000010, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::GMDef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000048, "Member 'WBP_OptionMenu_CreateGame_C_FindGMDefinitionByClassName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_CreateGame.WBP_OptionMenu_CreateGame_C.GetValidDisplayNameForGMDefinition
// 0x0118 (0x0118 - 0x0000)
struct WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition final
{
public:
	const class UHDGameModeDefinition*            GMDef;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   DisplayName;                                       // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromObject_ReturnValue;  // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0018)()
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPackageShortName_bSuccess;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPackageShortName_ShortName;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmptyOrWhitespace_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndsWith_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0100(0x0018)()
};
static_assert(alignof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition) == 0x000008, "Wrong alignment on WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition");
static_assert(sizeof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition) == 0x000118, "Wrong size on WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, GMDef) == 0x000000, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::GMDef' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, DisplayName) == 0x000008, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::DisplayName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, Temp_bool_Variable) == 0x000020, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_GetPrimaryAssetIdFromObject_ReturnValue) == 0x000024, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_GetPrimaryAssetIdFromObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000034, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000050, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_GetPackageShortName_bSuccess) == 0x000060, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_GetPackageShortName_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_GetPackageShortName_ShortName) == 0x000068, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_GetPackageShortName_ShortName' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_TextIsEmptyOrWhitespace_ReturnValue) == 0x000078, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_TextIsEmptyOrWhitespace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Len_ReturnValue) == 0x00007C, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_FindSubstring_ReturnValue) == 0x000080, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, Temp_bool_Variable_1) == 0x000084, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, Temp_bool_Variable_2) == 0x000090, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Right_ReturnValue) == 0x000098, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_EndsWith_ReturnValue) == 0x0000A8, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_EndsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_LeftChop_ReturnValue) == 0x0000B0, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, K2Node_Select_Default) == 0x0000C0, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, K2Node_Select_Default_1) == 0x0000E8, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition, K2Node_Select_Default_2) == 0x000100, "Member 'WBP_OptionMenu_CreateGame_C_GetValidDisplayNameForGMDefinition::K2Node_Select_Default_2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDHUDBase

#include "Basic.hpp"

#include "BP_HDHUDBase_classes.hpp"
#include "BP_HDHUDBase_parameters.hpp"


namespace SDK
{

// Function BP_HDHUDBase.BP_HDHUDBase_C.ExecuteUbergraph_BP_HDHUDBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::ExecuteUbergraph_BP_HDHUDBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ExecuteUbergraph_BP_HDHUDBase");

	Params::BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.PlayersUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGameStateBase*                   GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::PlayersUpdated(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "PlayersUpdated");

	Params::BP_HDHUDBase_C_PlayersUpdated Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.VoteCountUpdated
// (BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::VoteCountUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "VoteCountUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.VoteEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::VoteEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "VoteEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.VoteReset
// (BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::VoteReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "VoteReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.VoteStarted
// (BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::VoteStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "VoteStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.PlayerVoteStateUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDFVotingComponent*               SourceVotingComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::PlayerVoteStateUpdated(class UDFVotingComponent* SourceVotingComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "PlayerVoteStateUpdated");

	Params::BP_HDHUDBase_C_PlayerVoteStateUpdated Parms{};

	Parms.SourceVotingComponent = SourceVotingComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.TeamsUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGameStateBase*                   GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::TeamsUpdated(class AGameStateBase* GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "TeamsUpdated");

	Params::BP_HDHUDBase_C_TeamsUpdated Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPlayerUnpossessPawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::OwningPlayerUnpossessPawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "OwningPlayerUnpossessPawn");

	Params::BP_HDHUDBase_C_OwningPlayerUnpossessPawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPlayerPossessPawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::OwningPlayerPossessPawn(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "OwningPlayerPossessPawn");

	Params::BP_HDHUDBase_C_OwningPlayerPossessPawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPawnEquipmentItemChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADFBaseCharacter*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBaseItem*                      NewEquippedItem                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBaseItem*                      PrevEquippedItem                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::OwningPawnEquipmentItemChanged(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "OwningPawnEquipmentItemChanged");

	Params::BP_HDHUDBase_C_OwningPawnEquipmentItemChanged Parms{};

	Parms.Character = Character;
	Parms.NewEquippedItem = NewEquippedItem;
	Parms.PrevEquippedItem = PrevEquippedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPawnUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            NewOwningPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            PrevOwningPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::OwningPawnUpdated(class APawn* NewOwningPawn, class APawn* PrevOwningPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "OwningPawnUpdated");

	Params::BP_HDHUDBase_C_OwningPawnUpdated Parms{};

	Parms.NewOwningPawn = NewOwningPawn;
	Parms.PrevOwningPawn = PrevOwningPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ReceiveTick");

	Params::BP_HDHUDBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ReceiveEndPlay");

	Params::BP_HDHUDBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_HDHUDBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveDrawHUD
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SizeX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SizeY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::ReceiveDrawHUD(int32 SizeX, int32 SizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ReceiveDrawHUD");

	Params::BP_HDHUDBase_C_ReceiveDrawHUD Parms{};

	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ToggleEquipmentUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShown                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::ToggleEquipmentUI(bool bShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ToggleEquipmentUI");

	Params::BP_HDHUDBase_C_ToggleEquipmentUI Parms{};

	Parms.bShown = bShown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ToggleWeaponStatusUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShown                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::ToggleWeaponStatusUI(bool bShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ToggleWeaponStatusUI");

	Params::BP_HDHUDBase_C_ToggleWeaponStatusUI Parms{};

	Parms.bShown = bShown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectNextItem
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::EquipmentSelectNextItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentSelectNextItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectPrevItem
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::EquipmentSelectPrevItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentSelectPrevItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::EquipmentSelectItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentSelectItem");

	Params::BP_HDHUDBase_C_EquipmentSelectItem Parms{};

	Parms.ItemIndex = ItemIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentAddItemsFromLoadout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHDKit*                           NewLoadout                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDFInventoryComponent*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADFBaseWeapon*                    EquippedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::EquipmentAddItemsFromLoadout(class UHDKit* NewLoadout, class UDFInventoryComponent* PlayerInventory, class ADFBaseWeapon* EquippedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentAddItemsFromLoadout");

	Params::BP_HDHUDBase_C_EquipmentAddItemsFromLoadout Parms{};

	Parms.NewLoadout = NewLoadout;
	Parms.PlayerInventory = PlayerInventory;
	Parms.EquippedItem = EquippedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectItemBySlotNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOutNewSelection                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::EquipmentSelectItemBySlotNum(int32 SlotNum, bool* bOutNewSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentSelectItemBySlotNum");

	Params::BP_HDHUDBase_C_EquipmentSelectItemBySlotNum Parms{};

	Parms.SlotNum = SlotNum;

	UObject::ProcessEvent(Func, &Parms);

	if (bOutNewSelection != nullptr)
		*bOutNewSelection = Parms.bOutNewSelection;
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectEquippedItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHDKit*                           CurrentLoadout                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AHDBaseWeapon*                    EquippedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::EquipmentSelectEquippedItem(class UHDKit* CurrentLoadout, class AHDBaseWeapon* EquippedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentSelectEquippedItem");

	Params::BP_HDHUDBase_C_EquipmentSelectEquippedItem Parms{};

	Parms.CurrentLoadout = CurrentLoadout;
	Parms.EquippedItem = EquippedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ShowHUDWidget
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::ShowHUDWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ShowHUDWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.HideHUDWidget
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDestroyWidgetOnHide                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::HideHUDWidget(bool bDestroyWidgetOnHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "HideHUDWidget");

	Params::BP_HDHUDBase_C_HideHUDWidget Parms{};

	Parms.bDestroyWidgetOnHide = bDestroyWidgetOnHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.UpdateHUDVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDestroyOnHide                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::UpdateHUDVisibility(bool bDestroyOnHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "UpdateHUDVisibility");

	Params::BP_HDHUDBase_C_UpdateHUDVisibility Parms{};

	Parms.bDestroyOnHide = bDestroyOnHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.InitOwningHDPCDelegates
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::InitOwningHDPCDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "InitOwningHDPCDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.CleanupOwningHDPCDelegates
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::CleanupOwningHDPCDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "CleanupOwningHDPCDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.InitOwningHDPawnDelegates
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::InitOwningHDPawnDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "InitOwningHDPawnDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.CleanupDelegatesForHDPawn
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HDPlayerCharacterBase_C*      PlayerChar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::CleanupDelegatesForHDPawn(class ABP_HDPlayerCharacterBase_C* PlayerChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "CleanupDelegatesForHDPawn");

	Params::BP_HDHUDBase_C_CleanupDelegatesForHDPawn Parms{};

	Parms.PlayerChar = PlayerChar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ForceUpdateAllOwningPlayerReferences
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::ForceUpdateAllOwningPlayerReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ForceUpdateAllOwningPlayerReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ClearAllOwningPlayerReferences
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::ClearAllOwningPlayerReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ClearAllOwningPlayerReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ForceUpdateOwningPawnReferences
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::ForceUpdateOwningPawnReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ForceUpdateOwningPawnReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ClearOwningPawnReferences
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::ClearOwningPawnReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ClearOwningPawnReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.ResetPlayerStatusEffectsUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDHUDBase_C::ResetPlayerStatusEffectsUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "ResetPlayerStatusEffectsUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.SetAmmoResupplyEffectVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::SetAmmoResupplyEffectVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "SetAmmoResupplyEffectVisibility");

	Params::BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.SetMedicHealingEffectVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::SetMedicHealingEffectVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "SetMedicHealingEffectVisibility");

	Params::BP_HDHUDBase_C_SetMedicHealingEffectVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.SetTextChatHistoryVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::SetTextChatHistoryVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "SetTextChatHistoryVisibility");

	Params::BP_HDHUDBase_C_SetTextChatHistoryVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.IsTextChatHistoryVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bVisible                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::IsTextChatHistoryVisible(bool* bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "IsTextChatHistoryVisible");

	Params::BP_HDHUDBase_C_IsTextChatHistoryVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bVisible != nullptr)
		*bVisible = Parms.bVisible;
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.DrawCrosshair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SizeX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SizeY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::DrawCrosshair(int32 SizeX, int32 SizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "DrawCrosshair");

	Params::BP_HDHUDBase_C_DrawCrosshair Parms{};

	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.DrawNametags
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SizeX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SizeY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::DrawNametags(int32 SizeX, int32 SizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "DrawNametags");

	Params::BP_HDHUDBase_C_DrawNametags Parms{};

	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.CanDrawNametag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_HDPlayerCharacterBase_C*      InOtherPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InVerticalOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InOwnerCameraLocation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanDrawNametag                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        NametagScreenPosition                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::CanDrawNametag(class ABP_HDPlayerCharacterBase_C* InOtherPawn, float InVerticalOffset, const struct FVector& InOwnerCameraLocation, bool* bCanDrawNametag, struct FVector2D* NametagScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "CanDrawNametag");

	Params::BP_HDHUDBase_C_CanDrawNametag Parms{};

	Parms.InOtherPawn = InOtherPawn;
	Parms.InVerticalOffset = InVerticalOffset;
	Parms.InOwnerCameraLocation = std::move(InOwnerCameraLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (bCanDrawNametag != nullptr)
		*bCanDrawNametag = Parms.bCanDrawNametag;

	if (NametagScreenPosition != nullptr)
		*NametagScreenPosition = std::move(Parms.NametagScreenPosition);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.NametagsSingleLinetrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_HDPlayerCharacterBase_C*      OtherPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HDHUDBase_C::NametagsSingleLinetrace(const struct FVector& Start, const struct FVector& End, class ABP_HDPlayerCharacterBase_C* OtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "NametagsSingleLinetrace");

	Params::BP_HDHUDBase_C_NametagsSingleLinetrace Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.OtherPlayer = OtherPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.AddBasicNotification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFUINotificationInfo             Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_HDHUDBase_C::AddBasicNotification(const struct FFUINotificationInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "AddBasicNotification");

	Params::BP_HDHUDBase_C_AddBasicNotification Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.AddCustomNotification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDHUDBase_C::AddCustomNotification(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "AddCustomNotification");

	Params::BP_HDHUDBase_C_AddCustomNotification Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.IsValidVoteInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDFActiveVoteInfo                VoteInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::IsValidVoteInfo(struct FDFActiveVoteInfo& VoteInfo, bool* bValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "IsValidVoteInfo");

	Params::BP_HDHUDBase_C_IsValidVoteInfo Parms{};

	Parms.VoteInfo = std::move(VoteInfo);

	UObject::ProcessEvent(Func, &Parms);

	VoteInfo = std::move(Parms.VoteInfo);

	if (bValid != nullptr)
		*bValid = Parms.bValid;
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentGetSelectedItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AHDBaseWeapon*                    OutItemToEquip                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFoundItem                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::EquipmentGetSelectedItem(class AHDBaseWeapon** OutItemToEquip, bool* bFoundItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentGetSelectedItem");

	Params::BP_HDHUDBase_C_EquipmentGetSelectedItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutItemToEquip != nullptr)
		*OutItemToEquip = Parms.OutItemToEquip;

	if (bFoundItem != nullptr)
		*bFoundItem = Parms.bFoundItem;
}


// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentGetSelectedItemSlotNum
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   OutSlotNum                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFoundItem                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDHUDBase_C::EquipmentGetSelectedItemSlotNum(int32* OutSlotNum, bool* bFoundItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDHUDBase_C", "EquipmentGetSelectedItemSlotNum");

	Params::BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSlotNum != nullptr)
		*OutSlotNum = Parms.OutSlotNum;

	if (bFoundItem != nullptr)
		*bFoundItem = Parms.bFoundItem;
}

}


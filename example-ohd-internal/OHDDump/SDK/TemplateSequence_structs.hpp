#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemplateSequence

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct TemplateSequence.TemplateSequenceBindingOverrideData
// 0x000C (0x000C - 0x0000)
struct FTemplateSequenceBindingOverrideData final
{
public:
	TWeakObjectPtr<class UObject>                 Object;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverridesDefault;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTemplateSequenceBindingOverrideData) == 0x000004, "Wrong alignment on FTemplateSequenceBindingOverrideData");
static_assert(sizeof(FTemplateSequenceBindingOverrideData) == 0x00000C, "Wrong size on FTemplateSequenceBindingOverrideData");
static_assert(offsetof(FTemplateSequenceBindingOverrideData, Object) == 0x000000, "Member 'FTemplateSequenceBindingOverrideData::Object' has a wrong offset!");
static_assert(offsetof(FTemplateSequenceBindingOverrideData, bOverridesDefault) == 0x000008, "Member 'FTemplateSequenceBindingOverrideData::bOverridesDefault' has a wrong offset!");

// ScriptStruct TemplateSequence.TemplateSequenceInstanceData
// 0x0018 (0x0020 - 0x0008)
struct FTemplateSequenceInstanceData final : public FMovieSceneSequenceInstanceData
{
public:
	struct FMovieSceneEvaluationOperand           Operand;                                           // 0x0008(0x0014)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTemplateSequenceInstanceData) == 0x000008, "Wrong alignment on FTemplateSequenceInstanceData");
static_assert(sizeof(FTemplateSequenceInstanceData) == 0x000020, "Wrong size on FTemplateSequenceInstanceData");
static_assert(offsetof(FTemplateSequenceInstanceData, Operand) == 0x000008, "Member 'FTemplateSequenceInstanceData::Operand' has a wrong offset!");

// ScriptStruct TemplateSequence.TemplateSequenceSectionTemplate
// 0x0028 (0x0048 - 0x0020)
struct FTemplateSequenceSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FFrameNumber                           SectionStartTime;                                  // 0x0020(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  OuterBindingId;                                    // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMovieSceneEvaluationOperand           InnerOperand;                                      // 0x0034(0x0014)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FTemplateSequenceSectionTemplate) == 0x000008, "Wrong alignment on FTemplateSequenceSectionTemplate");
static_assert(sizeof(FTemplateSequenceSectionTemplate) == 0x000048, "Wrong size on FTemplateSequenceSectionTemplate");
static_assert(offsetof(FTemplateSequenceSectionTemplate, SectionStartTime) == 0x000020, "Member 'FTemplateSequenceSectionTemplate::SectionStartTime' has a wrong offset!");
static_assert(offsetof(FTemplateSequenceSectionTemplate, OuterBindingId) == 0x000024, "Member 'FTemplateSequenceSectionTemplate::OuterBindingId' has a wrong offset!");
static_assert(offsetof(FTemplateSequenceSectionTemplate, InnerOperand) == 0x000034, "Member 'FTemplateSequenceSectionTemplate::InnerOperand' has a wrong offset!");

}


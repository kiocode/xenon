#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPI_WeaponAnimLayer

#include "Basic.hpp"

#include "ABPI_WeaponAnimLayer_classes.hpp"
#include "ABPI_WeaponAnimLayer_parameters.hpp"


namespace SDK
{

// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.WeaponUpperBody
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        UpperBody                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        WeaponUpperBody_0                                      (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::WeaponUpperBody(const struct FPoseLink& UpperBody, struct FPoseLink* WeaponUpperBody_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "WeaponUpperBody");

	Params::ABPI_WeaponAnimLayer_C_WeaponUpperBody Parms{};

	Parms.UpperBody = std::move(UpperBody);

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponUpperBody_0 != nullptr)
		*WeaponUpperBody_0 = std::move(Parms.WeaponUpperBody_0);
}


// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.WeaponAdditive
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        WeaponAdditive_0                                       (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::WeaponAdditive(struct FPoseLink* WeaponAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "WeaponAdditive");

	Params::ABPI_WeaponAnimLayer_C_WeaponAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponAdditive_0 != nullptr)
		*WeaponAdditive_0 = std::move(Parms.WeaponAdditive_0);
}


// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.Move
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Move_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Move_1                                                 (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::Move(const struct FPoseLink& Move_0, struct FPoseLink* Move_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "Move");

	Params::ABPI_WeaponAnimLayer_C_Move Parms{};

	Parms.Move_0 = std::move(Move_0);

	UObject::ProcessEvent(Func, &Parms);

	if (Move_1 != nullptr)
		*Move_1 = std::move(Parms.Move_1);
}


// Function ABPI_WeaponAnimLayer.ABPI_WeaponAnimLayer_C.WeaponJumpLoop
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        LowerJumpLoop                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        WeaponJumpLoop_0                                       (Parm, OutParm, NoDestructor)

void IABPI_WeaponAnimLayer_C::WeaponJumpLoop(const struct FPoseLink& LowerJumpLoop, struct FPoseLink* WeaponJumpLoop_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_WeaponAnimLayer_C", "WeaponJumpLoop");

	Params::ABPI_WeaponAnimLayer_C_WeaponJumpLoop Parms{};

	Parms.LowerJumpLoop = std::move(LowerJumpLoop);

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponJumpLoop_0 != nullptr)
		*WeaponJumpLoop_0 = std::move(Parms.WeaponJumpLoop_0);
}

}


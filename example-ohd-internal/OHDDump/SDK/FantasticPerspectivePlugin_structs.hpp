#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FantasticPerspectivePlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum FantasticPerspectivePlugin.EFantasticPerspectiveStereoscopicPass
// NumValues: 0x0006
enum class EFantasticPerspectiveStereoscopicPass : uint8
{
	EFPSSP_FULL                              = 0,
	EFPSSP_LEFT_EYE                          = 1,
	EFPSSP_RIGHT_EYE                         = 2,
	EFPSSP_LEFT_EYE_SIDE                     = 3,
	EFPSSP_RIGHT_EYE_SIDE                    = 4,
	EFPSSP_MAX                               = 5,
};

// Enum FantasticPerspectivePlugin.EFantasticPerspectiveType
// NumValues: 0x0003
enum class EFantasticPerspectiveType : uint8
{
	EFPT_EFFECTS                             = 0,
	EFPT_POINTS                              = 1,
	EFPT_MAX                                 = 2,
};

// ScriptStruct FantasticPerspectivePlugin.FantasticPerspectiveDollyZoom
// 0x0008 (0x0008 - 0x0000)
struct FFantasticPerspectiveDollyZoom final
{
public:
	float                                         DollyZoom;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FocalDistance;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFantasticPerspectiveDollyZoom) == 0x000004, "Wrong alignment on FFantasticPerspectiveDollyZoom");
static_assert(sizeof(FFantasticPerspectiveDollyZoom) == 0x000008, "Wrong size on FFantasticPerspectiveDollyZoom");
static_assert(offsetof(FFantasticPerspectiveDollyZoom, DollyZoom) == 0x000000, "Member 'FFantasticPerspectiveDollyZoom::DollyZoom' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveDollyZoom, FocalDistance) == 0x000004, "Member 'FFantasticPerspectiveDollyZoom::FocalDistance' has a wrong offset!");

// ScriptStruct FantasticPerspectivePlugin.FantasticPerspectiveFrustum
// 0x0044 (0x0044 - 0x0000)
struct FFantasticPerspectiveFrustum final
{
public:
	struct FVector2D                              LensShift;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LensTilt;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PositionShift;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Skew;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PreAspectScale;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PostAspectScale;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ClippingPlaneSkew;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveDollyZoom         DollyZoom;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          CompensateAspectRatio;                             // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CompensateFOV;                                     // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SeamlessLensTilt;                                  // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFantasticPerspectiveFrustum) == 0x000004, "Wrong alignment on FFantasticPerspectiveFrustum");
static_assert(sizeof(FFantasticPerspectiveFrustum) == 0x000044, "Wrong size on FFantasticPerspectiveFrustum");
static_assert(offsetof(FFantasticPerspectiveFrustum, LensShift) == 0x000000, "Member 'FFantasticPerspectiveFrustum::LensShift' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, LensTilt) == 0x000008, "Member 'FFantasticPerspectiveFrustum::LensTilt' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, PositionShift) == 0x000010, "Member 'FFantasticPerspectiveFrustum::PositionShift' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, Skew) == 0x000018, "Member 'FFantasticPerspectiveFrustum::Skew' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, PreAspectScale) == 0x000020, "Member 'FFantasticPerspectiveFrustum::PreAspectScale' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, PostAspectScale) == 0x000028, "Member 'FFantasticPerspectiveFrustum::PostAspectScale' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, ClippingPlaneSkew) == 0x000030, "Member 'FFantasticPerspectiveFrustum::ClippingPlaneSkew' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, DollyZoom) == 0x000038, "Member 'FFantasticPerspectiveFrustum::DollyZoom' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, CompensateAspectRatio) == 0x000040, "Member 'FFantasticPerspectiveFrustum::CompensateAspectRatio' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, CompensateFOV) == 0x000041, "Member 'FFantasticPerspectiveFrustum::CompensateFOV' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveFrustum, SeamlessLensTilt) == 0x000042, "Member 'FFantasticPerspectiveFrustum::SeamlessLensTilt' has a wrong offset!");

// ScriptStruct FantasticPerspectivePlugin.FantasticPerspectivePoints
// 0x0048 (0x0048 - 0x0000)
struct FFantasticPerspectivePoints final
{
public:
	bool                                          OverrideViewTransform;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ViewOrigin;                                        // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NearClipPlane;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OrthoFrustumDepth;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LeftBottom;                                        // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LeftTop;                                           // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RightTop;                                          // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RightBottom;                                       // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFantasticPerspectivePoints) == 0x000004, "Wrong alignment on FFantasticPerspectivePoints");
static_assert(sizeof(FFantasticPerspectivePoints) == 0x000048, "Wrong size on FFantasticPerspectivePoints");
static_assert(offsetof(FFantasticPerspectivePoints, OverrideViewTransform) == 0x000000, "Member 'FFantasticPerspectivePoints::OverrideViewTransform' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, ViewOrigin) == 0x000004, "Member 'FFantasticPerspectivePoints::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, NearClipPlane) == 0x000010, "Member 'FFantasticPerspectivePoints::NearClipPlane' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, OrthoFrustumDepth) == 0x000014, "Member 'FFantasticPerspectivePoints::OrthoFrustumDepth' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, LeftBottom) == 0x000018, "Member 'FFantasticPerspectivePoints::LeftBottom' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, LeftTop) == 0x000024, "Member 'FFantasticPerspectivePoints::LeftTop' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, RightTop) == 0x000030, "Member 'FFantasticPerspectivePoints::RightTop' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectivePoints, RightBottom) == 0x00003C, "Member 'FFantasticPerspectivePoints::RightBottom' has a wrong offset!");

// ScriptStruct FantasticPerspectivePlugin.FantasticPerspectiveTransform
// 0x003C (0x003C - 0x0000)
struct FFantasticPerspectiveTransform final
{
public:
	struct FVector                                ViewOriginWorldOffset;                             // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldTranslation;                                  // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               WorldRotation;                                     // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                LocalTranslation;                                  // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               LocalRotation;                                     // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFantasticPerspectiveTransform) == 0x000004, "Wrong alignment on FFantasticPerspectiveTransform");
static_assert(sizeof(FFantasticPerspectiveTransform) == 0x00003C, "Wrong size on FFantasticPerspectiveTransform");
static_assert(offsetof(FFantasticPerspectiveTransform, ViewOriginWorldOffset) == 0x000000, "Member 'FFantasticPerspectiveTransform::ViewOriginWorldOffset' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveTransform, WorldTranslation) == 0x00000C, "Member 'FFantasticPerspectiveTransform::WorldTranslation' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveTransform, WorldRotation) == 0x000018, "Member 'FFantasticPerspectiveTransform::WorldRotation' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveTransform, LocalTranslation) == 0x000024, "Member 'FFantasticPerspectiveTransform::LocalTranslation' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveTransform, LocalRotation) == 0x000030, "Member 'FFantasticPerspectiveTransform::LocalRotation' has a wrong offset!");

// ScriptStruct FantasticPerspectivePlugin.FantasticPerspectiveDebug
// 0x0018 (0x0018 - 0x0000)
struct FFantasticPerspectiveDebug final
{
public:
	bool                                          DrawOriginalFrustum;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 OriginalFrustumColor;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DrawAdjustedFrustum;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 AdjustedFrustumColor;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LineThickness;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrustumDepth;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFantasticPerspectiveDebug) == 0x000004, "Wrong alignment on FFantasticPerspectiveDebug");
static_assert(sizeof(FFantasticPerspectiveDebug) == 0x000018, "Wrong size on FFantasticPerspectiveDebug");
static_assert(offsetof(FFantasticPerspectiveDebug, DrawOriginalFrustum) == 0x000000, "Member 'FFantasticPerspectiveDebug::DrawOriginalFrustum' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveDebug, OriginalFrustumColor) == 0x000004, "Member 'FFantasticPerspectiveDebug::OriginalFrustumColor' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveDebug, DrawAdjustedFrustum) == 0x000008, "Member 'FFantasticPerspectiveDebug::DrawAdjustedFrustum' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveDebug, AdjustedFrustumColor) == 0x00000C, "Member 'FFantasticPerspectiveDebug::AdjustedFrustumColor' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveDebug, LineThickness) == 0x000010, "Member 'FFantasticPerspectiveDebug::LineThickness' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveDebug, FrustumDepth) == 0x000014, "Member 'FFantasticPerspectiveDebug::FrustumDepth' has a wrong offset!");

// ScriptStruct FantasticPerspectivePlugin.FantasticPerspectiveSettings
// 0x00E4 (0x00E4 - 0x0000)
struct FFantasticPerspectiveSettings final
{
public:
	EFantasticPerspectiveType                     Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFantasticPerspectiveFrustum           Frustum;                                           // 0x0004(0x0044)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectivePoints            Points;                                            // 0x0048(0x0048)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveTransform         Transform;                                         // 0x0090(0x003C)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveDebug             Debug;                                             // 0x00CC(0x0018)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFantasticPerspectiveSettings) == 0x000004, "Wrong alignment on FFantasticPerspectiveSettings");
static_assert(sizeof(FFantasticPerspectiveSettings) == 0x0000E4, "Wrong size on FFantasticPerspectiveSettings");
static_assert(offsetof(FFantasticPerspectiveSettings, Type) == 0x000000, "Member 'FFantasticPerspectiveSettings::Type' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveSettings, Frustum) == 0x000004, "Member 'FFantasticPerspectiveSettings::Frustum' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveSettings, Points) == 0x000048, "Member 'FFantasticPerspectiveSettings::Points' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveSettings, Transform) == 0x000090, "Member 'FFantasticPerspectiveSettings::Transform' has a wrong offset!");
static_assert(offsetof(FFantasticPerspectiveSettings, Debug) == 0x0000CC, "Member 'FFantasticPerspectiveSettings::Debug' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NotificationType1

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_NotificationType1.WBP_NotificationType1_C.ExecuteUbergraph_WBP_NotificationType1
// 0x0378 (0x0378 - 0x0000)
struct WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0080(0x0028)()
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00AC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRemainingTime_Float;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0108(0x0040)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Add_Votes_In_Favor;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Add_Votes_Against;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x0198(0x0028)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x01E0(0x0018)()
	float                                         CallFunc_BreakVector2D_X;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTop;                                 // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_NotificationTray_C*                K2Node_Event_Notification_Tray;                    // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_223[0x1];                                      // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Threshold;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x022C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0248(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0260(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0278(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0290(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0310(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0320(0x0018)()
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x0340(0x0028)()
	int32                                         K2Node_CustomEvent_VotesInFavor;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VotesAgainst;                   // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1) == 0x000008, "Wrong alignment on WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1");
static_assert(sizeof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1) == 0x000378, "Wrong size on WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, EntryPoint) == 0x000000, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_SlateColor_2) == 0x000058, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_SlateColor_3) == 0x000080, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_Has_Been_Initd_Variable) == 0x0000A8, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000A9, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_IsClosed_Variable) == 0x0000AA, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_Event_MyGeometry) == 0x0000AC, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_Event_InDeltaTime) == 0x0000E4, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_PlayAnimation_ReturnValue) == 0x0000E8, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F0, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F4, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_Event_IsDesignTime) == 0x0000F8, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000FC, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_GetRemainingTime_Float) == 0x000100, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_GetRemainingTime_Float' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_FCeil_ReturnValue) == 0x000104, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_FormatArgumentData) == 0x000108, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_SwitchEnum_CmpSuccess) == 0x000148, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeArray_Array) == 0x000150, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Format_ReturnValue) == 0x000160, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_PlayAnimation_ReturnValue_1) == 0x000178, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CustomEvent_Add_Votes_In_Favor) == 0x000180, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CustomEvent_Add_Votes_In_Favor' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CustomEvent_Add_Votes_Against) == 0x000184, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CustomEvent_Add_Votes_Against' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Add_IntInt_ReturnValue_1) == 0x00018C, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_SwitchEnum_CmpSuccess_1) == 0x000190, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_SwitchEnum_CmpSuccess_2) == 0x000191, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_SlateColor_4) == 0x000198, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CreateDelegate_OutputDelegate) == 0x0001C0, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x0001D0, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_GetDesiredSize_ReturnValue) == 0x0001D4, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Conv_FloatToText_ReturnValue) == 0x0001E0, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_BreakVector2D_X) == 0x0001F8, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_BreakVector2D_Y) == 0x0001FC, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000200, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000204, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_IsClosed_Variable_1) == 0x000208, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00020C, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Lerp_ReturnValue) == 0x000210, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_Event_bTop) == 0x000214, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_Event_bTop' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_Event_Notification_Tray) == 0x000218, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_Event_Notification_Tray' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_Has_Been_Initd_Variable_1) == 0x000220, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000221, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_Has_Been_Initd_Variable_2) == 0x000222, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CustomEvent_Threshold) == 0x000224, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CustomEvent_Threshold' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_Has_Been_Initd_Variable_3) == 0x000228, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_IsClosed_Variable_2) == 0x000229, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CreateDelegate_OutputDelegate_1) == 0x00022C, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000240, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Conv_IntToText_ReturnValue) == 0x000248, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000260, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_MakeLiteralText_ReturnValue) == 0x000278, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_FormatArgumentData_1) == 0x000290, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002D0, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeArray_Array_1) == 0x000310, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Format_ReturnValue_1) == 0x000320, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, Temp_bool_IsClosed_Variable_3) == 0x000338, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_MakeStruct_SlateColor_5) == 0x000340, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CustomEvent_VotesInFavor) == 0x000368, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CustomEvent_VotesInFavor' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, K2Node_CustomEvent_VotesAgainst) == 0x00036C, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::K2Node_CustomEvent_VotesAgainst' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1, CallFunc_Greater_IntInt_ReturnValue) == 0x000370, "Member 'WBP_NotificationType1_C_ExecuteUbergraph_WBP_NotificationType1::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Set Vote Tally
// 0x0008 (0x0008 - 0x0000)
struct WBP_NotificationType1_C_Set_Vote_Tally final
{
public:
	int32                                         VotesInFavor_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VotesAgainst_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_Set_Vote_Tally) == 0x000004, "Wrong alignment on WBP_NotificationType1_C_Set_Vote_Tally");
static_assert(sizeof(WBP_NotificationType1_C_Set_Vote_Tally) == 0x000008, "Wrong size on WBP_NotificationType1_C_Set_Vote_Tally");
static_assert(offsetof(WBP_NotificationType1_C_Set_Vote_Tally, VotesInFavor_0) == 0x000000, "Member 'WBP_NotificationType1_C_Set_Vote_Tally::VotesInFavor_0' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_Set_Vote_Tally, VotesAgainst_0) == 0x000004, "Member 'WBP_NotificationType1_C_Set_Vote_Tally::VotesAgainst_0' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Set Threshold
// 0x0004 (0x0004 - 0x0000)
struct WBP_NotificationType1_C_Set_Threshold final
{
public:
	int32                                         Threshold_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_Set_Threshold) == 0x000004, "Wrong alignment on WBP_NotificationType1_C_Set_Threshold");
static_assert(sizeof(WBP_NotificationType1_C_Set_Threshold) == 0x000004, "Wrong size on WBP_NotificationType1_C_Set_Threshold");
static_assert(offsetof(WBP_NotificationType1_C_Set_Threshold, Threshold_0) == 0x000000, "Member 'WBP_NotificationType1_C_Set_Threshold::Threshold_0' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Set Tray
// 0x0008 (0x0008 - 0x0000)
struct WBP_NotificationType1_C_Set_Tray final
{
public:
	class UWBP_NotificationTray_C*                Notification_Tray;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_Set_Tray) == 0x000008, "Wrong alignment on WBP_NotificationType1_C_Set_Tray");
static_assert(sizeof(WBP_NotificationType1_C_Set_Tray) == 0x000008, "Wrong size on WBP_NotificationType1_C_Set_Tray");
static_assert(offsetof(WBP_NotificationType1_C_Set_Tray, Notification_Tray) == 0x000000, "Member 'WBP_NotificationType1_C_Set_Tray::Notification_Tray' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Set Top
// 0x0001 (0x0001 - 0x0000)
struct WBP_NotificationType1_C_Set_Top final
{
public:
	bool                                          bTop;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NotificationType1_C_Set_Top) == 0x000001, "Wrong alignment on WBP_NotificationType1_C_Set_Top");
static_assert(sizeof(WBP_NotificationType1_C_Set_Top) == 0x000001, "Wrong size on WBP_NotificationType1_C_Set_Top");
static_assert(offsetof(WBP_NotificationType1_C_Set_Top, bTop) == 0x000000, "Member 'WBP_NotificationType1_C_Set_Top::bTop' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Change Vote Tally
// 0x0008 (0x0008 - 0x0000)
struct WBP_NotificationType1_C_Change_Vote_Tally final
{
public:
	int32                                         Add_Votes_In_Favor;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Add_Votes_Against;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_Change_Vote_Tally) == 0x000004, "Wrong alignment on WBP_NotificationType1_C_Change_Vote_Tally");
static_assert(sizeof(WBP_NotificationType1_C_Change_Vote_Tally) == 0x000008, "Wrong size on WBP_NotificationType1_C_Change_Vote_Tally");
static_assert(offsetof(WBP_NotificationType1_C_Change_Vote_Tally, Add_Votes_In_Favor) == 0x000000, "Member 'WBP_NotificationType1_C_Change_Vote_Tally::Add_Votes_In_Favor' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_Change_Vote_Tally, Add_Votes_Against) == 0x000004, "Member 'WBP_NotificationType1_C_Change_Vote_Tally::Add_Votes_Against' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_NotificationType1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_NotificationType1_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_NotificationType1_C_PreConstruct");
static_assert(sizeof(WBP_NotificationType1_C_PreConstruct) == 0x000001, "Wrong size on WBP_NotificationType1_C_PreConstruct");
static_assert(offsetof(WBP_NotificationType1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_NotificationType1_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_NotificationType1_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_Tick) == 0x000004, "Wrong alignment on WBP_NotificationType1_C_Tick");
static_assert(sizeof(WBP_NotificationType1_C_Tick) == 0x00003C, "Wrong size on WBP_NotificationType1_C_Tick");
static_assert(offsetof(WBP_NotificationType1_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_NotificationType1_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_NotificationType1_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.GetRemainingTime
// 0x0010 (0x0010 - 0x0000)
struct WBP_NotificationType1_C_GetRemainingTime final
{
public:
	float                                         Float;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_GetRemainingTime) == 0x000004, "Wrong alignment on WBP_NotificationType1_C_GetRemainingTime");
static_assert(sizeof(WBP_NotificationType1_C_GetRemainingTime) == 0x000010, "Wrong size on WBP_NotificationType1_C_GetRemainingTime");
static_assert(offsetof(WBP_NotificationType1_C_GetRemainingTime, Float) == 0x000000, "Member 'WBP_NotificationType1_C_GetRemainingTime::Float' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_GetRemainingTime, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'WBP_NotificationType1_C_GetRemainingTime::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_GetRemainingTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_NotificationType1_C_GetRemainingTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_GetRemainingTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_NotificationType1_C_GetRemainingTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_NotificationType1.WBP_NotificationType1_C.Get Is Sticky?
// 0x0008 (0x0008 - 0x0000)
struct WBP_NotificationType1_C_Get_Is_Sticky_ final
{
public:
	bool                                          bIsSticky;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StickyPriority_0;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_NotificationType1_C_Get_Is_Sticky_) == 0x000004, "Wrong alignment on WBP_NotificationType1_C_Get_Is_Sticky_");
static_assert(sizeof(WBP_NotificationType1_C_Get_Is_Sticky_) == 0x000008, "Wrong size on WBP_NotificationType1_C_Get_Is_Sticky_");
static_assert(offsetof(WBP_NotificationType1_C_Get_Is_Sticky_, bIsSticky) == 0x000000, "Member 'WBP_NotificationType1_C_Get_Is_Sticky_::bIsSticky' has a wrong offset!");
static_assert(offsetof(WBP_NotificationType1_C_Get_Is_Sticky_, StickyPriority_0) == 0x000004, "Member 'WBP_NotificationType1_C_Get_Is_Sticky_::StickyPriority_0' has a wrong offset!");

}


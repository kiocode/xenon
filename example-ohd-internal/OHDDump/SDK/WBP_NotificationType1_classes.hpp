#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NotificationType1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EUINotificationType_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_NotificationType1.WBP_NotificationType1_C
// 0x0148 (0x0378 - 0x0230)
class UWBP_NotificationType1_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Remove;                                            // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Boot;                                              // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BlindImageLeft;                                    // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlindImageRight;                                   // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BlindLeftHighlight;                                // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BlindRightHighlight;                               // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BlindVote;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DisableImage;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Overall;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParityImageLeft;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParityImageRight;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ParityLeftHighlight;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ParityRightHighlight;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ParityTallyLeft;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ParityTallyRight;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ParityVote;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Plain_Text;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RemainingTime;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         Rich_Text;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ThresholdHighlight;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ThresholdImage;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ThresholdTally;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ThresholdVote;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           TimerBar;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Display_Time;                                      // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   TimerStyle;                                        // 0x0318(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	float                                         CreationTime;                                      // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINotificationType                           NotificationType;                                  // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseRichText;                                      // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             No_Image;                                          // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Yes_Image;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VotesInFavor;                                      // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VotesAgainst;                                      // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTopOfEvents;                                    // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_NotificationTray_C*                Tray_Ref__Automated_;                              // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         SquashLerp;                                        // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDestroying;                                       // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSticky;                                           // 0x0365(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_366[0x2];                                      // 0x0366(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StickyPriority;                                    // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Threshold;                                         // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShrinking;                                        // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_NotificationType1(int32 EntryPoint);
	void Set_Vote_Tally(int32 VotesInFavor_0, int32 VotesAgainst_0);
	void Begin_Shrink();
	void Shrink();
	void Set_Threshold(int32 Threshold_0);
	void Negative_Vote();
	void Positive_Vote();
	void Set_Tray(class UWBP_NotificationTray_C* Notification_Tray);
	void Refreshed_Position();
	void Set_Top(bool bTop);
	void Change_Vote_Tally(int32 Add_Votes_In_Favor, int32 Add_Votes_Against);
	void Destroy_For_Real();
	void Begin_Destroy();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void GetRemainingTime(float* Float);
	void Get_Is_Sticky_(bool* bIsSticky, int32* StickyPriority_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_NotificationType1_C">();
	}
	static class UWBP_NotificationType1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_NotificationType1_C>();
	}
};
static_assert(alignof(UWBP_NotificationType1_C) == 0x000008, "Wrong alignment on UWBP_NotificationType1_C");
static_assert(sizeof(UWBP_NotificationType1_C) == 0x000378, "Wrong size on UWBP_NotificationType1_C");
static_assert(offsetof(UWBP_NotificationType1_C, UberGraphFrame) == 0x000230, "Member 'UWBP_NotificationType1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Remove) == 0x000238, "Member 'UWBP_NotificationType1_C::Remove' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Boot) == 0x000240, "Member 'UWBP_NotificationType1_C::Boot' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, BlindImageLeft) == 0x000248, "Member 'UWBP_NotificationType1_C::BlindImageLeft' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, BlindImageRight) == 0x000250, "Member 'UWBP_NotificationType1_C::BlindImageRight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, BlindLeftHighlight) == 0x000258, "Member 'UWBP_NotificationType1_C::BlindLeftHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, BlindRightHighlight) == 0x000260, "Member 'UWBP_NotificationType1_C::BlindRightHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, BlindVote) == 0x000268, "Member 'UWBP_NotificationType1_C::BlindVote' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, DisableImage) == 0x000270, "Member 'UWBP_NotificationType1_C::DisableImage' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Overall) == 0x000278, "Member 'UWBP_NotificationType1_C::Overall' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityImageLeft) == 0x000280, "Member 'UWBP_NotificationType1_C::ParityImageLeft' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityImageRight) == 0x000288, "Member 'UWBP_NotificationType1_C::ParityImageRight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityLeftHighlight) == 0x000290, "Member 'UWBP_NotificationType1_C::ParityLeftHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityRightHighlight) == 0x000298, "Member 'UWBP_NotificationType1_C::ParityRightHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityTallyLeft) == 0x0002A0, "Member 'UWBP_NotificationType1_C::ParityTallyLeft' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityTallyRight) == 0x0002A8, "Member 'UWBP_NotificationType1_C::ParityTallyRight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ParityVote) == 0x0002B0, "Member 'UWBP_NotificationType1_C::ParityVote' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Plain_Text) == 0x0002B8, "Member 'UWBP_NotificationType1_C::Plain_Text' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, RemainingTime) == 0x0002C0, "Member 'UWBP_NotificationType1_C::RemainingTime' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Rich_Text) == 0x0002C8, "Member 'UWBP_NotificationType1_C::Rich_Text' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ThresholdHighlight) == 0x0002D0, "Member 'UWBP_NotificationType1_C::ThresholdHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ThresholdImage) == 0x0002D8, "Member 'UWBP_NotificationType1_C::ThresholdImage' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ThresholdTally) == 0x0002E0, "Member 'UWBP_NotificationType1_C::ThresholdTally' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, ThresholdVote) == 0x0002E8, "Member 'UWBP_NotificationType1_C::ThresholdVote' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, TimerBar) == 0x0002F0, "Member 'UWBP_NotificationType1_C::TimerBar' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Display_Time) == 0x0002F8, "Member 'UWBP_NotificationType1_C::Display_Time' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Text) == 0x000300, "Member 'UWBP_NotificationType1_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, TimerStyle) == 0x000318, "Member 'UWBP_NotificationType1_C::TimerStyle' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, CreationTime) == 0x000330, "Member 'UWBP_NotificationType1_C::CreationTime' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, NotificationType) == 0x000334, "Member 'UWBP_NotificationType1_C::NotificationType' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, bUseRichText) == 0x000335, "Member 'UWBP_NotificationType1_C::bUseRichText' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, No_Image) == 0x000338, "Member 'UWBP_NotificationType1_C::No_Image' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Yes_Image) == 0x000340, "Member 'UWBP_NotificationType1_C::Yes_Image' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, VotesInFavor) == 0x000348, "Member 'UWBP_NotificationType1_C::VotesInFavor' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, VotesAgainst) == 0x00034C, "Member 'UWBP_NotificationType1_C::VotesAgainst' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, bIsTopOfEvents) == 0x000350, "Member 'UWBP_NotificationType1_C::bIsTopOfEvents' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Tray_Ref__Automated_) == 0x000358, "Member 'UWBP_NotificationType1_C::Tray_Ref__Automated_' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, SquashLerp) == 0x000360, "Member 'UWBP_NotificationType1_C::SquashLerp' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, bDestroying) == 0x000364, "Member 'UWBP_NotificationType1_C::bDestroying' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, bSticky) == 0x000365, "Member 'UWBP_NotificationType1_C::bSticky' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, StickyPriority) == 0x000368, "Member 'UWBP_NotificationType1_C::StickyPriority' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, Threshold) == 0x00036C, "Member 'UWBP_NotificationType1_C::Threshold' has a wrong offset!");
static_assert(offsetof(UWBP_NotificationType1_C, bShrinking) == 0x000370, "Member 'UWBP_NotificationType1_C::bShrinking' has a wrong offset!");

}


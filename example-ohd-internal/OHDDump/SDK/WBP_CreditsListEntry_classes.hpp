#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CreditsListEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FGameCreditsEntry_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CreditsListEntry.WBP_CreditsListEntry_C
// 0x0068 (0x0298 - 0x0230)
class UWBP_CreditsListEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             EntryBodyText;                                     // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CreditsListHeader_C*               EntryHeader;                                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FFGameCreditsEntry                     Header;                                            // 0x0248(0x0030)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                HeaderPadding;                                     // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	TArray<struct FFGameCreditsEntry>             BodyEntries;                                       // 0x0288(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CreditsListEntry(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void CombineBodyText(class FString* BodyCombinedStr);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CreditsListEntry_C">();
	}
	static class UWBP_CreditsListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CreditsListEntry_C>();
	}
};
static_assert(alignof(UWBP_CreditsListEntry_C) == 0x000008, "Wrong alignment on UWBP_CreditsListEntry_C");
static_assert(sizeof(UWBP_CreditsListEntry_C) == 0x000298, "Wrong size on UWBP_CreditsListEntry_C");
static_assert(offsetof(UWBP_CreditsListEntry_C, UberGraphFrame) == 0x000230, "Member 'UWBP_CreditsListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CreditsListEntry_C, EntryBodyText) == 0x000238, "Member 'UWBP_CreditsListEntry_C::EntryBodyText' has a wrong offset!");
static_assert(offsetof(UWBP_CreditsListEntry_C, EntryHeader) == 0x000240, "Member 'UWBP_CreditsListEntry_C::EntryHeader' has a wrong offset!");
static_assert(offsetof(UWBP_CreditsListEntry_C, Header) == 0x000248, "Member 'UWBP_CreditsListEntry_C::Header' has a wrong offset!");
static_assert(offsetof(UWBP_CreditsListEntry_C, HeaderPadding) == 0x000278, "Member 'UWBP_CreditsListEntry_C::HeaderPadding' has a wrong offset!");
static_assert(offsetof(UWBP_CreditsListEntry_C, BodyEntries) == 0x000288, "Member 'UWBP_CreditsListEntry_C::BodyEntries' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OptionsMenuItem_InputKeySelector

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector
// 0x0028 (0x0028 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x0008(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector) == 0x000008, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector) == 0x000028, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector, EntryPoint) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector, K2Node_ComponentBoundEvent_SelectedKey) == 0x000008, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ExecuteUbergraph_WBP_OptionsMenuItem_InputKeySelector::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_BndEvt__OptionIKS_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct) == 0x000001, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.GetSelectedKey
// 0x0030 (0x0030 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey final
{
public:
	struct FKey                                   SelectedKey;                                       // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSelectedKey_SelectedKey;               // 0x0018(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey) == 0x000008, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey) == 0x000030, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey, SelectedKey) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey::SelectedKey' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey, CallFunc_GetSelectedKey_SelectedKey) == 0x000018, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_GetSelectedKey::CallFunc_GetSelectedKey_SelectedKey' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.SetSelectedKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey final
{
public:
	struct FKey                                   SelectedKey;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey) == 0x000008, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey) == 0x000018, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey, SelectedKey) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_SetSelectedKey::SelectedKey' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.ClearSelectedKey
// 0x0048 (0x0048 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey final
{
public:
	class UWBP_OptionsMenuItem_InputKeySelector_C* IKS;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   NewKey;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bIsPlayerChangingKeyBindings;                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetSelectedKey_SelectedKey;               // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey) == 0x000008, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey) == 0x000048, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey, IKS) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey::IKS' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey, NewKey) == 0x000008, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey, bIsPlayerChangingKeyBindings) == 0x000020, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey::bIsPlayerChangingKeyBindings' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey, CallFunc_GetSelectedKey_SelectedKey) == 0x000028, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey::CallFunc_GetSelectedKey_SelectedKey' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000040, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_ClearSelectedKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function WBP_OptionsMenuItem_InputKeySelector.WBP_OptionsMenuItem_InputKeySelector_C.IsSelectingKey
// 0x0002 (0x0002 - 0x0000)
struct WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey final
{
public:
	bool                                          IsSelecting;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsSelectingKey_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey) == 0x000001, "Wrong alignment on WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey");
static_assert(sizeof(WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey) == 0x000002, "Wrong size on WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey, IsSelecting) == 0x000000, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey::IsSelecting' has a wrong offset!");
static_assert(offsetof(WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey, CallFunc_GetIsSelectingKey_ReturnValue) == 0x000001, "Member 'WBP_OptionsMenuItem_InputKeySelector_C_IsSelectingKey::CallFunc_GetIsSelectingKey_ReturnValue' has a wrong offset!");

}


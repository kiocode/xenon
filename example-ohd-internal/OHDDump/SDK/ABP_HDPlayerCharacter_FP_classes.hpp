#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HDPlayerCharacter_FP

#include "Basic.hpp"

#include "HDMain_classes.hpp"
#include "DonkehFramework_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_HDPlayerCharacter_FP.ABP_HDPlayerCharacter_FP_C
// 0x98B0 (0x9B90 - 0x02E0)
class UABP_HDPlayerCharacter_FP_C final : public UHDPlayerCharacterAnimInst_FPP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_31;                    // 0x02E8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_17;                   // 0x0310(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_30;                    // 0x03C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x03F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x0418(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_15;                      // 0x0440(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_16;                   // 0x0508(0x00B8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_17;                 // 0x05C0(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x0680(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_16;                 // 0x06A8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x0768(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_15;                 // 0x0790(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_14;                 // 0x0850(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_15;                   // 0x0910(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x09C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x09F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x0A18(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_13;                 // 0x0A40(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x0B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x0B50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x0B78(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_48;                   // 0x0BA0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x0C18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_47;                   // 0x0C48(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x0CC0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x0CF0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_8;                      // 0x0D20(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0DD0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0E00(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x0EE0(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_14;                      // 0x0F58(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_14;                   // 0x1020(0x00B8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_13;                      // 0x10D8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x11A0(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x11C8(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_12;                      // 0x1278(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_13;                   // 0x1340(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x13F8(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_8;                     // 0x1470(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x1538(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x15F0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_12;                 // 0x1618(0x00C0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_24;                       // 0x16D8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8;             // 0x17E0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8;             // 0x1800(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_23;                       // 0x1820(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_7;                          // 0x1928(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_6;                          // 0x1A18(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7;             // 0x1B08(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7;             // 0x1B28(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_22;                       // 0x1B48(0x0108)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_8;                      // 0x1C50(0x0018)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x1C68(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x1D08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x1D30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1D58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1D80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1DA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x1DD0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x1DF8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x1E70(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x1EA0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x1F18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x1F48(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x1FC0(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_7;                      // 0x1FF0(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x2008(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x2038(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_7;                     // 0x20E8(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_21;                       // 0x21B0(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x22B8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x22D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x22F8(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_11;                      // 0x2370(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x2438(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x24B0(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_10;                      // 0x2528(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x25F0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x2668(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x26E0(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_9;                       // 0x2758(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x2820(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_8;                       // 0x2898(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x2960(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x29D8(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x2A50(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x2B18(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x2B90(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x2C30(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x2CD0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x2D48(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x2DC0(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_6;                      // 0x2E88(0x0018)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_5;                      // 0x2EA0(0x0018)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x2EB8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x2EE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x2F10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x2F38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x2F60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x2F88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x2FB0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x2FD8(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0x3050(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x3118(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_11;                 // 0x3140(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x3200(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x3278(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x32A8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x32D0(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x3348(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_10;                 // 0x3410(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x34D0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x3548(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x3578(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x35A0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x35D0(0x00B0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x3680(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x36F8(0x00B8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_9;                  // 0x37B0(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x3870(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x3898(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x38C8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x3940(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x3970(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x3A20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x3A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x3A70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x3A98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x3AC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x3AE8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x3B10(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x3B88(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x3BB8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x3C30(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x3C60(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x3CD8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x3D08(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x3D80(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x3DB0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x3E28(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x3E58(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x3ED0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x3F48(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x3FE8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x4018(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x40C8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x4180(0x00B8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x4238(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x42E8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x4310(0x00B8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x43C8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x43E8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x4410(0x00C0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x44D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x44F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x4520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x4548(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x4570(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x45E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x4618(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x4690(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x4730(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x4758(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x4788(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x4800(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x4830(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x4858(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x4888(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x4938(0x00B8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x49F0(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x4AB0(0x00B8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x4B68(0x0020)()
	uint8                                         Pad_4B88[0x8];                                     // 0x4B88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x4B90(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x4D70(0x01E0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x4F50(0x0078)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_20;                       // 0x4FC8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x50D0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x50F0(0x0078)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_19;                       // 0x5168(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x5270(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x5290(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x5380(0x00B8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x5438(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x5458(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x5518(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x5540(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_18;                       // 0x5630(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x5738(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x57B0(0x00B8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_17;                       // 0x5868(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x5970(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x5990(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_16;                       // 0x5A40(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x5B48(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x5C50(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x5C78(0x00C0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x5D38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x5D60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x5D88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x5DB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x5DD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x5E00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x5E28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x5E50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x5E78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x5EA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x5EC8(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x5EF0(0x00E0)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_4;                      // 0x5FD0(0x0018)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x5FE8(0x00C0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x60A8(0x00E0)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_3;                      // 0x6188(0x0018)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x61A0(0x00C0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x6260(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_2;                      // 0x6328(0x0018)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x6340(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x63F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x6420(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x6498(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x6510(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x65D8(0x0030)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x6608(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x66D0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x6748(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x67C0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x67F0(0x0078)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x6868(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x6930(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x69A8(0x0030)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x69D8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x6AA0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x6B18(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x6B90(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x6BC0(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x6BD8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x6C08(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x6CB8(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x6DC0(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x6E38(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x6EF0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x6F18(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x6F40(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x6F60(0x0020)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x6F80(0x00C8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x7048(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x7138(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x7158(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x7248(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x7268(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x7290(0x00B8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x7348(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x7390(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x7458(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x7560(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x7668(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x7728(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x7750(0x00B8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x7808(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x78C8(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x78F0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x79F8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x7B00(0x0108)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x7C08(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x7CD0(0x0078)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x7D48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x7D70(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x7D98(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x7E60(0x0108)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x7F68(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x8018(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x8040(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x8148(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x8250(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x8358(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x8418(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x8440(0x00B0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x84F0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x85E0(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x86D0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x87D8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x88E0(0x0108)()
	uint8                                         Pad_89E8[0x8];                                     // 0x89E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x89F0(0x01B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x8BA0(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x8C58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x8C80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x8CA8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x8D20(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x8D50(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x8DC8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x8DF8(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x8EA8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x8FB0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x8FD0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x8FF0(0x0018)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x9008(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x90A8(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x9148(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x9170(0x0108)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x9278(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x92A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x92D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x92F8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x9370(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x93A0(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x93B8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x93E8(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x9498(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x9560(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x95D8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x96A0(0x0078)()
	class ABP_HDPlayerCharacterBase_C*            OwningChar;                                        // 0x9718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerControllerBase_C*           OwningPC;                                          // 0x9720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      BasePoseAnim;                                      // 0x9728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      IdleAdditiveAnim;                                  // 0x9730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      MoveAnim;                                          // 0x9738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimInAnim;                                         // 0x9740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimBasePoseAnim;                                   // 0x9748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimOutAnim;                                        // 0x9750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintInAnim;                                      // 0x9758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintAnim;                                        // 0x9760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintOutAnim;                                     // 0x9768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<TSoftClassPtr<class UClass>, int32>      WeaponAnims;                                       // 0x9770(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)
	class UAnimSequenceBase*                      ProneInAnim;                                       // 0x97C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CrawlAnim;                                         // 0x97C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ProneOutAnim;                                      // 0x97D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimWalkAnim;                                       // 0x97D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPrefiring;                                        // 0x97E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReadyToThrow;                                     // 0x97E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFiring;                                           // 0x97E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97E3[0x5];                                     // 0x97E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      ThrowReadyBasePose;                                // 0x97E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ThrowAnim;                                         // 0x97F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDWeaponBase_C*                     CurrentWeapon;                                     // 0x97F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeaningLeft;                                      // 0x9800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLeaningRight;                                     // 0x9801(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELeanDirection                                LeanDirection;                                     // 0x9802(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideArmsWhileSwimming;                            // 0x9803(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         LeanAmount;                                        // 0x9804(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanAlpha;                                         // 0x9808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeX;                                        // 0x980C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanOffsetAlpha;                                   // 0x9810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LeanRootRot;                                       // 0x9814(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LeanWeaponOffset;                                  // 0x9820(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanOffsetInterpSpeed;                             // 0x982C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LeanWeaponRot;                                     // 0x9830(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                SmoothCrouchWeaponOffset;                          // 0x983C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SmoothRotation;                                    // 0x9848(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	float                                         SmoothRotationAmount;                              // 0x9854(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElbowIKWeight;                                     // 0x9858(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementAlpha;                                     // 0x985C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SmoothMovement;                                    // 0x9860(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeed;                                          // 0x986C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SmoothMovementSwizzled;                            // 0x9870(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SmoothMovementRotation;                            // 0x987C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SmoothMovementRotationAlpha;                       // 0x9888(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothMovementRotationAmount;                      // 0x988C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSwayAlpha;                                 // 0x9890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimAlpha;                                          // 0x9894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimSpeed;                                          // 0x9898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightDirection;                                    // 0x989C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightOffset;                                       // 0x98A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RestoreGunBonePosition;                            // 0x98B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               KickRotation;                                      // 0x98B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	struct FVector                                KickOffset;                                        // 0x98C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothKick;                                        // 0x98D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KickAmount;                                        // 0x98D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KickNoiseSpeed;                                    // 0x98D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KickNoiseAmount;                                   // 0x98DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kick;                                              // 0x98E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightOffsetLocal;                                  // 0x98E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SightTiltOffset;                                   // 0x98F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SwayOffset;                                        // 0x98F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PositionOffset;                                    // 0x9900(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GripPosition;                                      // 0x990C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               GripRotation;                                      // 0x9918(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	float                                         GripAlpha;                                         // 0x9924(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasGrip;                                          // 0x9928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9929[0x3];                                     // 0x9929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CorrectiveShoulderOffset;                          // 0x992C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementAmount;                                    // 0x9938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmoothMovementAmount;                              // 0x993C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MountAlpha;                                        // 0x9940(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MountPosition;                                     // 0x9944(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MountOffset;                                       // 0x9950(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MountWeaponPosition;                               // 0x995C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SightTiltRotation;                                 // 0x9968(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StanceADS_Weight;                                  // 0x9974(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBracedAim;                                        // 0x9978(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9979[0x3];                                     // 0x9979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BracedAimPosition;                                 // 0x997C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KickRotationAmount;                                // 0x9988(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBipod;                                         // 0x998C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	uint8                                         Pad_998D[0x3];                                     // 0x998D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterAnimCollection               WeapArmsFPPAnims;                                  // 0x9990(0x0128)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor)
	struct FRotator                               BracedAimRotation;                                 // 0x9AB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDoLowReady;                                       // 0x9AC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC5[0x3];                                     // 0x9AC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LowReadyRotationOffset;                            // 0x9AC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LowReadyPositionOffset;                            // 0x9AD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowReadyAlpha;                                     // 0x9AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVaulting;                                         // 0x9AE4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EVaultBehavior                                VaultBehavior;                                     // 0x9AE5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSprintVault;                                      // 0x9AE6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVaultOver;                                        // 0x9AE7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bClimbOnto;                                        // 0x9AE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE9[0x3];                                     // 0x9AE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VaultLeftHandOffsetAlpha;                          // 0x9AEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReloadNotifyState;                                // 0x9AF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSafeTriggerFinger;                                // 0x9AF1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EItemType                                     ItemType;                                          // 0x9AF2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpecificItemType                             SpecificItemType;                                  // 0x9AF3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BracedAimAlpha;                                    // 0x9AF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InverseAimAlpha;                                   // 0x9AF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProneHandOffsetAlpha;                              // 0x9AFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bProneNotifyState;                                 // 0x9B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLandBasedMovement;                                // 0x9B01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B02[0x2];                                     // 0x9B02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SprintAlpha;                                       // 0x9B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoSprintPistolOffset;                             // 0x9B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDoCrawlingReloadOffset;                           // 0x9B09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDoCrawlingHandOffset;                             // 0x9B0A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B0B[0x1];                                     // 0x9B0B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrawlingHandOffsetAlpha;                           // 0x9B0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrawlingAlpha;                                     // 0x9B10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrawlingPlayRateSideWays;                          // 0x9B14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        EquipmentBlendspaceToUse;                          // 0x9B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        ThrowableBlendspaceToUse;                          // 0x9B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IdleAnimPlayRateToUse;                             // 0x9B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MuzzleOffsetLocation;                              // 0x9B2C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponTransformWeight;                             // 0x9B38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandIKWeightL;                                     // 0x9B3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableLeftHandIK;                                 // 0x9B40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFalling;                                          // 0x9B41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bJumping;                                          // 0x9B42(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSwimming;                                         // 0x9B43(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ProneMoveDirectionDeg;                             // 0x9B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponBoundsYForward;                              // 0x9B48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponCollisionAlpha;                              // 0x9B4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WeaponCollisionPos;                                // 0x9B50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WeaponCollisionRotator;                            // 0x9B5C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWeaponCollisionHit;                               // 0x9B68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B69[0x3];                                     // 0x9B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrawlingPlayRateForward;                           // 0x9B6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrawlingLocoBlend;                                 // 0x9B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCrawlingLocoDirection;                            // 0x9B74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFireModeChanged;                                  // 0x9B75(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B76[0x2];                                     // 0x9B76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FireSelectAlpha;                                   // 0x9B78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsM26;                                            // 0x9B7C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsBandage;                                        // 0x9B7D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B7E[0x2];                                     // 0x9B7E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SwayPlayRate;                                      // 0x9B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IdleSwayAlpha;                                     // 0x9B84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSwayPlayRate;                                  // 0x9B88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_HDPlayerCharacter_FP(int32 EntryPoint);
	void AnimNotify_ProneExit();
	void AnimNotify_ProneEnter();
	void AnimNotify_ReloadStart();
	void AnimNotify_ReloadEnd();
	void WeaponUpdated(class ABP_HDWeaponBase_C* NewWeapon);
	void BlueprintUpdateEquippedWeaponRefs(class ADFBaseItem* NewWeap);
	void BlueprintUpdateControllerOwnerRefs(class AController* NewC);
	void BlueprintUpdatePawnOwnerRefs(class APawn* NewPawn);
	void UpdateAttachments();
	void BlueprintUpdateAnimation(float DeltaTimeX_0);
	void AssignWeaponLocomotionAnims(struct FCharacterAnimCollection& AnimCollection, bool bReadyToThrow_0);
	void AssignLegacyWeaponLocomotionAnims(TMap<class FName, class UAnimSequenceBase*>& WeaponAnimSet);
	void UpdateLeanOffsets();
	void PlayCharacterFPPMontage(class UAnimMontage* MontageToPlay, bool bForceDisableAutoBlendOut, float* PlayDuration);
	void GetSightPosition(struct FVector* Positon);
	void GetSmoothRotation();
	void GetSightRotationOffset();
	void GetGripAmount();
	void GetMountPosition();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void VaultingLayer(const struct FPoseLink& Input_pose, struct FPoseLink* VaultingLayer_0);
	void AdditiveLoco(const struct FPoseLink& WeaponAnims_0, struct FPoseLink* AdditiveLoco_0);
	void StanceTransitions(const struct FPoseLink& InPose, const struct FPoseLink& WeaponArms, struct FPoseLink* StanceTransitions_0);
	float PlayUnEquipMontage(class UAnimMontage* MontageToPlay);
	float PlayReloadMontage(class UAnimMontage* MontageToPlay, bool bFullReload);
	float PlayFireMontage(class UAnimMontage* MontageToPlay, bool bFireLast, bool bAiming_0);
	float PlayEquipMontage(class UAnimMontage* MontageToPlay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_HDPlayerCharacter_FP_C">();
	}
	static class UABP_HDPlayerCharacter_FP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_HDPlayerCharacter_FP_C>();
	}
};
static_assert(alignof(UABP_HDPlayerCharacter_FP_C) == 0x000010, "Wrong alignment on UABP_HDPlayerCharacter_FP_C");
static_assert(sizeof(UABP_HDPlayerCharacter_FP_C) == 0x009B90, "Wrong size on UABP_HDPlayerCharacter_FP_C");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, UberGraphFrame) == 0x0002E0, "Member 'UABP_HDPlayerCharacter_FP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_31) == 0x0002E8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_17) == 0x000310, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_30) == 0x0003C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_29) == 0x0003F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_28) == 0x000418, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_15) == 0x000440, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_16) == 0x000508, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_17) == 0x0005C0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_27) == 0x000680, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_16) == 0x0006A8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_26) == 0x000768, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_15) == 0x000790, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_14) == 0x000850, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_15) == 0x000910, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_25) == 0x0009C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_24) == 0x0009F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_23) == 0x000A18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_13) == 0x000A40, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_22) == 0x000B00, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_39) == 0x000B28, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_38) == 0x000B50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_37) == 0x000B78, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_48) == 0x000BA0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_48' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_30) == 0x000C18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_47) == 0x000C48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_47' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_29) == 0x000CC0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_28) == 0x000CF0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_8) == 0x000D20, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_Root_3) == 0x000DD0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000E00, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_46) == 0x000EE0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_14) == 0x000F58, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_14) == 0x001020, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_13) == 0x0010D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_21) == 0x0011A0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByEnum_2) == 0x0011C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_12) == 0x001278, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_13) == 0x001340, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedInputPose_3) == 0x0013F8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_8) == 0x001470, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_12) == 0x001538, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_20) == 0x0015F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_12) == 0x001618, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_24) == 0x0016D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_8) == 0x0017E0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_8) == 0x001800, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_23) == 0x001820, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_7) == 0x001928, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_6) == 0x001A18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_7) == 0x001B08, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_7) == 0x001B28, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_22) == 0x001B48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_8) == 0x001C50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool_6) == 0x001C68, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_36) == 0x001D08, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_35) == 0x001D30, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_34) == 0x001D58, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_33) == 0x001D80, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_32) == 0x001DA8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_31) == 0x001DD0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_45) == 0x001DF8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_27) == 0x001E70, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_44) == 0x001EA0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_26) == 0x001F18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_43) == 0x001F48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_25) == 0x001FC0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_7) == 0x001FF0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_24) == 0x002008, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_7) == 0x002038, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_7) == 0x0020E8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_21) == 0x0021B0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_6) == 0x0022B8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x0022D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_42) == 0x0022F8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_11) == 0x002370, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_41) == 0x002438, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_40) == 0x0024B0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_10) == 0x002528, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_39) == 0x0025F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_38) == 0x002668, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_37) == 0x0026E0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_9) == 0x002758, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_36) == 0x002820, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_8) == 0x002898, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_35) == 0x002960, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_34) == 0x0029D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_7) == 0x002A50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_33) == 0x002B18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool_5) == 0x002B90, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool_4) == 0x002C30, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_32) == 0x002CD0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_31) == 0x002D48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_6) == 0x002DC0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_6) == 0x002E88, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_5) == 0x002EA0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_Root_2) == 0x002EB8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_30) == 0x002EE8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_29) == 0x002F10, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_28) == 0x002F38, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_27) == 0x002F60, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_26) == 0x002F88, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_25) == 0x002FB0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_30) == 0x002FD8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_6) == 0x003050, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_19) == 0x003118, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_11) == 0x003140, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_29) == 0x003200, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_23) == 0x003278, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_18) == 0x0032A8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_28) == 0x0032D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_5) == 0x003348, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_10) == 0x003410, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_27) == 0x0034D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_22) == 0x003548, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_17) == 0x003578, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_21) == 0x0035A0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_6) == 0x0035D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedInputPose_2) == 0x003680, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_11) == 0x0036F8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_9) == 0x0037B0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_16) == 0x003870, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_Root_1) == 0x003898, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_26) == 0x0038C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_20) == 0x003940, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_5) == 0x003970, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_24) == 0x003A20, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_23) == 0x003A48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_22) == 0x003A70, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_21) == 0x003A98, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_20) == 0x003AC0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_19) == 0x003AE8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_25) == 0x003B10, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_19) == 0x003B88, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_24) == 0x003BB8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_18) == 0x003C30, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_23) == 0x003C60, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_17) == 0x003CD8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_22) == 0x003D08, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_16) == 0x003D80, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_21) == 0x003DB0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_15) == 0x003E28, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_20) == 0x003E58, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_19) == 0x003ED0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool_3) == 0x003F48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_14) == 0x003FE8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_4) == 0x004018, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_10) == 0x0040C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_9) == 0x004180, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByEnum_1) == 0x004238, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_15) == 0x0042E8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_8) == 0x004310, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x0043C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_14) == 0x0043E8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_8) == 0x004410, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_18) == 0x0044D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_17) == 0x0044F8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_16) == 0x004520, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_15) == 0x004548, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_18) == 0x004570, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_13) == 0x0045E8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_17) == 0x004618, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool_2) == 0x004690, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_13) == 0x004730, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_12) == 0x004758, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_16) == 0x004788, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_11) == 0x004800, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_12) == 0x004830, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_10) == 0x004858, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_3) == 0x004888, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_7) == 0x004938, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_7) == 0x0049F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_6) == 0x004AB0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_5) == 0x004B68, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoBoneIK_1) == 0x004B90, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoBoneIK) == 0x004D70, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedInputPose_1) == 0x004F50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_20) == 0x004FC8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_4) == 0x0050D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_15) == 0x0050F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_19) == 0x005168, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_3) == 0x005270, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_5) == 0x005290, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_5) == 0x005380, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x005438, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_6) == 0x005458, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_11) == 0x005518, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_4) == 0x005540, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_18) == 0x005630, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_14) == 0x005738, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_4) == 0x0057B0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_17) == 0x005868, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x005970, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedAnimLayer_2) == 0x005990, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_16) == 0x005A40, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_15) == 0x005B48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_10) == 0x005C50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_5) == 0x005C78, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_14) == 0x005D38, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_13) == 0x005D60, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_12) == 0x005D88, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_11) == 0x005DB0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_10) == 0x005DD8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_9) == 0x005E00, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_8) == 0x005E28, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_7) == 0x005E50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_6) == 0x005E78, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_5) == 0x005EA0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_4) == 0x005EC8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x005EF0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_4) == 0x005FD0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_4) == 0x005FE8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendSpacePlayer) == 0x0060A8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_3) == 0x006188, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_3) == 0x0061A0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_5) == 0x006260, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_2) == 0x006328, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByEnum) == 0x006340, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_9) == 0x0063F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_13) == 0x006420, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_12) == 0x006498, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_4) == 0x006510, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_8) == 0x0065D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_3) == 0x006608, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_11) == 0x0066D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_10) == 0x006748, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_7) == 0x0067C0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_9) == 0x0067F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_2) == 0x006868, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_8) == 0x006930, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_6) == 0x0069A8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend_1) == 0x0069D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_7) == 0x006AA0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_6) == 0x006B18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_5) == 0x006B90, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose_1) == 0x006BC0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_4) == 0x006BD8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_2) == 0x006C08, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_14) == 0x006CB8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_5) == 0x006DC0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_3) == 0x006E38, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_9) == 0x006EF0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_8) == 0x006F18, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x006F40, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x006F60, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TwoWayBlend) == 0x006F80, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_3) == 0x007048, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x007138, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_2) == 0x007158, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x007248, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_7) == 0x007268, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_2) == 0x007290, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_Slot) == 0x007348, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_4) == 0x007390, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_13) == 0x007458, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_12) == 0x007560, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x007668, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_6) == 0x007728, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose_1) == 0x007750, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x007808, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_5) == 0x0078C8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_11) == 0x0078F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_10) == 0x0079F8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_9) == 0x007B00, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_3) == 0x007C08, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedInputPose) == 0x007CD0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_4) == 0x007D48, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_3) == 0x007D70, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_2) == 0x007D98, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_8) == 0x007E60, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedAnimLayer_1) == 0x007F68, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_2) == 0x008018, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_7) == 0x008040, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_6) == 0x008148, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_5) == 0x008250, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LayeredBoneBlend) == 0x008358, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose_1) == 0x008418, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LinkedAnimLayer) == 0x008440, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone_1) == 0x0084F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_CopyBone) == 0x0085E0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_4) == 0x0086D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_3) == 0x0087D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_2) == 0x0088E0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LookAt) == 0x0089F0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SaveCachedPose) == 0x008BA0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_3) == 0x008C58, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_2) == 0x008C80, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_4) == 0x008CA8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_3) == 0x008D20, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_3) == 0x008D50, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_2) == 0x008DC8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine_1) == 0x008DF8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone_1) == 0x008EA8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalToComponentSpace) == 0x008FB0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ComponentToLocalSpace) == 0x008FD0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_LocalRefPose) == 0x008FF0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool_1) == 0x009008, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_BlendListByBool) == 0x0090A8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_UseCachedPose) == 0x009148, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ModifyBone) == 0x009170, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_Root) == 0x009278, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult_1) == 0x0092A8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_TransitionResult) == 0x0092D0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_2) == 0x0092F8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult_1) == 0x009370, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_IdentityPose) == 0x0093A0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateResult) == 0x0093B8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_StateMachine) == 0x0093E8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive_1) == 0x009498, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer_1) == 0x009560, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_ApplyAdditive) == 0x0095D8, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AnimGraphNode_SequencePlayer) == 0x0096A0, "Member 'UABP_HDPlayerCharacter_FP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, OwningChar) == 0x009718, "Member 'UABP_HDPlayerCharacter_FP_C::OwningChar' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, OwningPC) == 0x009720, "Member 'UABP_HDPlayerCharacter_FP_C::OwningPC' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, BasePoseAnim) == 0x009728, "Member 'UABP_HDPlayerCharacter_FP_C::BasePoseAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, IdleAdditiveAnim) == 0x009730, "Member 'UABP_HDPlayerCharacter_FP_C::IdleAdditiveAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MoveAnim) == 0x009738, "Member 'UABP_HDPlayerCharacter_FP_C::MoveAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AimInAnim) == 0x009740, "Member 'UABP_HDPlayerCharacter_FP_C::AimInAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AimBasePoseAnim) == 0x009748, "Member 'UABP_HDPlayerCharacter_FP_C::AimBasePoseAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AimOutAnim) == 0x009750, "Member 'UABP_HDPlayerCharacter_FP_C::AimOutAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SprintInAnim) == 0x009758, "Member 'UABP_HDPlayerCharacter_FP_C::SprintInAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SprintAnim) == 0x009760, "Member 'UABP_HDPlayerCharacter_FP_C::SprintAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SprintOutAnim) == 0x009768, "Member 'UABP_HDPlayerCharacter_FP_C::SprintOutAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeaponAnims) == 0x009770, "Member 'UABP_HDPlayerCharacter_FP_C::WeaponAnims' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ProneInAnim) == 0x0097C0, "Member 'UABP_HDPlayerCharacter_FP_C::ProneInAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CrawlAnim) == 0x0097C8, "Member 'UABP_HDPlayerCharacter_FP_C::CrawlAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ProneOutAnim) == 0x0097D0, "Member 'UABP_HDPlayerCharacter_FP_C::ProneOutAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AimWalkAnim) == 0x0097D8, "Member 'UABP_HDPlayerCharacter_FP_C::AimWalkAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bPrefiring) == 0x0097E0, "Member 'UABP_HDPlayerCharacter_FP_C::bPrefiring' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bReadyToThrow) == 0x0097E1, "Member 'UABP_HDPlayerCharacter_FP_C::bReadyToThrow' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bFiring) == 0x0097E2, "Member 'UABP_HDPlayerCharacter_FP_C::bFiring' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ThrowReadyBasePose) == 0x0097E8, "Member 'UABP_HDPlayerCharacter_FP_C::ThrowReadyBasePose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ThrowAnim) == 0x0097F0, "Member 'UABP_HDPlayerCharacter_FP_C::ThrowAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CurrentWeapon) == 0x0097F8, "Member 'UABP_HDPlayerCharacter_FP_C::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bLeaningLeft) == 0x009800, "Member 'UABP_HDPlayerCharacter_FP_C::bLeaningLeft' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bLeaningRight) == 0x009801, "Member 'UABP_HDPlayerCharacter_FP_C::bLeaningRight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanDirection) == 0x009802, "Member 'UABP_HDPlayerCharacter_FP_C::LeanDirection' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bHideArmsWhileSwimming) == 0x009803, "Member 'UABP_HDPlayerCharacter_FP_C::bHideArmsWhileSwimming' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanAmount) == 0x009804, "Member 'UABP_HDPlayerCharacter_FP_C::LeanAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanAlpha) == 0x009808, "Member 'UABP_HDPlayerCharacter_FP_C::LeanAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, DeltaTimeX) == 0x00980C, "Member 'UABP_HDPlayerCharacter_FP_C::DeltaTimeX' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanOffsetAlpha) == 0x009810, "Member 'UABP_HDPlayerCharacter_FP_C::LeanOffsetAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanRootRot) == 0x009814, "Member 'UABP_HDPlayerCharacter_FP_C::LeanRootRot' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanWeaponOffset) == 0x009820, "Member 'UABP_HDPlayerCharacter_FP_C::LeanWeaponOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanOffsetInterpSpeed) == 0x00982C, "Member 'UABP_HDPlayerCharacter_FP_C::LeanOffsetInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LeanWeaponRot) == 0x009830, "Member 'UABP_HDPlayerCharacter_FP_C::LeanWeaponRot' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothCrouchWeaponOffset) == 0x00983C, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothCrouchWeaponOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothRotation) == 0x009848, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothRotationAmount) == 0x009854, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothRotationAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ElbowIKWeight) == 0x009858, "Member 'UABP_HDPlayerCharacter_FP_C::ElbowIKWeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MovementAlpha) == 0x00985C, "Member 'UABP_HDPlayerCharacter_FP_C::MovementAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothMovement) == 0x009860, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothMovement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MaxSpeed) == 0x00986C, "Member 'UABP_HDPlayerCharacter_FP_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothMovementSwizzled) == 0x009870, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothMovementSwizzled' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothMovementRotation) == 0x00987C, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothMovementRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothMovementRotationAlpha) == 0x009888, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothMovementRotationAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothMovementRotationAmount) == 0x00988C, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothMovementRotationAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MovementSwayAlpha) == 0x009890, "Member 'UABP_HDPlayerCharacter_FP_C::MovementSwayAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AimAlpha) == 0x009894, "Member 'UABP_HDPlayerCharacter_FP_C::AimAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, AimSpeed) == 0x009898, "Member 'UABP_HDPlayerCharacter_FP_C::AimSpeed' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SightDirection) == 0x00989C, "Member 'UABP_HDPlayerCharacter_FP_C::SightDirection' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SightOffset) == 0x0098A8, "Member 'UABP_HDPlayerCharacter_FP_C::SightOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, RestoreGunBonePosition) == 0x0098B4, "Member 'UABP_HDPlayerCharacter_FP_C::RestoreGunBonePosition' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, KickRotation) == 0x0098B8, "Member 'UABP_HDPlayerCharacter_FP_C::KickRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, KickOffset) == 0x0098C4, "Member 'UABP_HDPlayerCharacter_FP_C::KickOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothKick) == 0x0098D0, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothKick' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, KickAmount) == 0x0098D4, "Member 'UABP_HDPlayerCharacter_FP_C::KickAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, KickNoiseSpeed) == 0x0098D8, "Member 'UABP_HDPlayerCharacter_FP_C::KickNoiseSpeed' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, KickNoiseAmount) == 0x0098DC, "Member 'UABP_HDPlayerCharacter_FP_C::KickNoiseAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, Kick) == 0x0098E0, "Member 'UABP_HDPlayerCharacter_FP_C::Kick' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SightOffsetLocal) == 0x0098E4, "Member 'UABP_HDPlayerCharacter_FP_C::SightOffsetLocal' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SightTiltOffset) == 0x0098F0, "Member 'UABP_HDPlayerCharacter_FP_C::SightTiltOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SwayOffset) == 0x0098F4, "Member 'UABP_HDPlayerCharacter_FP_C::SwayOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, PositionOffset) == 0x009900, "Member 'UABP_HDPlayerCharacter_FP_C::PositionOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, GripPosition) == 0x00990C, "Member 'UABP_HDPlayerCharacter_FP_C::GripPosition' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, GripRotation) == 0x009918, "Member 'UABP_HDPlayerCharacter_FP_C::GripRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, GripAlpha) == 0x009924, "Member 'UABP_HDPlayerCharacter_FP_C::GripAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bHasGrip) == 0x009928, "Member 'UABP_HDPlayerCharacter_FP_C::bHasGrip' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CorrectiveShoulderOffset) == 0x00992C, "Member 'UABP_HDPlayerCharacter_FP_C::CorrectiveShoulderOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MovementAmount) == 0x009938, "Member 'UABP_HDPlayerCharacter_FP_C::MovementAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SmoothMovementAmount) == 0x00993C, "Member 'UABP_HDPlayerCharacter_FP_C::SmoothMovementAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MountAlpha) == 0x009940, "Member 'UABP_HDPlayerCharacter_FP_C::MountAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MountPosition) == 0x009944, "Member 'UABP_HDPlayerCharacter_FP_C::MountPosition' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MountOffset) == 0x009950, "Member 'UABP_HDPlayerCharacter_FP_C::MountOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MountWeaponPosition) == 0x00995C, "Member 'UABP_HDPlayerCharacter_FP_C::MountWeaponPosition' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SightTiltRotation) == 0x009968, "Member 'UABP_HDPlayerCharacter_FP_C::SightTiltRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, StanceADS_Weight) == 0x009974, "Member 'UABP_HDPlayerCharacter_FP_C::StanceADS_Weight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bBracedAim) == 0x009978, "Member 'UABP_HDPlayerCharacter_FP_C::bBracedAim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, BracedAimPosition) == 0x00997C, "Member 'UABP_HDPlayerCharacter_FP_C::BracedAimPosition' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, KickRotationAmount) == 0x009988, "Member 'UABP_HDPlayerCharacter_FP_C::KickRotationAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bHasBipod) == 0x00998C, "Member 'UABP_HDPlayerCharacter_FP_C::bHasBipod' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeapArmsFPPAnims) == 0x009990, "Member 'UABP_HDPlayerCharacter_FP_C::WeapArmsFPPAnims' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, BracedAimRotation) == 0x009AB8, "Member 'UABP_HDPlayerCharacter_FP_C::BracedAimRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bDoLowReady) == 0x009AC4, "Member 'UABP_HDPlayerCharacter_FP_C::bDoLowReady' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LowReadyRotationOffset) == 0x009AC8, "Member 'UABP_HDPlayerCharacter_FP_C::LowReadyRotationOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LowReadyPositionOffset) == 0x009AD4, "Member 'UABP_HDPlayerCharacter_FP_C::LowReadyPositionOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, LowReadyAlpha) == 0x009AE0, "Member 'UABP_HDPlayerCharacter_FP_C::LowReadyAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bVaulting) == 0x009AE4, "Member 'UABP_HDPlayerCharacter_FP_C::bVaulting' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, VaultBehavior) == 0x009AE5, "Member 'UABP_HDPlayerCharacter_FP_C::VaultBehavior' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bSprintVault) == 0x009AE6, "Member 'UABP_HDPlayerCharacter_FP_C::bSprintVault' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bVaultOver) == 0x009AE7, "Member 'UABP_HDPlayerCharacter_FP_C::bVaultOver' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bClimbOnto) == 0x009AE8, "Member 'UABP_HDPlayerCharacter_FP_C::bClimbOnto' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, VaultLeftHandOffsetAlpha) == 0x009AEC, "Member 'UABP_HDPlayerCharacter_FP_C::VaultLeftHandOffsetAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bReloadNotifyState) == 0x009AF0, "Member 'UABP_HDPlayerCharacter_FP_C::bReloadNotifyState' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bSafeTriggerFinger) == 0x009AF1, "Member 'UABP_HDPlayerCharacter_FP_C::bSafeTriggerFinger' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ItemType) == 0x009AF2, "Member 'UABP_HDPlayerCharacter_FP_C::ItemType' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SpecificItemType) == 0x009AF3, "Member 'UABP_HDPlayerCharacter_FP_C::SpecificItemType' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, BracedAimAlpha) == 0x009AF4, "Member 'UABP_HDPlayerCharacter_FP_C::BracedAimAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, InverseAimAlpha) == 0x009AF8, "Member 'UABP_HDPlayerCharacter_FP_C::InverseAimAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ProneHandOffsetAlpha) == 0x009AFC, "Member 'UABP_HDPlayerCharacter_FP_C::ProneHandOffsetAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bProneNotifyState) == 0x009B00, "Member 'UABP_HDPlayerCharacter_FP_C::bProneNotifyState' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bLandBasedMovement) == 0x009B01, "Member 'UABP_HDPlayerCharacter_FP_C::bLandBasedMovement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SprintAlpha) == 0x009B04, "Member 'UABP_HDPlayerCharacter_FP_C::SprintAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bDoSprintPistolOffset) == 0x009B08, "Member 'UABP_HDPlayerCharacter_FP_C::bDoSprintPistolOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bDoCrawlingReloadOffset) == 0x009B09, "Member 'UABP_HDPlayerCharacter_FP_C::bDoCrawlingReloadOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bDoCrawlingHandOffset) == 0x009B0A, "Member 'UABP_HDPlayerCharacter_FP_C::bDoCrawlingHandOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CrawlingHandOffsetAlpha) == 0x009B0C, "Member 'UABP_HDPlayerCharacter_FP_C::CrawlingHandOffsetAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CrawlingAlpha) == 0x009B10, "Member 'UABP_HDPlayerCharacter_FP_C::CrawlingAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CrawlingPlayRateSideWays) == 0x009B14, "Member 'UABP_HDPlayerCharacter_FP_C::CrawlingPlayRateSideWays' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, EquipmentBlendspaceToUse) == 0x009B18, "Member 'UABP_HDPlayerCharacter_FP_C::EquipmentBlendspaceToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ThrowableBlendspaceToUse) == 0x009B20, "Member 'UABP_HDPlayerCharacter_FP_C::ThrowableBlendspaceToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, IdleAnimPlayRateToUse) == 0x009B28, "Member 'UABP_HDPlayerCharacter_FP_C::IdleAnimPlayRateToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MuzzleOffsetLocation) == 0x009B2C, "Member 'UABP_HDPlayerCharacter_FP_C::MuzzleOffsetLocation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeaponTransformWeight) == 0x009B38, "Member 'UABP_HDPlayerCharacter_FP_C::WeaponTransformWeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, HandIKWeightL) == 0x009B3C, "Member 'UABP_HDPlayerCharacter_FP_C::HandIKWeightL' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bEnableLeftHandIK) == 0x009B40, "Member 'UABP_HDPlayerCharacter_FP_C::bEnableLeftHandIK' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bFalling) == 0x009B41, "Member 'UABP_HDPlayerCharacter_FP_C::bFalling' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bJumping) == 0x009B42, "Member 'UABP_HDPlayerCharacter_FP_C::bJumping' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bSwimming) == 0x009B43, "Member 'UABP_HDPlayerCharacter_FP_C::bSwimming' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, ProneMoveDirectionDeg) == 0x009B44, "Member 'UABP_HDPlayerCharacter_FP_C::ProneMoveDirectionDeg' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeaponBoundsYForward) == 0x009B48, "Member 'UABP_HDPlayerCharacter_FP_C::WeaponBoundsYForward' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeaponCollisionAlpha) == 0x009B4C, "Member 'UABP_HDPlayerCharacter_FP_C::WeaponCollisionAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeaponCollisionPos) == 0x009B50, "Member 'UABP_HDPlayerCharacter_FP_C::WeaponCollisionPos' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, WeaponCollisionRotator) == 0x009B5C, "Member 'UABP_HDPlayerCharacter_FP_C::WeaponCollisionRotator' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bWeaponCollisionHit) == 0x009B68, "Member 'UABP_HDPlayerCharacter_FP_C::bWeaponCollisionHit' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CrawlingPlayRateForward) == 0x009B6C, "Member 'UABP_HDPlayerCharacter_FP_C::CrawlingPlayRateForward' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, CrawlingLocoBlend) == 0x009B70, "Member 'UABP_HDPlayerCharacter_FP_C::CrawlingLocoBlend' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bCrawlingLocoDirection) == 0x009B74, "Member 'UABP_HDPlayerCharacter_FP_C::bCrawlingLocoDirection' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bFireModeChanged) == 0x009B75, "Member 'UABP_HDPlayerCharacter_FP_C::bFireModeChanged' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, FireSelectAlpha) == 0x009B78, "Member 'UABP_HDPlayerCharacter_FP_C::FireSelectAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bIsM26) == 0x009B7C, "Member 'UABP_HDPlayerCharacter_FP_C::bIsM26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, bIsBandage) == 0x009B7D, "Member 'UABP_HDPlayerCharacter_FP_C::bIsBandage' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, SwayPlayRate) == 0x009B80, "Member 'UABP_HDPlayerCharacter_FP_C::SwayPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, IdleSwayAlpha) == 0x009B84, "Member 'UABP_HDPlayerCharacter_FP_C::IdleSwayAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_FP_C, MoveSwayPlayRate) == 0x009B88, "Member 'UABP_HDPlayerCharacter_FP_C::MoveSwayPlayRate' has a wrong offset!");

}


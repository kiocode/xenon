#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD.WBP_HUD_C.ExecuteUbergraph_WBP_HUD
// 0x0004 (0x0004 - 0x0000)
struct WBP_HUD_C_ExecuteUbergraph_WBP_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_C_ExecuteUbergraph_WBP_HUD) == 0x000004, "Wrong alignment on WBP_HUD_C_ExecuteUbergraph_WBP_HUD");
static_assert(sizeof(WBP_HUD_C_ExecuteUbergraph_WBP_HUD) == 0x000004, "Wrong size on WBP_HUD_C_ExecuteUbergraph_WBP_HUD");
static_assert(offsetof(WBP_HUD_C_ExecuteUbergraph_WBP_HUD, EntryPoint) == 0x000000, "Member 'WBP_HUD_C_ExecuteUbergraph_WBP_HUD::EntryPoint' has a wrong offset!");

// Function WBP_HUD.WBP_HUD_C.ToggleEquipmentSelect
// 0x0001 (0x0001 - 0x0000)
struct WBP_HUD_C_ToggleEquipmentSelect final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUD_C_ToggleEquipmentSelect) == 0x000001, "Wrong alignment on WBP_HUD_C_ToggleEquipmentSelect");
static_assert(sizeof(WBP_HUD_C_ToggleEquipmentSelect) == 0x000001, "Wrong size on WBP_HUD_C_ToggleEquipmentSelect");
static_assert(offsetof(WBP_HUD_C_ToggleEquipmentSelect, bVisible) == 0x000000, "Member 'WBP_HUD_C_ToggleEquipmentSelect::bVisible' has a wrong offset!");

// Function WBP_HUD.WBP_HUD_C.ToggleWeaponStatus
// 0x0001 (0x0001 - 0x0000)
struct WBP_HUD_C_ToggleWeaponStatus final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUD_C_ToggleWeaponStatus) == 0x000001, "Wrong alignment on WBP_HUD_C_ToggleWeaponStatus");
static_assert(sizeof(WBP_HUD_C_ToggleWeaponStatus) == 0x000001, "Wrong size on WBP_HUD_C_ToggleWeaponStatus");
static_assert(offsetof(WBP_HUD_C_ToggleWeaponStatus, bVisible) == 0x000000, "Member 'WBP_HUD_C_ToggleWeaponStatus::bVisible' has a wrong offset!");

// Function WBP_HUD.WBP_HUD_C.SetHUDElementVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_HUD_C_SetHUDElementVisibility final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShown;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibilityDefault_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_C_SetHUDElementVisibility) == 0x000008, "Wrong alignment on WBP_HUD_C_SetHUDElementVisibility");
static_assert(sizeof(WBP_HUD_C_SetHUDElementVisibility) == 0x000010, "Wrong size on WBP_HUD_C_SetHUDElementVisibility");
static_assert(offsetof(WBP_HUD_C_SetHUDElementVisibility, Widget) == 0x000000, "Member 'WBP_HUD_C_SetHUDElementVisibility::Widget' has a wrong offset!");
static_assert(offsetof(WBP_HUD_C_SetHUDElementVisibility, bShown) == 0x000008, "Member 'WBP_HUD_C_SetHUDElementVisibility::bShown' has a wrong offset!");
static_assert(offsetof(WBP_HUD_C_SetHUDElementVisibility, Temp_bool_Variable) == 0x000009, "Member 'WBP_HUD_C_SetHUDElementVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_C_SetHUDElementVisibility, CallFunc_GetVisibilityDefault_ReturnValue) == 0x00000A, "Member 'WBP_HUD_C_SetHUDElementVisibility::CallFunc_GetVisibilityDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_C_SetHUDElementVisibility, Temp_byte_Variable) == 0x00000B, "Member 'WBP_HUD_C_SetHUDElementVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUD_C_SetHUDElementVisibility, K2Node_Select_Default) == 0x00000C, "Member 'WBP_HUD_C_SetHUDElementVisibility::K2Node_Select_Default' has a wrong offset!");

}


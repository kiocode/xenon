#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StanceIndicator

#include "Basic.hpp"

#include "HDMain_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.ExecuteUbergraph_WBP_StanceIndicator
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDUICharacterStanceState                     K2Node_CustomEvent_State;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconTextureForStanceState_IconTex;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewHealthValueNorm;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PrevHealthValueNorm;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetNormHealthColorByRatio_ColorToUse;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0088)()
};
static_assert(alignof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator) == 0x000008, "Wrong alignment on WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator");
static_assert(sizeof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator) == 0x0000D8, "Wrong size on WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, EntryPoint) == 0x000000, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, K2Node_CustomEvent_State) == 0x000004, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, CallFunc_GetIconTextureForStanceState_IconTex) == 0x000008, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::CallFunc_GetIconTextureForStanceState_IconTex' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, K2Node_CustomEvent_NewHealthValueNorm) == 0x000010, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::K2Node_CustomEvent_NewHealthValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, K2Node_CustomEvent_PrevHealthValueNorm) == 0x000014, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::K2Node_CustomEvent_PrevHealthValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, CallFunc_GetNormHealthColorByRatio_ColorToUse) == 0x000018, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::CallFunc_GetNormHealthColorByRatio_ColorToUse' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'WBP_StanceIndicator_C_ExecuteUbergraph_WBP_StanceIndicator::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.StanceStateUpdate
// 0x0001 (0x0001 - 0x0000)
struct WBP_StanceIndicator_C_StanceStateUpdate final
{
public:
	EHDUICharacterStanceState                     State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_StanceStateUpdate) == 0x000001, "Wrong alignment on WBP_StanceIndicator_C_StanceStateUpdate");
static_assert(sizeof(WBP_StanceIndicator_C_StanceStateUpdate) == 0x000001, "Wrong size on WBP_StanceIndicator_C_StanceStateUpdate");
static_assert(offsetof(WBP_StanceIndicator_C_StanceStateUpdate, State) == 0x000000, "Member 'WBP_StanceIndicator_C_StanceStateUpdate::State' has a wrong offset!");

// Function WBP_StanceIndicator.WBP_StanceIndicator_C.SetHealth
// 0x0008 (0x0008 - 0x0000)
struct WBP_StanceIndicator_C_SetHealth final
{
public:
	float                                         NewHealthValueNorm;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevHealthValueNorm;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceIndicator_C_SetHealth) == 0x000004, "Wrong alignment on WBP_StanceIndicator_C_SetHealth");
static_assert(sizeof(WBP_StanceIndicator_C_SetHealth) == 0x000008, "Wrong size on WBP_StanceIndicator_C_SetHealth");
static_assert(offsetof(WBP_StanceIndicator_C_SetHealth, NewHealthValueNorm) == 0x000000, "Member 'WBP_StanceIndicator_C_SetHealth::NewHealthValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_StanceIndicator_C_SetHealth, PrevHealthValueNorm) == 0x000004, "Member 'WBP_StanceIndicator_C_SetHealth::PrevHealthValueNorm' has a wrong offset!");

}


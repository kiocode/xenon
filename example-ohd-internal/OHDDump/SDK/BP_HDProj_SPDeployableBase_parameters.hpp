#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDProj_SPDeployableBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DonkehFramework_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.OnSpawnPointActivationChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature final
{
public:
	class ABP_HDProj_SPDeployableBase_C*          Deployable;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSpawnPointEnabled;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature) == 0x000010, "Wrong size on BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature, Deployable) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature::Deployable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature, bSpawnPointEnabled) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_OnSpawnPointActivationChanged__DelegateSignature::bSpawnPointEnabled' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.ExecuteUbergraph_BP_HDProj_SPDeployableBase
// 0x0230 (0x0230 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseCharacter*                       K2Node_DynamicCast_AsDFBase_Character;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseCharacter*                       K2Node_DynamicCast_AsDFBase_Character_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyChar_bEnemyChar;                   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(uint8 LastTeamNum, uint8 NewTeamNum)> K2Node_CreateDelegate_OutputDelegate;              // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_LastTeamNum;                    // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_NewTeamNum;                     // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_ImpactHitResult;                      // 0x0108(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0198(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseProjectile*                      K2Node_DynamicCast_AsDFBase_Projectile;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x01C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UDFPOIComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasServerAuthority_bAuthority;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDSquadState*                          K2Node_CustomEvent_Squad;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDPlayerState*                         K2Node_CustomEvent_MemberPS;                       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumSquadMembers_ReturnValue;           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase) == 0x000230, "Wrong size on BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, EntryPoint) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_AsDFBase_Character) == 0x0000D0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_AsDFBase_Character' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_AsDFBase_Character_1) == 0x0000E0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_AsDFBase_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_IsEnemyChar_bEnemyChar) == 0x0000E9, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_IsEnemyChar_bEnemyChar' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x0000EC, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_GetTeamNum_ReturnValue) == 0x0000F0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000F1, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_GetValidValue_ReturnValue) == 0x0000F2, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_CreateDelegate_OutputDelegate) == 0x0000F4, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000104, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_BooleanAND_ReturnValue) == 0x000105, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_CustomEvent_LastTeamNum) == 0x000106, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_CustomEvent_LastTeamNum' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_CustomEvent_NewTeamNum) == 0x000107, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_CustomEvent_NewTeamNum' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_Event_ImpactHitResult) == 0x000108, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_Event_ImpactHitResult' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, Temp_int_Variable) == 0x000190, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_Event_Damage) == 0x000194, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_Event_DamageType) == 0x000198, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_Event_InstigatedBy) == 0x0001A0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_Event_DamageCauser) == 0x0001A8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_AsDFBase_Projectile) == 0x0001B0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_AsDFBase_Projectile' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_bSuccess_2) == 0x0001B8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_Add_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, Temp_struct_Variable) == 0x0001C0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_AddComponent_ReturnValue) == 0x0001F0, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_HasServerAuthority_bAuthority) == 0x0001F8, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_HasServerAuthority_bAuthority' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_CustomEvent_Squad) == 0x000200, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_CustomEvent_Squad' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_CustomEvent_MemberPS) == 0x000208, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_CustomEvent_MemberPS' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_GetNumSquadMembers_ReturnValue) == 0x000210, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_GetNumSquadMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000214, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_IsValid_ReturnValue_1) == 0x000215, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000218, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_AsPrimitive_Component) == 0x000220, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase, K2Node_DynamicCast_bSuccess_3) == 0x000228, "Member 'BP_HDProj_SPDeployableBase_C_ExecuteUbergraph_BP_HDProj_SPDeployableBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.MemberPreUnregisteredFromOwnerSquad
// 0x0010 (0x0010 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad final
{
public:
	class AHDSquadState*                          Squad;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDPlayerState*                         MemberPS;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad) == 0x000010, "Wrong size on BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad, Squad) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad::Squad' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad, MemberPS) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_MemberPreUnregisteredFromOwnerSquad::MemberPS' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.OverlappingPawnTeamNumUpdated
// 0x0002 (0x0002 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated final
{
public:
	uint8                                         LastTeamNum;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewTeamNum;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated) == 0x000001, "Wrong alignment on BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated) == 0x000002, "Wrong size on BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated, LastTeamNum) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated::LastTeamNum' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated, NewTeamNum) == 0x000001, "Member 'BP_HDProj_SPDeployableBase_C_OverlappingPawnTeamNumUpdated::NewTeamNum' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_HDProj_SPDeployableBase_C_BndEvt__SpawnSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.ReceivePayloadActivated
// 0x0088 (0x0088 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated final
{
public:
	struct FHitResult                             ImpactHitResult;                                   // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated) == 0x000004, "Wrong alignment on BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated) == 0x000088, "Wrong size on BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated, ImpactHitResult) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_ReceivePayloadActivated::ImpactHitResult' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.HasServerAuthority
// 0x0004 (0x0004 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_HasServerAuthority final
{
public:
	bool                                          bAuthority;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_HasServerAuthority) == 0x000001, "Wrong alignment on BP_HDProj_SPDeployableBase_C_HasServerAuthority");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_HasServerAuthority) == 0x000004, "Wrong size on BP_HDProj_SPDeployableBase_C_HasServerAuthority");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HasServerAuthority, bAuthority) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_HasServerAuthority::bAuthority' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HasServerAuthority, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'BP_HDProj_SPDeployableBase_C_HasServerAuthority::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HasServerAuthority, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_HDProj_SPDeployableBase_C_HasServerAuthority::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HasServerAuthority, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_HDProj_SPDeployableBase_C_HasServerAuthority::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.IsEnemyChar
// 0x0018 (0x0018 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_IsEnemyChar final
{
public:
	class ADFBaseCharacter*                       Char;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnemyChar;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_IsEnemyChar) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_IsEnemyChar");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_IsEnemyChar) == 0x000018, "Wrong size on BP_HDProj_SPDeployableBase_C_IsEnemyChar");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, Char) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::Char' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, bEnemyChar) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::bEnemyChar' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_IsAlive_ReturnValue) == 0x000009, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_GetTeamNum_ReturnValue) == 0x00000A, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_GetTeamNum_ReturnValue_1) == 0x00000B, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_GetTeamNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_GetValidValue_ReturnValue) == 0x00000C, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_GetValidValue_ReturnValue_1) == 0x00000D, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000F, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsEnemyChar, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_IsEnemyChar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.IsSpawnable
// 0x0001 (0x0001 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_IsSpawnable final
{
public:
	bool                                          bSpawnPointEnabled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_IsSpawnable) == 0x000001, "Wrong alignment on BP_HDProj_SPDeployableBase_C_IsSpawnable");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_IsSpawnable) == 0x000001, "Wrong size on BP_HDProj_SPDeployableBase_C_IsSpawnable");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_IsSpawnable, bSpawnPointEnabled) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_IsSpawnable::bSpawnPointEnabled' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.SetIsSpawnable
// 0x0002 (0x0002 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_SetIsSpawnable final
{
public:
	bool                                          bNewEnabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_SetIsSpawnable) == 0x000001, "Wrong alignment on BP_HDProj_SPDeployableBase_C_SetIsSpawnable");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_SetIsSpawnable) == 0x000002, "Wrong size on BP_HDProj_SPDeployableBase_C_SetIsSpawnable");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_SetIsSpawnable, bNewEnabled) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_SetIsSpawnable::bNewEnabled' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_SetIsSpawnable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_HDProj_SPDeployableBase_C_SetIsSpawnable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.CheckForEnemyChars
// 0x0050 (0x0050 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_CheckForEnemyChars final
{
public:
	bool                                          bFoundEnemyChar;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseCharacter*                       K2Node_DynamicCast_AsDFBase_Character;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyChar_bEnemyChar;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_CheckForEnemyChars");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars) == 0x000050, "Wrong size on BP_HDProj_SPDeployableBase_C_CheckForEnemyChars");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, bFoundEnemyChar) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::bFoundEnemyChar' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, Temp_int_Variable) == 0x000014, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, K2Node_DynamicCast_AsDFBase_Character) == 0x000038, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::K2Node_DynamicCast_AsDFBase_Character' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_IsEnemyChar_bEnemyChar) == 0x000048, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_IsEnemyChar_bEnemyChar' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckForEnemyChars, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_HDProj_SPDeployableBase_C_CheckForEnemyChars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.GenerateSpawnPointList
// 0x0140 (0x0140 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnPointDef                         CallFunc_GetSpawnPoint_SpawnPoint;                 // 0x0010(0x0050)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnPointDef                         CallFunc_GetSpawnPoint_SpawnPoint_1;               // 0x0070(0x0050)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnPointDef                         K2Node_MakeStruct_SpawnPointDef;                   // 0x00D0(0x0050)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList) == 0x000140, "Wrong size on BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, Temp_int_Variable) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_GetSpawnPoint_SpawnPoint) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_GetSpawnPoint_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, Temp_int_Variable_1) == 0x000068, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_GetSpawnPoint_SpawnPoint_1) == 0x000070, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_GetSpawnPoint_SpawnPoint_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, K2Node_MakeStruct_SpawnPointDef) == 0x0000D0, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::K2Node_MakeStruct_SpawnPointDef' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Array_Add_ReturnValue_1) == 0x000124, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_Subtract_IntInt_ReturnValue) == 0x00012C, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000130, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000131, "Member 'BP_HDProj_SPDeployableBase_C_GenerateSpawnPointList::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.HandleTakeDamageFromProjectile
// 0x0030 (0x0030 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile final
{
public:
	class ADFBaseProjectile*                      InProjectile;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDamage;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseWeapon*                          CallFunc_GetOwningWeapon_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseCharacter*                       CallFunc_GetPawnOwner_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyChar_bEnemyChar;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile) == 0x000030, "Wrong size on BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, InProjectile) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::InProjectile' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, InDamage) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::InDamage' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_GetOwningWeapon_ReturnValue) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_GetOwningWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_GetPawnOwner_ReturnValue) == 0x000020, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_IsEnemyChar_bEnemyChar) == 0x000029, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_IsEnemyChar_bEnemyChar' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002B, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_HDProj_SPDeployableBase_C_HandleTakeDamageFromProjectile::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.CheckEnemyOverrun
// 0x0004 (0x0004 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun) == 0x000001, "Wrong alignment on BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun) == 0x000004, "Wrong size on BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000002, "Member 'BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_HDProj_SPDeployableBase_C_CheckEnemyOverrun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.InitDeployable
// 0x0058 (0x0058 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_InitDeployable final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_HDProj_SPDeployableBase_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDProj_SPDeployableBase_C*          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AHDSquadState* Squad, class AHDPlayerState* MemberPS)> K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_InitDeployable) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_InitDeployable");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_InitDeployable) == 0x000058, "Wrong size on BP_HDProj_SPDeployableBase_C_InitDeployable");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_InitDeployable, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BP_HDProj_SPDeployableBase_C_InitDeployable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.GetSpawnPoint
// 0x0180 (0x0180 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_GetSpawnPoint final
{
public:
	bool                                          bMeshZOffset;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpawnPointIdx;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnPointDef                         SpawnPoint;                                        // 0x0010(0x0050)(Parm, OutParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetActorTransformOffsetByMeshZBounds_OffsetActorWorldXForm; // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_Select_Default;                             // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransformOffsetBySpawnIndex_NewTransform; // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FSpawnPointDef                         K2Node_MakeStruct_SpawnPointDef;                   // 0x0130(0x0050)(NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_GetSpawnPoint");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint) == 0x000180, "Wrong size on BP_HDProj_SPDeployableBase_C_GetSpawnPoint");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, bMeshZOffset) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::bMeshZOffset' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, SpawnPointIdx) == 0x000004, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::SpawnPointIdx' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, SpawnPoint) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, Temp_bool_Variable) == 0x000060, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, CallFunc_GetActorTransformOffsetByMeshZBounds_OffsetActorWorldXForm) == 0x0000A0, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::CallFunc_GetActorTransformOffsetByMeshZBounds_OffsetActorWorldXForm' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, K2Node_Select_Default) == 0x0000D0, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, CallFunc_GetTransformOffsetBySpawnIndex_NewTransform) == 0x000100, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::CallFunc_GetTransformOffsetBySpawnIndex_NewTransform' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPoint, K2Node_MakeStruct_SpawnPointDef) == 0x000130, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPoint::K2Node_MakeStruct_SpawnPointDef' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.AreSpawnPointsEqual
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual final
{
public:
	struct FSpawnPointDef                         SpawnPointOne;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSpawnPointDef                         SpawnPointTwo;                                     // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bEqual;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TransformTransform_ReturnValue; // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual) == 0x0000B0, "Wrong size on BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, SpawnPointOne) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::SpawnPointOne' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, SpawnPointTwo) == 0x000050, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::SpawnPointTwo' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, bEqual) == 0x0000A0, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::bEqual' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A2, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, CallFunc_EqualEqual_TransformTransform_ReturnValue) == 0x0000A3, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::CallFunc_EqualEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, CallFunc_BooleanAND_ReturnValue) == 0x0000A4, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A5, "Member 'BP_HDProj_SPDeployableBase_C_AreSpawnPointsEqual::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.GetActorTransformOffsetByMeshZBounds
// 0x0100 (0x0100 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds final
{
public:
	struct FTransform                             OffsetActorWorldXForm;                             // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds) == 0x000100, "Wrong size on BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, OffsetActorWorldXForm) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::OffsetActorWorldXForm' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_GetLocalBounds_Min) == 0x000060, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_GetLocalBounds_Max) == 0x00006C, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakTransform_Location) == 0x000078, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakTransform_Rotation) == 0x000084, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakTransform_Scale) == 0x000090, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakVector_X) == 0x00009C, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakVector_X_1) == 0x0000A8, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakVector_Y_1) == 0x0000AC, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_HDProj_SPDeployableBase_C_GetActorTransformOffsetByMeshZBounds::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.GetTransformOffsetBySpawnIndex
// 0x00E0 (0x00E0 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex final
{
public:
	int32                                         SpawnIdx;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             NewTransform;                                      // 0x0040(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex) == 0x0000E0, "Wrong size on BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, SpawnIdx) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::SpawnIdx' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, Transform) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::Transform' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, NewTransform) == 0x000040, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::NewTransform' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, CallFunc_Array_Get_Item) == 0x000094, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_HDProj_SPDeployableBase_C_GetTransformOffsetBySpawnIndex::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.CanPlayerSpawnHere
// 0x0020 (0x0020 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere final
{
public:
	class AController*                            InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayerCanSpawn;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDPlayerState*                         K2Node_DynamicCast_AsHDPlayer_State;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRegisteredSquadMember_ReturnValue;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere) == 0x000020, "Wrong size on BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere, InPlayer) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere::InPlayer' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere, bPlayerCanSpawn) == 0x000008, "Member 'BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere::bPlayerCanSpawn' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere, K2Node_DynamicCast_AsHDPlayer_State) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere::K2Node_DynamicCast_AsHDPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere, CallFunc_IsRegisteredSquadMember_ReturnValue) == 0x00001A, "Member 'BP_HDProj_SPDeployableBase_C_CanPlayerSpawnHere::CallFunc_IsRegisteredSquadMember_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.GetAllSpawnPointsBP
// 0x0030 (0x0030 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP final
{
public:
	TArray<struct FSpawnPointDef>                 SpawnPoints;                                       // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnPointDef>                 SpawnPointArr;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP) == 0x000008, "Wrong alignment on BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP) == 0x000030, "Wrong size on BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP, SpawnPoints) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP::SpawnPoints' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP, ReturnValue) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP, SpawnPointArr) == 0x000018, "Member 'BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP::SpawnPointArr' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_HDProj_SPDeployableBase_C_GetAllSpawnPointsBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.FindSpawnPointBP
// 0x0070 (0x0070 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_FindSpawnPointBP final
{
public:
	int32                                         SpawnPointID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnPointDef                         FoundSpawnPoint;                                   // 0x0010(0x0050)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_FindSpawnPointBP) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_FindSpawnPointBP");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_FindSpawnPointBP) == 0x000070, "Wrong size on BP_HDProj_SPDeployableBase_C_FindSpawnPointBP");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_FindSpawnPointBP, SpawnPointID) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_FindSpawnPointBP::SpawnPointID' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_FindSpawnPointBP, FoundSpawnPoint) == 0x000010, "Member 'BP_HDProj_SPDeployableBase_C_FindSpawnPointBP::FoundSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_FindSpawnPointBP, ReturnValue) == 0x000060, "Member 'BP_HDProj_SPDeployableBase_C_FindSpawnPointBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_FindSpawnPointBP, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000061, "Member 'BP_HDProj_SPDeployableBase_C_FindSpawnPointBP::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.CanSpawnActorFromSpawnPointBP
// 0x0060 (0x0060 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP final
{
public:
	struct FSpawnPointDef                         SpawnPoint;                                        // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TSubclassOf<class AActor>                     SpawnActorClass;                                   // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP) == 0x000060, "Wrong size on BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP, SpawnPoint) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP, SpawnActorClass) == 0x000050, "Member 'BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP::SpawnActorClass' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP, ReturnValue) == 0x000058, "Member 'BP_HDProj_SPDeployableBase_C_CanSpawnActorFromSpawnPointBP::ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.CanRestartPlayerFromSpawnPointBP
// 0x0070 (0x0070 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP final
{
public:
	struct FSpawnPointDef                         SpawnPoint;                                        // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class AController*                            Player;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APawn>                      PlayerPawnClass;                                   // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bSameTeam;                                         // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFoundSpawnPoint;                                  // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayerSpawnHere_bPlayerCanSpawn;       // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreSpawnPointsEqual_bEqual;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue_1;                 // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetTeamNum_ReturnValue_2;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP) == 0x000070, "Wrong size on BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, SpawnPoint) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, Player) == 0x000050, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::Player' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, PlayerPawnClass) == 0x000058, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::PlayerPawnClass' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, ReturnValue) == 0x000060, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, bSameTeam) == 0x000061, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::bSameTeam' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, bFoundSpawnPoint) == 0x000062, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::bFoundSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_CanPlayerSpawnHere_bPlayerCanSpawn) == 0x000063, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_CanPlayerSpawnHere_bPlayerCanSpawn' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000064, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_AreSpawnPointsEqual_bEqual) == 0x000065, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_AreSpawnPointsEqual_bEqual' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_GetTeamNum_ReturnValue) == 0x000066, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_GetTeamNum_ReturnValue_1) == 0x000067, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_GetTeamNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_GetValidValue_ReturnValue) == 0x000068, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_GetValidValue_ReturnValue_1) == 0x000069, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_GetTeamNum_ReturnValue_2) == 0x00006B, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_GetTeamNum_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_GetValidValue_ReturnValue_2) == 0x00006C, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006D, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'BP_HDProj_SPDeployableBase_C_CanRestartPlayerFromSpawnPointBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HDProj_SPDeployableBase.BP_HDProj_SPDeployableBase_C.GetSpawnPointCollisionHandlingOverrideBP
// 0x0060 (0x0060 - 0x0000)
struct BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP final
{
public:
	struct FSpawnPointDef                         SpawnPoint;                                        // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	ESpawnActorCollisionHandlingMethod            OutSpawnCollisionMethod;                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0051(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP) == 0x000010, "Wrong alignment on BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP");
static_assert(sizeof(BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP) == 0x000060, "Wrong size on BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP, SpawnPoint) == 0x000000, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP, OutSpawnCollisionMethod) == 0x000050, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP::OutSpawnCollisionMethod' has a wrong offset!");
static_assert(offsetof(BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP, ReturnValue) == 0x000051, "Member 'BP_HDProj_SPDeployableBase_C_GetSpawnPointCollisionHandlingOverrideBP::ReturnValue' has a wrong offset!");

}


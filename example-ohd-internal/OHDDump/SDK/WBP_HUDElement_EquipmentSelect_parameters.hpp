#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUDElement_EquipmentSelect

#include "Basic.hpp"

#include "FEqpSlotData_structs.hpp"
#include "SlateCore_structs.hpp"
#include "HDMain_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.ExecuteUbergraph_WBP_HUDElement_EquipmentSelect
// 0x0098 (0x0098 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipmentSelect_EqBox_C*           K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_IconToLoad;                     // 0x0050(0x0028)(HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SlotNum;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDBaseWeapon*                          K2Node_CustomEvent_EqpItem;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectableEquipment_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect) == 0x000098, "Wrong size on WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, EntryPoint) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, Temp_object_Variable) == 0x000008, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_DynamicCast_AsTexture_2D) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box) == 0x000040, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_CustomEvent_IconToLoad) == 0x000050, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_CustomEvent_IconToLoad' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_CustomEvent_SlotNum) == 0x000078, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_CustomEvent_SlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_CustomEvent_EqpItem) == 0x000080, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_CustomEvent_EqpItem' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, K2Node_CustomEvent_Loaded) == 0x000088, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect, CallFunc_IsSelectableEquipment_ReturnValue) == 0x000090, "Member 'WBP_HUDElement_EquipmentSelect_C_ExecuteUbergraph_WBP_HUDElement_EquipmentSelect::CallFunc_IsSelectableEquipment_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.LoadEquipmentAsset
// 0x0038 (0x0038 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset final
{
public:
	TSoftObjectPtr<class UTexture2D>              IconToLoad;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         SlotNum;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDBaseWeapon*                          EqpItem;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset) == 0x000038, "Wrong size on WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset, IconToLoad) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset::IconToLoad' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset, SlotNum) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset::SlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset, EqpItem) == 0x000030, "Member 'WBP_HUDElement_EquipmentSelect_C_LoadEquipmentAsset::EqpItem' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_PreConstruct");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_PreConstruct) == 0x000001, "Wrong size on WBP_HUDElement_EquipmentSelect_C_PreConstruct");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64
// 0x0008 (0x0008 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64) == 0x000008, "Wrong size on WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64, Loaded) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64::Loaded' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.SelectNextItem
// 0x0004 (0x0004 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_SelectNextItem final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_SelectNextItem) == 0x000004, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_SelectNextItem");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_SelectNextItem) == 0x000004, "Wrong size on WBP_HUDElement_EquipmentSelect_C_SelectNextItem");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectNextItem, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectNextItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.SelectPrevItem
// 0x0004 (0x0004 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_SelectPrevItem final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_SelectPrevItem) == 0x000004, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_SelectPrevItem");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_SelectPrevItem) == 0x000004, "Wrong size on WBP_HUDElement_EquipmentSelect_C_SelectPrevItem");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectPrevItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectPrevItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.SelectItem
// 0x0048 (0x0048 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_SelectItem final
{
public:
	int32                                         NewSlotIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipmentSelect_EqBox_C*           K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipmentSelect_EqBox_C*           K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box_1; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_SelectItem) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_SelectItem");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_SelectItem) == 0x000048, "Wrong size on WBP_HUDElement_EquipmentSelect_C_SelectItem");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, NewSlotIndex) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, Temp_bool_Variable) == 0x000005, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_GetChildAt_ReturnValue_1) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box_1) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_GetChildrenCount_ReturnValue) == 0x000034, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_GetChildrenCount_ReturnValue_1) == 0x00003C, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, CallFunc_Percent_IntInt_ReturnValue) == 0x000040, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItem, K2Node_Select_Default) == 0x000044, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItem::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.AddEquipment
// 0x0040 (0x0040 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_AddEquipment final
{
public:
	struct FHDItemEntry                           EqpInfo;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class AHDBaseWeapon*                          EqpItem;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEqpSlotData                          K2Node_MakeStruct_FEqpSlotData;                    // 0x0020(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_AddEquipment) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_AddEquipment");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_AddEquipment) == 0x000040, "Wrong size on WBP_HUDElement_EquipmentSelect_C_AddEquipment");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_AddEquipment, EqpInfo) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_AddEquipment::EqpInfo' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_AddEquipment, EqpItem) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_AddEquipment::EqpItem' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_AddEquipment, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_AddEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_AddEquipment, K2Node_MakeStruct_FEqpSlotData) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_AddEquipment::K2Node_MakeStruct_FEqpSlotData' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_AddEquipment, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'WBP_HUDElement_EquipmentSelect_C_AddEquipment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.RebuildEquipmentList
// 0x0070 (0x0070 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList final
{
public:
	TArray<struct FFEqpSlotData>                  SlotDataCopy;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         MinSlotNum;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinSlotIndex_MinSlotIndex;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEqpSlotData                          CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectableEquipment_ReturnValue;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList) == 0x000070, "Wrong size on WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, SlotDataCopy) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::SlotDataCopy' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, MinSlotNum) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::MinSlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, Temp_object_Variable) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, Temp_int_Variable) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, Temp_bool_Variable) == 0x000039, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_GetMinSlotIndex_MinSlotIndex) == 0x00003C, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_GetMinSlotIndex_MinSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_IsSelectableEquipment_ReturnValue) == 0x000061, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_IsSelectableEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, CallFunc_IsValid_ReturnValue) == 0x000062, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList, K2Node_Select_Default) == 0x000068, "Member 'WBP_HUDElement_EquipmentSelect_C_RebuildEquipmentList::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.RemoveEquipmentAtSlotNum
// 0x0040 (0x0040 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum final
{
public:
	int32                                         SlotNum;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemoved;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEqpSlotData                          CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum) == 0x000040, "Wrong size on WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, SlotNum) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::SlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, bRemoved) == 0x000004, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::bRemoved' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WBP_HUDElement_EquipmentSelect_C_RemoveEquipmentAtSlotNum::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.CreateAndAddEquipmentWidget
// 0x0038 (0x0038 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget final
{
public:
	class UTexture2D*                             Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotNum;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDBaseWeapon*                          EqpItem;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipmentSelect_EqBox_C*           CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget) == 0x000038, "Wrong size on WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, Icon) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::Icon' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, SlotNum) == 0x000008, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::SlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, bEnabled) == 0x00000C, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, EqpItem) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::EqpItem' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget, K2Node_MakeStruct_Margin) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_CreateAndAddEquipmentWidget::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.GetMinSlotIndex
// 0x0058 (0x0058 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex final
{
public:
	TArray<struct FFEqpSlotData>                  SlotDataArray;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         MinSlotIndex;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinSlotNum;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEqpSlotData                          CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex) == 0x000058, "Wrong size on WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, SlotDataArray) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::SlotDataArray' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, MinSlotIndex) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::MinSlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, SlotIndex) == 0x000014, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, MinSlotNum) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::MinSlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000040, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'WBP_HUDElement_EquipmentSelect_C_GetMinSlotIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.GetSelectedItem
// 0x0068 (0x0068 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_GetSelectedItem final
{
public:
	struct FFEqpSlotData                          OutSlotData;                                       // 0x0000(0x0018)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bFoundItem;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotNum;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEqpSlotData                          CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(NoDestructor, HasGetValueTypeHash)
	class UWBP_EquipmentSelect_EqBox_C*           K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_GetSelectedItem");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem) == 0x000068, "Wrong size on WBP_HUDElement_EquipmentSelect_C_GetSelectedItem");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, OutSlotData) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::OutSlotData' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, bFoundItem) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::bFoundItem' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, SlotNum) == 0x00001C, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::SlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box) == 0x000050, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_GetSelectedItem, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'WBP_HUDElement_EquipmentSelect_C_GetSelectedItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C.SelectItemBySlotNum
// 0x0038 (0x0038 - 0x0000)
struct WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum final
{
public:
	int32                                         SlotNum;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EquipmentSelect_EqBox_C*           K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum) == 0x000008, "Wrong alignment on WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum");
static_assert(sizeof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum) == 0x000038, "Wrong size on WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, SlotNum) == 0x000000, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::SlotNum' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, Temp_bool_Variable) == 0x000004, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, Temp_int_Variable) == 0x000010, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box) == 0x000028, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::K2Node_DynamicCast_AsWBP_Equipment_Select_Eq_Box' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_HUDElement_EquipmentSelect_C_SelectItemBySlotNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}


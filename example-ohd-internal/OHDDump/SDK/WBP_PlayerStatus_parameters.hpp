#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerStatus

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "HDMain_structs.hpp"


namespace SDK::Params
{

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.ExecuteUbergraph_WBP_PlayerStatus
// 0x0110 (0x0110 - 0x0000)
struct WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_VictimPawn;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_VictimController;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_KillingDamage;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageEvent                           K2Node_Event_DamageEvent;                          // 0x0020(0x0010)(ConstParm)
	class APawn*                                  K2Node_Event_InstigatingPawn;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewValueNorm_2;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldValueNorm_2;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_4;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewValueNorm_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldValueNorm_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_3;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewValueNorm;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldValueNorm;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_2;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_SprintValueNorm;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_JumpValueNorm;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_1;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHDUICharacterStanceState                     K2Node_Event_NewState;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDUICharacterStanceState                     K2Node_Event_OldState;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default_2;                           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_EffectIndicatorWidget_1;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_EffectIndicatorWidget;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus) == 0x000008, "Wrong alignment on WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus");
static_assert(sizeof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus) == 0x000110, "Wrong size on WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, EntryPoint) == 0x000000, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_VictimPawn) == 0x000008, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_VictimPawn' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_VictimController) == 0x000010, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_VictimController' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_KillingDamage) == 0x000018, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_KillingDamage' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_DamageEvent) == 0x000020, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_DamageEvent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_InstigatingPawn) == 0x000030, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_InstigatingPawn' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_DamageCauser) == 0x000038, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_float_Variable) == 0x000040, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_IsClosed_Variable) == 0x000044, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_Has_Been_Initd_Variable) == 0x000045, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_Has_Been_Initd_Variable_1) == 0x000054, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_NewValueNorm_2) == 0x000058, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_NewValueNorm_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_OldValueNorm_2) == 0x00005C, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_OldValueNorm_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_bInitial_4) == 0x000060, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_bInitial_4' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_NewValueNorm_1) == 0x000064, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_NewValueNorm_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_OldValueNorm_1) == 0x000068, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_OldValueNorm_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_bInitial_3) == 0x00006C, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_bInitial_3' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_NewValueNorm) == 0x000070, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_NewValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_OldValueNorm) == 0x000074, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_OldValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_bInitial_2) == 0x000078, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_bInitial_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000080, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_GetEndTime_ReturnValue) == 0x000090, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_PlayAnimationForward_ReturnValue) == 0x000098, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_IsClosed_Variable_1) == 0x0000A0, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_Variable) == 0x0000A1, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_byte_Variable) == 0x0000A2, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_byte_Variable_1) == 0x0000A3, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_Variable_1) == 0x0000A4, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_SprintValueNorm) == 0x0000A8, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_SprintValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_JumpValueNorm) == 0x0000AC, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_JumpValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_bInitial_1) == 0x0000B0, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_bInitial_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B1, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Select_Default) == 0x0000B4, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000B8, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_NewState) == 0x0000C1, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_OldState) == 0x0000C2, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Event_bInitial) == 0x0000C3, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Event_bInitial' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C4, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C5, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Select_Default_1) == 0x0000C6, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_byte_Variable_2) == 0x0000C7, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, Temp_bool_Variable_2) == 0x0000C8, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_Select_Default_2) == 0x0000C9, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_GetAllChildren_ReturnValue) == 0x0000D0, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000E0, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_CustomEvent_EffectIndicatorWidget_1) == 0x0000F8, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_CustomEvent_EffectIndicatorWidget_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, K2Node_CustomEvent_EffectIndicatorWidget) == 0x000100, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::K2Node_CustomEvent_EffectIndicatorWidget' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus, CallFunc_PlayAnimation_ReturnValue_3) == 0x000108, "Member 'WBP_PlayerStatus_C_ExecuteUbergraph_WBP_PlayerStatus::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.BPOwnerDeath
// 0x0038 (0x0038 - 0x0000)
struct WBP_PlayerStatus_C_BPOwnerDeath final
{
public:
	class APawn*                                  VictimPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            VictimController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KillingDamage;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageEvent                           DamageEvent;                                       // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APawn*                                  InstigatingPawn;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerStatus_C_BPOwnerDeath) == 0x000008, "Wrong alignment on WBP_PlayerStatus_C_BPOwnerDeath");
static_assert(sizeof(WBP_PlayerStatus_C_BPOwnerDeath) == 0x000038, "Wrong size on WBP_PlayerStatus_C_BPOwnerDeath");
static_assert(offsetof(WBP_PlayerStatus_C_BPOwnerDeath, VictimPawn) == 0x000000, "Member 'WBP_PlayerStatus_C_BPOwnerDeath::VictimPawn' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_BPOwnerDeath, VictimController) == 0x000008, "Member 'WBP_PlayerStatus_C_BPOwnerDeath::VictimController' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_BPOwnerDeath, KillingDamage) == 0x000010, "Member 'WBP_PlayerStatus_C_BPOwnerDeath::KillingDamage' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_BPOwnerDeath, DamageEvent) == 0x000018, "Member 'WBP_PlayerStatus_C_BPOwnerDeath::DamageEvent' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_BPOwnerDeath, InstigatingPawn) == 0x000028, "Member 'WBP_PlayerStatus_C_BPOwnerDeath::InstigatingPawn' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_BPOwnerDeath, DamageCauser) == 0x000030, "Member 'WBP_PlayerStatus_C_BPOwnerDeath::DamageCauser' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerDeactivatePlayerEffect
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect final
{
public:
	class UWidget*                                EffectIndicatorWidget;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect) == 0x000008, "Wrong alignment on WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect) == 0x000008, "Wrong size on WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect, EffectIndicatorWidget) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerDeactivatePlayerEffect::EffectIndicatorWidget' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerActivatePlayerEffect
// 0x0008 (0x0008 - 0x0000)
struct WBP_PlayerStatus_C_OwnerActivatePlayerEffect final
{
public:
	class UWidget*                                EffectIndicatorWidget;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerActivatePlayerEffect) == 0x000008, "Wrong alignment on WBP_PlayerStatus_C_OwnerActivatePlayerEffect");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerActivatePlayerEffect) == 0x000008, "Wrong size on WBP_PlayerStatus_C_OwnerActivatePlayerEffect");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerActivatePlayerEffect, EffectIndicatorWidget) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerActivatePlayerEffect::EffectIndicatorWidget' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerSetStanceState
// 0x0003 (0x0003 - 0x0000)
struct WBP_PlayerStatus_C_OwnerSetStanceState final
{
public:
	EHDUICharacterStanceState                     NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDUICharacterStanceState                     OldState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerSetStanceState) == 0x000001, "Wrong alignment on WBP_PlayerStatus_C_OwnerSetStanceState");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerSetStanceState) == 0x000003, "Wrong size on WBP_PlayerStatus_C_OwnerSetStanceState");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetStanceState, NewState) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerSetStanceState::NewState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetStanceState, OldState) == 0x000001, "Member 'WBP_PlayerStatus_C_OwnerSetStanceState::OldState' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetStanceState, bInitial) == 0x000002, "Member 'WBP_PlayerStatus_C_OwnerSetStanceState::bInitial' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerUpdateStamina
// 0x000C (0x000C - 0x0000)
struct WBP_PlayerStatus_C_OwnerUpdateStamina final
{
public:
	float                                         SprintValueNorm;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpValueNorm;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerUpdateStamina) == 0x000004, "Wrong alignment on WBP_PlayerStatus_C_OwnerUpdateStamina");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerUpdateStamina) == 0x00000C, "Wrong size on WBP_PlayerStatus_C_OwnerUpdateStamina");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerUpdateStamina, SprintValueNorm) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerUpdateStamina::SprintValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerUpdateStamina, JumpValueNorm) == 0x000004, "Member 'WBP_PlayerStatus_C_OwnerUpdateStamina::JumpValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerUpdateStamina, bInitial) == 0x000008, "Member 'WBP_PlayerStatus_C_OwnerUpdateStamina::bInitial' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerSetJumpStamina
// 0x000C (0x000C - 0x0000)
struct WBP_PlayerStatus_C_OwnerSetJumpStamina final
{
public:
	float                                         NewValueNorm;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValueNorm;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerSetJumpStamina) == 0x000004, "Wrong alignment on WBP_PlayerStatus_C_OwnerSetJumpStamina");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerSetJumpStamina) == 0x00000C, "Wrong size on WBP_PlayerStatus_C_OwnerSetJumpStamina");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetJumpStamina, NewValueNorm) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerSetJumpStamina::NewValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetJumpStamina, OldValueNorm) == 0x000004, "Member 'WBP_PlayerStatus_C_OwnerSetJumpStamina::OldValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetJumpStamina, bInitial) == 0x000008, "Member 'WBP_PlayerStatus_C_OwnerSetJumpStamina::bInitial' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerSetSprintStamina
// 0x000C (0x000C - 0x0000)
struct WBP_PlayerStatus_C_OwnerSetSprintStamina final
{
public:
	float                                         NewValueNorm;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValueNorm;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerSetSprintStamina) == 0x000004, "Wrong alignment on WBP_PlayerStatus_C_OwnerSetSprintStamina");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerSetSprintStamina) == 0x00000C, "Wrong size on WBP_PlayerStatus_C_OwnerSetSprintStamina");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetSprintStamina, NewValueNorm) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerSetSprintStamina::NewValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetSprintStamina, OldValueNorm) == 0x000004, "Member 'WBP_PlayerStatus_C_OwnerSetSprintStamina::OldValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetSprintStamina, bInitial) == 0x000008, "Member 'WBP_PlayerStatus_C_OwnerSetSprintStamina::bInitial' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.OwnerSetHealth
// 0x000C (0x000C - 0x0000)
struct WBP_PlayerStatus_C_OwnerSetHealth final
{
public:
	float                                         NewValueNorm;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValueNorm;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_OwnerSetHealth) == 0x000004, "Wrong alignment on WBP_PlayerStatus_C_OwnerSetHealth");
static_assert(sizeof(WBP_PlayerStatus_C_OwnerSetHealth) == 0x00000C, "Wrong size on WBP_PlayerStatus_C_OwnerSetHealth");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetHealth, NewValueNorm) == 0x000000, "Member 'WBP_PlayerStatus_C_OwnerSetHealth::NewValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetHealth, OldValueNorm) == 0x000004, "Member 'WBP_PlayerStatus_C_OwnerSetHealth::OldValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_OwnerSetHealth, bInitial) == 0x000008, "Member 'WBP_PlayerStatus_C_OwnerSetHealth::bInitial' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.SetAmmoResupplyEffectVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility) == 0x000001, "Wrong alignment on WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility");
static_assert(sizeof(WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility) == 0x000001, "Wrong size on WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility");
static_assert(offsetof(WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility, bVisible) == 0x000000, "Member 'WBP_PlayerStatus_C_SetAmmoResupplyEffectVisibility::bVisible' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.SetMedicHealingEffectVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_PlayerStatus_C_SetMedicHealingEffectVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_PlayerStatus_C_SetMedicHealingEffectVisibility) == 0x000001, "Wrong alignment on WBP_PlayerStatus_C_SetMedicHealingEffectVisibility");
static_assert(sizeof(WBP_PlayerStatus_C_SetMedicHealingEffectVisibility) == 0x000001, "Wrong size on WBP_PlayerStatus_C_SetMedicHealingEffectVisibility");
static_assert(offsetof(WBP_PlayerStatus_C_SetMedicHealingEffectVisibility, bVisible) == 0x000000, "Member 'WBP_PlayerStatus_C_SetMedicHealingEffectVisibility::bVisible' has a wrong offset!");

// Function WBP_PlayerStatus.WBP_PlayerStatus_C.SetPlayerEffectVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_PlayerStatus_C_SetPlayerEffectVisibility final
{
public:
	class UWidget*                                EffectWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bVisibilityDirty;                                  // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PlayerStatus_C_SetPlayerEffectVisibility) == 0x000008, "Wrong alignment on WBP_PlayerStatus_C_SetPlayerEffectVisibility");
static_assert(sizeof(WBP_PlayerStatus_C_SetPlayerEffectVisibility) == 0x000010, "Wrong size on WBP_PlayerStatus_C_SetPlayerEffectVisibility");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, EffectWidget) == 0x000000, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::EffectWidget' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, bVisible) == 0x000008, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, bVisibilityDirty) == 0x000009, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::bVisibilityDirty' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, Temp_byte_Variable) == 0x00000A, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, CallFunc_IsVisible_ReturnValue) == 0x00000B, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, Temp_byte_Variable_1) == 0x00000D, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, Temp_bool_Variable) == 0x00000E, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PlayerStatus_C_SetPlayerEffectVisibility, K2Node_Select_Default) == 0x00000F, "Member 'WBP_PlayerStatus_C_SetPlayerEffectVisibility::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CaptureStatus

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ECaptureUnitType_structs.hpp"
#include "HDMain_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ExecuteUbergraph_WBP_CaptureStatus
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDBaseCapturePoint*                    K2Node_Event_OverlappingCP;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_3;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bContested;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewValueNorm;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldValueNorm;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_2;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCaptured;                            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHDTeam                                       K2Node_Event_NewOwningTeam;                        // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDTeam                                       K2Node_Event_OldOwningTeam;                        // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial_1;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NumFriendlies;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumEnemies;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MinNumRequiredForCapture;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInitial;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CaptureStatus_UnitIcon_C*          CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus) == 0x000008, "Wrong alignment on WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus");
static_assert(sizeof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus) == 0x0000B0, "Wrong size on WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, EntryPoint) == 0x000000, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, Temp_float_Variable) == 0x000004, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, Temp_int_Variable) == 0x000008, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_OverlappingCP) == 0x000010, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_OverlappingCP' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_bInitial_3) == 0x000018, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_bInitial_3' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_GetEndTime_ReturnValue) == 0x000038, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_bContested) == 0x000048, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_bContested' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_NewValueNorm) == 0x00004C, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_NewValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_OldValueNorm) == 0x000050, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_OldValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_bInitial_2) == 0x000054, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_bInitial_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_bCaptured) == 0x000055, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_bCaptured' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_NewOwningTeam) == 0x000056, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_NewOwningTeam' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_OldOwningTeam) == 0x000057, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_OldOwningTeam' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_bInitial_1) == 0x000058, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_bInitial_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_NumFriendlies) == 0x00005C, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_NumFriendlies' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_NumEnemies) == 0x000060, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_NumEnemies' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_MinNumRequiredForCapture) == 0x000064, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_MinNumRequiredForCapture' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_bInitial) == 0x000068, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_bInitial' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Event_IsDesignTime) == 0x000069, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, Temp_bool_Has_Been_Initd_Variable) == 0x00006A, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, Temp_bool_Variable) == 0x00006B, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, Temp_bool_IsClosed_Variable) == 0x00006C, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Select_Default) == 0x000070, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_Multiply_IntInt_ReturnValue) == 0x000080, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000088, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, Temp_bool_Variable_1) == 0x000089, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_Create_ReturnValue) == 0x000090, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, K2Node_Select_Default_1) == 0x000098, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000A8, "Member 'WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CaptureStatus_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CaptureStatus_C_PreConstruct");
static_assert(sizeof(WBP_CaptureStatus_C_PreConstruct) == 0x000001, "Wrong size on WBP_CaptureStatus_C_PreConstruct");
static_assert(offsetof(WBP_CaptureStatus_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CaptureStatus_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ControlPointSetGarrisonedPlayerCount
// 0x0010 (0x0010 - 0x0000)
struct WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount final
{
public:
	int32                                         NumFriendlies;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumEnemies;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinNumRequiredForCapture;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount) == 0x000004, "Wrong alignment on WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount");
static_assert(sizeof(WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount) == 0x000010, "Wrong size on WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount, NumFriendlies) == 0x000000, "Member 'WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount::NumFriendlies' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount, NumEnemies) == 0x000004, "Member 'WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount::NumEnemies' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount, MinNumRequiredForCapture) == 0x000008, "Member 'WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount::MinNumRequiredForCapture' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount, bInitial) == 0x00000C, "Member 'WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount::bInitial' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ControlPointSetOwnershipState
// 0x0004 (0x0004 - 0x0000)
struct WBP_CaptureStatus_C_ControlPointSetOwnershipState final
{
public:
	bool                                          bCaptured;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHDTeam                                       NewOwningTeam;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHDTeam                                       OldOwningTeam;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_ControlPointSetOwnershipState) == 0x000001, "Wrong alignment on WBP_CaptureStatus_C_ControlPointSetOwnershipState");
static_assert(sizeof(WBP_CaptureStatus_C_ControlPointSetOwnershipState) == 0x000004, "Wrong size on WBP_CaptureStatus_C_ControlPointSetOwnershipState");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetOwnershipState, bCaptured) == 0x000000, "Member 'WBP_CaptureStatus_C_ControlPointSetOwnershipState::bCaptured' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetOwnershipState, NewOwningTeam) == 0x000001, "Member 'WBP_CaptureStatus_C_ControlPointSetOwnershipState::NewOwningTeam' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetOwnershipState, OldOwningTeam) == 0x000002, "Member 'WBP_CaptureStatus_C_ControlPointSetOwnershipState::OldOwningTeam' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetOwnershipState, bInitial) == 0x000003, "Member 'WBP_CaptureStatus_C_ControlPointSetOwnershipState::bInitial' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ControlPointSetCaptureProgress
// 0x0010 (0x0010 - 0x0000)
struct WBP_CaptureStatus_C_ControlPointSetCaptureProgress final
{
public:
	bool                                          bContested;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewValueNorm;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldValueNorm;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_ControlPointSetCaptureProgress) == 0x000004, "Wrong alignment on WBP_CaptureStatus_C_ControlPointSetCaptureProgress");
static_assert(sizeof(WBP_CaptureStatus_C_ControlPointSetCaptureProgress) == 0x000010, "Wrong size on WBP_CaptureStatus_C_ControlPointSetCaptureProgress");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetCaptureProgress, bContested) == 0x000000, "Member 'WBP_CaptureStatus_C_ControlPointSetCaptureProgress::bContested' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetCaptureProgress, NewValueNorm) == 0x000004, "Member 'WBP_CaptureStatus_C_ControlPointSetCaptureProgress::NewValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetCaptureProgress, OldValueNorm) == 0x000008, "Member 'WBP_CaptureStatus_C_ControlPointSetCaptureProgress::OldValueNorm' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ControlPointSetCaptureProgress, bInitial) == 0x00000C, "Member 'WBP_CaptureStatus_C_ControlPointSetCaptureProgress::bInitial' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.OwnerTouchingControlPoint
// 0x0010 (0x0010 - 0x0000)
struct WBP_CaptureStatus_C_OwnerTouchingControlPoint final
{
public:
	class AHDBaseCapturePoint*                    OverlappingCP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitial;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_OwnerTouchingControlPoint) == 0x000008, "Wrong alignment on WBP_CaptureStatus_C_OwnerTouchingControlPoint");
static_assert(sizeof(WBP_CaptureStatus_C_OwnerTouchingControlPoint) == 0x000010, "Wrong size on WBP_CaptureStatus_C_OwnerTouchingControlPoint");
static_assert(offsetof(WBP_CaptureStatus_C_OwnerTouchingControlPoint, OverlappingCP) == 0x000000, "Member 'WBP_CaptureStatus_C_OwnerTouchingControlPoint::OverlappingCP' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_OwnerTouchingControlPoint, bInitial) == 0x000008, "Member 'WBP_CaptureStatus_C_OwnerTouchingControlPoint::bInitial' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.UpdateProgressBarColor
// 0x0028 (0x0028 - 0x0000)
struct WBP_CaptureStatus_C_UpdateProgressBarColor final
{
public:
	EHDTeam                                       OwningTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDPlayerController*                    CallFunc_GetOwningHDPlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CaptureStatus_C_UpdateProgressBarColor) == 0x000008, "Wrong alignment on WBP_CaptureStatus_C_UpdateProgressBarColor");
static_assert(sizeof(WBP_CaptureStatus_C_UpdateProgressBarColor) == 0x000028, "Wrong size on WBP_CaptureStatus_C_UpdateProgressBarColor");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, OwningTeam) == 0x000000, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::OwningTeam' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, CallFunc_GetOwningHDPlayer_ReturnValue) == 0x000008, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::CallFunc_GetOwningHDPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, CallFunc_GetTeamNum_ReturnValue) == 0x000011, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, Temp_bool_Variable) == 0x000014, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateProgressBarColor, K2Node_Select_Default) == 0x000018, "Member 'WBP_CaptureStatus_C_UpdateProgressBarColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.UpdateTeamOwnerText
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_CaptureStatus_C_UpdateTeamOwnerText final
{
public:
	EHDTeam                                       CaptureTeam;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	EHDTeam                                       Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDGameState*                           CallFunc_GetHDGameState_HDGameState;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0090(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x00A8(0x0018)()
};
static_assert(alignof(WBP_CaptureStatus_C_UpdateTeamOwnerText) == 0x000008, "Wrong alignment on WBP_CaptureStatus_C_UpdateTeamOwnerText");
static_assert(sizeof(WBP_CaptureStatus_C_UpdateTeamOwnerText) == 0x0000C0, "Wrong size on WBP_CaptureStatus_C_UpdateTeamOwnerText");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, CaptureTeam) == 0x000000, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::CaptureTeam' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, Temp_text_Variable) == 0x000008, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, Temp_bool_Variable) == 0x000020, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, Temp_text_Variable_1) == 0x000028, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, Temp_byte_Variable) == 0x000040, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, Temp_text_Variable_2) == 0x000048, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, Temp_bool_Variable_1) == 0x000060, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, CallFunc_GetHDGameState_HDGameState) == 0x000068, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::CallFunc_GetHDGameState_HDGameState' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, CallFunc_TextIsEmpty_ReturnValue) == 0x000070, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000071, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, K2Node_Select_Default) == 0x000078, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, K2Node_Select_Default_1) == 0x000090, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateTeamOwnerText, K2Node_Select_Default_2) == 0x0000A8, "Member 'WBP_CaptureStatus_C_UpdateTeamOwnerText::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ResizeGarrisonContainer
// 0x0038 (0x0038 - 0x0000)
struct WBP_CaptureStatus_C_ResizeGarrisonContainer final
{
public:
	int32                                         NewUnitIconCount;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CaptureStatus_UnitIcon_C*          CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_2;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_ResizeGarrisonContainer) == 0x000008, "Wrong alignment on WBP_CaptureStatus_C_ResizeGarrisonContainer");
static_assert(sizeof(WBP_CaptureStatus_C_ResizeGarrisonContainer) == 0x000038, "Wrong size on WBP_CaptureStatus_C_ResizeGarrisonContainer");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, NewUnitIconCount) == 0x000000, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::NewUnitIconCount' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_Max_ReturnValue) == 0x000004, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_RemoveChildAt_ReturnValue) == 0x000010, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000014, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000028, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_GetChildrenCount_ReturnValue_2) == 0x000030, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_GetChildrenCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_ResizeGarrisonContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'WBP_CaptureStatus_C_ResizeGarrisonContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.SetMinCountToCapture
// 0x0010 (0x0010 - 0x0000)
struct WBP_CaptureStatus_C_SetMinCountToCapture final
{
public:
	int32                                         MinCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CaptureStatus_C_SetMinCountToCapture) == 0x000004, "Wrong alignment on WBP_CaptureStatus_C_SetMinCountToCapture");
static_assert(sizeof(WBP_CaptureStatus_C_SetMinCountToCapture) == 0x000010, "Wrong size on WBP_CaptureStatus_C_SetMinCountToCapture");
static_assert(offsetof(WBP_CaptureStatus_C_SetMinCountToCapture, MinCount) == 0x000000, "Member 'WBP_CaptureStatus_C_SetMinCountToCapture::MinCount' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_SetMinCountToCapture, CallFunc_Multiply_IntInt_ReturnValue) == 0x000004, "Member 'WBP_CaptureStatus_C_SetMinCountToCapture::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_SetMinCountToCapture, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'WBP_CaptureStatus_C_SetMinCountToCapture::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_SetMinCountToCapture, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_CaptureStatus_C_SetMinCountToCapture::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.UpdateActiveUnits
// 0x0090 (0x0090 - 0x0000)
struct WBP_CaptureStatus_C_UpdateActiveUnits final
{
public:
	bool                                          bFriendly;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UnitCount;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinUnitsRequired;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECaptureUnitType                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECaptureUnitType                              Temp_byte_Variable_2;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECaptureUnitType                              Temp_byte_Variable_3;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default_5;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECaptureUnitType                              K2Node_Select_Default_6;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CaptureStatus_UnitIcon_C*          K2Node_DynamicCast_AsWBP_Capture_Status_Unit_Icon; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECaptureUnitType                              K2Node_Select_Default_7;                           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CaptureStatus_C_UpdateActiveUnits) == 0x000008, "Wrong alignment on WBP_CaptureStatus_C_UpdateActiveUnits");
static_assert(sizeof(WBP_CaptureStatus_C_UpdateActiveUnits) == 0x000090, "Wrong size on WBP_CaptureStatus_C_UpdateActiveUnits");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, bFriendly) == 0x000000, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::bFriendly' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, UnitCount) == 0x000004, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::UnitCount' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, MinUnitsRequired) == 0x000008, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::MinUnitsRequired' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_byte_Variable) == 0x00000C, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable) == 0x000014, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_1) == 0x000015, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_int_Variable) == 0x000018, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_2) == 0x00001C, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_3) == 0x00001D, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_4) == 0x00001E, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_int_Variable_1) == 0x000020, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_5) == 0x000024, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_byte_Variable_1) == 0x000025, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default) == 0x000028, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_6) == 0x00002C, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_byte_Variable_2) == 0x00002D, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_byte_Variable_3) == 0x00002E, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_int_Variable_2) == 0x000030, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_byte_Variable_4) == 0x000034, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_1) == 0x000044, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000048, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_7) == 0x00004C, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_2) == 0x000050, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_3) == 0x000054, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_4) == 0x000058, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000059, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_byte_Variable_5) == 0x00005A, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, Temp_bool_Variable_8) == 0x00005B, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_5) == 0x00005C, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_6) == 0x000060, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000064, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Abs_Int_ReturnValue) == 0x000068, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_GetChildAt_ReturnValue) == 0x000070, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_DynamicCast_AsWBP_Capture_Status_Unit_Icon) == 0x000080, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_DynamicCast_AsWBP_Capture_Status_Unit_Icon' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_7) == 0x000089, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00008A, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CaptureStatus_C_UpdateActiveUnits, K2Node_Select_Default_8) == 0x00008B, "Member 'WBP_CaptureStatus_C_UpdateActiveUnits::K2Node_Select_Default_8' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OptionMenu_Credits

#include "Basic.hpp"

#include "DonkehFrameworkUI_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OptionMenu_Credits.WBP_OptionMenu_Credits_C
// 0x0030 (0x0268 - 0x0238)
class UWBP_OptionMenu_Credits_C : public UDFBaseMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScrollBox*                             CreditsScrollBox;                                  // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             CreditsEntriesTable;                               // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                EntryPadding;                                      // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	float                                         AutoScrollSpeed;                                   // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_OptionMenu_Credits(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void GetCreditEntriesForHeader(class FName HeaderRowName, TArray<struct FFGameCreditsEntry>* CreditEntries);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OptionMenu_Credits_C">();
	}
	static class UWBP_OptionMenu_Credits_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OptionMenu_Credits_C>();
	}
};
static_assert(alignof(UWBP_OptionMenu_Credits_C) == 0x000008, "Wrong alignment on UWBP_OptionMenu_Credits_C");
static_assert(sizeof(UWBP_OptionMenu_Credits_C) == 0x000268, "Wrong size on UWBP_OptionMenu_Credits_C");
static_assert(offsetof(UWBP_OptionMenu_Credits_C, UberGraphFrame) == 0x000238, "Member 'UWBP_OptionMenu_Credits_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OptionMenu_Credits_C, CreditsScrollBox) == 0x000240, "Member 'UWBP_OptionMenu_Credits_C::CreditsScrollBox' has a wrong offset!");
static_assert(offsetof(UWBP_OptionMenu_Credits_C, CreditsEntriesTable) == 0x000248, "Member 'UWBP_OptionMenu_Credits_C::CreditsEntriesTable' has a wrong offset!");
static_assert(offsetof(UWBP_OptionMenu_Credits_C, EntryPadding) == 0x000250, "Member 'UWBP_OptionMenu_Credits_C::EntryPadding' has a wrong offset!");
static_assert(offsetof(UWBP_OptionMenu_Credits_C, AutoScrollSpeed) == 0x000260, "Member 'UWBP_OptionMenu_Credits_C::AutoScrollSpeed' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EquipmentSelect_EqBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EquipmentSelect_EqBox.WBP_EquipmentSelect_EqBox_C
// 0x0068 (0x0298 - 0x0230)
class UWBP_EquipmentSelect_EqBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             EquipmentNumber;                                   // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_10;                                          // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_11;                                          // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_12;                                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_13;                                          // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item;                                              // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RestrictedOverlay;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Selected;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         SlotNum;                                           // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDBaseWeapon*                          EqpItem;                                           // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bHighlighted;                                      // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_EquipmentSelect_EqBox(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void SetHighlight(bool bHighlighted_0);
	void IsHighlighted(bool* bHighlight);
	void SetEnabled(bool bEnabled_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EquipmentSelect_EqBox_C">();
	}
	static class UWBP_EquipmentSelect_EqBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EquipmentSelect_EqBox_C>();
	}
};
static_assert(alignof(UWBP_EquipmentSelect_EqBox_C) == 0x000008, "Wrong alignment on UWBP_EquipmentSelect_EqBox_C");
static_assert(sizeof(UWBP_EquipmentSelect_EqBox_C) == 0x000298, "Wrong size on UWBP_EquipmentSelect_EqBox_C");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, UberGraphFrame) == 0x000230, "Member 'UWBP_EquipmentSelect_EqBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, EquipmentNumber) == 0x000238, "Member 'UWBP_EquipmentSelect_EqBox_C::EquipmentNumber' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Image_10) == 0x000240, "Member 'UWBP_EquipmentSelect_EqBox_C::Image_10' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Image_11) == 0x000248, "Member 'UWBP_EquipmentSelect_EqBox_C::Image_11' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Image_12) == 0x000250, "Member 'UWBP_EquipmentSelect_EqBox_C::Image_12' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Image_13) == 0x000258, "Member 'UWBP_EquipmentSelect_EqBox_C::Image_13' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Item) == 0x000260, "Member 'UWBP_EquipmentSelect_EqBox_C::Item' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, RestrictedOverlay) == 0x000268, "Member 'UWBP_EquipmentSelect_EqBox_C::RestrictedOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Selected) == 0x000270, "Member 'UWBP_EquipmentSelect_EqBox_C::Selected' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, Icon) == 0x000278, "Member 'UWBP_EquipmentSelect_EqBox_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, SlotNum) == 0x000280, "Member 'UWBP_EquipmentSelect_EqBox_C::SlotNum' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, bEnabled) == 0x000284, "Member 'UWBP_EquipmentSelect_EqBox_C::bEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, EqpItem) == 0x000288, "Member 'UWBP_EquipmentSelect_EqBox_C::EqpItem' has a wrong offset!");
static_assert(offsetof(UWBP_EquipmentSelect_EqBox_C, bHighlighted) == 0x000290, "Member 'UWBP_EquipmentSelect_EqBox_C::bHighlighted' has a wrong offset!");

}


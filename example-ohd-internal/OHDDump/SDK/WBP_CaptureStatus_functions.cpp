#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CaptureStatus

#include "Basic.hpp"

#include "WBP_CaptureStatus_classes.hpp"
#include "WBP_CaptureStatus_parameters.hpp"


namespace SDK
{

// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ExecuteUbergraph_WBP_CaptureStatus
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_C::ExecuteUbergraph_WBP_CaptureStatus(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "ExecuteUbergraph_WBP_CaptureStatus");

	Params::WBP_CaptureStatus_C_ExecuteUbergraph_WBP_CaptureStatus Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_CaptureStatus_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "PreConstruct");

	Params::WBP_CaptureStatus_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ControlPointSetGarrisonedPlayerCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumFriendlies                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumEnemies                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MinNumRequiredForCapture                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInitial                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_CaptureStatus_C::ControlPointSetGarrisonedPlayerCount(int32 NumFriendlies, int32 NumEnemies, int32 MinNumRequiredForCapture, bool bInitial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "ControlPointSetGarrisonedPlayerCount");

	Params::WBP_CaptureStatus_C_ControlPointSetGarrisonedPlayerCount Parms{};

	Parms.NumFriendlies = NumFriendlies;
	Parms.NumEnemies = NumEnemies;
	Parms.MinNumRequiredForCapture = MinNumRequiredForCapture;
	Parms.bInitial = bInitial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ControlPointSetOwnershipState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCaptured                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EHDTeam                                 NewOwningTeam                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHDTeam                                 OldOwningTeam                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInitial                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_CaptureStatus_C::ControlPointSetOwnershipState(bool bCaptured, EHDTeam NewOwningTeam, EHDTeam OldOwningTeam, bool bInitial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "ControlPointSetOwnershipState");

	Params::WBP_CaptureStatus_C_ControlPointSetOwnershipState Parms{};

	Parms.bCaptured = bCaptured;
	Parms.NewOwningTeam = NewOwningTeam;
	Parms.OldOwningTeam = OldOwningTeam;
	Parms.bInitial = bInitial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ControlPointSetCaptureProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bContested                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   NewValueNorm                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OldValueNorm                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInitial                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_CaptureStatus_C::ControlPointSetCaptureProgress(bool bContested, float NewValueNorm, float OldValueNorm, bool bInitial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "ControlPointSetCaptureProgress");

	Params::WBP_CaptureStatus_C_ControlPointSetCaptureProgress Parms{};

	Parms.bContested = bContested;
	Parms.NewValueNorm = NewValueNorm;
	Parms.OldValueNorm = OldValueNorm;
	Parms.bInitial = bInitial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_CaptureStatus_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.OwnerNoControlPoint
// (Event, Protected, BlueprintEvent)

void UWBP_CaptureStatus_C::OwnerNoControlPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "OwnerNoControlPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.OwnerTouchingControlPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AHDBaseCapturePoint*              OverlappingCP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInitial                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_CaptureStatus_C::OwnerTouchingControlPoint(class AHDBaseCapturePoint* OverlappingCP, bool bInitial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "OwnerTouchingControlPoint");

	Params::WBP_CaptureStatus_C_OwnerTouchingControlPoint Parms{};

	Parms.OverlappingCP = OverlappingCP;
	Parms.bInitial = bInitial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.UpdateProgressBarColor
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHDTeam                                 OwningTeam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_C::UpdateProgressBarColor(EHDTeam OwningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "UpdateProgressBarColor");

	Params::WBP_CaptureStatus_C_UpdateProgressBarColor Parms{};

	Parms.OwningTeam = OwningTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.UpdateTeamOwnerText
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHDTeam                                 CaptureTeam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_C::UpdateTeamOwnerText(EHDTeam CaptureTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "UpdateTeamOwnerText");

	Params::WBP_CaptureStatus_C_UpdateTeamOwnerText Parms{};

	Parms.CaptureTeam = CaptureTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.ResizeGarrisonContainer
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewUnitIconCount                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_C::ResizeGarrisonContainer(int32 NewUnitIconCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "ResizeGarrisonContainer");

	Params::WBP_CaptureStatus_C_ResizeGarrisonContainer Parms{};

	Parms.NewUnitIconCount = NewUnitIconCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.SetMinCountToCapture
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MinCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_C::SetMinCountToCapture(int32 MinCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "SetMinCountToCapture");

	Params::WBP_CaptureStatus_C_SetMinCountToCapture Parms{};

	Parms.MinCount = MinCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus.WBP_CaptureStatus_C.UpdateActiveUnits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFriendly                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   UnitCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MinUnitsRequired                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_C::UpdateActiveUnits(bool bFriendly, int32 UnitCount, int32 MinUnitsRequired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_C", "UpdateActiveUnits");

	Params::WBP_CaptureStatus_C_UpdateActiveUnits Parms{};

	Parms.bFriendly = bFriendly;
	Parms.UnitCount = UnitCount;
	Parms.MinUnitsRequired = MinUnitsRequired;

	UObject::ProcessEvent(Func, &Parms);
}

}


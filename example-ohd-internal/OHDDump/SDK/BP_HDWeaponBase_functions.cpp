#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDWeaponBase

#include "Basic.hpp"

#include "BP_HDWeaponBase_classes.hpp"
#include "BP_HDWeaponBase_parameters.hpp"


namespace SDK
{

// Function BP_HDWeaponBase.BP_HDWeaponBase_C.OnUpdateAttachments__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::OnUpdateAttachments__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "OnUpdateAttachments__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.OnUpdateSights__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::OnUpdateSights__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "OnUpdateSights__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ExecuteUbergraph_BP_HDWeaponBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDWeaponBase_C::ExecuteUbergraph_BP_HDWeaponBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ExecuteUbergraph_BP_HDWeaponBase");

	Params::BP_HDWeaponBase_C_ExecuteUbergraph_BP_HDWeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ReceiveFireModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFireMode                               NewFireMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFireMode                               PrevFireMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromPlayerInput                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDWeaponBase_C::ReceiveFireModeChanged(EFireMode NewFireMode, EFireMode PrevFireMode, bool bFromPlayerInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ReceiveFireModeChanged");

	Params::BP_HDWeaponBase_C_ReceiveFireModeChanged Parms{};

	Parms.NewFireMode = NewFireMode;
	Parms.PrevFireMode = PrevFireMode;
	Parms.bFromPlayerInput = bFromPlayerInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ServerResetAmmoPercent
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::ServerResetAmmoPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ServerResetAmmoPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ReceiveReloadFinished
// (Event, Public, BlueprintEvent)

void ABP_HDWeaponBase_C::ReceiveReloadFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ReceiveReloadFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ResetBullets
// (BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::ResetBullets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ResetBullets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ReceiveOnEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADFBaseItem*                      LastItem                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDWeaponBase_C::ReceiveOnEquip(const class ADFBaseItem* LastItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ReceiveOnEquip");

	Params::BP_HDWeaponBase_C_ReceiveOnEquip Parms{};

	Parms.LastItem = LastItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ReceiveVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFirstPerson                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDWeaponBase_C::ReceiveVisibilityChanged(bool bFirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ReceiveVisibilityChanged");

	Params::BP_HDWeaponBase_C_ReceiveVisibilityChanged Parms{};

	Parms.bFirstPerson = bFirstPerson;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ReceiveFire
// (Event, Protected, BlueprintEvent)

void ABP_HDWeaponBase_C::ReceiveFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ReceiveFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.SetCurrentSight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Sight                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDWeaponBase_C::SetCurrentSight(class USceneComponent* Sight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "SetCurrentSight");

	Params::BP_HDWeaponBase_C_SetCurrentSight Parms{};

	Parms.Sight = Sight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.CycleSight
// (BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::CycleSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "CycleSight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.RemoveLegacyLocomotionAnims
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFPP                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HDWeaponBase_C::RemoveLegacyLocomotionAnims(bool bFPP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "RemoveLegacyLocomotionAnims");

	Params::BP_HDWeaponBase_C_RemoveLegacyLocomotionAnims Parms{};

	Parms.bFPP = bFPP;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.UpdateAttachmentVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFirstPerson                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDWeaponBase_C::UpdateAttachmentVisibility(bool bFirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "UpdateAttachmentVisibility");

	Params::BP_HDWeaponBase_C_UpdateAttachmentVisibility Parms{};

	Parms.bFirstPerson = bFirstPerson;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.InternalSetVisibilityForAttachment
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFirstPerson                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDWeaponBase_C::InternalSetVisibilityForAttachment(class USceneComponent* Attachment, bool bFirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "InternalSetVisibilityForAttachment");

	Params::BP_HDWeaponBase_C_InternalSetVisibilityForAttachment Parms{};

	Parms.Attachment = Attachment;
	Parms.bFirstPerson = bFirstPerson;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.FindNextMagazine
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ADFBaseAmmoClip*                  NextClip                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDWeaponBase_C::FindNextMagazine(class ADFBaseAmmoClip** NextClip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "FindNextMagazine");

	Params::BP_HDWeaponBase_C_FindNextMagazine Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NextClip != nullptr)
		*NextClip = Parms.NextClip;
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.OnRep_AmmoPercent
// (BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::OnRep_AmmoPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "OnRep_AmmoPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.InternalAmmoPercentUpdate
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDWeaponBase_C::InternalAmmoPercentUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "InternalAmmoPercentUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.SetAmmoPercentFromClip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADFBaseAmmoClip*                  FromAmmoClip                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDWeaponBase_C::SetAmmoPercentFromClip(class ADFBaseAmmoClip* FromAmmoClip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "SetAmmoPercentFromClip");

	Params::BP_HDWeaponBase_C_SetAmmoPercentFromClip Parms{};

	Parms.FromAmmoClip = FromAmmoClip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.SetAmmoPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentClipAmmo                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxClipAmmo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDWeaponBase_C::SetAmmoPercent(int32 CurrentClipAmmo, int32 MaxClipAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "SetAmmoPercent");

	Params::BP_HDWeaponBase_C_SetAmmoPercent Parms{};

	Parms.CurrentClipAmmo = CurrentClipAmmo;
	Parms.MaxClipAmmo = MaxClipAmmo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.GetLegacyLocomotionAnims
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bFPP                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FName, class UAnimSequenceBase*>ReturnValue                                            (Parm, OutParm, ReturnParm)

TMap<class FName, class UAnimSequenceBase*> ABP_HDWeaponBase_C::GetLegacyLocomotionAnims(bool bFPP) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "GetLegacyLocomotionAnims");

	Params::BP_HDWeaponBase_C_GetLegacyLocomotionAnims Parms{};

	Parms.bFPP = bFPP;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.CanFire
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_HDWeaponBase_C::CanFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "CanFire");

	Params::BP_HDWeaponBase_C_CanFire Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.GetLocoAnimSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TMap<class FName, class UAnimSequenceBase*>OutAnimSet                                             (Parm, OutParm)

void ABP_HDWeaponBase_C::GetLocoAnimSet(TMap<class FName, class UAnimSequenceBase*>* OutAnimSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "GetLocoAnimSet");

	Params::BP_HDWeaponBase_C_GetLocoAnimSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimSet != nullptr)
		*OutAnimSet = std::move(Parms.OutAnimSet);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.GetLocoTPPAnimSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TMap<class FName, class UAnimSequenceBase*>OutAnimSet                                             (Parm, OutParm)

void ABP_HDWeaponBase_C::GetLocoTPPAnimSet(TMap<class FName, class UAnimSequenceBase*>* OutAnimSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "GetLocoTPPAnimSet");

	Params::BP_HDWeaponBase_C_GetLocoTPPAnimSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimSet != nullptr)
		*OutAnimSet = std::move(Parms.OutAnimSet);
}


// Function BP_HDWeaponBase.BP_HDWeaponBase_C.ShouldUseMirroredLowerBodyLoco
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bOutUseMirrored                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDWeaponBase_C::ShouldUseMirroredLowerBodyLoco(bool* bOutUseMirrored) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDWeaponBase_C", "ShouldUseMirroredLowerBodyLoco");

	Params::BP_HDWeaponBase_C_ShouldUseMirroredLowerBodyLoco Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutUseMirrored != nullptr)
		*bOutUseMirrored = Parms.bOutUseMirrored;
}

}


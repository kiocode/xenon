#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDVehicleBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ArcVehicles_structs.hpp"
#include "ArcVehicles_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HDVehicleBase.BP_HDVehicleBase_C
// 0x00C0 (0x0388 - 0x02C8)
class ABP_HDVehicleBase_C final : public AArcBaseVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        EngineSound;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWheeledVehicleMovementComponentNW*     VehicleMovementOWI;                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UAnimSequenceBase*>   DriverAnimSet;                                     // 0x02E8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)
	TMap<class FName, class UAnimSequenceBase*>   PassengerAnimSet;                                  // 0x0338(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void ExecuteUbergraph_BP_HDVehicleBase(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void NotifyPlayerSeatChangeEvent(class APlayerState* Player, class UArcVehicleSeatConfig* ToSeat, class UArcVehicleSeatConfig* FromSeat, EArcVehicleSeatChangeType SeatChangeEvent);
	void Used(class AActor* Invoker);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void InpActEvt_Use_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Jump_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Jump_K2Node_InputActionEvent_2(const struct FKey& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HDVehicleBase_C">();
	}
	static class ABP_HDVehicleBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HDVehicleBase_C>();
	}
};
static_assert(alignof(ABP_HDVehicleBase_C) == 0x000008, "Wrong alignment on ABP_HDVehicleBase_C");
static_assert(sizeof(ABP_HDVehicleBase_C) == 0x000388, "Wrong size on ABP_HDVehicleBase_C");
static_assert(offsetof(ABP_HDVehicleBase_C, UberGraphFrame) == 0x0002C8, "Member 'ABP_HDVehicleBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HDVehicleBase_C, EngineSound) == 0x0002D0, "Member 'ABP_HDVehicleBase_C::EngineSound' has a wrong offset!");
static_assert(offsetof(ABP_HDVehicleBase_C, Mesh) == 0x0002D8, "Member 'ABP_HDVehicleBase_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_HDVehicleBase_C, VehicleMovementOWI) == 0x0002E0, "Member 'ABP_HDVehicleBase_C::VehicleMovementOWI' has a wrong offset!");
static_assert(offsetof(ABP_HDVehicleBase_C, DriverAnimSet) == 0x0002E8, "Member 'ABP_HDVehicleBase_C::DriverAnimSet' has a wrong offset!");
static_assert(offsetof(ABP_HDVehicleBase_C, PassengerAnimSet) == 0x000338, "Member 'ABP_HDVehicleBase_C::PassengerAnimSet' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDAIControllerBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HDMain_structs.hpp"


namespace SDK::Params
{

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.ExecuteUbergraph_BP_HDAIControllerBase
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseCharacter*                       K2Node_CustomEvent_Character;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            K2Node_CustomEvent_NewEquippedItem;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            K2Node_CustomEvent_PrevEquippedItem;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDWeaponBase_C*                     K2Node_DynamicCast_AsBP_HDWeapon_Base;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDWeaponBase_C*                     K2Node_DynamicCast_AsBP_HDWeapon_Base_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseProjectile*                      K2Node_CustomEvent_OtherProjectile_1;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBasePickup*                          K2Node_CustomEvent_Pickup_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseProjectile*                      K2Node_CustomEvent_OtherProjectile;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBasePickup*                          K2Node_CustomEvent_Pickup;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_UnpossessedPawn;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_VictimPawn;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_VictimController;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_KillingDamage;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageEvent                           K2Node_CustomEvent_DamageEvent;                    // 0x0080(0x0010)(ConstParm)
	class APawn*                                  K2Node_CustomEvent_InstigatingPawn;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_2; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase");
static_assert(sizeof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase) == 0x0000D8, "Wrong size on BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, EntryPoint) == 0x000000, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_Character) == 0x000008, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_NewEquippedItem) == 0x000010, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_NewEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_PrevEquippedItem) == 0x000018, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_PrevEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_AsBP_HDWeapon_Base) == 0x000020, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_AsBP_HDWeapon_Base' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_AsBP_HDWeapon_Base_1) == 0x000030, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_AsBP_HDWeapon_Base_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_OtherProjectile_1) == 0x000040, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_OtherProjectile_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_Pickup_1) == 0x000048, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_Pickup_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_OtherProjectile) == 0x000050, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_OtherProjectile' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_Pickup) == 0x000058, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_Pickup' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_Event_UnpossessedPawn) == 0x000060, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_Event_UnpossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_VictimPawn) == 0x000068, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_VictimPawn' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_VictimController) == 0x000070, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_VictimController' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_KillingDamage) == 0x000078, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_KillingDamage' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_DamageEvent) == 0x000080, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_InstigatingPawn) == 0x000090, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_InstigatingPawn' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_CustomEvent_DamageCauser) == 0x000098, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base) == 0x0000A0, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1) == 0x0000B0, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_Event_PossessedPawn) == 0x0000C0, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_2) == 0x0000C8, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_2' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'BP_HDAIControllerBase_C_ExecuteUbergraph_BP_HDAIControllerBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct BP_HDAIControllerBase_C_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_ReceiveUnPossess) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_ReceiveUnPossess");
static_assert(sizeof(BP_HDAIControllerBase_C_ReceiveUnPossess) == 0x000008, "Wrong size on BP_HDAIControllerBase_C_ReceiveUnPossess");
static_assert(offsetof(BP_HDAIControllerBase_C_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'BP_HDAIControllerBase_C_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.HitDamageEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_HDAIControllerBase_C_HitDamageEvent final
{
public:
	class ADFBaseProjectile*                      OtherProjectile;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBasePickup*                          Pickup;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_HitDamageEvent) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_HitDamageEvent");
static_assert(sizeof(BP_HDAIControllerBase_C_HitDamageEvent) == 0x000010, "Wrong size on BP_HDAIControllerBase_C_HitDamageEvent");
static_assert(offsetof(BP_HDAIControllerBase_C_HitDamageEvent, OtherProjectile) == 0x000000, "Member 'BP_HDAIControllerBase_C_HitDamageEvent::OtherProjectile' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_HitDamageEvent, Pickup) == 0x000008, "Member 'BP_HDAIControllerBase_C_HitDamageEvent::Pickup' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.SuppressionEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_HDAIControllerBase_C_SuppressionEvent final
{
public:
	class ADFBaseProjectile*                      OtherProjectile;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBasePickup*                          Pickup;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_SuppressionEvent) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_SuppressionEvent");
static_assert(sizeof(BP_HDAIControllerBase_C_SuppressionEvent) == 0x000010, "Wrong size on BP_HDAIControllerBase_C_SuppressionEvent");
static_assert(offsetof(BP_HDAIControllerBase_C_SuppressionEvent, OtherProjectile) == 0x000000, "Member 'BP_HDAIControllerBase_C_SuppressionEvent::OtherProjectile' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SuppressionEvent, Pickup) == 0x000008, "Member 'BP_HDAIControllerBase_C_SuppressionEvent::Pickup' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_HDAIControllerBase_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_ReceivePossess");
static_assert(sizeof(BP_HDAIControllerBase_C_ReceivePossess) == 0x000008, "Wrong size on BP_HDAIControllerBase_C_ReceivePossess");
static_assert(offsetof(BP_HDAIControllerBase_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_HDAIControllerBase_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.OnOwnerPawnEquippedItemChange
// 0x0018 (0x0018 - 0x0000)
struct BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange final
{
public:
	class ADFBaseCharacter*                       Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            NewEquippedItem;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            PrevEquippedItem;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange");
static_assert(sizeof(BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange) == 0x000018, "Wrong size on BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange, Character_0) == 0x000000, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange::Character_0' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange, NewEquippedItem) == 0x000008, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange::NewEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange, PrevEquippedItem) == 0x000010, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnEquippedItemChange::PrevEquippedItem' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.OnOwnerPawnDeath
// 0x0038 (0x0038 - 0x0000)
struct BP_HDAIControllerBase_C_OnOwnerPawnDeath final
{
public:
	class APawn*                                  VictimPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            VictimController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KillingDamage;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageEvent                           DamageEvent;                                       // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APawn*                                  InstigatingPawn;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_OnOwnerPawnDeath) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_OnOwnerPawnDeath");
static_assert(sizeof(BP_HDAIControllerBase_C_OnOwnerPawnDeath) == 0x000038, "Wrong size on BP_HDAIControllerBase_C_OnOwnerPawnDeath");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnDeath, VictimPawn) == 0x000000, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnDeath::VictimPawn' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnDeath, VictimController) == 0x000008, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnDeath::VictimController' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnDeath, KillingDamage) == 0x000010, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnDeath::KillingDamage' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnDeath, DamageEvent) == 0x000018, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnDeath::DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnDeath, InstigatingPawn) == 0x000028, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnDeath::InstigatingPawn' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_OnOwnerPawnDeath, DamageCauser) == 0x000030, "Member 'BP_HDAIControllerBase_C_OnOwnerPawnDeath::DamageCauser' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.WarnOfNoRecoilHandler
// 0x0028 (0x0028 - 0x0000)
struct BP_HDAIControllerBase_C_WarnOfNoRecoilHandler final
{
public:
	class ABP_HDWeaponBase_C*                     EquippedWeapon;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_WarnOfNoRecoilHandler) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_WarnOfNoRecoilHandler");
static_assert(sizeof(BP_HDAIControllerBase_C_WarnOfNoRecoilHandler) == 0x000028, "Wrong size on BP_HDAIControllerBase_C_WarnOfNoRecoilHandler");
static_assert(offsetof(BP_HDAIControllerBase_C_WarnOfNoRecoilHandler, EquippedWeapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_WarnOfNoRecoilHandler::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_WarnOfNoRecoilHandler, CallFunc_GetPathName_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_WarnOfNoRecoilHandler::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_WarnOfNoRecoilHandler, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_HDAIControllerBase_C_WarnOfNoRecoilHandler::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.BindEventsToCharacter
// 0x0048 (0x0048 - 0x0000)
struct BP_HDAIControllerBase_C_BindEventsToCharacter final
{
public:
	class ABP_HDPlayerCharacterBase_C*            Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ADFBaseProjectile* OtherProjectile, class ADFBasePickup* Pickup)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ADFBaseProjectile* OtherProjectile, class ADFBasePickup* Pickup)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_BindEventsToCharacter) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_BindEventsToCharacter");
static_assert(sizeof(BP_HDAIControllerBase_C_BindEventsToCharacter) == 0x000048, "Wrong size on BP_HDAIControllerBase_C_BindEventsToCharacter");
static_assert(offsetof(BP_HDAIControllerBase_C_BindEventsToCharacter, Character_0) == 0x000000, "Member 'BP_HDAIControllerBase_C_BindEventsToCharacter::Character_0' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_BindEventsToCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HDAIControllerBase_C_BindEventsToCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_BindEventsToCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_HDAIControllerBase_C_BindEventsToCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_BindEventsToCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'BP_HDAIControllerBase_C_BindEventsToCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_BindEventsToCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'BP_HDAIControllerBase_C_BindEventsToCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.UnbindEventsFromCharacter
// 0x0048 (0x0048 - 0x0000)
struct BP_HDAIControllerBase_C_UnbindEventsFromCharacter final
{
public:
	class ABP_HDPlayerCharacterBase_C*            Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ADFBaseProjectile* OtherProjectile, class ADFBasePickup* Pickup)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ADFBaseProjectile* OtherProjectile, class ADFBasePickup* Pickup)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_UnbindEventsFromCharacter");
static_assert(sizeof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter) == 0x000048, "Wrong size on BP_HDAIControllerBase_C_UnbindEventsFromCharacter");
static_assert(offsetof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter, Character_0) == 0x000000, "Member 'BP_HDAIControllerBase_C_UnbindEventsFromCharacter::Character_0' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HDAIControllerBase_C_UnbindEventsFromCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_HDAIControllerBase_C_UnbindEventsFromCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'BP_HDAIControllerBase_C_UnbindEventsFromCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_UnbindEventsFromCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'BP_HDAIControllerBase_C_UnbindEventsFromCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.CharacterCleanup
// 0x0020 (0x0020 - 0x0000)
struct BP_HDAIControllerBase_C_CharacterCleanup final
{
public:
	class ABP_HDPlayerCharacterBase_C*            Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            CallFunc_GetEquippedItem_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDWeaponBase_C*                     K2Node_DynamicCast_AsBP_HDWeapon_Base;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_CharacterCleanup) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_CharacterCleanup");
static_assert(sizeof(BP_HDAIControllerBase_C_CharacterCleanup) == 0x000020, "Wrong size on BP_HDAIControllerBase_C_CharacterCleanup");
static_assert(offsetof(BP_HDAIControllerBase_C_CharacterCleanup, Character_0) == 0x000000, "Member 'BP_HDAIControllerBase_C_CharacterCleanup::Character_0' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_CharacterCleanup, CallFunc_GetEquippedItem_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_CharacterCleanup::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_CharacterCleanup, K2Node_DynamicCast_AsBP_HDWeapon_Base) == 0x000010, "Member 'BP_HDAIControllerBase_C_CharacterCleanup::K2Node_DynamicCast_AsBP_HDWeapon_Base' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_CharacterCleanup, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HDAIControllerBase_C_CharacterCleanup::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.SetupRecoilHandler
// 0x0018 (0x0018 - 0x0000)
struct BP_HDAIControllerBase_C_SetupRecoilHandler final
{
public:
	class ABP_HDWeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ViewPunchRecoilHandler_C*           K2Node_DynamicCast_AsBP_View_Punch_Recoil_Handler; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_SetupRecoilHandler) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_SetupRecoilHandler");
static_assert(sizeof(BP_HDAIControllerBase_C_SetupRecoilHandler) == 0x000018, "Wrong size on BP_HDAIControllerBase_C_SetupRecoilHandler");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupRecoilHandler, Weapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_SetupRecoilHandler::Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupRecoilHandler, K2Node_DynamicCast_AsBP_View_Punch_Recoil_Handler) == 0x000008, "Member 'BP_HDAIControllerBase_C_SetupRecoilHandler::K2Node_DynamicCast_AsBP_View_Punch_Recoil_Handler' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupRecoilHandler, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HDAIControllerBase_C_SetupRecoilHandler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupRecoilHandler, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_HDAIControllerBase_C_SetupRecoilHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.ResetRecoilHandler
// 0x0018 (0x0018 - 0x0000)
struct BP_HDAIControllerBase_C_ResetRecoilHandler final
{
public:
	class ABP_HDWeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ViewPunchRecoilHandler_C*           K2Node_DynamicCast_AsBP_View_Punch_Recoil_Handler; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_ResetRecoilHandler) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_ResetRecoilHandler");
static_assert(sizeof(BP_HDAIControllerBase_C_ResetRecoilHandler) == 0x000018, "Wrong size on BP_HDAIControllerBase_C_ResetRecoilHandler");
static_assert(offsetof(BP_HDAIControllerBase_C_ResetRecoilHandler, Weapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_ResetRecoilHandler::Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ResetRecoilHandler, K2Node_DynamicCast_AsBP_View_Punch_Recoil_Handler) == 0x000008, "Member 'BP_HDAIControllerBase_C_ResetRecoilHandler::K2Node_DynamicCast_AsBP_View_Punch_Recoil_Handler' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_ResetRecoilHandler, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HDAIControllerBase_C_ResetRecoilHandler::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.SaveAndApplyNewValuesToWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon final
{
public:
	class ABP_HDWeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon");
static_assert(sizeof(BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon) == 0x000010, "Wrong size on BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon");
static_assert(offsetof(BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon, Weapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_SaveAndApplyNewValuesToWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.RestorePreviousValuesForWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon final
{
public:
	class ABP_HDWeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon");
static_assert(sizeof(BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon) == 0x000010, "Wrong size on BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon");
static_assert(offsetof(BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon, Weapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_RestorePreviousValuesForWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.SetupWeaponBase
// 0x0010 (0x0010 - 0x0000)
struct BP_HDAIControllerBase_C_SetupWeaponBase final
{
public:
	class ABP_HDWeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_SetupWeaponBase) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_SetupWeaponBase");
static_assert(sizeof(BP_HDAIControllerBase_C_SetupWeaponBase) == 0x000010, "Wrong size on BP_HDAIControllerBase_C_SetupWeaponBase");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupWeaponBase, Weapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_SetupWeaponBase::Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupWeaponBase, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_SetupWeaponBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupWeaponBase, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_HDAIControllerBase_C_SetupWeaponBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupWeaponBase, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'BP_HDAIControllerBase_C_SetupWeaponBase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.ResetWeaponBase
// 0x0008 (0x0008 - 0x0000)
struct BP_HDAIControllerBase_C_ResetWeaponBase final
{
public:
	class ABP_HDWeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDAIControllerBase_C_ResetWeaponBase) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_ResetWeaponBase");
static_assert(sizeof(BP_HDAIControllerBase_C_ResetWeaponBase) == 0x000008, "Wrong size on BP_HDAIControllerBase_C_ResetWeaponBase");
static_assert(offsetof(BP_HDAIControllerBase_C_ResetWeaponBase, Weapon) == 0x000000, "Member 'BP_HDAIControllerBase_C_ResetWeaponBase::Weapon' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.SetupVocalProfile
// 0x00C0 (0x00C0 - 0x0000)
struct BP_HDAIControllerBase_C_SetupVocalProfile final
{
public:
	class UDataTable*                             VocalProfiles;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAICharacterVocalProfile               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0068)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_SetupVocalProfile) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_SetupVocalProfile");
static_assert(sizeof(BP_HDAIControllerBase_C_SetupVocalProfile) == 0x0000C0, "Wrong size on BP_HDAIControllerBase_C_SetupVocalProfile");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, VocalProfiles) == 0x000000, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::VocalProfiles' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000008, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_RandomInteger_ReturnValue) == 0x000020, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_GetTeamNum_ReturnValue) == 0x000099, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_GetValidValue_ReturnValue) == 0x00009A, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass) == 0x0000A0, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000A8, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, K2Node_DynamicCast_AsData_Table) == 0x0000B0, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_SetupVocalProfile, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'BP_HDAIControllerBase_C_SetupVocalProfile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.GetFactionSpecifiedSquadLeaderKit
// 0x0030 (0x0030 - 0x0000)
struct BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit final
{
public:
	class UHDKit*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHDKit*                                 K2Node_DynamicCast_AsHD_Kit;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit");
static_assert(sizeof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit) == 0x000030, "Wrong size on BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, ReturnValue) == 0x000000, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, CallFunc_GetTeamNum_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass) == 0x000010, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, K2Node_DynamicCast_AsHD_Kit) == 0x000020, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::K2Node_DynamicCast_AsHD_Kit' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadLeaderKit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HDAIControllerBase.BP_HDAIControllerBase_C.GetFactionSpecifiedSquadMemberKit
// 0x0030 (0x0030 - 0x0000)
struct BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit final
{
public:
	class UHDKit*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHDKit*                                 K2Node_DynamicCast_AsHD_Kit;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit) == 0x000008, "Wrong alignment on BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit");
static_assert(sizeof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit) == 0x000030, "Wrong size on BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, ReturnValue) == 0x000000, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, CallFunc_GetTeamNum_ReturnValue) == 0x000008, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass) == 0x000010, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::CallFunc_GetHDFactionInfoForTeam_HDFactionInfoClass' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, K2Node_DynamicCast_AsHD_Kit) == 0x000020, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::K2Node_DynamicCast_AsHD_Kit' has a wrong offset!");
static_assert(offsetof(BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HDAIControllerBase_C_GetFactionSpecifiedSquadMemberKit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


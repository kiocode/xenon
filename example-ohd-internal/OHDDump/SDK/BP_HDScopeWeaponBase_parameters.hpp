#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDScopeWeaponBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ExecuteUbergraph_BP_HDScopeWeaponBase
// 0x0170 (0x0170 - 0x0000)
struct BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseCharacter*                       CallFunc_GetPawnOwner_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseCharacter*                       CallFunc_GetPawnOwner_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyPlayerControlled_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyPlayerControlled_ReturnValue_1;  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPlayAnimAndWait;                     // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bLeavingPawnInventory;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUnEquipping_ReturnValue;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipping_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAiming_ReturnValue;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAiming_ReturnValue_1;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner; // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetupOwnerData_bValidOwnerData;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasValidOwnerData_bValidOwnerData;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseCharacter*                       K2Node_Event_LastOwner;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipping_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyPlayerControlled_ReturnValue_2;  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Event_Sight;                                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseScope_bUseScope;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldUseScope_bUseScope_1;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1; // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_1; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Distance2D_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase) == 0x000008, "Wrong alignment on BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase");
static_assert(sizeof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase) == 0x000170, "Wrong size on BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, EntryPoint) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsValid_ReturnValue_1) == 0x00000C, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsValid_ReturnValue_2) == 0x00000D, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetPawnOwner_ReturnValue) == 0x000020, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetPawnOwner_ReturnValue_1) == 0x000028, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsLocallyPlayerControlled_ReturnValue) == 0x000030, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsLocallyPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsLocallyPlayerControlled_ReturnValue_1) == 0x000031, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsLocallyPlayerControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, Temp_bool_IsClosed_Variable) == 0x000032, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, K2Node_Event_bPlayAnimAndWait) == 0x000033, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::K2Node_Event_bPlayAnimAndWait' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, K2Node_Event_bLeavingPawnInventory) == 0x000034, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::K2Node_Event_bLeavingPawnInventory' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsUnEquipping_ReturnValue) == 0x000035, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsUnEquipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsEquipping_ReturnValue) == 0x000036, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsEquipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsFalling_ReturnValue) == 0x000040, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsAiming_ReturnValue) == 0x000041, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsAiming_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsAiming_ReturnValue_1) == 0x000042, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsAiming_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner) == 0x000043, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_HasLocallyPlayerControlledOwner_bLocalPlayerOwner' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_SetupOwnerData_bValidOwnerData) == 0x000044, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_SetupOwnerData_bValidOwnerData' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_HasValidOwnerData_bValidOwnerData) == 0x000045, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_HasValidOwnerData_bValidOwnerData' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, K2Node_Event_LastOwner) == 0x000048, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::K2Node_Event_LastOwner' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsEquipped_ReturnValue) == 0x000050, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsEquipping_ReturnValue_1) == 0x000051, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsEquipping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x000053, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_IsLocallyPlayerControlled_ReturnValue_2) == 0x000055, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_IsLocallyPlayerControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, K2Node_Event_Sight) == 0x000058, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::K2Node_Event_Sight' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_ShouldUseScope_bUseScope) == 0x000060, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_ShouldUseScope_bUseScope' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_ShouldUseScope_bUseScope_1) == 0x000061, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_ShouldUseScope_bUseScope_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Not_PreBool_ReturnValue_2) == 0x000062, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_BooleanAND_ReturnValue_1) == 0x000063, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000064, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000070, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x000078, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_BreakVector2D_X) == 0x00007C, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000084, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000085, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000088, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1) == 0x000094, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_ProjectWorldLocationToScreen_ReturnValue_1) == 0x00009C, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_ProjectWorldLocationToScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Distance2D_ReturnValue) == 0x0000A0, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetViewportSize_SizeX) == 0x0000A4, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetViewportSize_SizeY) == 0x0000A8, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Divide_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetGameUserSettings_ReturnValue) == 0x0000B8, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C0, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x0000C4, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x0000C8, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x0000CC, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x0000D0, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x0000E4, "Member 'BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SetCurrentSight
// 0x0008 (0x0008 - 0x0000)
struct BP_HDScopeWeaponBase_C_SetCurrentSight final
{
public:
	class USceneComponent*                        Sight;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_SetCurrentSight) == 0x000008, "Wrong alignment on BP_HDScopeWeaponBase_C_SetCurrentSight");
static_assert(sizeof(BP_HDScopeWeaponBase_C_SetCurrentSight) == 0x000008, "Wrong size on BP_HDScopeWeaponBase_C_SetCurrentSight");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetCurrentSight, Sight) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_SetCurrentSight::Sight' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnLeaveInventory
// 0x0008 (0x0008 - 0x0000)
struct BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory final
{
public:
	class ADFBaseCharacter*                       LastOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory) == 0x000008, "Wrong alignment on BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory");
static_assert(sizeof(BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory) == 0x000008, "Wrong size on BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory, LastOwner) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory::LastOwner' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnUnEquip
// 0x0002 (0x0002 - 0x0000)
struct BP_HDScopeWeaponBase_C_ReceiveOnUnEquip final
{
public:
	bool                                          bPlayAnimAndWait;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeavingPawnInventory;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_ReceiveOnUnEquip) == 0x000001, "Wrong alignment on BP_HDScopeWeaponBase_C_ReceiveOnUnEquip");
static_assert(sizeof(BP_HDScopeWeaponBase_C_ReceiveOnUnEquip) == 0x000002, "Wrong size on BP_HDScopeWeaponBase_C_ReceiveOnUnEquip");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ReceiveOnUnEquip, bPlayAnimAndWait) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_ReceiveOnUnEquip::bPlayAnimAndWait' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ReceiveOnUnEquip, bLeavingPawnInventory) == 0x000001, "Member 'BP_HDScopeWeaponBase_C_ReceiveOnUnEquip::bLeavingPawnInventory' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HDScopeWeaponBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HDScopeWeaponBase_C_ReceiveTick");
static_assert(sizeof(BP_HDScopeWeaponBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_HDScopeWeaponBase_C_ReceiveTick");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.UserConstructionScript
// 0x00E8 (0x00E8 - 0x0000)
struct BP_HDScopeWeaponBase_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x005C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_HDScopeWeaponBase_C_UserConstructionScript");
static_assert(sizeof(BP_HDScopeWeaponBase_C_UserConstructionScript) == 0x0000E8, "Wrong size on BP_HDScopeWeaponBase_C_UserConstructionScript");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_GetMaterials_ReturnValue) == 0x000010, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_GetBaseMaterial_ReturnValue) == 0x000040, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_GetBaseMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_UserConstructionScript, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x00005C, "Member 'BP_HDScopeWeaponBase_C_UserConstructionScript::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SetupOwnerData
// 0x0048 (0x0048 - 0x0000)
struct BP_HDScopeWeaponBase_C_SetupOwnerData final
{
public:
	bool                                          bValidOwnerData;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFPlayerCameraManager*                 K2Node_DynamicCast_AsDFPlayer_Camera_Manager;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDPlayerController*                    K2Node_DynamicCast_AsHDPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADFBaseCharacter*                       CallFunc_GetPawnOwner_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_SetupOwnerData) == 0x000008, "Wrong alignment on BP_HDScopeWeaponBase_C_SetupOwnerData");
static_assert(sizeof(BP_HDScopeWeaponBase_C_SetupOwnerData) == 0x000048, "Wrong size on BP_HDScopeWeaponBase_C_SetupOwnerData");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, bValidOwnerData) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::bValidOwnerData' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, K2Node_DynamicCast_AsDFPlayer_Camera_Manager) == 0x000010, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::K2Node_DynamicCast_AsDFPlayer_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, K2Node_DynamicCast_AsHDPlayer_Controller) == 0x000020, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::K2Node_DynamicCast_AsHDPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, CallFunc_GetPawnOwner_ReturnValue) == 0x000030, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base) == 0x000038, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SetupOwnerData, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_HDScopeWeaponBase_C_SetupOwnerData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.HasValidOwnerData
// 0x000B (0x000B - 0x0000)
struct BP_HDScopeWeaponBase_C_HasValidOwnerData final
{
public:
	bool                                          bCharAliveCheck;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bValidOwnerData;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_HasValidOwnerData) == 0x000001, "Wrong alignment on BP_HDScopeWeaponBase_C_HasValidOwnerData");
static_assert(sizeof(BP_HDScopeWeaponBase_C_HasValidOwnerData) == 0x00000B, "Wrong size on BP_HDScopeWeaponBase_C_HasValidOwnerData");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, bCharAliveCheck) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::bCharAliveCheck' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, bValidOwnerData) == 0x000001, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::bValidOwnerData' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_IsAlive_ReturnValue) == 0x000004, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_IsValid_ReturnValue_3) == 0x000006, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasValidOwnerData, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_HDScopeWeaponBase_C_HasValidOwnerData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.HasLocallyPlayerControlledOwner
// 0x0003 (0x0003 - 0x0000)
struct BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner final
{
public:
	bool                                          bLocalPlayerOwner;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner) == 0x000001, "Wrong alignment on BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner");
static_assert(sizeof(BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner) == 0x000003, "Wrong size on BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner, bLocalPlayerOwner) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner::bLocalPlayerOwner' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner, CallFunc_IsLocalController_ReturnValue) == 0x000002, "Member 'BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.AimIn
// 0x05A0 (0x05A0 - 0x0000)
struct BP_HDScopeWeaponBase_C_AimIn final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0020(0x0010)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0040(0x0540)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_AimIn) == 0x000010, "Wrong alignment on BP_HDScopeWeaponBase_C_AimIn");
static_assert(sizeof(BP_HDScopeWeaponBase_C_AimIn) == 0x0005A0, "Wrong size on BP_HDScopeWeaponBase_C_AimIn");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HDScopeWeaponBase_C_AimIn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, K2Node_MakeStruct_WeightedBlendables) == 0x000020, "Member 'BP_HDScopeWeaponBase_C_AimIn::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, K2Node_MakeStruct_PostProcessSettings) == 0x000040, "Member 'BP_HDScopeWeaponBase_C_AimIn::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000580, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, Temp_int_Loop_Counter_Variable) == 0x000584, "Member 'BP_HDScopeWeaponBase_C_AimIn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_Less_IntInt_ReturnValue) == 0x000588, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_Add_IntInt_ReturnValue) == 0x00058C, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_IsValid_ReturnValue) == 0x000590, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_IsValid_ReturnValue_1) == 0x000591, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimIn, CallFunc_IsValid_ReturnValue_2) == 0x000592, "Member 'BP_HDScopeWeaponBase_C_AimIn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.AimOut
// 0x0580 (0x0580 - 0x0000)
struct BP_HDScopeWeaponBase_C_AimOut final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0020(0x0010)()
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0030(0x0540)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_575[0x3];                                      // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x057E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x057F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_AimOut) == 0x000010, "Wrong alignment on BP_HDScopeWeaponBase_C_AimOut");
static_assert(sizeof(BP_HDScopeWeaponBase_C_AimOut) == 0x000580, "Wrong size on BP_HDScopeWeaponBase_C_AimOut");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_AimOut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_Array_RemoveItem_ReturnValue) == 0x00001C, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, K2Node_MakeStruct_WeightedBlendables) == 0x000020, "Member 'BP_HDScopeWeaponBase_C_AimOut::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, K2Node_MakeStruct_PostProcessSettings) == 0x000030, "Member 'BP_HDScopeWeaponBase_C_AimOut::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, Temp_int_Loop_Counter_Variable) == 0x000570, "Member 'BP_HDScopeWeaponBase_C_AimOut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_Less_IntInt_ReturnValue) == 0x000574, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_Add_IntInt_ReturnValue) == 0x000578, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_IsValid_ReturnValue) == 0x00057C, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_IsValid_ReturnValue_1) == 0x00057D, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_IsValid_ReturnValue_2) == 0x00057E, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_AimOut, CallFunc_IsValid_ReturnValue_3) == 0x00057F, "Member 'BP_HDScopeWeaponBase_C_AimOut::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ScopeEffects
// 0x05A0 (0x05A0 - 0x0000)
struct BP_HDScopeWeaponBase_C_ScopeEffects final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseScope_bUseScope;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0008(0x0010)()
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0020(0x0540)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_565[0x3];                                      // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0568(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_ScopeEffects) == 0x000010, "Wrong alignment on BP_HDScopeWeaponBase_C_ScopeEffects");
static_assert(sizeof(BP_HDScopeWeaponBase_C_ScopeEffects) == 0x0005A0, "Wrong size on BP_HDScopeWeaponBase_C_ScopeEffects");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_ShouldUseScope_bUseScope) == 0x000004, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_ShouldUseScope_bUseScope' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, K2Node_MakeStruct_WeightedBlendables) == 0x000008, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, K2Node_MakeStruct_PostProcessSettings) == 0x000020, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, Temp_int_Array_Index_Variable) == 0x000560, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_IsValid_ReturnValue) == 0x000564, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_Array_Get_Item) == 0x000568, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_Array_AddUnique_ReturnValue) == 0x000578, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_Array_Find_ReturnValue) == 0x00057C, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000580, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, Temp_int_Loop_Counter_Variable) == 0x000584, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000588, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_Add_IntInt_ReturnValue) == 0x00058C, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ScopeEffects, CallFunc_IsValid_ReturnValue_1) == 0x000590, "Member 'BP_HDScopeWeaponBase_C_ScopeEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.RestoreOwnerDefaultValues
// 0x0002 (0x0002 - 0x0000)
struct BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues) == 0x000001, "Wrong alignment on BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues");
static_assert(sizeof(BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues) == 0x000002, "Wrong size on BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues");
static_assert(offsetof(BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_HDScopeWeaponBase_C_RestoreOwnerDefaultValues::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SaveOwnerDefaultValues
// 0x0002 (0x0002 - 0x0000)
struct BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues) == 0x000001, "Wrong alignment on BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues");
static_assert(sizeof(BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues) == 0x000002, "Wrong size on BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_HDScopeWeaponBase_C_SaveOwnerDefaultValues::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ShouldUseScope
// 0x0007 (0x0007 - 0x0000)
struct BP_HDScopeWeaponBase_C_ShouldUseScope final
{
public:
	bool                                          bUseScope;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDScopeWeaponBase_C_ShouldUseScope) == 0x000001, "Wrong alignment on BP_HDScopeWeaponBase_C_ShouldUseScope");
static_assert(sizeof(BP_HDScopeWeaponBase_C_ShouldUseScope) == 0x000007, "Wrong size on BP_HDScopeWeaponBase_C_ShouldUseScope");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, bUseScope) == 0x000000, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::bUseScope' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000002, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDScopeWeaponBase_C_ShouldUseScope, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'BP_HDScopeWeaponBase_C_ShouldUseScope::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

}


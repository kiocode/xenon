#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_TextButton.WBP_TextButton_C.ExecuteUbergraph_WBP_TextButton
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UButtonSlot*                            K2Node_DynamicCast_AsButton_Slot;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0030(0x0018)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0048(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x0070(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_3;                           // 0x0098(0x0028)()
};
static_assert(alignof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton) == 0x000008, "Wrong alignment on WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton");
static_assert(sizeof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton) == 0x0000C0, "Wrong size on WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, EntryPoint) == 0x000000, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, Temp_bool_Variable) == 0x000004, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_DynamicCast_AsButton_Slot) == 0x000008, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_DynamicCast_AsButton_Slot' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, Temp_bool_Variable_2) == 0x000011, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, Temp_bool_Variable_3) == 0x000012, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_Event_IsDesignTime) == 0x000013, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_Select_Default) == 0x000030, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_Select_Default_2) == 0x000070, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton, K2Node_Select_Default_3) == 0x000098, "Member 'WBP_TextButton_C_ExecuteUbergraph_WBP_TextButton::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_TextButton.WBP_TextButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TextButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_TextButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TextButton_C_PreConstruct");
static_assert(sizeof(WBP_TextButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_TextButton_C_PreConstruct");
static_assert(offsetof(WBP_TextButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TextButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

}


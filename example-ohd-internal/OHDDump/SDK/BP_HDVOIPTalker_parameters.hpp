#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDVOIPTalker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.ExecuteUbergraph_BP_HDVOIPTalker
// 0x02A0 (0x02A0 - 0x0000)
struct BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTalkerPendingReset_ReturnValue;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Event_AudioComponent;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0050(0x0018)()
	class FText                                   CallFunc_Conv_TransformToText_ReturnValue;         // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0128(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0198(0x0040)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0208(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0248(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0258(0x0018)()
	class UDFCommChannel*                         K2Node_CustomEvent_MsgTalkerChannel;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_MsgTalkerPS;                    // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMsgIsTalking;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateSettingsUsageForNextBeginTalk_bSettingsUpdated; // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker) == 0x000010, "Wrong alignment on BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker");
static_assert(sizeof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker) == 0x0002A0, "Wrong size on BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, EntryPoint) == 0x000000, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_IsPlayerTalkerPendingReset_ReturnValue) == 0x000004, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_IsPlayerTalkerPendingReset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_Event_AudioComponent) == 0x000008, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_Event_AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetAttachSocketName_ReturnValue) == 0x000010, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetRelativeTransform_ReturnValue) == 0x000020, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Conv_NameToText_ReturnValue) == 0x000050, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Conv_TransformToText_ReturnValue) == 0x000068, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Conv_TransformToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetAttachParent_ReturnValue) == 0x000100, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetDisplayName_ReturnValue) == 0x000108, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetDisplayName_ReturnValue_1) == 0x000118, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Conv_StringToText_ReturnValue) == 0x000128, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000140, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_MakeStruct_FormatArgumentData_3) == 0x000198, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetOwner_ReturnValue) == 0x0001D8, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_GetDisplayName_ReturnValue_2) == 0x0001E0, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001F0, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_MakeStruct_FormatArgumentData_4) == 0x000208, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_MakeArray_Array) == 0x000248, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Format_ReturnValue) == 0x000258, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_CustomEvent_MsgTalkerChannel) == 0x000270, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_CustomEvent_MsgTalkerChannel' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_CustomEvent_MsgTalkerPS) == 0x000278, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_CustomEvent_MsgTalkerPS' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, K2Node_CustomEvent_bMsgIsTalking) == 0x000280, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::K2Node_CustomEvent_bMsgIsTalking' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_Conv_TextToString_ReturnValue) == 0x000288, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000298, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_UpdateSettingsUsageForNextBeginTalk_bSettingsUpdated) == 0x000299, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_UpdateSettingsUsageForNextBeginTalk_bSettingsUpdated' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00029A, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_BooleanAND_ReturnValue) == 0x00029B, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker, CallFunc_BooleanAND_ReturnValue_1) == 0x00029C, "Member 'BP_HDVOIPTalker_C_ExecuteUbergraph_BP_HDVOIPTalker::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.TalkStateChangedOnChannel
// 0x0018 (0x0018 - 0x0000)
struct BP_HDVOIPTalker_C_TalkStateChangedOnChannel final
{
public:
	class UDFCommChannel*                         MsgTalkerChannel;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           MsgTalkerPS;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMsgIsTalking;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDVOIPTalker_C_TalkStateChangedOnChannel) == 0x000008, "Wrong alignment on BP_HDVOIPTalker_C_TalkStateChangedOnChannel");
static_assert(sizeof(BP_HDVOIPTalker_C_TalkStateChangedOnChannel) == 0x000018, "Wrong size on BP_HDVOIPTalker_C_TalkStateChangedOnChannel");
static_assert(offsetof(BP_HDVOIPTalker_C_TalkStateChangedOnChannel, MsgTalkerChannel) == 0x000000, "Member 'BP_HDVOIPTalker_C_TalkStateChangedOnChannel::MsgTalkerChannel' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_TalkStateChangedOnChannel, MsgTalkerPS) == 0x000008, "Member 'BP_HDVOIPTalker_C_TalkStateChangedOnChannel::MsgTalkerPS' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_TalkStateChangedOnChannel, bMsgIsTalking) == 0x000010, "Member 'BP_HDVOIPTalker_C_TalkStateChangedOnChannel::bMsgIsTalking' has a wrong offset!");

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.BPOnTalkingBegin
// 0x0008 (0x0008 - 0x0000)
struct BP_HDVOIPTalker_C_BPOnTalkingBegin final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDVOIPTalker_C_BPOnTalkingBegin) == 0x000008, "Wrong alignment on BP_HDVOIPTalker_C_BPOnTalkingBegin");
static_assert(sizeof(BP_HDVOIPTalker_C_BPOnTalkingBegin) == 0x000008, "Wrong size on BP_HDVOIPTalker_C_BPOnTalkingBegin");
static_assert(offsetof(BP_HDVOIPTalker_C_BPOnTalkingBegin, AudioComponent) == 0x000000, "Member 'BP_HDVOIPTalker_C_BPOnTalkingBegin::AudioComponent' has a wrong offset!");

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.RegisterTalker
// 0x0040 (0x0040 - 0x0000)
struct BP_HDVOIPTalker_C_RegisterTalker final
{
public:
	class APlayerState*                           InRegisteredPS;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoiceSettings                         InSpatializedSettings;                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FVoiceSettings                         InNonSpatializedSettings;                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          bStartSpatialized;                                 // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateSettingsUsageForNextBeginTalk_bSettingsUpdated; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDVOIPTalker_C_RegisterTalker) == 0x000008, "Wrong alignment on BP_HDVOIPTalker_C_RegisterTalker");
static_assert(sizeof(BP_HDVOIPTalker_C_RegisterTalker) == 0x000040, "Wrong size on BP_HDVOIPTalker_C_RegisterTalker");
static_assert(offsetof(BP_HDVOIPTalker_C_RegisterTalker, InRegisteredPS) == 0x000000, "Member 'BP_HDVOIPTalker_C_RegisterTalker::InRegisteredPS' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_RegisterTalker, InSpatializedSettings) == 0x000008, "Member 'BP_HDVOIPTalker_C_RegisterTalker::InSpatializedSettings' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_RegisterTalker, InNonSpatializedSettings) == 0x000020, "Member 'BP_HDVOIPTalker_C_RegisterTalker::InNonSpatializedSettings' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_RegisterTalker, bStartSpatialized) == 0x000038, "Member 'BP_HDVOIPTalker_C_RegisterTalker::bStartSpatialized' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_RegisterTalker, CallFunc_UpdateSettingsUsageForNextBeginTalk_bSettingsUpdated) == 0x000039, "Member 'BP_HDVOIPTalker_C_RegisterTalker::CallFunc_UpdateSettingsUsageForNextBeginTalk_bSettingsUpdated' has a wrong offset!");

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.UpdateSettingsUsageForNextBeginTalk
// 0x0158 (0x0158 - 0x0000)
struct BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk final
{
public:
	bool                                          bUseSpatialized;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSettingsUpdated;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVoiceSettings                         K2Node_Select_Default_1;                           // 0x0110(0x0018)(NoDestructor, ContainsInstancedReference)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk) == 0x000008, "Wrong alignment on BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk");
static_assert(sizeof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk) == 0x000158, "Wrong size on BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, bUseSpatialized) == 0x000000, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::bUseSpatialized' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, bSettingsUpdated) == 0x000001, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::bSettingsUpdated' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, Temp_string_Variable) == 0x000008, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, Temp_string_Variable_1) == 0x000018, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, Temp_bool_Variable) == 0x000028, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, Temp_bool_Variable_1) == 0x000029, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, K2Node_Select_Default) == 0x000030, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A8, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, K2Node_Select_Default_1) == 0x000110, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_Conv_TextToString_ReturnValue) == 0x000140, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000150, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000151, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000152, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_BooleanOR_ReturnValue) == 0x000153, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk, CallFunc_BooleanOR_ReturnValue_1) == 0x000154, "Member 'BP_HDVOIPTalker_C_UpdateSettingsUsageForNextBeginTalk::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_HDVOIPTalker.BP_HDVOIPTalker_C.ListenForTalkingStateChangedEvents
// 0x0040 (0x0040 - 0x0000)
struct BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents final
{
public:
	TDelegate<void(class UDFCommChannel* TalkerChannel, class APlayerState* TalkerPS, bool bIsTalking)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_HDPlayerControllerBase_C*           CallFunc_GetHDPlayerControllerBP_HDPC;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDFPlayerCommsComponent*                CallFunc_GetPlayerCommsComponent_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDFCommsFormatBase*                     CallFunc_FindAssociatedCommsFormat_OutFormatFound; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAssociatedCommsFormat_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFVOIPCommsFormat*                     K2Node_DynamicCast_AsDFVOIPComms_Format;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents) == 0x000008, "Wrong alignment on BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents");
static_assert(sizeof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents) == 0x000040, "Wrong size on BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, CallFunc_GetHDPlayerControllerBP_HDPC) == 0x000010, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::CallFunc_GetHDPlayerControllerBP_HDPC' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, CallFunc_GetPlayerCommsComponent_ReturnValue) == 0x000018, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::CallFunc_GetPlayerCommsComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, CallFunc_FindAssociatedCommsFormat_OutFormatFound) == 0x000020, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::CallFunc_FindAssociatedCommsFormat_OutFormatFound' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, CallFunc_FindAssociatedCommsFormat_ReturnValue) == 0x000028, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::CallFunc_FindAssociatedCommsFormat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, K2Node_DynamicCast_AsDFVOIPComms_Format) == 0x000030, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::K2Node_DynamicCast_AsDFVOIPComms_Format' has a wrong offset!");
static_assert(offsetof(BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HDVOIPTalker_C_ListenForTalkingStateChangedEvents::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


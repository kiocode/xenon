#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputKeySelector

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_InputKeySelector.WBP_InputKeySelector_C.OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_InputKeySelector_C_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputKeySelector_C_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InputKeySelector_C_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_InputKeySelector_C_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_InputKeySelector_C_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_InputKeySelector_C_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_InputKeySelector_C_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_InputKeySelector.WBP_InputKeySelector_C.ExecuteUbergraph_WBP_InputKeySelector
// 0x0028 (0x0028 - 0x0000)
struct WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x0008(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector) == 0x000008, "Wrong alignment on WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector");
static_assert(sizeof(WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector) == 0x000028, "Wrong size on WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector");
static_assert(offsetof(WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector, EntryPoint) == 0x000000, "Member 'WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector, K2Node_ComponentBoundEvent_SelectedKey) == 0x000008, "Member 'WBP_InputKeySelector_C_ExecuteUbergraph_WBP_InputKeySelector::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");

// Function WBP_InputKeySelector.WBP_InputKeySelector_C.BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_InputKeySelector_C_BndEvt__IKS_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_InputKeySelector.WBP_InputKeySelector_C.GetSelectedKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputKeySelector_C_GetSelectedKey final
{
public:
	struct FKey                                   SelectedKey;                                       // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputKeySelector_C_GetSelectedKey) == 0x000008, "Wrong alignment on WBP_InputKeySelector_C_GetSelectedKey");
static_assert(sizeof(WBP_InputKeySelector_C_GetSelectedKey) == 0x000018, "Wrong size on WBP_InputKeySelector_C_GetSelectedKey");
static_assert(offsetof(WBP_InputKeySelector_C_GetSelectedKey, SelectedKey) == 0x000000, "Member 'WBP_InputKeySelector_C_GetSelectedKey::SelectedKey' has a wrong offset!");

// Function WBP_InputKeySelector.WBP_InputKeySelector_C.SetSelectedKey
// 0x0038 (0x0038 - 0x0000)
struct WBP_InputKeySelector_C_SetSelectedKey final
{
public:
	struct FKey                                   SelectedKey;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0018(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputKeySelector_C_SetSelectedKey) == 0x000008, "Wrong alignment on WBP_InputKeySelector_C_SetSelectedKey");
static_assert(sizeof(WBP_InputKeySelector_C_SetSelectedKey) == 0x000038, "Wrong size on WBP_InputKeySelector_C_SetSelectedKey");
static_assert(offsetof(WBP_InputKeySelector_C_SetSelectedKey, SelectedKey) == 0x000000, "Member 'WBP_InputKeySelector_C_SetSelectedKey::SelectedKey' has a wrong offset!");
static_assert(offsetof(WBP_InputKeySelector_C_SetSelectedKey, K2Node_MakeStruct_InputChord) == 0x000018, "Member 'WBP_InputKeySelector_C_SetSelectedKey::K2Node_MakeStruct_InputChord' has a wrong offset!");

}


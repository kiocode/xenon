#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDScopeWeaponBase

#include "Basic.hpp"

#include "BP_HDScopeWeaponBase_classes.hpp"
#include "BP_HDScopeWeaponBase_parameters.hpp"


namespace SDK
{

// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ExecuteUbergraph_BP_HDScopeWeaponBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::ExecuteUbergraph_BP_HDScopeWeaponBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ExecuteUbergraph_BP_HDScopeWeaponBase");

	Params::BP_HDScopeWeaponBase_C_ExecuteUbergraph_BP_HDScopeWeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.OnBraceAimEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::OnBraceAimEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "OnBraceAimEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SetCurrentSight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Sight                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::SetCurrentSight(class USceneComponent* Sight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "SetCurrentSight");

	Params::BP_HDScopeWeaponBase_C_SetCurrentSight Parms{};

	Parms.Sight = Sight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnLeaveInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADFBaseCharacter*                 LastOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::ReceiveOnLeaveInventory(class ADFBaseCharacter* LastOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveOnLeaveInventory");

	Params::BP_HDScopeWeaponBase_C_ReceiveOnLeaveInventory Parms{};

	Parms.LastOwner = LastOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ResetAimOutGate
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ResetAimOutGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ResetAimOutGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnUnEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPlayAnimAndWait                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLeavingPawnInventory                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::ReceiveOnUnEquip(bool bPlayAnimAndWait, bool bLeavingPawnInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveOnUnEquip");

	Params::BP_HDScopeWeaponBase_C_ReceiveOnUnEquip Parms{};

	Parms.bPlayAnimAndWait = bPlayAnimAndWait;
	Parms.bLeavingPawnInventory = bLeavingPawnInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveOnEquipFinished
// (Event, Protected, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ReceiveOnEquipFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveOnEquipFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_HDScopeWeaponBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ReceiveTick");

	Params::BP_HDScopeWeaponBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.StartAimOutScope
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::StartAimOutScope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "StartAimOutScope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.StartAimInScope
// (BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::StartAimInScope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "StartAimInScope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SetupOwnerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValidOwnerData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::SetupOwnerData(bool* bValidOwnerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "SetupOwnerData");

	Params::BP_HDScopeWeaponBase_C_SetupOwnerData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bValidOwnerData != nullptr)
		*bValidOwnerData = Parms.bValidOwnerData;
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.CleanupOwnerData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::CleanupOwnerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "CleanupOwnerData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ResetDefaultValues
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ResetDefaultValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ResetDefaultValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.HasValidOwnerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCharAliveCheck                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bValidOwnerData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::HasValidOwnerData(bool bCharAliveCheck, bool* bValidOwnerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "HasValidOwnerData");

	Params::BP_HDScopeWeaponBase_C_HasValidOwnerData Parms{};

	Parms.bCharAliveCheck = bCharAliveCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (bValidOwnerData != nullptr)
		*bValidOwnerData = Parms.bValidOwnerData;
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.HasLocallyPlayerControlledOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bLocalPlayerOwner                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::HasLocallyPlayerControlledOwner(bool* bLocalPlayerOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "HasLocallyPlayerControlledOwner");

	Params::BP_HDScopeWeaponBase_C_HasLocallyPlayerControlledOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bLocalPlayerOwner != nullptr)
		*bLocalPlayerOwner = Parms.bLocalPlayerOwner;
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.AimIn
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::AimIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "AimIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.AimOut
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::AimOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "AimOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ScopeEffects
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::ScopeEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ScopeEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.RestoreOwnerDefaultValues
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::RestoreOwnerDefaultValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "RestoreOwnerDefaultValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.SaveOwnerDefaultValues
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_HDScopeWeaponBase_C::SaveOwnerDefaultValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "SaveOwnerDefaultValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HDScopeWeaponBase.BP_HDScopeWeaponBase_C.ShouldUseScope
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bUseScope                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HDScopeWeaponBase_C::ShouldUseScope(bool* bUseScope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HDScopeWeaponBase_C", "ShouldUseScope");

	Params::BP_HDScopeWeaponBase_C_ShouldUseScope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bUseScope != nullptr)
		*bUseScope = Parms.bUseScope;
}

}


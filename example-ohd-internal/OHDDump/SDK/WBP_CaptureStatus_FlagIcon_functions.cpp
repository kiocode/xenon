#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CaptureStatus_FlagIcon

#include "Basic.hpp"

#include "WBP_CaptureStatus_FlagIcon_classes.hpp"
#include "WBP_CaptureStatus_FlagIcon_parameters.hpp"


namespace SDK
{

// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.ExecuteUbergraph_WBP_CaptureStatus_FlagIcon
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_FlagIcon_C::ExecuteUbergraph_WBP_CaptureStatus_FlagIcon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "ExecuteUbergraph_WBP_CaptureStatus_FlagIcon");

	Params::WBP_CaptureStatus_FlagIcon_C_ExecuteUbergraph_WBP_CaptureStatus_FlagIcon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_CaptureStatus_FlagIcon_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "PreConstruct");

	Params::WBP_CaptureStatus_FlagIcon_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.OnUpdateIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EHDTeam                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EHDControlPointObjectiveType            ObjType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_FlagIcon_C::OnUpdateIcon(bool bActive, EHDTeam Team, bool bLocked, EHDControlPointObjectiveType ObjType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "OnUpdateIcon");

	Params::WBP_CaptureStatus_FlagIcon_C_OnUpdateIcon Parms{};

	Parms.bActive = bActive;
	Parms.Team = Team;
	Parms.bLocked = bLocked;
	Parms.ObjType = ObjType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.SetBrushes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      IconFrame_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FSlateBrush                      BG_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FSlateBrush                      Icon_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CaptureStatus_FlagIcon_C::SetBrushes(struct FSlateBrush& IconFrame_0, struct FSlateBrush& BG_0, struct FSlateBrush& Icon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "SetBrushes");

	Params::WBP_CaptureStatus_FlagIcon_C_SetBrushes Parms{};

	Parms.IconFrame_0 = std::move(IconFrame_0);
	Parms.BG_0 = std::move(BG_0);
	Parms.Icon_0 = std::move(Icon_0);

	UObject::ProcessEvent(Func, &Parms);

	IconFrame_0 = std::move(Parms.IconFrame_0);
	BG_0 = std::move(Parms.BG_0);
	Icon_0 = std::move(Parms.Icon_0);
}


// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.UpdateBrushesByTeam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EHDTeam                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHDControlPointObjectiveType            ObjType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CaptureStatus_FlagIcon_C::UpdateBrushesByTeam(bool bLocked, EHDTeam Team, EHDControlPointObjectiveType ObjType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "UpdateBrushesByTeam");

	Params::WBP_CaptureStatus_FlagIcon_C_UpdateBrushesByTeam Parms{};

	Parms.bLocked = bLocked;
	Parms.Team = Team;
	Parms.ObjType = ObjType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.TintBrushByTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      BrushToTint                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EHDTeam                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateBrush                      NewBrush                                               (Parm, OutParm)

void UWBP_CaptureStatus_FlagIcon_C::TintBrushByTeam(struct FSlateBrush& BrushToTint, EHDTeam Team, struct FSlateBrush* NewBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "TintBrushByTeam");

	Params::WBP_CaptureStatus_FlagIcon_C_TintBrushByTeam Parms{};

	Parms.BrushToTint = std::move(BrushToTint);
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	BrushToTint = std::move(Parms.BrushToTint);

	if (NewBrush != nullptr)
		*NewBrush = std::move(Parms.NewBrush);
}


// Function WBP_CaptureStatus_FlagIcon.WBP_CaptureStatus_FlagIcon_C.SetBrushOpacityByCaptureStatus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      BrushToUpdate                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EHDControlPointObjectiveType            ObjType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateBrush                      NewBrush                                               (Parm, OutParm)

void UWBP_CaptureStatus_FlagIcon_C::SetBrushOpacityByCaptureStatus(struct FSlateBrush& BrushToUpdate, bool bLocked, EHDControlPointObjectiveType ObjType, struct FSlateBrush* NewBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CaptureStatus_FlagIcon_C", "SetBrushOpacityByCaptureStatus");

	Params::WBP_CaptureStatus_FlagIcon_C_SetBrushOpacityByCaptureStatus Parms{};

	Parms.BrushToUpdate = std::move(BrushToUpdate);
	Parms.bLocked = bLocked;
	Parms.ObjType = ObjType;

	UObject::ProcessEvent(Func, &Parms);

	BrushToUpdate = std::move(Parms.BrushToUpdate);

	if (NewBrush != nullptr)
		*NewBrush = std::move(Parms.NewBrush);
}

}


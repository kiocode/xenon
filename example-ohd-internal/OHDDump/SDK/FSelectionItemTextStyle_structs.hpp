#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FSelectionItemTextStyle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// UserDefinedStruct FSelectionItemTextStyle.FSelectionItemTextStyle
// 0x0130 (0x0130 - 0x0000)
struct FFSelectionItemTextStyle final
{
public:
	struct FMargin                                Padding_26_17AFF41C417FC693663F8081EB52D726;       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            ColorandOpacity_4_20D5D4464C0BB2BC34C2F3B10914C7AE; // 0x0010(0x0028)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         Font_7_A4528CE546AFE5B4DFD6859748A92965;           // 0x0038(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateBrush                            StrikeBrush_11_2C20965947C748A26533E8AE7DC7AECC;   // 0x0088(0x0088)(Edit, BlueprintVisible)
	struct FVector2D                              ShadowOffset_14_4C0258B24BBB912A29BDBB83ABAF8701;  // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShadowColor_17_07A20E594A9C4EB4B2044D99F688B9D7;   // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDesiredWidth_20_C0C21A794DCD3081AE397991D256873C; // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Justification_23_04F4E0E043FECFD3E28E98A7F00BFFD3; // 0x012C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FFSelectionItemTextStyle) == 0x000008, "Wrong alignment on FFSelectionItemTextStyle");
static_assert(sizeof(FFSelectionItemTextStyle) == 0x000130, "Wrong size on FFSelectionItemTextStyle");
static_assert(offsetof(FFSelectionItemTextStyle, Padding_26_17AFF41C417FC693663F8081EB52D726) == 0x000000, "Member 'FFSelectionItemTextStyle::Padding_26_17AFF41C417FC693663F8081EB52D726' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, ColorandOpacity_4_20D5D4464C0BB2BC34C2F3B10914C7AE) == 0x000010, "Member 'FFSelectionItemTextStyle::ColorandOpacity_4_20D5D4464C0BB2BC34C2F3B10914C7AE' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, Font_7_A4528CE546AFE5B4DFD6859748A92965) == 0x000038, "Member 'FFSelectionItemTextStyle::Font_7_A4528CE546AFE5B4DFD6859748A92965' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, StrikeBrush_11_2C20965947C748A26533E8AE7DC7AECC) == 0x000088, "Member 'FFSelectionItemTextStyle::StrikeBrush_11_2C20965947C748A26533E8AE7DC7AECC' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, ShadowOffset_14_4C0258B24BBB912A29BDBB83ABAF8701) == 0x000110, "Member 'FFSelectionItemTextStyle::ShadowOffset_14_4C0258B24BBB912A29BDBB83ABAF8701' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, ShadowColor_17_07A20E594A9C4EB4B2044D99F688B9D7) == 0x000118, "Member 'FFSelectionItemTextStyle::ShadowColor_17_07A20E594A9C4EB4B2044D99F688B9D7' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, MinDesiredWidth_20_C0C21A794DCD3081AE397991D256873C) == 0x000128, "Member 'FFSelectionItemTextStyle::MinDesiredWidth_20_C0C21A794DCD3081AE397991D256873C' has a wrong offset!");
static_assert(offsetof(FFSelectionItemTextStyle, Justification_23_04F4E0E043FECFD3E28E98A7F00BFFD3) == 0x00012C, "Member 'FFSelectionItemTextStyle::Justification_23_04F4E0E043FECFD3E28E98A7F00BFFD3' has a wrong offset!");

}


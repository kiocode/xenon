#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OptionMenu_Options

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FOptionItemSelection_structs.hpp"
#include "Engine_structs.hpp"
#include "FSubMenuOption_structs.hpp"
#include "Slate_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.ExecuteUbergraph_WBP_OptionMenu_Options
// 0x08F8 (0x08F8 - 0x0000)
struct WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_10;   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked_7;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_11;   // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_9;    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_8;    // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_7;    // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_3;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_6;    // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_5;    // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_4;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_5;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_4;    // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_3;    // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_6;           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_7;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_2;    // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_8;           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMasterVolumeLevel_ReturnValue;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDirty_bDirty;                           // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SelectedItemValue;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bChecked;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SubMenuIndex;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bToggledOn;                     // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_9;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bChecked_6;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_8;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_7;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked_5;             // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked_4;             // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_6;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_5;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue_1;    // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_9;           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked_3;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTBGameUserSettings*                    K2Node_DynamicCast_AsTBGame_User_Settings;         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_4;                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_3;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItemValue;      // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_10;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked_2;             // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked_1;             // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x01BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_49;         // 0x01C8(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_48;         // 0x01E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_47;         // 0x0210(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_46;         // 0x0230(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_45;         // 0x0250(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_44;         // 0x0270(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_43;         // 0x0290(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_42;         // 0x02B0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_41;         // 0x02D0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_40;         // 0x02F0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_39;         // 0x0310(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_38;         // 0x0330(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_37;         // 0x0350(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_36;         // 0x0370(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_35;         // 0x0390(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_34;         // 0x03B0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_33;         // 0x03D0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_32;         // 0x03F0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_31;         // 0x0410(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_30;         // 0x0430(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_29;         // 0x0450(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_28;         // 0x0470(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_27;         // 0x0490(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_26;         // 0x04B0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_25;         // 0x04D0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_24;         // 0x04F0(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_23;         // 0x0510(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0532(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0533(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0535(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0536(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0537(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x053B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x053E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x053F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x0543(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0545(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x0546(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x0547(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x054B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x054D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x054E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x054F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_553[0x5];                                      // 0x0553(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_CustomEvent_Key_Selected;                   // 0x0558(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_CurrentOffset;          // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_22;         // 0x0580(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_21;         // 0x05A8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_20;         // 0x05D0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_19;         // 0x05F8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_18;         // 0x0620(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_17;         // 0x0648(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_16;         // 0x0668(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_15;         // 0x0688(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x06AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_14;         // 0x06B0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D2[0x6];                                      // 0x06D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_13;         // 0x06D8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_12;         // 0x0700(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_11;         // 0x0728(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A[0x6];                                      // 0x074A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_10;         // 0x0750(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_9;          // 0x0770(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_8;          // 0x0798(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_7;          // 0x07C0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_6;          // 0x07E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_75;                   // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_76;                   // 0x0809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_80A[0x6];                                      // 0x080A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_5;          // 0x0810(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_77;                   // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_4;          // 0x0838(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_78;                   // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bChecked;               // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85A[0x6];                                      // 0x085A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_3;          // 0x0860(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_79;                   // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_2;          // 0x0888(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_1;          // 0x08A8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_80;                   // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_81;                   // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_82;                   // 0x08CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB[0x5];                                      // 0x08CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x08D0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_83;                   // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options");
static_assert(sizeof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options) == 0x0008F8, "Wrong size on WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, EntryPoint) == 0x000000, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_10) == 0x000008, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_10' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_7) == 0x00001A, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_7' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_11) == 0x000020, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_11' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_IntToByte_ReturnValue) == 0x000034, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_9) == 0x000038, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_9' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_GetValidValue_ReturnValue) == 0x000048, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x00004C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_8) == 0x000050, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_8' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_7) == 0x000060, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_7' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000070, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_3) == 0x000074, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_6) == 0x000078, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_6' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_5) == 0x000088, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_4) == 0x000098, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_5) == 0x00009C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_4) == 0x0000A0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_3) == 0x0000B0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_6) == 0x0000C0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_7) == 0x0000C4, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_2) == 0x0000C8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_8) == 0x0000D8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_1) == 0x0000DC, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_GetMasterVolumeLevel_ReturnValue) == 0x0000E0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_GetMasterVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_2) == 0x0000E4, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_3) == 0x0000E5, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsDirty_bDirty) == 0x0000E6, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsDirty_bDirty' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_GetChildrenCount_ReturnValue) == 0x0000E8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000EC, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CustomEvent_SelectedItemValue) == 0x0000F0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CustomEvent_SelectedItemValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CustomEvent_bChecked) == 0x000100, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CustomEvent_bChecked' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_Event_SubMenuIndex) == 0x000104, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_Event_SubMenuIndex' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CustomEvent_Value) == 0x000108, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CustomEvent_bToggledOn) == 0x00010C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CustomEvent_bToggledOn' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_9) == 0x000110, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_9' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Clamp_ReturnValue) == 0x000114, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_6) == 0x000118, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_6' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_4) == 0x000119, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_8) == 0x00011C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_8' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_7) == 0x000120, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_7' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_5) == 0x000124, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_5) == 0x000125, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_4) == 0x000126, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_6) == 0x000128, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_6' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_6) == 0x00012C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_5) == 0x000130, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CreateDelegate_OutputDelegate) == 0x000134, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue_1) == 0x000148, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_7) == 0x000158, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_9) == 0x00015C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CreateDelegate_OutputDelegate_1) == 0x000160, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_3) == 0x000170, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_GetGameUserSettings_ReturnValue) == 0x000178, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_DynamicCast_AsTBGame_User_Settings) == 0x000180, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_DynamicCast_AsTBGame_User_Settings' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_8) == 0x000189, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_9) == 0x00018A, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_4) == 0x00018C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_10) == 0x000190, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000191, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_3) == 0x000194, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_2) == 0x000198, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value_1) == 0x00019C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_Value) == 0x0001A0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_11) == 0x0001A4, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_12) == 0x0001A5, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_13) == 0x0001A6, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_14) == 0x0001A7, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedItemValue) == 0x0001A8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedItemValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_Conv_StringToInt_ReturnValue_10) == 0x0001B8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_Conv_StringToInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_15) == 0x0001BC, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_2) == 0x0001BD, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked_1) == 0x0001BE, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_16) == 0x0001BF, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_17) == 0x0001C0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_49) == 0x0001C8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_49' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_48) == 0x0001E8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_48' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_18) == 0x000208, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_47) == 0x000210, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_47' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_46) == 0x000230, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_46' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_45) == 0x000250, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_45' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_44) == 0x000270, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_44' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_43) == 0x000290, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_43' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_42) == 0x0002B0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_42' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_41) == 0x0002D0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_41' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_40) == 0x0002F0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_40' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_39) == 0x000310, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_39' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_38) == 0x000330, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_38' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_37) == 0x000350, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_37' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_36) == 0x000370, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_36' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_35) == 0x000390, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_35' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_34) == 0x0003B0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_34' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_33) == 0x0003D0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_33' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_32) == 0x0003F0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_32' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_31) == 0x000410, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_31' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_30) == 0x000430, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_30' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_29) == 0x000450, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_29' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_28) == 0x000470, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_28' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_27) == 0x000490, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_27' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_26) == 0x0004B0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_26' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_25) == 0x0004D0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_25' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_24) == 0x0004F0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_24' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_23) == 0x000510, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_23' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_19) == 0x000530, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_20) == 0x000531, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_21) == 0x000532, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_22) == 0x000533, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_23) == 0x000534, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_24) == 0x000535, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_25) == 0x000536, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_26) == 0x000537, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_27) == 0x000538, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_28) == 0x000539, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_29) == 0x00053A, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_30) == 0x00053B, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_31) == 0x00053C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_32) == 0x00053D, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_33) == 0x00053E, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_34) == 0x00053F, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_35) == 0x000540, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_36) == 0x000541, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_37) == 0x000542, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_38) == 0x000543, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_39) == 0x000544, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_40) == 0x000545, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_41) == 0x000546, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_42) == 0x000547, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_43) == 0x000548, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_44) == 0x000549, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_45) == 0x00054A, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_46) == 0x00054B, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_47) == 0x00054C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_48) == 0x00054D, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_49) == 0x00054E, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_50) == 0x00054F, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_51) == 0x000550, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_52) == 0x000551, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_53) == 0x000552, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_CustomEvent_Key_Selected) == 0x000558, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_CustomEvent_Key_Selected' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_54) == 0x000578, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_CurrentOffset) == 0x00057C, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_CurrentOffset' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_22) == 0x000580, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_22' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_55) == 0x0005A0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_21) == 0x0005A8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_21' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_56) == 0x0005C8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_20) == 0x0005D0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_20' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_57) == 0x0005F0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_58) == 0x0005F1, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_19) == 0x0005F8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_19' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_59) == 0x000618, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_18) == 0x000620, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_18' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_60) == 0x000640, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_17) == 0x000648, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_17' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_16) == 0x000668, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_16' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_15) == 0x000688, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_15' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_61) == 0x0006A8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_62) == 0x0006A9, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_63) == 0x0006AA, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_64) == 0x0006AB, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_14) == 0x0006B0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_14' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_65) == 0x0006D0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_66) == 0x0006D1, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_13) == 0x0006D8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_13' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_67) == 0x0006F8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_12) == 0x000700, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_12' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_68) == 0x000720, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_11) == 0x000728, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_11' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_69) == 0x000748, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_70) == 0x000749, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_10) == 0x000750, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_10' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_9) == 0x000770, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_9' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_71) == 0x000790, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_72) == 0x000791, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_8) == 0x000798, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_8' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_73) == 0x0007B8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_7) == 0x0007C0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_7' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_74) == 0x0007E0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_6) == 0x0007E8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_6' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_75) == 0x000808, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_76) == 0x000809, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_5) == 0x000810, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_5' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_77) == 0x000830, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_4) == 0x000838, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_4' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_78) == 0x000858, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_bChecked) == 0x000859, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_bChecked' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_3) == 0x000860, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_79) == 0x000880, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_2) == 0x000888, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey_1) == 0x0008A8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_80) == 0x0008C8, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_80' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_81) == 0x0008C9, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_81' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_82) == 0x0008CA, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_82' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, K2Node_ComponentBoundEvent_SelectedKey) == 0x0008D0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options, CallFunc_IsValid_ReturnValue_83) == 0x0008F0, "Member 'WBP_OptionMenu_Options_C_ExecuteUbergraph_WBP_OptionMenu_Options::CallFunc_IsValid_ReturnValue_83' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__ChatHistory_IKS_K2Node_ComponentBoundEvent_136_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__VoteNo_IKS_K2Node_ComponentBoundEvent_134_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__VoteYes_IKS_K2Node_ComponentBoundEvent_132_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Console_IKS_K2Node_ComponentBoundEvent_130_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SwitchFireModeOnReselectOption_K2Node_ComponentBoundEvent_129_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__CycleWeaponSights_IKS_K2Node_ComponentBoundEvent_127_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__PointAimToggle_IKS_K2Node_ComponentBoundEvent_125_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SwitchFireMode_IKS_K2Node_ComponentBoundEvent_123_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SprintToggle_IKS_K2Node_ComponentBoundEvent_121_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__AimDownSightsToggle_IKS_K2Node_ComponentBoundEvent_119_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__LeanRightToggle_IKS_K2Node_ComponentBoundEvent_117_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__LeanLeftToggle_IKS_K2Node_ComponentBoundEvent_115_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__CrouchToggle_IKS_K2Node_ComponentBoundEvent_113_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Vault_IKS_K2Node_ComponentBoundEvent_111_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__JumpVault_IKS_K2Node_ComponentBoundEvent_109_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__RadialMenu_IKS_K2Node_ComponentBoundEvent_107_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SaySquad_IKS_K2Node_ComponentBoundEvent_105_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__PushToTalkCommand_IKS_K2Node_ComponentBoundEvent_103_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__PushToTalkSquad_IKS_K2Node_ComponentBoundEvent_101_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Prone_IKS_K2Node_ComponentBoundEvent_99_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__LeanRight_IKS_K2Node_ComponentBoundEvent_98_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__LeanLeft_IKS_K2Node_ComponentBoundEvent_97_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot9_IKS_K2Node_ComponentBoundEvent_93_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot0_IKS_K2Node_ComponentBoundEvent_91_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature final
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature, CurrentOffset) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__KeyRemappingSBox_K2Node_ComponentBoundEvent_90_OnUserScrolledEvent__DelegateSignature::CurrentOffset' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.OnIKSMenuKeySelected
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_OnIKSMenuKeySelected final
{
public:
	struct FInputChord                            Key_Selected;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_OnIKSMenuKeySelected) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_OnIKSMenuKeySelected");
static_assert(sizeof(WBP_OptionMenu_Options_C_OnIKSMenuKeySelected) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_OnIKSMenuKeySelected");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnIKSMenuKeySelected, Key_Selected) == 0x000000, "Member 'WBP_OptionMenu_Options_C_OnIKSMenuKeySelected::Key_Selected' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__CameraToggle_IKS_K2Node_ComponentBoundEvent_62_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__DeployMenu_IKS_K2Node_ComponentBoundEvent_61_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Scoreboard_IKS_K2Node_ComponentBoundEvent_60_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Use_IKS_K2Node_ComponentBoundEvent_59_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SayTeam_IKS_K2Node_ComponentBoundEvent_58_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SayAll_IKS_K2Node_ComponentBoundEvent_57_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__PushToTalk_IKS_K2Node_ComponentBoundEvent_56_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot8_IKS_K2Node_ComponentBoundEvent_55_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot7_IKS_K2Node_ComponentBoundEvent_54_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot6_IKS_K2Node_ComponentBoundEvent_53_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot5_IKS_K2Node_ComponentBoundEvent_52_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot4_IKS_K2Node_ComponentBoundEvent_51_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot3_IKS_K2Node_ComponentBoundEvent_50_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot2_IKS_K2Node_ComponentBoundEvent_49_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__WeaponSlot1_IKS_K2Node_ComponentBoundEvent_48_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__PreviousWeapon_IKS_K2Node_ComponentBoundEvent_47_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__NextWeapon_IKS_K2Node_ComponentBoundEvent_46_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__AimDownSights_IKS_K2Node_ComponentBoundEvent_45_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Reload_IKS_K2Node_ComponentBoundEvent_44_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Fire_IKS_K2Node_ComponentBoundEvent_43_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Jump_IKS_K2Node_ComponentBoundEvent_42_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Crouch_IKS_K2Node_ComponentBoundEvent_41_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__Sprint_IKS_K2Node_ComponentBoundEvent_40_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MoveRight_IKS_K2Node_ComponentBoundEvent_39_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MoveLeft_IKS_K2Node_ComponentBoundEvent_38_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MoveBackward_IKS_K2Node_ComponentBoundEvent_37_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MoveForward_IKS_K2Node_ComponentBoundEvent_36_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MotionBlurOption_K2Node_ComponentBoundEvent_35_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__AllowSoundInBgOption_K2Node_ComponentBoundEvent_34_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__ShadingOption_K2Node_ComponentBoundEvent_33_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__VOIPVolOption_K2Node_ComponentBoundEvent_32_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__VOVolOption_K2Node_ComponentBoundEvent_31_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MusicVolOption_K2Node_ComponentBoundEvent_30_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SFXVolOption_K2Node_ComponentBoundEvent_29_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__MasterVolOption_K2Node_ComponentBoundEvent_5_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__HeadphoneModeOption_K2Node_ComponentBoundEvent_28_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__AudioQualityOption_K2Node_ComponentBoundEvent_27_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__FOVOption_K2Node_ComponentBoundEvent_26_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__DisplayGammaOption_K2Node_ComponentBoundEvent_25_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SmoothMouseOption_K2Node_ComponentBoundEvent_24_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__InvertMousePitchOption_K2Node_ComponentBoundEvent_23_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__GlobalMouseSensitivityOption_K2Node_ComponentBoundEvent_22_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__FrameRateLimitOption_K2Node_ComponentBoundEvent_19_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__SmoothFrameRateOption_K2Node_ComponentBoundEvent_20_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__ResolutionScaleOption_K2Node_ComponentBoundEvent_4_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.OnToggleMenuToggleStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged final
{
public:
	bool                                          bToggledOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged");
static_assert(sizeof(WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged, bToggledOn) == 0x000000, "Member 'WBP_OptionMenu_Options_C_OnToggleMenuToggleStateChanged::bToggledOn' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.OnSliderMenuValueChanged
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_OnSliderMenuValueChanged final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_OnSliderMenuValueChanged) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_OnSliderMenuValueChanged");
static_assert(sizeof(WBP_OptionMenu_Options_C_OnSliderMenuValueChanged) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_OnSliderMenuValueChanged");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnSliderMenuValueChanged, Value) == 0x000000, "Member 'WBP_OptionMenu_Options_C_OnSliderMenuValueChanged::Value' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.SetActiveSubMenuByIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex final
{
public:
	int32                                         SubMenuIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex");
static_assert(sizeof(WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex, SubMenuIndex) == 0x000000, "Member 'WBP_OptionMenu_Options_C_SetActiveSubMenuByIndex::SubMenuIndex' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.OnCheckboxMenuCheckStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged");
static_assert(sizeof(WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_OnCheckboxMenuCheckStateChanged::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.OnArrowMenuSelectionChangedUser
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser");
static_assert(sizeof(WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_OnArrowMenuSelectionChangedUser::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__FoliageOption_K2Node_ComponentBoundEvent_18_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__EffectsOption_K2Node_ComponentBoundEvent_17_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__TextureOption_K2Node_ComponentBoundEvent_16_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__ShadowOption_K2Node_ComponentBoundEvent_15_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__PPOption_K2Node_ComponentBoundEvent_14_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__AAOption_K2Node_ComponentBoundEvent_13_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__ViewDistanceOption_K2Node_ComponentBoundEvent_12_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__OverallQualityOption_K2Node_ComponentBoundEvent_11_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature final
{
public:
	bool                                          bChecked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature, bChecked) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__VerticalSyncOption_K2Node_ComponentBoundEvent_10_CheckStateChangedBool__DelegateSignature::bChecked' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_PreConstruct");
static_assert(sizeof(WBP_OptionMenu_Options_C_PreConstruct) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_PreConstruct");
static_assert(offsetof(WBP_OptionMenu_Options_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_OptionMenu_Options_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__ScreenResolutionOption_K2Node_ComponentBoundEvent_7_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature final
{
public:
	class FString                                 SelectedItemValue;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature");
static_assert(sizeof(WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature");
static_assert(offsetof(WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature, SelectedItemValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BndEvt__DisplayModeOption_K2Node_ComponentBoundEvent_6_OnSelectionChangedByUser__DelegateSignature::SelectedItemValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.SetMenuIndex
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_SetMenuIndex final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_SetMenuIndex) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_SetMenuIndex");
static_assert(sizeof(WBP_OptionMenu_Options_C_SetMenuIndex) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_SetMenuIndex");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetMenuIndex, NewIndex) == 0x000000, "Member 'WBP_OptionMenu_Options_C_SetMenuIndex::NewIndex' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetMenuIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_SetMenuIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetMenuIndex, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_SetMenuIndex::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetMenuIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_SetMenuIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetMenuIndex, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'WBP_OptionMenu_Options_C_SetMenuIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetMenuIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000E, "Member 'WBP_OptionMenu_Options_C_SetMenuIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.OnNavOptionSelected
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_OnNavOptionSelected final
{
public:
	class UWBP_TextButton_C*                      NavBtn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_OnNavOptionSelected) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_OnNavOptionSelected");
static_assert(sizeof(WBP_OptionMenu_Options_C_OnNavOptionSelected) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_OnNavOptionSelected");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnNavOptionSelected, NavBtn) == 0x000000, "Member 'WBP_OptionMenu_Options_C_OnNavOptionSelected::NavBtn' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnNavOptionSelected, CallFunc_GetChildIndex_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_OnNavOptionSelected::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_OnNavOptionSelected, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_OnNavOptionSelected::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RefreshAllOptionUI
// 0x0002 (0x0002 - 0x0000)
struct WBP_OptionMenu_Options_C_RefreshAllOptionUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDirty_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RefreshAllOptionUI) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_RefreshAllOptionUI");
static_assert(sizeof(WBP_OptionMenu_Options_C_RefreshAllOptionUI) == 0x000002, "Wrong size on WBP_OptionMenu_Options_C_RefreshAllOptionUI");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAllOptionUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RefreshAllOptionUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAllOptionUI, CallFunc_IsDirty_ReturnValue) == 0x000001, "Member 'WBP_OptionMenu_Options_C_RefreshAllOptionUI::CallFunc_IsDirty_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RefreshGameplayOptionUI
// 0x0008 (0x0008 - 0x0000)
struct WBP_OptionMenu_Options_C_RefreshGameplayOptionUI final
{
public:
	bool                                          CallFunc_IsSmoothMouseEnabled_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInvertMousePitch_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSwitchFireModeOnReselect_ReturnValue;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseSensitivityX_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RefreshGameplayOptionUI) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_RefreshGameplayOptionUI");
static_assert(sizeof(WBP_OptionMenu_Options_C_RefreshGameplayOptionUI) == 0x000008, "Wrong size on WBP_OptionMenu_Options_C_RefreshGameplayOptionUI");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshGameplayOptionUI, CallFunc_IsSmoothMouseEnabled_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RefreshGameplayOptionUI::CallFunc_IsSmoothMouseEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshGameplayOptionUI, CallFunc_GetInvertMousePitch_ReturnValue) == 0x000001, "Member 'WBP_OptionMenu_Options_C_RefreshGameplayOptionUI::CallFunc_GetInvertMousePitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshGameplayOptionUI, CallFunc_GetSwitchFireModeOnReselect_ReturnValue) == 0x000002, "Member 'WBP_OptionMenu_Options_C_RefreshGameplayOptionUI::CallFunc_GetSwitchFireModeOnReselect_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshGameplayOptionUI, CallFunc_GetMouseSensitivityX_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_RefreshGameplayOptionUI::CallFunc_GetMouseSensitivityX_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.IsDirty
// 0x0004 (0x0004 - 0x0000)
struct WBP_OptionMenu_Options_C_IsDirty final
{
public:
	bool                                          bDirty_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDirty_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_IsDirty) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_IsDirty");
static_assert(sizeof(WBP_OptionMenu_Options_C_IsDirty) == 0x000004, "Wrong size on WBP_OptionMenu_Options_C_IsDirty");
static_assert(offsetof(WBP_OptionMenu_Options_C_IsDirty, bDirty_0) == 0x000000, "Member 'WBP_OptionMenu_Options_C_IsDirty::bDirty_0' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_IsDirty, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_OptionMenu_Options_C_IsDirty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_IsDirty, CallFunc_IsDirty_ReturnValue) == 0x000002, "Member 'WBP_OptionMenu_Options_C_IsDirty::CallFunc_IsDirty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_IsDirty, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WBP_OptionMenu_Options_C_IsDirty::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RefreshVideoOptionUI
// 0x0120 (0x0120 - 0x0000)
struct WBP_OptionMenu_Options_C_RefreshVideoOptionUI final
{
public:
	float                                         CallFunc_GetFieldOfView_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDisplayGamma_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFrameRateLimit_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSmoothFrameRateEnabled_ReturnValue;     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMotionBlurEnabled_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVSyncEnabled_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindOptionValueIndex_Index;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_RefreshVideoOptionUI");
static_assert(sizeof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI) == 0x000120, "Wrong size on WBP_OptionMenu_Options_C_RefreshVideoOptionUI");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_GetFieldOfView_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_GetFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_GetDisplayGamma_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_GetDisplayGamma_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_GetFrameRateLimit_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_GetFrameRateLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_IsSmoothFrameRateEnabled_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_IsSmoothFrameRateEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_IsMotionBlurEnabled_ReturnValue) == 0x00000D, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_IsMotionBlurEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_IsVSyncEnabled_ReturnValue) == 0x00000E, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_IsVSyncEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_GetScreenResolution_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000038, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, K2Node_MakeArray_Array) == 0x0000D0, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_GetFullscreenMode_ReturnValue) == 0x0000E0, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000100, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshVideoOptionUI, CallFunc_FindOptionValueIndex_Index) == 0x000118, "Member 'WBP_OptionMenu_Options_C_RefreshVideoOptionUI::CallFunc_FindOptionValueIndex_Index' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.PopulateScreenResolutionOption
// 0x0160 (0x0160 - 0x0000)
struct WBP_OptionMenu_Options_C_PopulateScreenResolutionOption final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_GetSupportedFullscreenResolutions_Resolutions; // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSupportedFullscreenResolutions_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0120(0x0018)()
	struct FFOptionItemSelection                  K2Node_MakeStruct_FOptionItemSelection;            // 0x0138(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_PopulateScreenResolutionOption");
static_assert(sizeof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption) == 0x000160, "Wrong size on WBP_OptionMenu_Options_C_PopulateScreenResolutionOption");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_GetSupportedFullscreenResolutions_Resolutions) == 0x000010, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_GetSupportedFullscreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_GetSupportedFullscreenResolutions_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_GetSupportedFullscreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Array_Get_Item) == 0x00002C, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000050, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, CallFunc_Conv_StringToText_ReturnValue) == 0x000120, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateScreenResolutionOption, K2Node_MakeStruct_FOptionItemSelection) == 0x000138, "Member 'WBP_OptionMenu_Options_C_PopulateScreenResolutionOption::K2Node_MakeStruct_FOptionItemSelection' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.SetScreenResolutionSetting
// 0x0048 (0x0048 - 0x0000)
struct WBP_OptionMenu_Options_C_SetScreenResolutionSetting final
{
public:
	class FString                                 ScreenResolution;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_SetScreenResolutionSetting");
static_assert(sizeof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting) == 0x000048, "Wrong size on WBP_OptionMenu_Options_C_SetScreenResolutionSetting");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, ScreenResolution) == 0x000000, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::ScreenResolution' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, CallFunc_Split_LeftS) == 0x000010, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, CallFunc_Split_RightS) == 0x000020, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, CallFunc_Split_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, CallFunc_Conv_StringToInt_ReturnValue) == 0x000034, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x00003C, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetScreenResolutionSetting, K2Node_MakeStruct_IntPoint) == 0x000040, "Member 'WBP_OptionMenu_Options_C_SetScreenResolutionSetting::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RefreshOverallQualityOption
// 0x0014 (0x0014 - 0x0000)
struct WBP_OptionMenu_Options_C_RefreshOverallQualityOption final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOverallScalabilityLevel_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_RefreshOverallQualityOption");
static_assert(sizeof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption) == 0x000014, "Wrong size on WBP_OptionMenu_Options_C_RefreshOverallQualityOption");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption, Temp_int_Variable) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RefreshOverallQualityOption::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_RefreshOverallQualityOption::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption, CallFunc_GetOverallScalabilityLevel_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_RefreshOverallQualityOption::CallFunc_GetOverallScalabilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_RefreshOverallQualityOption::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption, Temp_bool_Variable) == 0x00000D, "Member 'WBP_OptionMenu_Options_C_RefreshOverallQualityOption::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshOverallQualityOption, K2Node_Select_Default) == 0x000010, "Member 'WBP_OptionMenu_Options_C_RefreshOverallQualityOption::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RefreshQualityOptions
// 0x0034 (0x0034 - 0x0000)
struct WBP_OptionMenu_Options_C_RefreshQualityOptions final
{
public:
	int32                                         CallFunc_GetShadingQuality_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFoliageQuality_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextureQuality_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPostProcessingQuality_ReturnValue;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAntiAliasingQuality_ReturnValue;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewDistanceQuality_ReturnValue;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RefreshQualityOptions) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_RefreshQualityOptions");
static_assert(sizeof(WBP_OptionMenu_Options_C_RefreshQualityOptions) == 0x000034, "Wrong size on WBP_OptionMenu_Options_C_RefreshQualityOptions");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetShadingQuality_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetShadingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x000004, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetFoliageQuality_ReturnValue) == 0x000014, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetFoliageQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000018, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetTextureQuality_ReturnValue) == 0x00001C, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetTextureQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetShadowQuality_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetPostProcessingQuality_ReturnValue) == 0x000024, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetPostProcessingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetAntiAliasingQuality_ReturnValue) == 0x000028, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetAntiAliasingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_GetViewDistanceQuality_ReturnValue) == 0x00002C, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_GetViewDistanceQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshQualityOptions, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_OptionMenu_Options_C_RefreshQualityOptions::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RegisterClickEventsForContainer
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_OptionMenu_Options_C_RegisterClickEventsForContainer final
{
public:
	class UPanelWidget*                           Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bToggledOn)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bChecked)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& SelectedItemValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_OptionsMenuItem_Toggle_C*          K2Node_DynamicCast_AsWBP_Options_Menu_Item_Toggle; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_OptionsMenuItem_Slider_C*          K2Node_DynamicCast_AsWBP_Options_Menu_Item_Slider; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_OptionsMenuItem_Checkbox_C*        K2Node_DynamicCast_AsWBP_Options_Menu_Item_Checkbox; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_OptionsMenuItem_Arrow_C*           K2Node_DynamicCast_AsWBP_Options_Menu_Item_Arrow;  // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_RegisterClickEventsForContainer");
static_assert(sizeof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer) == 0x0000A0, "Wrong size on WBP_OptionMenu_Options_C_RegisterClickEventsForContainer");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, Container) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::Container' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, CallFunc_GetChildrenCount_ReturnValue) == 0x000018, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, CallFunc_HasAnyChildren_ReturnValue) == 0x00001C, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, Temp_int_Variable) == 0x000054, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, CallFunc_GetChildAt_ReturnValue) == 0x000058, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_AsWBP_Options_Menu_Item_Toggle) == 0x000060, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_AsWBP_Options_Menu_Item_Toggle' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_AsWBP_Options_Menu_Item_Slider) == 0x000070, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_AsWBP_Options_Menu_Item_Slider' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_AsWBP_Options_Menu_Item_Checkbox) == 0x000080, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_AsWBP_Options_Menu_Item_Checkbox' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_AsWBP_Options_Menu_Item_Arrow) == 0x000090, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_AsWBP_Options_Menu_Item_Arrow' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000099, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RegisterClickEventsForContainer, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_OptionMenu_Options_C_RegisterClickEventsForContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.UpdateUnsavedStatus
// 0x0006 (0x0006 - 0x0000)
struct WBP_OptionMenu_Options_C_UpdateUnsavedStatus final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirty_bDirty;                           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDirty_bDirty_1;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_UpdateUnsavedStatus");
static_assert(sizeof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus) == 0x000006, "Wrong size on WBP_OptionMenu_Options_C_UpdateUnsavedStatus");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus, Temp_bool_Variable) == 0x000000, "Member 'WBP_OptionMenu_Options_C_UpdateUnsavedStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus, Temp_byte_Variable) == 0x000001, "Member 'WBP_OptionMenu_Options_C_UpdateUnsavedStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_OptionMenu_Options_C_UpdateUnsavedStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus, CallFunc_IsDirty_bDirty) == 0x000003, "Member 'WBP_OptionMenu_Options_C_UpdateUnsavedStatus::CallFunc_IsDirty_bDirty' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus, CallFunc_IsDirty_bDirty_1) == 0x000004, "Member 'WBP_OptionMenu_Options_C_UpdateUnsavedStatus::CallFunc_IsDirty_bDirty_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateUnsavedStatus, K2Node_Select_Default) == 0x000005, "Member 'WBP_OptionMenu_Options_C_UpdateUnsavedStatus::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.SetResolutionScaleBounds
// 0x0014 (0x0014 - 0x0000)
struct WBP_OptionMenu_Options_C_SetResolutionScaleBounds final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_SetResolutionScaleBounds");
static_assert(sizeof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds) == 0x000014, "Wrong size on WBP_OptionMenu_Options_C_SetResolutionScaleBounds");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_SetResolutionScaleBounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x000004, "Member 'WBP_OptionMenu_Options_C_SetResolutionScaleBounds::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_SetResolutionScaleBounds::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_SetResolutionScaleBounds::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetResolutionScaleBounds, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_SetResolutionScaleBounds::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.UpdateScreenResolutionState
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_OptionMenu_Options_C_UpdateScreenResolutionState final
{
public:
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetDesktopResolution_ReturnValue;         // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_UpdateScreenResolutionState");
static_assert(sizeof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState) == 0x0000F8, "Wrong size on WBP_OptionMenu_Options_C_UpdateScreenResolutionState");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_GetFullscreenMode_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_GetDesktopResolution_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_GetDesktopResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, K2Node_MakeArray_Array) == 0x0000C0, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_UpdateScreenResolutionState, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'WBP_OptionMenu_Options_C_UpdateScreenResolutionState::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.RefreshAudioOptionUI
// 0x0024 (0x0024 - 0x0000)
struct WBP_OptionMenu_Options_C_RefreshAudioOptionUI final
{
public:
	bool                                          CallFunc_IsSoundInBackgroundAllowed_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVoiceVolumeLevel_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialogueVolumeLevel_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMusicVolumeLevel_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSoundEffectsVolumeLevel_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMasterVolumeLevel_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadphoneModeEnabled_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAudioQualityLevel_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_RefreshAudioOptionUI");
static_assert(sizeof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI) == 0x000024, "Wrong size on WBP_OptionMenu_Options_C_RefreshAudioOptionUI");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_IsSoundInBackgroundAllowed_ReturnValue) == 0x000000, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_IsSoundInBackgroundAllowed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_GetVoiceVolumeLevel_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_GetVoiceVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_GetDialogueVolumeLevel_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_GetDialogueVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_GetMusicVolumeLevel_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_GetMusicVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_GetSoundEffectsVolumeLevel_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_GetSoundEffectsVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_GetMasterVolumeLevel_ReturnValue) == 0x000014, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_GetMasterVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_IsHeadphoneModeEnabled_ReturnValue) == 0x000018, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_IsHeadphoneModeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_GetAudioQualityLevel_ReturnValue) == 0x00001C, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_GetAudioQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_RefreshAudioOptionUI, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_Options_C_RefreshAudioOptionUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BalanceVolumeLevels
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_BalanceVolumeLevels final
{
public:
	bool                                          bRefreshAudioUI;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BalanceVolumeLevels) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_BalanceVolumeLevels");
static_assert(sizeof(WBP_OptionMenu_Options_C_BalanceVolumeLevels) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_BalanceVolumeLevels");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceVolumeLevels, bRefreshAudioUI) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BalanceVolumeLevels::bRefreshAudioUI' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BalanceMasterVolumeLevel
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel final
{
public:
	bool                                          bRefreshAudioUI;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSecondaryVolumeLevel_MaxVolLvl;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMasterVolumeLevel_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel");
static_assert(sizeof(WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel, bRefreshAudioUI) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel::bRefreshAudioUI' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel, CallFunc_GetMaxSecondaryVolumeLevel_MaxVolLvl) == 0x000004, "Member 'WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel::CallFunc_GetMaxSecondaryVolumeLevel_MaxVolLvl' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel, CallFunc_GetMasterVolumeLevel_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel::CallFunc_GetMasterVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_BalanceMasterVolumeLevel::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.BalanceSecondaryVolumeLevels
// 0x0024 (0x0024 - 0x0000)
struct WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels final
{
public:
	bool                                          bMatchMasterVolLvl;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRefreshAudioUI;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVoiceVolumeLevel_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialogueVolumeLevel_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMusicVolumeLevel_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_2; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSoundEffectsVolumeLevel_ReturnValue;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_3; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels");
static_assert(sizeof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels) == 0x000024, "Wrong size on WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, bMatchMasterVolLvl) == 0x000000, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::bMatchMasterVolLvl' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, bRefreshAudioUI) == 0x000001, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::bRefreshAudioUI' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetVoiceVolumeLevel_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetVoiceVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetDialogueVolumeLevel_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetDialogueVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetMusicVolumeLevel_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetMusicVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_1) == 0x000014, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_2) == 0x000018, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_2' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetSoundEffectsVolumeLevel_ReturnValue) == 0x00001C, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetSoundEffectsVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels, CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_3) == 0x000020, "Member 'WBP_OptionMenu_Options_C_BalanceSecondaryVolumeLevels::CallFunc_GetBalancedSecondaryVolumeLevel_VolLevelBalanced_3' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.GetBalancedSecondaryVolumeLevel
// 0x001C (0x001C - 0x0000)
struct WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel final
{
public:
	float                                         VolumeLevelToBalance;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatchMasterVolLvl;                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VolLevelBalanced;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMasterVolumeLevel_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel");
static_assert(sizeof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel) == 0x00001C, "Wrong size on WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, VolumeLevelToBalance) == 0x000000, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::VolumeLevelToBalance' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, bMatchMasterVolLvl) == 0x000004, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::bMatchMasterVolLvl' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, VolLevelBalanced) == 0x000008, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::VolLevelBalanced' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, Temp_bool_Variable) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, CallFunc_GetMasterVolumeLevel_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::CallFunc_GetMasterVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel, K2Node_Select_Default) == 0x000018, "Member 'WBP_OptionMenu_Options_C_GetBalancedSecondaryVolumeLevel::K2Node_Select_Default' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.GetMaxSecondaryVolumeLevel
// 0x0020 (0x0020 - 0x0000)
struct WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel final
{
public:
	float                                         MaxVolLvl;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSoundEffectsVolumeLevel_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVoiceVolumeLevel_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialogueVolumeLevel_ReturnValue;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMusicVolumeLevel_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel) == 0x000004, "Wrong alignment on WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel");
static_assert(sizeof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel) == 0x000020, "Wrong size on WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, MaxVolLvl) == 0x000000, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::MaxVolLvl' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_GetSoundEffectsVolumeLevel_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_GetSoundEffectsVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_GetVoiceVolumeLevel_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_GetVoiceVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_GetDialogueVolumeLevel_ReturnValue) == 0x00000C, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_GetDialogueVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_GetMusicVolumeLevel_ReturnValue) == 0x000010, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_GetMusicVolumeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_FMax_ReturnValue) == 0x000014, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_FMax_ReturnValue_1) == 0x000018, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel, CallFunc_FMax_ReturnValue_2) == 0x00001C, "Member 'WBP_OptionMenu_Options_C_GetMaxSecondaryVolumeLevel::CallFunc_FMax_ReturnValue_2' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.PopulateAllKeyBindings
// 0x04C0 (0x04C0 - 0x0000)
struct WBP_OptionMenu_Options_C_PopulateAllKeyBindings final
{
public:
	class UTBGameUserSettings*                    Settings;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetChatHistoryKeyBinding_ReturnValue;     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetVoteNoKeyBinding_ReturnValue;          // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetVoteYesKeyBinding_ReturnValue;         // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetConsoleKeyBinding_ReturnValue;         // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetCycleWeaponSightsKeyBinding_ReturnValue; // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetPointAimToggleKeyBinding_ReturnValue;  // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSwitchFireModeKeyBinding_ReturnValue;  // 0x0098(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetLeanRightKeyToggleBinding_ReturnValue; // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetLeanLeftToggleKeyBinding_ReturnValue;  // 0x00C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSprintToggleKeyBinding_ReturnValue;    // 0x00E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetAimDownSightsToggleKeyBinding_ReturnValue; // 0x00F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetCrouchToggleKeyBinding_ReturnValue;    // 0x0110(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetVaultKeyBinding_ReturnValue;           // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetJumpVaultKeyBinding_ReturnValue;       // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetRadialMenuKeyBinding_ReturnValue;      // 0x0158(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSaySquadKeyBinding_ReturnValue;        // 0x0170(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetPushToTalkCommandKeyBinding_ReturnValue; // 0x0188(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetPushToTalkSquadKeyBinding_ReturnValue; // 0x01A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetProneKeyBinding_ReturnValue;           // 0x01B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetLeanRightKeyBinding_ReturnValue;       // 0x01D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetLeanLeftKeyBinding_ReturnValue;        // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot0KeyBinding_ReturnValue;     // 0x0200(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot9KeyBinding_ReturnValue;     // 0x0218(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetCameraToggleKeyBinding_ReturnValue;    // 0x0230(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetDeployMenuKeyBinding_ReturnValue;      // 0x0248(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSayTeamKeyBinding_ReturnValue;         // 0x0260(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetShowScoreboardKeyBinding_ReturnValue;  // 0x0278(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSayAllKeyBinding_ReturnValue;          // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetUseKeyBinding_ReturnValue;             // 0x02A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetPushToTalkLocalKeyBinding_ReturnValue; // 0x02C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetWeaponSlot3KeyBinding_ReturnValue;     // 0x02E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot4KeyBinding_ReturnValue;     // 0x02F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot5KeyBinding_ReturnValue;     // 0x0310(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot6KeyBinding_ReturnValue;     // 0x0328(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot7KeyBinding_ReturnValue;     // 0x0340(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot8KeyBinding_ReturnValue;     // 0x0358(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetFireKeyBinding_ReturnValue;            // 0x0370(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot2KeyBinding_ReturnValue;     // 0x0388(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetWeaponSlot1KeyBinding_ReturnValue;     // 0x03A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetPreviousItemKeyBinding_ReturnValue;    // 0x03B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetNextItemKeyBinding_ReturnValue;        // 0x03D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetAimDownSightsKeyBinding_ReturnValue;   // 0x03E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetReloadKeyBinding_ReturnValue;          // 0x0400(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetJumpKeyBinding_ReturnValue;            // 0x0418(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetCrouchKeyBinding_ReturnValue;          // 0x0430(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetSprintKeyBinding_ReturnValue;          // 0x0448(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetMoveRightKeyBinding_ReturnValue;       // 0x0460(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetMoveLeftKeyBinding_ReturnValue;        // 0x0478(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetMoveBackwardKeyBinding_ReturnValue;    // 0x0490(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetMoveForwardKeyBinding_ReturnValue;     // 0x04A8(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_PopulateAllKeyBindings");
static_assert(sizeof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings) == 0x0004C0, "Wrong size on WBP_OptionMenu_Options_C_PopulateAllKeyBindings");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, Settings) == 0x000000, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::Settings' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetChatHistoryKeyBinding_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetChatHistoryKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetVoteNoKeyBinding_ReturnValue) == 0x000020, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetVoteNoKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetVoteYesKeyBinding_ReturnValue) == 0x000038, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetVoteYesKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetConsoleKeyBinding_ReturnValue) == 0x000050, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetConsoleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetCycleWeaponSightsKeyBinding_ReturnValue) == 0x000068, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetCycleWeaponSightsKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetPointAimToggleKeyBinding_ReturnValue) == 0x000080, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetPointAimToggleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetSwitchFireModeKeyBinding_ReturnValue) == 0x000098, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetSwitchFireModeKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetLeanRightKeyToggleBinding_ReturnValue) == 0x0000B0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetLeanRightKeyToggleBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetLeanLeftToggleKeyBinding_ReturnValue) == 0x0000C8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetLeanLeftToggleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetSprintToggleKeyBinding_ReturnValue) == 0x0000E0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetSprintToggleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetAimDownSightsToggleKeyBinding_ReturnValue) == 0x0000F8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetAimDownSightsToggleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetCrouchToggleKeyBinding_ReturnValue) == 0x000110, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetCrouchToggleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetVaultKeyBinding_ReturnValue) == 0x000128, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetVaultKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetJumpVaultKeyBinding_ReturnValue) == 0x000140, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetJumpVaultKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetRadialMenuKeyBinding_ReturnValue) == 0x000158, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetRadialMenuKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetSaySquadKeyBinding_ReturnValue) == 0x000170, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetSaySquadKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetPushToTalkCommandKeyBinding_ReturnValue) == 0x000188, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetPushToTalkCommandKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetPushToTalkSquadKeyBinding_ReturnValue) == 0x0001A0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetPushToTalkSquadKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetProneKeyBinding_ReturnValue) == 0x0001B8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetProneKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetLeanRightKeyBinding_ReturnValue) == 0x0001D0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetLeanRightKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetLeanLeftKeyBinding_ReturnValue) == 0x0001E8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetLeanLeftKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot0KeyBinding_ReturnValue) == 0x000200, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot0KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot9KeyBinding_ReturnValue) == 0x000218, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot9KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetCameraToggleKeyBinding_ReturnValue) == 0x000230, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetCameraToggleKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetDeployMenuKeyBinding_ReturnValue) == 0x000248, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetDeployMenuKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetSayTeamKeyBinding_ReturnValue) == 0x000260, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetSayTeamKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetShowScoreboardKeyBinding_ReturnValue) == 0x000278, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetShowScoreboardKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetSayAllKeyBinding_ReturnValue) == 0x000290, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetSayAllKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetUseKeyBinding_ReturnValue) == 0x0002A8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetUseKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetPushToTalkLocalKeyBinding_ReturnValue) == 0x0002C0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetPushToTalkLocalKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_IsValid_ReturnValue) == 0x0002D8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot3KeyBinding_ReturnValue) == 0x0002E0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot3KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot4KeyBinding_ReturnValue) == 0x0002F8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot4KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot5KeyBinding_ReturnValue) == 0x000310, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot5KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot6KeyBinding_ReturnValue) == 0x000328, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot6KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot7KeyBinding_ReturnValue) == 0x000340, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot7KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot8KeyBinding_ReturnValue) == 0x000358, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot8KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetFireKeyBinding_ReturnValue) == 0x000370, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetFireKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot2KeyBinding_ReturnValue) == 0x000388, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot2KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetWeaponSlot1KeyBinding_ReturnValue) == 0x0003A0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetWeaponSlot1KeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetPreviousItemKeyBinding_ReturnValue) == 0x0003B8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetPreviousItemKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetNextItemKeyBinding_ReturnValue) == 0x0003D0, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetNextItemKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetAimDownSightsKeyBinding_ReturnValue) == 0x0003E8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetAimDownSightsKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetReloadKeyBinding_ReturnValue) == 0x000400, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetReloadKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetJumpKeyBinding_ReturnValue) == 0x000418, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetJumpKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetCrouchKeyBinding_ReturnValue) == 0x000430, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetCrouchKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetSprintKeyBinding_ReturnValue) == 0x000448, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetSprintKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetMoveRightKeyBinding_ReturnValue) == 0x000460, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetMoveRightKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetMoveLeftKeyBinding_ReturnValue) == 0x000478, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetMoveLeftKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetMoveBackwardKeyBinding_ReturnValue) == 0x000490, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetMoveBackwardKeyBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_PopulateAllKeyBindings, CallFunc_GetMoveForwardKeyBinding_ReturnValue) == 0x0004A8, "Member 'WBP_OptionMenu_Options_C_PopulateAllKeyBindings::CallFunc_GetMoveForwardKeyBinding_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.Update Key Binding
// 0x0050 (0x0050 - 0x0000)
struct WBP_OptionMenu_Options_C_Update_Key_Binding final
{
public:
	class UWBP_OptionsMenuItem_InputKeySelector_C* IKS;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            NewInputChord;                                     // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          PlayerChanging;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   New_Key;                                           // 0x0030(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerChangingKeyBindings_ReturnValue;  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_Update_Key_Binding) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_Update_Key_Binding");
static_assert(sizeof(WBP_OptionMenu_Options_C_Update_Key_Binding) == 0x000050, "Wrong size on WBP_OptionMenu_Options_C_Update_Key_Binding");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, IKS) == 0x000000, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::IKS' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, NewInputChord) == 0x000008, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::NewInputChord' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, PlayerChanging) == 0x000028, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::PlayerChanging' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, New_Key) == 0x000030, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::New_Key' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, CallFunc_IsPlayerChangingKeyBindings_ReturnValue) == 0x00004A, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::CallFunc_IsPlayerChangingKeyBindings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_Update_Key_Binding, CallFunc_IsValid_ReturnValue_2) == 0x00004B, "Member 'WBP_OptionMenu_Options_C_Update_Key_Binding::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.SetCurrentIKS
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_SetCurrentIKS final
{
public:
	class UWBP_OptionsMenuItem_InputKeySelector_C* IKS;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_SetCurrentIKS) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_SetCurrentIKS");
static_assert(sizeof(WBP_OptionMenu_Options_C_SetCurrentIKS) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_SetCurrentIKS");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetCurrentIKS, IKS) == 0x000000, "Member 'WBP_OptionMenu_Options_C_SetCurrentIKS::IKS' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_SetCurrentIKS, CallFunc_GetScrollOffset_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_SetCurrentIKS::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.CatchMouseWheelInput
// 0x0050 (0x0050 - 0x0000)
struct WBP_OptionMenu_Options_C_CatchMouseWheelInput final
{
public:
	float                                         NewScrollOffset;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0008(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerChangingKeyBindings_ReturnValue;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_CatchMouseWheelInput) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_CatchMouseWheelInput");
static_assert(sizeof(WBP_OptionMenu_Options_C_CatchMouseWheelInput) == 0x000050, "Wrong size on WBP_OptionMenu_Options_C_CatchMouseWheelInput");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, NewScrollOffset) == 0x000000, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::NewScrollOffset' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, K2Node_MakeStruct_InputChord) == 0x000008, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, K2Node_MakeStruct_InputChord_1) == 0x000028, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, CallFunc_IsPlayerChangingKeyBindings_ReturnValue) == 0x000049, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::CallFunc_IsPlayerChangingKeyBindings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_CatchMouseWheelInput, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004A, "Member 'WBP_OptionMenu_Options_C_CatchMouseWheelInput::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.StartSelectingKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_OptionMenu_Options_C_StartSelectingKey final
{
public:
	class UWBP_OptionsMenuItem_InputKeySelector_C* IKS;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_MouseInputCatcherOverlay_C*        CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectingKey_IsSelecting;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_StartSelectingKey) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_StartSelectingKey");
static_assert(sizeof(WBP_OptionMenu_Options_C_StartSelectingKey) == 0x000018, "Wrong size on WBP_OptionMenu_Options_C_StartSelectingKey");
static_assert(offsetof(WBP_OptionMenu_Options_C_StartSelectingKey, IKS) == 0x000000, "Member 'WBP_OptionMenu_Options_C_StartSelectingKey::IKS' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_StartSelectingKey, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_OptionMenu_Options_C_StartSelectingKey::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_StartSelectingKey, CallFunc_IsSelectingKey_IsSelecting) == 0x000010, "Member 'WBP_OptionMenu_Options_C_StartSelectingKey::CallFunc_IsSelectingKey_IsSelecting' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_StartSelectingKey, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_OptionMenu_Options_C_StartSelectingKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_StartSelectingKey, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'WBP_OptionMenu_Options_C_StartSelectingKey::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_OptionMenu_Options_C_StartSelectingKey, CallFunc_IsValid_ReturnValue_2) == 0x000013, "Member 'WBP_OptionMenu_Options_C_StartSelectingKey::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.GetSubMenuOptions
// 0x0010 (0x0010 - 0x0000)
struct WBP_OptionMenu_Options_C_GetSubMenuOptions final
{
public:
	TArray<struct FFSubMenuOption>                SubOptions;                                        // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_GetSubMenuOptions) == 0x000008, "Wrong alignment on WBP_OptionMenu_Options_C_GetSubMenuOptions");
static_assert(sizeof(WBP_OptionMenu_Options_C_GetSubMenuOptions) == 0x000010, "Wrong size on WBP_OptionMenu_Options_C_GetSubMenuOptions");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetSubMenuOptions, SubOptions) == 0x000000, "Member 'WBP_OptionMenu_Options_C_GetSubMenuOptions::SubOptions' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.HasSubMenus
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_HasSubMenus final
{
public:
	bool                                          bSubMenuOptions;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_OptionMenu_Options_C_HasSubMenus) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_HasSubMenus");
static_assert(sizeof(WBP_OptionMenu_Options_C_HasSubMenus) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_HasSubMenus");
static_assert(offsetof(WBP_OptionMenu_Options_C_HasSubMenus, bSubMenuOptions) == 0x000000, "Member 'WBP_OptionMenu_Options_C_HasSubMenus::bSubMenuOptions' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.GetDesiredHorizontalAlignment
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment final
{
public:
	EHorizontalAlignment                          Alignment;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment");
static_assert(sizeof(WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment, Alignment) == 0x000000, "Member 'WBP_OptionMenu_Options_C_GetDesiredHorizontalAlignment::Alignment' has a wrong offset!");

// Function WBP_OptionMenu_Options.WBP_OptionMenu_Options_C.GetDesiredVerticalAlignment
// 0x0001 (0x0001 - 0x0000)
struct WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment final
{
public:
	EVerticalAlignment                            Alignment;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment) == 0x000001, "Wrong alignment on WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment");
static_assert(sizeof(WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment) == 0x000001, "Wrong size on WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment");
static_assert(offsetof(WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment, Alignment) == 0x000000, "Member 'WBP_OptionMenu_Options_C_GetDesiredVerticalAlignment::Alignment' has a wrong offset!");

}


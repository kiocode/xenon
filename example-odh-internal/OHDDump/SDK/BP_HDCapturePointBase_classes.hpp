#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDCapturePointBase

#include "Basic.hpp"

#include "HDMain_structs.hpp"
#include "HDMain_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HDCapturePointBase.BP_HDCapturePointBase_C
// 0x0048 (0x0398 - 0x0350)
class ABP_HDCapturePointBase_C final : public AHDBaseCapturePoint
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       IconWidget;                                        // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebug;                                            // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDebugFlagClothLOD;                                // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bOnlyShowDebugIfActive;                            // 0x0362(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363[0x5];                                      // 0x0363(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFMinimap*                             Minimap;                                           // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowIconWidget;                                   // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCaptureStatusUpdated;                            // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AHDPlayerController*                    LocalPC;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationInvokerComponent*            NavInvoker;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCaptureStatusUpdated__DelegateSignature(class ABP_HDCapturePointBase_C* ControlPoint);
	void ExecuteUbergraph_BP_HDCapturePointBase(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveOnTeamCaptureStatusUpdated();
	void ReceiveBeginPlay();
	void ReceiveOnLocked(bool bNewLocked);
	void ReceiveOnActive(bool bNewActive);
	void OnCaptureUpdate(bool bContested_0, int32 Progress);
	void ReceiveOnCaptureProgress(bool bNewContested);
	void ReceiveOnOwningTeamUpdated(EHDTeam LastOwningTeam);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void UpdateFlagColor(EHDTeam InOwningTeam);
	void UpdateFlagIcon(EHDTeam InOwningTeam, class AHUD* InLocalPlayerHUD);
	void InitPOI(class UDFMinimap* Minimap_0);
	void UpdatePOIState();
	void RemovePOI();
	void AddPOI();
	void UpdateFlagClothLOD();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HDCapturePointBase_C">();
	}
	static class ABP_HDCapturePointBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HDCapturePointBase_C>();
	}
};
static_assert(alignof(ABP_HDCapturePointBase_C) == 0x000008, "Wrong alignment on ABP_HDCapturePointBase_C");
static_assert(sizeof(ABP_HDCapturePointBase_C) == 0x000398, "Wrong size on ABP_HDCapturePointBase_C");
static_assert(offsetof(ABP_HDCapturePointBase_C, UberGraphFrame) == 0x000350, "Member 'ABP_HDCapturePointBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, IconWidget) == 0x000358, "Member 'ABP_HDCapturePointBase_C::IconWidget' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, bDebug) == 0x000360, "Member 'ABP_HDCapturePointBase_C::bDebug' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, bDebugFlagClothLOD) == 0x000361, "Member 'ABP_HDCapturePointBase_C::bDebugFlagClothLOD' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, bOnlyShowDebugIfActive) == 0x000362, "Member 'ABP_HDCapturePointBase_C::bOnlyShowDebugIfActive' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, Minimap) == 0x000368, "Member 'ABP_HDCapturePointBase_C::Minimap' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, bShowIconWidget) == 0x000370, "Member 'ABP_HDCapturePointBase_C::bShowIconWidget' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, OnCaptureStatusUpdated) == 0x000378, "Member 'ABP_HDCapturePointBase_C::OnCaptureStatusUpdated' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, LocalPC) == 0x000388, "Member 'ABP_HDCapturePointBase_C::LocalPC' has a wrong offset!");
static_assert(offsetof(ABP_HDCapturePointBase_C, NavInvoker) == 0x000390, "Member 'ABP_HDCapturePointBase_C::NavInvoker' has a wrong offset!");

}


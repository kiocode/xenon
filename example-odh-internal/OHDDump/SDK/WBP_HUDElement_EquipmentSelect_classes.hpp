#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUDElement_EquipmentSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FEqpSlotData_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUDElement_EquipmentSelect.WBP_HUDElement_EquipmentSelect_C
// 0x0028 (0x0258 - 0x0230)
class UWBP_HUDElement_EquipmentSelect_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           SlotVBox;                                          // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotNum;                                    // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFEqpSlotData>                  SlotData;                                          // 0x0248(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_HUDElement_EquipmentSelect(int32 EntryPoint);
	void OnEquipmentListModified();
	void LoadEquipmentAsset(TSoftObjectPtr<class UTexture2D> IconToLoad, int32 SlotNum, class AHDBaseWeapon* EqpItem);
	void PreConstruct(bool IsDesignTime);
	void OnLoaded_B4ECD00040B15A8A41EE1DA4CE775D64(class UObject* Loaded);
	void SelectNextItem();
	void SelectPrevItem();
	void SelectItem(int32 NewSlotIndex);
	void AddEquipment(struct FHDItemEntry& EqpInfo, class AHDBaseWeapon* EqpItem);
	void RebuildEquipmentList();
	void RemoveEquipmentAtSlotNum(int32 SlotNum, bool* bRemoved);
	void ClearEquipmentList();
	void CreateAndAddEquipmentWidget(class UTexture2D* Icon, int32 SlotNum, bool bEnabled, class AHDBaseWeapon* EqpItem);
	void GetMinSlotIndex(TArray<struct FFEqpSlotData>& SlotDataArray, int32* MinSlotIndex);
	void GetSelectedItem(struct FFEqpSlotData* OutSlotData, bool* bFoundItem);
	void SelectItemBySlotNum(int32 SlotNum);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUDElement_EquipmentSelect_C">();
	}
	static class UWBP_HUDElement_EquipmentSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUDElement_EquipmentSelect_C>();
	}
};
static_assert(alignof(UWBP_HUDElement_EquipmentSelect_C) == 0x000008, "Wrong alignment on UWBP_HUDElement_EquipmentSelect_C");
static_assert(sizeof(UWBP_HUDElement_EquipmentSelect_C) == 0x000258, "Wrong size on UWBP_HUDElement_EquipmentSelect_C");
static_assert(offsetof(UWBP_HUDElement_EquipmentSelect_C, UberGraphFrame) == 0x000230, "Member 'UWBP_HUDElement_EquipmentSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUDElement_EquipmentSelect_C, SlotVBox) == 0x000238, "Member 'UWBP_HUDElement_EquipmentSelect_C::SlotVBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUDElement_EquipmentSelect_C, CurrentSlotIndex) == 0x000240, "Member 'UWBP_HUDElement_EquipmentSelect_C::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(UWBP_HUDElement_EquipmentSelect_C, CurrentSlotNum) == 0x000244, "Member 'UWBP_HUDElement_EquipmentSelect_C::CurrentSlotNum' has a wrong offset!");
static_assert(offsetof(UWBP_HUDElement_EquipmentSelect_C, SlotData) == 0x000248, "Member 'UWBP_HUDElement_EquipmentSelect_C::SlotData' has a wrong offset!");

}


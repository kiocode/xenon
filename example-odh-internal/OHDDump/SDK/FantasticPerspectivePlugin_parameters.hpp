#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FantasticPerspectivePlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FantasticPerspectivePlugin_structs.hpp"


namespace SDK::Params
{

// Function FantasticPerspectivePlugin.FantasticPerspectiveActor.Apply
// 0x0140 (0x0140 - 0x0000)
struct FantasticPerspectiveActor_Apply final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFantasticPerspectiveStereoscopicPass         StereoPass;                                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ViewOrigin;                                        // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0020(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0060(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x00A0(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x00B0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                OutProjectionMatrix;                               // 0x00F0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0xF];                                      // 0x0131(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FantasticPerspectiveActor_Apply) == 0x000010, "Wrong alignment on FantasticPerspectiveActor_Apply");
static_assert(sizeof(FantasticPerspectiveActor_Apply) == 0x000140, "Wrong size on FantasticPerspectiveActor_Apply");
static_assert(offsetof(FantasticPerspectiveActor_Apply, PlayerController) == 0x000000, "Member 'FantasticPerspectiveActor_Apply::PlayerController' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, StereoPass) == 0x000008, "Member 'FantasticPerspectiveActor_Apply::StereoPass' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, ViewOrigin) == 0x00000C, "Member 'FantasticPerspectiveActor_Apply::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, ViewRotationMatrix) == 0x000020, "Member 'FantasticPerspectiveActor_Apply::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, ProjectionMatrix) == 0x000060, "Member 'FantasticPerspectiveActor_Apply::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, OutViewOrigin) == 0x0000A0, "Member 'FantasticPerspectiveActor_Apply::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, OutViewRotationMatrix) == 0x0000B0, "Member 'FantasticPerspectiveActor_Apply::OutViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, OutProjectionMatrix) == 0x0000F0, "Member 'FantasticPerspectiveActor_Apply::OutProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveActor_Apply, ReturnValue) == 0x000130, "Member 'FantasticPerspectiveActor_Apply::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveComponent.Apply
// 0x0140 (0x0140 - 0x0000)
struct FantasticPerspectiveComponent_Apply final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFantasticPerspectiveStereoscopicPass         StereoPass;                                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ViewOrigin;                                        // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0020(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0060(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x00A0(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x00B0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                OutProjectionMatrix;                               // 0x00F0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0xF];                                      // 0x0131(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FantasticPerspectiveComponent_Apply) == 0x000010, "Wrong alignment on FantasticPerspectiveComponent_Apply");
static_assert(sizeof(FantasticPerspectiveComponent_Apply) == 0x000140, "Wrong size on FantasticPerspectiveComponent_Apply");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, PlayerController) == 0x000000, "Member 'FantasticPerspectiveComponent_Apply::PlayerController' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, StereoPass) == 0x000008, "Member 'FantasticPerspectiveComponent_Apply::StereoPass' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, ViewOrigin) == 0x00000C, "Member 'FantasticPerspectiveComponent_Apply::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, ViewRotationMatrix) == 0x000020, "Member 'FantasticPerspectiveComponent_Apply::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, ProjectionMatrix) == 0x000060, "Member 'FantasticPerspectiveComponent_Apply::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, OutViewOrigin) == 0x0000A0, "Member 'FantasticPerspectiveComponent_Apply::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, OutViewRotationMatrix) == 0x0000B0, "Member 'FantasticPerspectiveComponent_Apply::OutViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, OutProjectionMatrix) == 0x0000F0, "Member 'FantasticPerspectiveComponent_Apply::OutProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveComponent_Apply, ReturnValue) == 0x000130, "Member 'FantasticPerspectiveComponent_Apply::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ApplyFrustumEffects
// 0x0160 (0x0160 - 0x0000)
struct FantasticPerspectiveFunctions_ApplyFrustumEffects final
{
public:
	struct FFantasticPerspectiveFrustum           Frustum;                                           // 0x0000(0x0044)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x0044(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatrix                                ViewRotationMatrix;                                // 0x0050(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0090(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x00D0(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x00E0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                OutProjectionMatrix;                               // 0x0120(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ApplyFrustumEffects) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ApplyFrustumEffects");
static_assert(sizeof(FantasticPerspectiveFunctions_ApplyFrustumEffects) == 0x000160, "Wrong size on FantasticPerspectiveFunctions_ApplyFrustumEffects");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, Frustum) == 0x000000, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::Frustum' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, ViewOrigin) == 0x000044, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, ViewRotationMatrix) == 0x000050, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, ProjectionMatrix) == 0x000090, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, OutViewOrigin) == 0x0000D0, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, OutViewRotationMatrix) == 0x0000E0, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::OutViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyFrustumEffects, OutProjectionMatrix) == 0x000120, "Member 'FantasticPerspectiveFunctions_ApplyFrustumEffects::OutProjectionMatrix' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ApplyPointsBasing
// 0x0130 (0x0130 - 0x0000)
struct FantasticPerspectiveFunctions_ApplyPointsBasing final
{
public:
	struct FFantasticPerspectivePoints            Settings;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x0048(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0060(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x00A0(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x00B0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                OutProjectionMatrix;                               // 0x00F0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ApplyPointsBasing) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ApplyPointsBasing");
static_assert(sizeof(FantasticPerspectiveFunctions_ApplyPointsBasing) == 0x000130, "Wrong size on FantasticPerspectiveFunctions_ApplyPointsBasing");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyPointsBasing, Settings) == 0x000000, "Member 'FantasticPerspectiveFunctions_ApplyPointsBasing::Settings' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyPointsBasing, ViewOrigin) == 0x000048, "Member 'FantasticPerspectiveFunctions_ApplyPointsBasing::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyPointsBasing, ViewRotationMatrix) == 0x000060, "Member 'FantasticPerspectiveFunctions_ApplyPointsBasing::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyPointsBasing, OutViewOrigin) == 0x0000A0, "Member 'FantasticPerspectiveFunctions_ApplyPointsBasing::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyPointsBasing, OutViewRotationMatrix) == 0x0000B0, "Member 'FantasticPerspectiveFunctions_ApplyPointsBasing::OutViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyPointsBasing, OutProjectionMatrix) == 0x0000F0, "Member 'FantasticPerspectiveFunctions_ApplyPointsBasing::OutProjectionMatrix' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ApplySettings
// 0x0200 (0x0200 - 0x0000)
struct FantasticPerspectiveFunctions_ApplySettings final
{
public:
	struct FFantasticPerspectiveSettings          Settings;                                          // 0x0000(0x00E4)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x00E4(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatrix                                ViewRotationMatrix;                                // 0x00F0(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0130(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x0170(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x0180(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                OutProjectionMatrix;                               // 0x01C0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ApplySettings) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ApplySettings");
static_assert(sizeof(FantasticPerspectiveFunctions_ApplySettings) == 0x000200, "Wrong size on FantasticPerspectiveFunctions_ApplySettings");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, Settings) == 0x000000, "Member 'FantasticPerspectiveFunctions_ApplySettings::Settings' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, ViewOrigin) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_ApplySettings::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, ViewRotationMatrix) == 0x0000F0, "Member 'FantasticPerspectiveFunctions_ApplySettings::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, ProjectionMatrix) == 0x000130, "Member 'FantasticPerspectiveFunctions_ApplySettings::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, OutViewOrigin) == 0x000170, "Member 'FantasticPerspectiveFunctions_ApplySettings::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, OutViewRotationMatrix) == 0x000180, "Member 'FantasticPerspectiveFunctions_ApplySettings::OutViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettings, OutProjectionMatrix) == 0x0001C0, "Member 'FantasticPerspectiveFunctions_ApplySettings::OutProjectionMatrix' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ApplySettingsAndDrawDebug
// 0x0210 (0x0210 - 0x0000)
struct FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveSettings          Settings;                                          // 0x0008(0x00E4)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x00EC(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0100(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0140(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x0180(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x0190(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                OutProjectionMatrix;                               // 0x01D0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug");
static_assert(sizeof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug) == 0x000210, "Wrong size on FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, WorldContextObject) == 0x000000, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, Settings) == 0x000008, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::Settings' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, ViewOrigin) == 0x0000EC, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, ViewRotationMatrix) == 0x000100, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, ProjectionMatrix) == 0x000140, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, OutViewOrigin) == 0x000180, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, OutViewRotationMatrix) == 0x000190, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::OutViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug, OutProjectionMatrix) == 0x0001D0, "Member 'FantasticPerspectiveFunctions_ApplySettingsAndDrawDebug::OutProjectionMatrix' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ApplyToSceneCapture2D
// 0x00A0 (0x00A0 - 0x0000)
struct FantasticPerspectiveFunctions_ApplyToSceneCapture2D final
{
public:
	class USceneCaptureComponent2D*               SceneCapture;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0020(0x0040)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0060(0x0040)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ApplyToSceneCapture2D) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ApplyToSceneCapture2D");
static_assert(sizeof(FantasticPerspectiveFunctions_ApplyToSceneCapture2D) == 0x0000A0, "Wrong size on FantasticPerspectiveFunctions_ApplyToSceneCapture2D");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyToSceneCapture2D, SceneCapture) == 0x000000, "Member 'FantasticPerspectiveFunctions_ApplyToSceneCapture2D::SceneCapture' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyToSceneCapture2D, ViewOrigin) == 0x000008, "Member 'FantasticPerspectiveFunctions_ApplyToSceneCapture2D::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyToSceneCapture2D, ViewRotationMatrix) == 0x000020, "Member 'FantasticPerspectiveFunctions_ApplyToSceneCapture2D::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyToSceneCapture2D, ProjectionMatrix) == 0x000060, "Member 'FantasticPerspectiveFunctions_ApplyToSceneCapture2D::ProjectionMatrix' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ApplyTransformEffects
// 0x00E0 (0x00E0 - 0x0000)
struct FantasticPerspectiveFunctions_ApplyTransformEffects final
{
public:
	struct FFantasticPerspectiveTransform         Transform;                                         // 0x0000(0x003C)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x003C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0050(0x0040)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutViewOrigin;                                     // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                OutViewRotationMatrix;                             // 0x00A0(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ApplyTransformEffects) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ApplyTransformEffects");
static_assert(sizeof(FantasticPerspectiveFunctions_ApplyTransformEffects) == 0x0000E0, "Wrong size on FantasticPerspectiveFunctions_ApplyTransformEffects");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyTransformEffects, Transform) == 0x000000, "Member 'FantasticPerspectiveFunctions_ApplyTransformEffects::Transform' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyTransformEffects, ViewOrigin) == 0x00003C, "Member 'FantasticPerspectiveFunctions_ApplyTransformEffects::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyTransformEffects, ViewRotationMatrix) == 0x000050, "Member 'FantasticPerspectiveFunctions_ApplyTransformEffects::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyTransformEffects, OutViewOrigin) == 0x000090, "Member 'FantasticPerspectiveFunctions_ApplyTransformEffects::OutViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_ApplyTransformEffects, OutViewRotationMatrix) == 0x0000A0, "Member 'FantasticPerspectiveFunctions_ApplyTransformEffects::OutViewRotationMatrix' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.DrawDebugPositionedFrustum
// 0x00D0 (0x00D0 - 0x0000)
struct FantasticPerspectiveFunctions_DrawDebugPositionedFrustum final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ViewOrigin;                                        // 0x0008(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                ViewRotationMatrix;                                // 0x0020(0x0040)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatrix                                ProjectionMatrix;                                  // 0x0060(0x0040)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x00A0(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PerspectiveFrustumDepth;                           // 0x00B0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistentLines;                                  // 0x00B4(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifeTime;                                          // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         DepthPriority;                                     // 0x00BC(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Thickness;                                         // 0x00C0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_DrawDebugPositionedFrustum");
static_assert(sizeof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum) == 0x0000D0, "Wrong size on FantasticPerspectiveFunctions_DrawDebugPositionedFrustum");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, WorldContextObject) == 0x000000, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, ViewOrigin) == 0x000008, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::ViewOrigin' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, ViewRotationMatrix) == 0x000020, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::ViewRotationMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, ProjectionMatrix) == 0x000060, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::ProjectionMatrix' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, Color) == 0x0000A0, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::Color' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, PerspectiveFrustumDepth) == 0x0000B0, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::PerspectiveFrustumDepth' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, bPersistentLines) == 0x0000B4, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::bPersistentLines' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, LifeTime) == 0x0000B8, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::LifeTime' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, DepthPriority) == 0x0000BC, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::DepthPriority' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_DrawDebugPositionedFrustum, Thickness) == 0x0000C0, "Member 'FantasticPerspectiveFunctions_DrawDebugPositionedFrustum::Thickness' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.GetDebugSettings
// 0x00FC (0x00FC - 0x0000)
struct FantasticPerspectiveFunctions_GetDebugSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveDebug             ReturnValue;                                       // 0x00E4(0x0018)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_GetDebugSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_GetDebugSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_GetDebugSettings) == 0x0000FC, "Wrong size on FantasticPerspectiveFunctions_GetDebugSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_GetDebugSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_GetDebugSettings::Target' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_GetDebugSettings, ReturnValue) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_GetDebugSettings::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.GetFrustumSettings
// 0x0128 (0x0128 - 0x0000)
struct FantasticPerspectiveFunctions_GetFrustumSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveFrustum           ReturnValue;                                       // 0x00E4(0x0044)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_GetFrustumSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_GetFrustumSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_GetFrustumSettings) == 0x000128, "Wrong size on FantasticPerspectiveFunctions_GetFrustumSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_GetFrustumSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_GetFrustumSettings::Target' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_GetFrustumSettings, ReturnValue) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_GetFrustumSettings::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.GetTransformSettings
// 0x0120 (0x0120 - 0x0000)
struct FantasticPerspectiveFunctions_GetTransformSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveTransform         ReturnValue;                                       // 0x00E4(0x003C)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_GetTransformSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_GetTransformSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_GetTransformSettings) == 0x000120, "Wrong size on FantasticPerspectiveFunctions_GetTransformSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_GetTransformSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_GetTransformSettings::Target' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_GetTransformSettings, ReturnValue) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_GetTransformSettings::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ResetSettings
// 0x00E4 (0x00E4 - 0x0000)
struct FantasticPerspectiveFunctions_ResetSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ResetSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_ResetSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_ResetSettings) == 0x0000E4, "Wrong size on FantasticPerspectiveFunctions_ResetSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_ResetSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_ResetSettings::Target' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ScreenToWorldConversionMatrix
// 0x0040 (0x0040 - 0x0000)
struct FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix final
{
public:
	struct FMatrix                                ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix");
static_assert(sizeof(FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix) == 0x000040, "Wrong size on FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix");
static_assert(offsetof(FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix, ReturnValue) == 0x000000, "Member 'FantasticPerspectiveFunctions_ScreenToWorldConversionMatrix::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.ScreenToWorldConversionRotator
// 0x000C (0x000C - 0x0000)
struct FantasticPerspectiveFunctions_ScreenToWorldConversionRotator final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_ScreenToWorldConversionRotator) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_ScreenToWorldConversionRotator");
static_assert(sizeof(FantasticPerspectiveFunctions_ScreenToWorldConversionRotator) == 0x00000C, "Wrong size on FantasticPerspectiveFunctions_ScreenToWorldConversionRotator");
static_assert(offsetof(FantasticPerspectiveFunctions_ScreenToWorldConversionRotator, ReturnValue) == 0x000000, "Member 'FantasticPerspectiveFunctions_ScreenToWorldConversionRotator::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.SetDebugSettings
// 0x00FC (0x00FC - 0x0000)
struct FantasticPerspectiveFunctions_SetDebugSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveDebug             Debug;                                             // 0x00E4(0x0018)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_SetDebugSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_SetDebugSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_SetDebugSettings) == 0x0000FC, "Wrong size on FantasticPerspectiveFunctions_SetDebugSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_SetDebugSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_SetDebugSettings::Target' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_SetDebugSettings, Debug) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_SetDebugSettings::Debug' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.SetFrustumSettings
// 0x0128 (0x0128 - 0x0000)
struct FantasticPerspectiveFunctions_SetFrustumSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveFrustum           Frustum;                                           // 0x00E4(0x0044)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_SetFrustumSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_SetFrustumSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_SetFrustumSettings) == 0x000128, "Wrong size on FantasticPerspectiveFunctions_SetFrustumSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_SetFrustumSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_SetFrustumSettings::Target' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_SetFrustumSettings, Frustum) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_SetFrustumSettings::Frustum' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.SetTransformSettings
// 0x0120 (0x0120 - 0x0000)
struct FantasticPerspectiveFunctions_SetTransformSettings final
{
public:
	struct FFantasticPerspectiveSettings          Target;                                            // 0x0000(0x00E4)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFantasticPerspectiveTransform         Transform;                                         // 0x00E4(0x003C)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_SetTransformSettings) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_SetTransformSettings");
static_assert(sizeof(FantasticPerspectiveFunctions_SetTransformSettings) == 0x000120, "Wrong size on FantasticPerspectiveFunctions_SetTransformSettings");
static_assert(offsetof(FantasticPerspectiveFunctions_SetTransformSettings, Target) == 0x000000, "Member 'FantasticPerspectiveFunctions_SetTransformSettings::Target' has a wrong offset!");
static_assert(offsetof(FantasticPerspectiveFunctions_SetTransformSettings, Transform) == 0x0000E4, "Member 'FantasticPerspectiveFunctions_SetTransformSettings::Transform' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.WorldToScreenConversionMatrix
// 0x0040 (0x0040 - 0x0000)
struct FantasticPerspectiveFunctions_WorldToScreenConversionMatrix final
{
public:
	struct FMatrix                                ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_WorldToScreenConversionMatrix) == 0x000010, "Wrong alignment on FantasticPerspectiveFunctions_WorldToScreenConversionMatrix");
static_assert(sizeof(FantasticPerspectiveFunctions_WorldToScreenConversionMatrix) == 0x000040, "Wrong size on FantasticPerspectiveFunctions_WorldToScreenConversionMatrix");
static_assert(offsetof(FantasticPerspectiveFunctions_WorldToScreenConversionMatrix, ReturnValue) == 0x000000, "Member 'FantasticPerspectiveFunctions_WorldToScreenConversionMatrix::ReturnValue' has a wrong offset!");

// Function FantasticPerspectivePlugin.FantasticPerspectiveFunctions.WorldToScreenConversionRotator
// 0x000C (0x000C - 0x0000)
struct FantasticPerspectiveFunctions_WorldToScreenConversionRotator final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FantasticPerspectiveFunctions_WorldToScreenConversionRotator) == 0x000004, "Wrong alignment on FantasticPerspectiveFunctions_WorldToScreenConversionRotator");
static_assert(sizeof(FantasticPerspectiveFunctions_WorldToScreenConversionRotator) == 0x00000C, "Wrong size on FantasticPerspectiveFunctions_WorldToScreenConversionRotator");
static_assert(offsetof(FantasticPerspectiveFunctions_WorldToScreenConversionRotator, ReturnValue) == 0x000000, "Member 'FantasticPerspectiveFunctions_WorldToScreenConversionRotator::ReturnValue' has a wrong offset!");

}


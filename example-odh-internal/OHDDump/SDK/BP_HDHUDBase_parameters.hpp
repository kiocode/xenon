#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDHUDBase

#include "Basic.hpp"

#include "HDMain_structs.hpp"
#include "Engine_structs.hpp"
#include "DonkehFramework_structs.hpp"
#include "FUINotificationInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FEqpSlotData_structs.hpp"


namespace SDK::Params
{

// Function BP_HDHUDBase.BP_HDHUDBase_C.ExecuteUbergraph_BP_HDHUDBase
// 0x0278 (0x0278 - 0x0000)
struct BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SizeX;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SizeY;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidVoteInfo_bValid;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_NewOwningPawn;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_PrevOwningPawn;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseCharacter*                       K2Node_CustomEvent_Character;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            K2Node_CustomEvent_NewEquippedItem;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            K2Node_CustomEvent_PrevEquippedItem;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFNetworkEventSubsystem*               CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AGameStateBase* GameState)> K2Node_CreateDelegate_OutputDelegate;              // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         K2Node_CustomEvent_GameState_1;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDGameState*                           K2Node_DynamicCast_AsHDGame_State;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFVotingComponent*                     CallFunc_GetGameStateVotingComponent_ReturnValue;  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDFVotingComponent*                     K2Node_CustomEvent_SourceVotingComponent;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UDFVotingComponent* SourceVotingComponent)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFNetworkEventSubsystem*               CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_VoteInfoGetPromptTextForDisplay_ReturnValue; // 0x0108(0x0018)()
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDPlayerControllerBase_C*           K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base;  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFUINotificationInfo                   K2Node_MakeStruct_FUINotificationInfo;             // 0x01B8(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDFPlayerVoteSelection                 CallFunc_Array_Get_Item;                           // 0x0204(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20E[0x2];                                      // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           K2Node_Select_Default;                             // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_NotificationType1_C*               K2Node_DynamicCast_AsWBP_Notification_Type_1;      // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class AGameStateBase* GameState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0254(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         K2Node_CustomEvent_GameState;                      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase");
static_assert(sizeof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase) == 0x000278, "Wrong size on BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, EntryPoint) == 0x000000, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_Event_SizeX) == 0x000004, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_Event_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_Event_SizeY) == 0x000008, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_Event_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValidVoteInfo_bValid) == 0x00000C, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValidVoteInfo_bValid' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_Event_EndPlayReason) == 0x00000D, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_SwitchEnum_CmpSuccess) == 0x00000F, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_NewOwningPawn) == 0x000018, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_NewOwningPawn' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_PrevOwningPawn) == 0x000020, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_PrevOwningPawn' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_Character) == 0x000028, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_NewEquippedItem) == 0x000030, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_NewEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_PrevEquippedItem) == 0x000038, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_PrevEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base) == 0x000040, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1) == 0x000050, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_Pawn_1) == 0x000060, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_Pawn) == 0x000068, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000078, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue_2) == 0x000082, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CreateDelegate_OutputDelegate) == 0x00008C, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_GameState_1) == 0x0000A0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_GameState_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_AsHDGame_State) == 0x0000A8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_AsHDGame_State' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetGameStateVotingComponent_ReturnValue) == 0x0000B8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetGameStateVotingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetGameState_ReturnValue) == 0x0000C0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue_3) == 0x0000C8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue_4) == 0x0000C9, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetGameState_ReturnValue_1) == 0x0000D0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_SourceVotingComponent) == 0x0000D8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_SourceVotingComponent' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue_5) == 0x0000F0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000F1, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x0000F8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetGameState_ReturnValue_2) == 0x000100, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_VoteInfoGetPromptTextForDisplay_ReturnValue) == 0x000108, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_VoteInfoGetPromptTextForDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000120, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_IsValid_ReturnValue_6) == 0x000168, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000198, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001A0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base) == 0x0001A8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_bSuccess_3) == 0x0001B0, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_FMax_ReturnValue) == 0x0001B4, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_MakeStruct_FUINotificationInfo) == 0x0001B8, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_MakeStruct_FUINotificationInfo' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, Temp_bool_Variable) == 0x000200, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Array_Get_Item) == 0x000204, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00020C, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00020D, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_Select_Default) == 0x000218, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Less_IntInt_ReturnValue) == 0x000220, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_GetAllChildren_ReturnValue) == 0x000228, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Array_Get_Item_1) == 0x000238, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Array_Length_ReturnValue_1) == 0x000240, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_AsWBP_Notification_Type_1) == 0x000248, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_AsWBP_Notification_Type_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_DynamicCast_bSuccess_4) == 0x000250, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000251, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_MakeLiteralByte_ReturnValue) == 0x000252, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_Greater_ByteByte_ReturnValue) == 0x000253, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000254, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, K2Node_CustomEvent_GameState) == 0x000268, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000270, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase, CallFunc_BooleanOR_ReturnValue) == 0x000271, "Member 'BP_HDHUDBase_C_ExecuteUbergraph_BP_HDHUDBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.PlayersUpdated
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_PlayersUpdated final
{
public:
	class AGameStateBase*                         GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_PlayersUpdated) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_PlayersUpdated");
static_assert(sizeof(BP_HDHUDBase_C_PlayersUpdated) == 0x000008, "Wrong size on BP_HDHUDBase_C_PlayersUpdated");
static_assert(offsetof(BP_HDHUDBase_C_PlayersUpdated, GameState) == 0x000000, "Member 'BP_HDHUDBase_C_PlayersUpdated::GameState' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.PlayerVoteStateUpdated
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_PlayerVoteStateUpdated final
{
public:
	class UDFVotingComponent*                     SourceVotingComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_PlayerVoteStateUpdated) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_PlayerVoteStateUpdated");
static_assert(sizeof(BP_HDHUDBase_C_PlayerVoteStateUpdated) == 0x000008, "Wrong size on BP_HDHUDBase_C_PlayerVoteStateUpdated");
static_assert(offsetof(BP_HDHUDBase_C_PlayerVoteStateUpdated, SourceVotingComponent) == 0x000000, "Member 'BP_HDHUDBase_C_PlayerVoteStateUpdated::SourceVotingComponent' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.TeamsUpdated
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_TeamsUpdated final
{
public:
	class AGameStateBase*                         GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_TeamsUpdated) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_TeamsUpdated");
static_assert(sizeof(BP_HDHUDBase_C_TeamsUpdated) == 0x000008, "Wrong size on BP_HDHUDBase_C_TeamsUpdated");
static_assert(offsetof(BP_HDHUDBase_C_TeamsUpdated, GameState) == 0x000000, "Member 'BP_HDHUDBase_C_TeamsUpdated::GameState' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPlayerUnpossessPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_OwningPlayerUnpossessPawn final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_OwningPlayerUnpossessPawn) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_OwningPlayerUnpossessPawn");
static_assert(sizeof(BP_HDHUDBase_C_OwningPlayerUnpossessPawn) == 0x000008, "Wrong size on BP_HDHUDBase_C_OwningPlayerUnpossessPawn");
static_assert(offsetof(BP_HDHUDBase_C_OwningPlayerUnpossessPawn, Pawn) == 0x000000, "Member 'BP_HDHUDBase_C_OwningPlayerUnpossessPawn::Pawn' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPlayerPossessPawn
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_OwningPlayerPossessPawn final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_OwningPlayerPossessPawn) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_OwningPlayerPossessPawn");
static_assert(sizeof(BP_HDHUDBase_C_OwningPlayerPossessPawn) == 0x000008, "Wrong size on BP_HDHUDBase_C_OwningPlayerPossessPawn");
static_assert(offsetof(BP_HDHUDBase_C_OwningPlayerPossessPawn, Pawn) == 0x000000, "Member 'BP_HDHUDBase_C_OwningPlayerPossessPawn::Pawn' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPawnEquipmentItemChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_HDHUDBase_C_OwningPawnEquipmentItemChanged final
{
public:
	class ADFBaseCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            NewEquippedItem;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            PrevEquippedItem;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_OwningPawnEquipmentItemChanged) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_OwningPawnEquipmentItemChanged");
static_assert(sizeof(BP_HDHUDBase_C_OwningPawnEquipmentItemChanged) == 0x000018, "Wrong size on BP_HDHUDBase_C_OwningPawnEquipmentItemChanged");
static_assert(offsetof(BP_HDHUDBase_C_OwningPawnEquipmentItemChanged, Character) == 0x000000, "Member 'BP_HDHUDBase_C_OwningPawnEquipmentItemChanged::Character' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_OwningPawnEquipmentItemChanged, NewEquippedItem) == 0x000008, "Member 'BP_HDHUDBase_C_OwningPawnEquipmentItemChanged::NewEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_OwningPawnEquipmentItemChanged, PrevEquippedItem) == 0x000010, "Member 'BP_HDHUDBase_C_OwningPawnEquipmentItemChanged::PrevEquippedItem' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.OwningPawnUpdated
// 0x0010 (0x0010 - 0x0000)
struct BP_HDHUDBase_C_OwningPawnUpdated final
{
public:
	class APawn*                                  NewOwningPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PrevOwningPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_OwningPawnUpdated) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_OwningPawnUpdated");
static_assert(sizeof(BP_HDHUDBase_C_OwningPawnUpdated) == 0x000010, "Wrong size on BP_HDHUDBase_C_OwningPawnUpdated");
static_assert(offsetof(BP_HDHUDBase_C_OwningPawnUpdated, NewOwningPawn) == 0x000000, "Member 'BP_HDHUDBase_C_OwningPawnUpdated::NewOwningPawn' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_OwningPawnUpdated, PrevOwningPawn) == 0x000008, "Member 'BP_HDHUDBase_C_OwningPawnUpdated::PrevOwningPawn' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HDHUDBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_ReceiveTick");
static_assert(sizeof(BP_HDHUDBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_HDHUDBase_C_ReceiveTick");
static_assert(offsetof(BP_HDHUDBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HDHUDBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_HDHUDBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_HDHUDBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_HDHUDBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_HDHUDBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_HDHUDBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ReceiveDrawHUD
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_ReceiveDrawHUD final
{
public:
	int32                                         SizeX;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_ReceiveDrawHUD) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_ReceiveDrawHUD");
static_assert(sizeof(BP_HDHUDBase_C_ReceiveDrawHUD) == 0x000008, "Wrong size on BP_HDHUDBase_C_ReceiveDrawHUD");
static_assert(offsetof(BP_HDHUDBase_C_ReceiveDrawHUD, SizeX) == 0x000000, "Member 'BP_HDHUDBase_C_ReceiveDrawHUD::SizeX' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ReceiveDrawHUD, SizeY) == 0x000004, "Member 'BP_HDHUDBase_C_ReceiveDrawHUD::SizeY' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ToggleEquipmentUI
// 0x0030 (0x0030 - 0x0000)
struct BP_HDHUDBase_C_ToggleEquipmentUI final
{
public:
	bool                                          bShown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            K2Node_DynamicCast_AsBP_HDPlayer_Character_Base;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDBaseWeapon*                          K2Node_DynamicCast_AsHDBase_Weapon;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_ToggleEquipmentUI) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_ToggleEquipmentUI");
static_assert(sizeof(BP_HDHUDBase_C_ToggleEquipmentUI) == 0x000030, "Wrong size on BP_HDHUDBase_C_ToggleEquipmentUI");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, bShown) == 0x000000, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::bShown' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, CallFunc_GetOwningPawn_ReturnValue) == 0x000008, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::CallFunc_GetOwningPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, K2Node_DynamicCast_AsBP_HDPlayer_Character_Base) == 0x000010, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::K2Node_DynamicCast_AsBP_HDPlayer_Character_Base' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, K2Node_DynamicCast_AsHDBase_Weapon) == 0x000020, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::K2Node_DynamicCast_AsHDBase_Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleEquipmentUI, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_HDHUDBase_C_ToggleEquipmentUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ToggleWeaponStatusUI
// 0x0002 (0x0002 - 0x0000)
struct BP_HDHUDBase_C_ToggleWeaponStatusUI final
{
public:
	bool                                          bShown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_ToggleWeaponStatusUI) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_ToggleWeaponStatusUI");
static_assert(sizeof(BP_HDHUDBase_C_ToggleWeaponStatusUI) == 0x000002, "Wrong size on BP_HDHUDBase_C_ToggleWeaponStatusUI");
static_assert(offsetof(BP_HDHUDBase_C_ToggleWeaponStatusUI, bShown) == 0x000000, "Member 'BP_HDHUDBase_C_ToggleWeaponStatusUI::bShown' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ToggleWeaponStatusUI, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDHUDBase_C_ToggleWeaponStatusUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectItem
// 0x0004 (0x0004 - 0x0000)
struct BP_HDHUDBase_C_EquipmentSelectItem final
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_EquipmentSelectItem) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_EquipmentSelectItem");
static_assert(sizeof(BP_HDHUDBase_C_EquipmentSelectItem) == 0x000004, "Wrong size on BP_HDHUDBase_C_EquipmentSelectItem");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectItem, ItemIndex) == 0x000000, "Member 'BP_HDHUDBase_C_EquipmentSelectItem::ItemIndex' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentAddItemsFromLoadout
// 0x00C0 (0x00C0 - 0x0000)
struct BP_HDHUDBase_C_EquipmentAddItemsFromLoadout final
{
public:
	class UHDKit*                                 NewLoadout;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDFInventoryComponent*                  PlayerInventory;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseWeapon*                          EquippedItem;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHDItemEntry                           CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHDItemEntry                           CallFunc_Array_Get_Item_1;                         // 0x0070(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADFBaseItem*                            CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDBaseWeapon*                          K2Node_DynamicCast_AsHDBase_Weapon;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_EquipmentAddItemsFromLoadout");
static_assert(sizeof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout) == 0x0000C0, "Wrong size on BP_HDHUDBase_C_EquipmentAddItemsFromLoadout");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, NewLoadout) == 0x000000, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::NewLoadout' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, PlayerInventory) == 0x000008, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, EquippedItem) == 0x000010, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00004C, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_IsValid_ReturnValue_2) == 0x000054, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_bool_True_if_break_was_hit_Variable) == 0x000055, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Not_PreBool_ReturnValue) == 0x000056, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, K2Node_DynamicCast_AsHDBase_Weapon) == 0x000098, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::K2Node_DynamicCast_AsHDBase_Weapon' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_GetObjectClass_ReturnValue_1) == 0x0000A8, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0000B0, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_IsValid_ReturnValue_3) == 0x0000B1, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0000B2, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B3, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B9, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentAddItemsFromLoadout, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'BP_HDHUDBase_C_EquipmentAddItemsFromLoadout::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectItemBySlotNum
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_EquipmentSelectItemBySlotNum final
{
public:
	int32                                         SlotNum;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutNewSelection;                                  // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNewSelection;                                     // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_EquipmentSelectItemBySlotNum) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_EquipmentSelectItemBySlotNum");
static_assert(sizeof(BP_HDHUDBase_C_EquipmentSelectItemBySlotNum) == 0x000008, "Wrong size on BP_HDHUDBase_C_EquipmentSelectItemBySlotNum");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectItemBySlotNum, SlotNum) == 0x000000, "Member 'BP_HDHUDBase_C_EquipmentSelectItemBySlotNum::SlotNum' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectItemBySlotNum, bOutNewSelection) == 0x000004, "Member 'BP_HDHUDBase_C_EquipmentSelectItemBySlotNum::bOutNewSelection' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectItemBySlotNum, bNewSelection) == 0x000005, "Member 'BP_HDHUDBase_C_EquipmentSelectItemBySlotNum::bNewSelection' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectItemBySlotNum, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000006, "Member 'BP_HDHUDBase_C_EquipmentSelectItemBySlotNum::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentSelectEquippedItem
// 0x0058 (0x0058 - 0x0000)
struct BP_HDHUDBase_C_EquipmentSelectEquippedItem final
{
public:
	class UHDKit*                                 CurrentLoadout;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDBaseWeapon*                          EquippedItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHDItemEntry                           CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_EquipmentSelectEquippedItem) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_EquipmentSelectEquippedItem");
static_assert(sizeof(BP_HDHUDBase_C_EquipmentSelectEquippedItem) == 0x000058, "Wrong size on BP_HDHUDBase_C_EquipmentSelectEquippedItem");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CurrentLoadout) == 0x000000, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CurrentLoadout' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, EquippedItem) == 0x000008, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000040, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentSelectEquippedItem, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_HDHUDBase_C_EquipmentSelectEquippedItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ShowHUDWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_HDHUDBase_C_ShowHUDWidget final
{
public:
	class UWBP_HUD_C*                             CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_ShowHUDWidget) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_ShowHUDWidget");
static_assert(sizeof(BP_HDHUDBase_C_ShowHUDWidget) == 0x000010, "Wrong size on BP_HDHUDBase_C_ShowHUDWidget");
static_assert(offsetof(BP_HDHUDBase_C_ShowHUDWidget, CallFunc_Create_ReturnValue) == 0x000000, "Member 'BP_HDHUDBase_C_ShowHUDWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ShowHUDWidget, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000008, "Member 'BP_HDHUDBase_C_ShowHUDWidget::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_ShowHUDWidget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_HDHUDBase_C_ShowHUDWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.HideHUDWidget
// 0x0002 (0x0002 - 0x0000)
struct BP_HDHUDBase_C_HideHUDWidget final
{
public:
	bool                                          bDestroyWidgetOnHide;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_HideHUDWidget) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_HideHUDWidget");
static_assert(sizeof(BP_HDHUDBase_C_HideHUDWidget) == 0x000002, "Wrong size on BP_HDHUDBase_C_HideHUDWidget");
static_assert(offsetof(BP_HDHUDBase_C_HideHUDWidget, bDestroyWidgetOnHide) == 0x000000, "Member 'BP_HDHUDBase_C_HideHUDWidget::bDestroyWidgetOnHide' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_HideHUDWidget, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDHUDBase_C_HideHUDWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.UpdateHUDVisibility
// 0x0060 (0x0060 - 0x0000)
struct BP_HDHUDBase_C_UpdateHUDVisibility final
{
public:
	bool                                          bDestroyOnHide;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_HDCapturePointBase_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_HDCapturePointBase_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDPlayerControllerBase_C*           K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_UpdateHUDVisibility) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_UpdateHUDVisibility");
static_assert(sizeof(BP_HDHUDBase_C_UpdateHUDVisibility) == 0x000060, "Wrong size on BP_HDHUDBase_C_UpdateHUDVisibility");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, bDestroyOnHide) == 0x000000, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::bDestroyOnHide' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, Temp_bool_Variable) == 0x000008, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, Temp_byte_Variable) == 0x000009, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, Temp_byte_Variable_1) == 0x00002D, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00003C, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000040, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, K2Node_Select_Default) == 0x000048, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base) == 0x000050, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::K2Node_DynamicCast_AsBP_HDPlayer_Controller_Base' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_UpdateHUDVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_HDHUDBase_C_UpdateHUDVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.InitOwningHDPCDelegates
// 0x0020 (0x0020 - 0x0000)
struct BP_HDHUDBase_C_InitOwningHDPCDelegates final
{
public:
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_InitOwningHDPCDelegates) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_InitOwningHDPCDelegates");
static_assert(sizeof(BP_HDHUDBase_C_InitOwningHDPCDelegates) == 0x000020, "Wrong size on BP_HDHUDBase_C_InitOwningHDPCDelegates");
static_assert(offsetof(BP_HDHUDBase_C_InitOwningHDPCDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_HDHUDBase_C_InitOwningHDPCDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_InitOwningHDPCDelegates, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_HDHUDBase_C_InitOwningHDPCDelegates::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.CleanupOwningHDPCDelegates
// 0x0020 (0x0020 - 0x0000)
struct BP_HDHUDBase_C_CleanupOwningHDPCDelegates final
{
public:
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_CleanupOwningHDPCDelegates) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_CleanupOwningHDPCDelegates");
static_assert(sizeof(BP_HDHUDBase_C_CleanupOwningHDPCDelegates) == 0x000020, "Wrong size on BP_HDHUDBase_C_CleanupOwningHDPCDelegates");
static_assert(offsetof(BP_HDHUDBase_C_CleanupOwningHDPCDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_HDHUDBase_C_CleanupOwningHDPCDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CleanupOwningHDPCDelegates, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_HDHUDBase_C_CleanupOwningHDPCDelegates::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.InitOwningHDPawnDelegates
// 0x0010 (0x0010 - 0x0000)
struct BP_HDHUDBase_C_InitOwningHDPawnDelegates final
{
public:
	TDelegate<void(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_InitOwningHDPawnDelegates) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_InitOwningHDPawnDelegates");
static_assert(sizeof(BP_HDHUDBase_C_InitOwningHDPawnDelegates) == 0x000010, "Wrong size on BP_HDHUDBase_C_InitOwningHDPawnDelegates");
static_assert(offsetof(BP_HDHUDBase_C_InitOwningHDPawnDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_HDHUDBase_C_InitOwningHDPawnDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.CleanupDelegatesForHDPawn
// 0x0018 (0x0018 - 0x0000)
struct BP_HDHUDBase_C_CleanupDelegatesForHDPawn final
{
public:
	class ABP_HDPlayerCharacterBase_C*            PlayerChar;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_CleanupDelegatesForHDPawn) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_CleanupDelegatesForHDPawn");
static_assert(sizeof(BP_HDHUDBase_C_CleanupDelegatesForHDPawn) == 0x000018, "Wrong size on BP_HDHUDBase_C_CleanupDelegatesForHDPawn");
static_assert(offsetof(BP_HDHUDBase_C_CleanupDelegatesForHDPawn, PlayerChar) == 0x000000, "Member 'BP_HDHUDBase_C_CleanupDelegatesForHDPawn::PlayerChar' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CleanupDelegatesForHDPawn, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HDHUDBase_C_CleanupDelegatesForHDPawn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.ForceUpdateOwningPawnReferences
// 0x0001 (0x0001 - 0x0000)
struct BP_HDHUDBase_C_ForceUpdateOwningPawnReferences final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_ForceUpdateOwningPawnReferences) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_ForceUpdateOwningPawnReferences");
static_assert(sizeof(BP_HDHUDBase_C_ForceUpdateOwningPawnReferences) == 0x000001, "Wrong size on BP_HDHUDBase_C_ForceUpdateOwningPawnReferences");
static_assert(offsetof(BP_HDHUDBase_C_ForceUpdateOwningPawnReferences, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HDHUDBase_C_ForceUpdateOwningPawnReferences::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.SetAmmoResupplyEffectVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility");
static_assert(sizeof(BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility) == 0x000002, "Wrong size on BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility");
static_assert(offsetof(BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility, bVisible) == 0x000000, "Member 'BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDHUDBase_C_SetAmmoResupplyEffectVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.SetMedicHealingEffectVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_HDHUDBase_C_SetMedicHealingEffectVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_SetMedicHealingEffectVisibility) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_SetMedicHealingEffectVisibility");
static_assert(sizeof(BP_HDHUDBase_C_SetMedicHealingEffectVisibility) == 0x000002, "Wrong size on BP_HDHUDBase_C_SetMedicHealingEffectVisibility");
static_assert(offsetof(BP_HDHUDBase_C_SetMedicHealingEffectVisibility, bVisible) == 0x000000, "Member 'BP_HDHUDBase_C_SetMedicHealingEffectVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_SetMedicHealingEffectVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDHUDBase_C_SetMedicHealingEffectVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.SetTextChatHistoryVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_HDHUDBase_C_SetTextChatHistoryVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_SetTextChatHistoryVisibility) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_SetTextChatHistoryVisibility");
static_assert(sizeof(BP_HDHUDBase_C_SetTextChatHistoryVisibility) == 0x000002, "Wrong size on BP_HDHUDBase_C_SetTextChatHistoryVisibility");
static_assert(offsetof(BP_HDHUDBase_C_SetTextChatHistoryVisibility, bVisible) == 0x000000, "Member 'BP_HDHUDBase_C_SetTextChatHistoryVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_SetTextChatHistoryVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDHUDBase_C_SetTextChatHistoryVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.IsTextChatHistoryVisible
// 0x0003 (0x0003 - 0x0000)
struct BP_HDHUDBase_C_IsTextChatHistoryVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetChatHistoryIsVisible_bVisible;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_IsTextChatHistoryVisible) == 0x000001, "Wrong alignment on BP_HDHUDBase_C_IsTextChatHistoryVisible");
static_assert(sizeof(BP_HDHUDBase_C_IsTextChatHistoryVisible) == 0x000003, "Wrong size on BP_HDHUDBase_C_IsTextChatHistoryVisible");
static_assert(offsetof(BP_HDHUDBase_C_IsTextChatHistoryVisible, bVisible) == 0x000000, "Member 'BP_HDHUDBase_C_IsTextChatHistoryVisible::bVisible' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsTextChatHistoryVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HDHUDBase_C_IsTextChatHistoryVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsTextChatHistoryVisible, CallFunc_GetChatHistoryIsVisible_bVisible) == 0x000002, "Member 'BP_HDHUDBase_C_IsTextChatHistoryVisible::CallFunc_GetChatHistoryIsVisible_bVisible' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.DrawCrosshair
// 0x0038 (0x0038 - 0x0000)
struct BP_HDHUDBase_C_DrawCrosshair final
{
public:
	int32                                         SizeX;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_DrawCrosshair) == 0x000004, "Wrong alignment on BP_HDHUDBase_C_DrawCrosshair");
static_assert(sizeof(BP_HDHUDBase_C_DrawCrosshair) == 0x000038, "Wrong size on BP_HDHUDBase_C_DrawCrosshair");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, SizeX) == 0x000000, "Member 'BP_HDHUDBase_C_DrawCrosshair::SizeX' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, SizeY) == 0x000004, "Member 'BP_HDHUDBase_C_DrawCrosshair::SizeY' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Divide_IntInt_ReturnValue) == 0x000008, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_HDHUDBase_C_DrawCrosshair::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawCrosshair, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'BP_HDHUDBase_C_DrawCrosshair::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.DrawNametags
// 0x0668 (0x0668 - 0x0000)
struct BP_HDHUDBase_C_DrawNametags final
{
public:
	int32                                         SizeX;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagDotFrameVerFade;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagDotFrameVerMargin;                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagDotFrameHorFade;                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagDotFrameHorMargin;                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagTextFrameVerFade;                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagTextFrameVerMargin;                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagTextFrameHorFade;                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagTextFrameHorMargin;                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagFadeValue;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NametagTextSize;                                   // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NametagText;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         NametagDrawScale;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NametagScreenPosition;                             // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagDotSymbolHeight;                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NametagDotSymbolWidth;                             // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NametagDotSymbolColor;                             // 0x005C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             NametagDotSymbol;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NametagTextColor;                                  // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToOtherPlayer;                             // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HDPlayerCharacterBase_C*            OtherPlayer;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOwnerSquadStateIsValid;                           // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDSquadState*                          OwnerSquadState;                                   // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawDotsDistMax;                                   // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawDotsDistMin;                                   // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawNametagDistMax;                                // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawNametagDistMin;                                // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OwnerPawnCameraLocation;                           // 0x00B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OwnerPawnLocation;                                 // 0x00C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_7;                        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_7;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_8;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_8;                        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_9;                        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_9;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_10;                       // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_10;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_9;        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_11;                       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_11;                       // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF[0x1];                                      // 0x01FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_12;           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_10;       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_13;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_11;       // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_12;                       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_12;                       // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_14;           // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_15;           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_16;           // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_17;           // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_18;           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_19;           // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_13;                       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_13;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_12;       // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_13;       // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_14;                       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_14;                       // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_15;                       // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_15;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_14;       // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_15;       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_16;                       // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_16;                       // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_17;                       // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_17;                       // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_20;           // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_16;       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_17;       // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_18;                       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_18;                       // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_18;       // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_19;                       // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_19;                       // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_10;            // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_21;           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_19;       // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_11;            // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_20;                       // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_20;                       // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_7;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_12;            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_13;            // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_14;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_15;            // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_9;         // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_22;           // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_20;       // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_21;                       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_21;                       // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_8;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_10;        // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_23;           // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_22;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_22;                       // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_21;       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_11;        // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_9;            // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F[0x1];                                      // 0x032F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_23;                       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_23;                       // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_10;           // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B[0x1];                                      // 0x033B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_24;           // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_22;       // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_25;           // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_23;       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_12;        // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_24;                       // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_24;                       // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_13;        // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_11;           // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_24;       // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_25;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_16;            // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_12;           // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_26;       // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_14;        // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_27;       // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_17;            // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_18;            // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_13;           // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_28;       // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_15;        // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_19;            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_1;          // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NametagsSingleLinetrace_ReturnValue;      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NametagsSingleLinetrace_ReturnValue_1;    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextSize_OutWidth;                     // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextSize_OutHeight;                    // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_25;                       // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_25;                       // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHDPlayerState*                         K2Node_DynamicCast_AsHDPlayer_State;               // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x04C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2; // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_20;            // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD[0x3];                                      // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_26;                       // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_26;                       // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_27;                       // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_27;                       // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_2;          // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NametagsSingleLinetrace_ReturnValue_2;    // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_3;          // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NametagsSingleLinetrace_ReturnValue_3;    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_29;       // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_30;       // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_31;       // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_32;       // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamNum_ReturnValue_1;                 // 0x0584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585[0x3];                                      // 0x0585(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_33;       // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_34;       // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_28;                       // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_28;                       // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_24;       // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHDSquadState*                          CallFunc_GetSquadState_SquadState;                 // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue_1;                  // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_21;            // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x05E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Up_ReturnValue_2;                  // 0x05FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0614(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition_1;    // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue_1;       // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x062B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x062D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62E[0x2];                                      // 0x062E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_HDPlayerCharacterBase_C*>    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0630(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            CallFunc_Array_Get_Item;                           // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64A[0x2];                                      // 0x064A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0658(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_DrawNametags) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_DrawNametags");
static_assert(sizeof(BP_HDHUDBase_C_DrawNametags) == 0x000668, "Wrong size on BP_HDHUDBase_C_DrawNametags");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, SizeX) == 0x000000, "Member 'BP_HDHUDBase_C_DrawNametags::SizeX' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, SizeY) == 0x000004, "Member 'BP_HDHUDBase_C_DrawNametags::SizeY' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotFrameVerFade) == 0x000008, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotFrameVerFade' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotFrameVerMargin) == 0x00000C, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotFrameVerMargin' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotFrameHorFade) == 0x000010, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotFrameHorFade' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotFrameHorMargin) == 0x000014, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotFrameHorMargin' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagTextFrameVerFade) == 0x000018, "Member 'BP_HDHUDBase_C_DrawNametags::NametagTextFrameVerFade' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagTextFrameVerMargin) == 0x00001C, "Member 'BP_HDHUDBase_C_DrawNametags::NametagTextFrameVerMargin' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagTextFrameHorFade) == 0x000020, "Member 'BP_HDHUDBase_C_DrawNametags::NametagTextFrameHorFade' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagTextFrameHorMargin) == 0x000024, "Member 'BP_HDHUDBase_C_DrawNametags::NametagTextFrameHorMargin' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagFadeValue) == 0x000028, "Member 'BP_HDHUDBase_C_DrawNametags::NametagFadeValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagTextSize) == 0x00002C, "Member 'BP_HDHUDBase_C_DrawNametags::NametagTextSize' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagText) == 0x000038, "Member 'BP_HDHUDBase_C_DrawNametags::NametagText' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDrawScale) == 0x000048, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDrawScale' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagScreenPosition) == 0x00004C, "Member 'BP_HDHUDBase_C_DrawNametags::NametagScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotSymbolHeight) == 0x000054, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotSymbolHeight' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotSymbolWidth) == 0x000058, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotSymbolWidth' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotSymbolColor) == 0x00005C, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotSymbolColor' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagDotSymbol) == 0x000070, "Member 'BP_HDHUDBase_C_DrawNametags::NametagDotSymbol' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, NametagTextColor) == 0x000078, "Member 'BP_HDHUDBase_C_DrawNametags::NametagTextColor' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, DistanceToOtherPlayer) == 0x000088, "Member 'BP_HDHUDBase_C_DrawNametags::DistanceToOtherPlayer' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, OtherPlayer) == 0x000090, "Member 'BP_HDHUDBase_C_DrawNametags::OtherPlayer' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, bOwnerSquadStateIsValid) == 0x000098, "Member 'BP_HDHUDBase_C_DrawNametags::bOwnerSquadStateIsValid' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, OwnerSquadState) == 0x0000A0, "Member 'BP_HDHUDBase_C_DrawNametags::OwnerSquadState' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, DrawDotsDistMax) == 0x0000A8, "Member 'BP_HDHUDBase_C_DrawNametags::DrawDotsDistMax' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, DrawDotsDistMin) == 0x0000AC, "Member 'BP_HDHUDBase_C_DrawNametags::DrawDotsDistMin' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, DrawNametagDistMax) == 0x0000B0, "Member 'BP_HDHUDBase_C_DrawNametags::DrawNametagDistMax' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, DrawNametagDistMin) == 0x0000B4, "Member 'BP_HDHUDBase_C_DrawNametags::DrawNametagDistMin' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, OwnerPawnCameraLocation) == 0x0000B8, "Member 'BP_HDHUDBase_C_DrawNametags::OwnerPawnCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, OwnerPawnLocation) == 0x0000C4, "Member 'BP_HDHUDBase_C_DrawNametags::OwnerPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X) == 0x0000D4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y) == 0x0000D8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000DC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000E4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0000EC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0000F0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000FC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000100, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000104, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x00010C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x000110, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_1) == 0x000114, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_1) == 0x000118, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00011C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000120, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000124, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000128, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_2) == 0x00012C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_2) == 0x000130, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_3) == 0x000134, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_3) == 0x000138, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00013C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000140, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000144, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00014C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000150, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000154, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_4) == 0x000158, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_4) == 0x00015C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_5) == 0x000160, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_5) == 0x000164, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue) == 0x000168, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x00016C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000170, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000174, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000178, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x00017C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_6) == 0x000180, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_6) == 0x000184, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000188, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_7) == 0x00018C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_7) == 0x000190, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000194, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000198, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00019C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x0001A0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x0001A4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001A8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0001AC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_8) == 0x0001B0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_8) == 0x0001B4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0001B8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0001BC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0001C0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x0001C4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x0001C8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x0001CC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_9) == 0x0001D0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_9) == 0x0001D4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x0001D8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0001DC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0001DD, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x0001E0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_10) == 0x0001E4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_10) == 0x0001E8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_9) == 0x0001EC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x0001F0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0001F1, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue) == 0x0001F2, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_11) == 0x0001F4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_11) == 0x0001F8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_1) == 0x0001FC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x0001FD, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_2) == 0x0001FE, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_12) == 0x000200, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_10) == 0x000204, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_13) == 0x000208, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_11) == 0x00020C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000210, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_12) == 0x000214, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_12) == 0x000218, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x00021C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x00021D, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanOR_ReturnValue) == 0x00021E, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanOR_ReturnValue_1) == 0x00021F, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanOR_ReturnValue_2) == 0x000220, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_14) == 0x000224, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_15) == 0x000228, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_16) == 0x00022C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000230, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000234, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000238, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_17) == 0x00023C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_18) == 0x000240, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x000244, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_19) == 0x000248, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_13) == 0x00024C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_13) == 0x000250, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_12) == 0x000254, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_13) == 0x000258, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x00025C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x000260, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_14) == 0x000264, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_14) == 0x000268, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_15) == 0x00026C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_15) == 0x000270, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_14) == 0x000274, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000278, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x00027C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x000280, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_15) == 0x000284, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x000288, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x00028C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_16) == 0x000290, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_16) == 0x000294, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_17) == 0x000298, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_17' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_17) == 0x00029C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_17' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x0002A0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_20) == 0x0002A4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_16) == 0x0002A8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_17) == 0x0002AC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0002B0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0002B4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_18) == 0x0002B8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_18' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_18) == 0x0002BC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_18' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_18) == 0x0002C0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_19) == 0x0002C4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_19' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_19) == 0x0002C8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_19' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0002CC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0002D0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_10) == 0x0002D4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_21) == 0x0002D8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_19) == 0x0002DC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_11) == 0x0002E0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x0002E4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_20) == 0x0002E8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_20' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_20) == 0x0002EC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_20' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_7) == 0x0002F0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_12) == 0x0002F4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_13) == 0x0002F8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_14) == 0x0002FC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_15) == 0x000300, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_9) == 0x000304, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_22) == 0x000308, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_20) == 0x00030C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_21) == 0x000310, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_21' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_21) == 0x000314, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_21' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_8) == 0x000318, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_10) == 0x000319, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_23) == 0x00031C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_22) == 0x000320, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_22' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_22) == 0x000324, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_22' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_21) == 0x000328, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_11) == 0x00032C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_9) == 0x00032D, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_3) == 0x00032E, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_23) == 0x000330, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_23' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_23) == 0x000334, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_23' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_4) == 0x000338, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_10) == 0x000339, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_5) == 0x00033A, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_24) == 0x00033C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_22) == 0x000340, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Conv_IntToFloat_ReturnValue_25) == 0x000344, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Conv_IntToFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_23) == 0x000348, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_12) == 0x00034C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_24) == 0x000350, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_24' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_24) == 0x000354, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_24' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_13) == 0x000358, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_11) == 0x000359, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanOR_ReturnValue_3) == 0x00035A, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanOR_ReturnValue_4) == 0x00035B, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanOR_ReturnValue_5) == 0x00035C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_24) == 0x000360, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x000364, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_FClamp_ReturnValue) == 0x000368, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x00036C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, K2Node_MakeStruct_LinearColor) == 0x000370, "Member 'BP_HDHUDBase_C_DrawNametags::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_25) == 0x000380, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x000384, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_FClamp_ReturnValue_1) == 0x000388, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_16) == 0x00038C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_12) == 0x000390, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_26) == 0x000394, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_14) == 0x000398, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x00039C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, K2Node_MakeStruct_LinearColor_1) == 0x0003A0, "Member 'BP_HDHUDBase_C_DrawNametags::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_27) == 0x0003B0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x0003B4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_FClamp_ReturnValue_2) == 0x0003B8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_17) == 0x0003BC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x0003C0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_FClamp_ReturnValue_3) == 0x0003C4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_18) == 0x0003C8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_FloatFloat_ReturnValue_13) == 0x0003CC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_28) == 0x0003D0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_FloatFloat_ReturnValue_15) == 0x0003D4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTargetLocation_ReturnValue) == 0x0003D8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0003E4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0003E5, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_6) == 0x0003E6, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0003E7, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_IsValid_ReturnValue) == 0x0003E8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0003EC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_19) == 0x0003F0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTargetLocation_ReturnValue_1) == 0x0003F4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTargetLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_NametagsSingleLinetrace_ReturnValue) == 0x000400, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_NametagsSingleLinetrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Vector_Up_ReturnValue) == 0x000404, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000410, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_VectorVector_ReturnValue) == 0x00041C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_NametagsSingleLinetrace_ReturnValue_1) == 0x000428, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_NametagsSingleLinetrace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00042C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTextSize_OutWidth) == 0x000438, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTextSize_OutWidth' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTextSize_OutHeight) == 0x00043C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTextSize_OutHeight' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_MakeVector2D_ReturnValue) == 0x000440, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x000448, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_25) == 0x00044C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_25' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_25) == 0x000450, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_25' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Lerp_ReturnValue) == 0x000454, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000458, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000464, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000468, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetPlayerName_ReturnValue) == 0x000478, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetSubstring_ReturnValue) == 0x000488, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, K2Node_DynamicCast_AsHDPlayer_State) == 0x000498, "Member 'BP_HDHUDBase_C_DrawNametags::K2Node_DynamicCast_AsHDPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, K2Node_DynamicCast_bSuccess) == 0x0004A0, "Member 'BP_HDHUDBase_C_DrawNametags::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Concat_StrStr_ReturnValue) == 0x0004A8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Len_ReturnValue) == 0x0004B8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Greater_IntInt_ReturnValue) == 0x0004BC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0004C0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2) == 0x0004CC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTeamNum_ReturnValue) == 0x0004D0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_20) == 0x0004D4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, Temp_int_Array_Index_Variable) == 0x0004D8, "Member 'BP_HDHUDBase_C_DrawNametags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_IsValid_ReturnValue_1) == 0x0004DC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_26) == 0x0004E0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_26' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_26) == 0x0004E4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_26' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_27) == 0x0004E8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_27' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_27) == 0x0004EC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_27' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x0004F0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x0004F4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetActorRightVector_ReturnValue) == 0x0004F8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTargetLocation_ReturnValue_2) == 0x000504, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTargetLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000510, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00051C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000528, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_NametagsSingleLinetrace_ReturnValue_2) == 0x000534, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_NametagsSingleLinetrace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000538, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTargetLocation_ReturnValue_3) == 0x000544, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTargetLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Not_PreBool_ReturnValue) == 0x000550, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000554, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_NametagsSingleLinetrace_ReturnValue_3) == 0x000560, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_NametagsSingleLinetrace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x000564, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x000568, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_29) == 0x00056C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x000570, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_30) == 0x000574, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_31) == 0x000578, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_32) == 0x00057C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x000580, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetTeamNum_ReturnValue_1) == 0x000584, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetTeamNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Lerp_ReturnValue_1) == 0x000588, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00058C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_33) == 0x000590, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x000594, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Subtract_FloatFloat_ReturnValue_34) == 0x000598, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Subtract_FloatFloat_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_X_28) == 0x00059C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_X_28' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BreakVector2D_Y_28) == 0x0005A0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BreakVector2D_Y_28' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x0005A4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0005A8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_FloatFloat_ReturnValue_24) == 0x0005AC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_7) == 0x0005B0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetSquadState_SquadState) == 0x0005B8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetSquadState_SquadState' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, Temp_int_Loop_Counter_Variable) == 0x0005C0, "Member 'BP_HDHUDBase_C_DrawNametags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_IntInt_ReturnValue) == 0x0005C4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Vector_Up_ReturnValue_1) == 0x0005C8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Vector_Up_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0005D4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_FloatFloat_ReturnValue_21) == 0x0005E0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0005E4, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0005F0, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0005F8, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Vector_Up_ReturnValue_2) == 0x0005FC, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Vector_Up_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000608, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000614, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_ProjectWorldToScreen_ScreenPosition_1) == 0x000620, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_ProjectWorldToScreen_ScreenPosition_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_ProjectWorldToScreen_ReturnValue_1) == 0x000628, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_ProjectWorldToScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000629, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_IsValid_ReturnValue_2) == 0x00062A, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_8) == 0x00062B, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_9) == 0x00062C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_IsValid_ReturnValue_3) == 0x00062D, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_GetAllActorsOfClass_OutActors) == 0x000630, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Array_Get_Item) == 0x000640, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000648, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_10) == 0x000649, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Array_Length_ReturnValue) == 0x00064C, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Less_IntInt_ReturnValue) == 0x000650, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_Vector_Distance2D_ReturnValue) == 0x000654, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000658, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_11) == 0x000664, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_DrawNametags, CallFunc_BooleanAND_ReturnValue_12) == 0x000665, "Member 'BP_HDHUDBase_C_DrawNametags::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.CanDrawNametag
// 0x03D8 (0x03D8 - 0x0000)
struct BP_HDHUDBase_C_CanDrawNametag final
{
public:
	class ABP_HDPlayerCharacterBase_C*            InOtherPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InVerticalOffset;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InOwnerCameraLocation;                             // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanDrawNametag;                                   // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              NametagScreenPosition;                             // 0x001C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPosition;                                    // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_1;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0198(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x01A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_2;          // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0250(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x0260(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x1];                                      // 0x02EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_3;          // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_3;                          // 0x02F8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_3;       // 0x0308(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_3;  // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue_1;                  // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x03CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_CanDrawNametag) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_CanDrawNametag");
static_assert(sizeof(BP_HDHUDBase_C_CanDrawNametag) == 0x0003D8, "Wrong size on BP_HDHUDBase_C_CanDrawNametag");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, InOtherPawn) == 0x000000, "Member 'BP_HDHUDBase_C_CanDrawNametag::InOtherPawn' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, InVerticalOffset) == 0x000008, "Member 'BP_HDHUDBase_C_CanDrawNametag::InVerticalOffset' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, InOwnerCameraLocation) == 0x00000C, "Member 'BP_HDHUDBase_C_CanDrawNametag::InOwnerCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, bCanDrawNametag) == 0x000018, "Member 'BP_HDHUDBase_C_CanDrawNametag::bCanDrawNametag' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, NametagScreenPosition) == 0x00001C, "Member 'BP_HDHUDBase_C_CanDrawNametag::NametagScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, ScreenPosition) == 0x000024, "Member 'BP_HDHUDBase_C_CanDrawNametag::ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, Temp_object_Variable) == 0x000030, "Member 'BP_HDHUDBase_C_CanDrawNametag::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, Temp_object_Variable_1) == 0x000040, "Member 'BP_HDHUDBase_C_CanDrawNametag::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000050, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, Temp_object_Variable_2) == 0x000058, "Member 'BP_HDHUDBase_C_CanDrawNametag::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Vector_Up_ReturnValue) == 0x000068, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetTargetLocation_ReturnValue) == 0x000080, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_HDHUDBase_C_CanDrawNametag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetActorRightVector_ReturnValue) == 0x0000AC, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetTargetLocation_ReturnValue_1) == 0x0000B8, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetTargetLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C4, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'BP_HDHUDBase_C_CanDrawNametag::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000EC, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000174, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000178, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Not_PreBool_ReturnValue) == 0x000184, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000188, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, Temp_object_Variable_3) == 0x000198, "Member 'BP_HDHUDBase_C_CanDrawNametag::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x0001A8, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000230, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetTargetLocation_ReturnValue_2) == 0x000234, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetTargetLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Not_PreBool_ReturnValue_1) == 0x000240, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000244, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, K2Node_MakeArray_Array_2) == 0x000250, "Member 'BP_HDHUDBase_C_CanDrawNametag::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x000260, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x0002E8, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002E9, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002EA, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetTargetLocation_ReturnValue_3) == 0x0002EC, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetTargetLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, K2Node_MakeArray_Array_3) == 0x0002F8, "Member 'BP_HDHUDBase_C_CanDrawNametag::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_OutHit_3) == 0x000308, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_OutHit_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_LineTraceSingleForObjects_ReturnValue_3) == 0x000390, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_LineTraceSingleForObjects_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Not_PreBool_ReturnValue_4) == 0x000391, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000394, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Vector_Up_ReturnValue_1) == 0x0003A0, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Vector_Up_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x0003AC, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003B0, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0003B4, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0003C0, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0003CC, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0003D4, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_CanDrawNametag, CallFunc_Not_PreBool_ReturnValue_5) == 0x0003D5, "Member 'BP_HDHUDBase_C_CanDrawNametag::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.NametagsSingleLinetrace
// 0x00C8 (0x00C8 - 0x0000)
struct BP_HDHUDBase_C_NametagsSingleLinetrace final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            OtherPlayer;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_NametagsSingleLinetrace) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_NametagsSingleLinetrace");
static_assert(sizeof(BP_HDHUDBase_C_NametagsSingleLinetrace) == 0x0000C8, "Wrong size on BP_HDHUDBase_C_NametagsSingleLinetrace");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, Start) == 0x000000, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::Start' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, End) == 0x00000C, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::End' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, OtherPlayer) == 0x000018, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::OtherPlayer' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, ReturnValue) == 0x000020, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, CallFunc_LineTraceSingle_OutHit) == 0x000038, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, CallFunc_LineTraceSingle_ReturnValue) == 0x0000C0, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_NametagsSingleLinetrace, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'BP_HDHUDBase_C_NametagsSingleLinetrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.AddBasicNotification
// 0x0048 (0x0048 - 0x0000)
struct BP_HDHUDBase_C_AddBasicNotification final
{
public:
	struct FFUINotificationInfo                   Info;                                              // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_AddBasicNotification) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_AddBasicNotification");
static_assert(sizeof(BP_HDHUDBase_C_AddBasicNotification) == 0x000048, "Wrong size on BP_HDHUDBase_C_AddBasicNotification");
static_assert(offsetof(BP_HDHUDBase_C_AddBasicNotification, Info) == 0x000000, "Member 'BP_HDHUDBase_C_AddBasicNotification::Info' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.AddCustomNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_HDHUDBase_C_AddCustomNotification final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HDHUDBase_C_AddCustomNotification) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_AddCustomNotification");
static_assert(sizeof(BP_HDHUDBase_C_AddCustomNotification) == 0x000008, "Wrong size on BP_HDHUDBase_C_AddCustomNotification");
static_assert(offsetof(BP_HDHUDBase_C_AddCustomNotification, Widget) == 0x000000, "Member 'BP_HDHUDBase_C_AddCustomNotification::Widget' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.IsValidVoteInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_HDHUDBase_C_IsValidVoteInfo final
{
public:
	struct FDFActiveVoteInfo                      VoteInfo;                                          // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bValid;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_IsValidVoteInfo) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_IsValidVoteInfo");
static_assert(sizeof(BP_HDHUDBase_C_IsValidVoteInfo) == 0x000050, "Wrong size on BP_HDHUDBase_C_IsValidVoteInfo");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, VoteInfo) == 0x000000, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::VoteInfo' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, bValid) == 0x000048, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::bValid' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, CallFunc_IsValidClass_ReturnValue) == 0x00004A, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, CallFunc_IsValid_ReturnValue) == 0x00004B, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_IsValidVoteInfo, CallFunc_ClassIsChildOf_ReturnValue) == 0x00004D, "Member 'BP_HDHUDBase_C_IsValidVoteInfo::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentGetSelectedItem
// 0x0030 (0x0030 - 0x0000)
struct BP_HDHUDBase_C_EquipmentGetSelectedItem final
{
public:
	class AHDBaseWeapon*                          OutItemToEquip;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFoundItem;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEqpSlotData                          CallFunc_GetSelectedItem_OutSlotData;              // 0x0010(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedItem_bFoundItem;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_EquipmentGetSelectedItem) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_EquipmentGetSelectedItem");
static_assert(sizeof(BP_HDHUDBase_C_EquipmentGetSelectedItem) == 0x000030, "Wrong size on BP_HDHUDBase_C_EquipmentGetSelectedItem");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItem, OutItemToEquip) == 0x000000, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItem::OutItemToEquip' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItem, bFoundItem) == 0x000008, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItem::bFoundItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItem, CallFunc_GetSelectedItem_OutSlotData) == 0x000010, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItem::CallFunc_GetSelectedItem_OutSlotData' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItem, CallFunc_GetSelectedItem_bFoundItem) == 0x000028, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItem::CallFunc_GetSelectedItem_bFoundItem' has a wrong offset!");

// Function BP_HDHUDBase.BP_HDHUDBase_C.EquipmentGetSelectedItemSlotNum
// 0x0028 (0x0028 - 0x0000)
struct BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum final
{
public:
	int32                                         OutSlotNum;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFoundItem;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEqpSlotData                          CallFunc_GetSelectedItem_OutSlotData;              // 0x0008(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelectedItem_bFoundItem;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum) == 0x000008, "Wrong alignment on BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum");
static_assert(sizeof(BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum) == 0x000028, "Wrong size on BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum, OutSlotNum) == 0x000000, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum::OutSlotNum' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum, bFoundItem) == 0x000004, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum::bFoundItem' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum, CallFunc_GetSelectedItem_OutSlotData) == 0x000008, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum::CallFunc_GetSelectedItem_OutSlotData' has a wrong offset!");
static_assert(offsetof(BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum, CallFunc_GetSelectedItem_bFoundItem) == 0x000020, "Member 'BP_HDHUDBase_C_EquipmentGetSelectedItemSlotNum::CallFunc_GetSelectedItem_bFoundItem' has a wrong offset!");

}


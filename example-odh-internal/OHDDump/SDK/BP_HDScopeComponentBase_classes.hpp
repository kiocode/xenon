#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HDScopeComponentBase

#include "Basic.hpp"

#include "HDMain_structs.hpp"
#include "HDMain_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HDScopeComponentBase.BP_HDScopeComponentBase_C
// 0x0630 (0x0820 - 0x01F0)
class UBP_HDScopeComponentBase_C final : public UHDWeaponScopeComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          UseOverlay;                                        // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScopeRadius;                                       // 0x01FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimingFOV;                                         // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADSOffset;                                         // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScopeMaterialIndex;                                // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedBlendable>             PostProcessMaterial;                               // 0x0210(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInterface*                     ScopeGlassMaterial;                                // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ScopeOpticMaterial;                                // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScopeOverlayClass;                                 // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FreeAimMaxPitch;                                   // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FreeAimMaxYaw;                                     // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReticleOffsetY;                                    // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReticleOffsetX;                                    // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScopeMIDGlass;                                     // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ScopeOverlay;                                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimInterpSpeed;                                    // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ScopeMID;                                          // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultAimingFOV;                                  // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultAimInterpSpeed;                             // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultFreeAimPitch;                               // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultFreeAimYaw;                                 // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   DefaultCameraPostProcess;                          // 0x0280(0x0540)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsScopedIn;                                       // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C1[0x3];                                      // 0x07C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultADSOffset;                                  // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         ParentMesh;                                        // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHDPlayerController*                    ControllerRef;                                     // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerCharacterBase_C*            CharacterRef;                                      // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDWeaponBase_C*                     ParentWeaponRef;                                   // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             PostProcessRef;                                    // 0x07E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ADFPlayerCameraManager*                 CameraRef;                                         // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_HDScopeComponentBase_C*>     ParentSightList;                                   // 0x0800(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 MPC;                                               // 0x0810(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BP_HDScopeComponentBase(int32 EntryPoint);
	void UnbindEvents(class ABP_HDPlayerCharacterBase_C* OldCharacter, class ABP_HDWeaponBase_C* OldWeapon);
	void BindEvents(class ABP_HDPlayerCharacterBase_C* NewCharacter, class ABP_HDWeaponBase_C* NewWeapon);
	void EventDeactivated(class UActorComponent* Component);
	void EventActivated(class UActorComponent* Component, bool bReset);
	void ReceiveTick(float DeltaSeconds);
	void ChangeSights();
	void ItemChanged(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem);
	void DeathEvent(class APawn* VictimPawn, class AController* VictimController, float KillingDamage, const struct FDamageEvent& DamageEvent, class APawn* InstigatingPawn, class AActor* DamageCauser);
	void AimStyle(class AHDPlayerCharacter* Character, EHDWeaponAimStyle NewAimStyle, EHDWeaponAimStyle PrevAimStyle, bool bFromPlayerInput);
	void AimTransition(bool bIsStartTransition);
	void AimIn();
	void AimOut();
	void GetData(class ABP_HDPlayerCharacterBase_C** Character, class AHDPlayerController** Controller, class UDFCharacterMovementComponent** Movement, class ADFPlayerCameraManager** Camera, class ABP_HDWeaponBase_C** Parent, class USkeletalMeshComponent** CharacterMesh, class UMeshComponent** WeaponMesh, TArray<class UBP_HDScopeComponentBase_C*>* ParentSightList_0, TArray<class UMaterialInstanceDynamic*>* FirstPersonMatArray, TArray<class UMaterialInstanceDynamic*>* ThirdPersonMatArray);
	void CanScope(bool* CanScope_0);
	void ScopeEffect();
	void Init();
	void SaveDefaults();
	void LoadDefaults(bool IsPlayerDead);
	void SetupOwnerData(bool* IsValid);
	void ClearOwnerData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HDScopeComponentBase_C">();
	}
	static class UBP_HDScopeComponentBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HDScopeComponentBase_C>();
	}
};
static_assert(alignof(UBP_HDScopeComponentBase_C) == 0x000010, "Wrong alignment on UBP_HDScopeComponentBase_C");
static_assert(sizeof(UBP_HDScopeComponentBase_C) == 0x000820, "Wrong size on UBP_HDScopeComponentBase_C");
static_assert(offsetof(UBP_HDScopeComponentBase_C, UberGraphFrame) == 0x0001F0, "Member 'UBP_HDScopeComponentBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, UseOverlay) == 0x0001F8, "Member 'UBP_HDScopeComponentBase_C::UseOverlay' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeRadius) == 0x0001FC, "Member 'UBP_HDScopeComponentBase_C::ScopeRadius' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, AimingFOV) == 0x000200, "Member 'UBP_HDScopeComponentBase_C::AimingFOV' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ADSOffset) == 0x000204, "Member 'UBP_HDScopeComponentBase_C::ADSOffset' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeMaterialIndex) == 0x000208, "Member 'UBP_HDScopeComponentBase_C::ScopeMaterialIndex' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, PostProcessMaterial) == 0x000210, "Member 'UBP_HDScopeComponentBase_C::PostProcessMaterial' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeGlassMaterial) == 0x000220, "Member 'UBP_HDScopeComponentBase_C::ScopeGlassMaterial' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeOpticMaterial) == 0x000228, "Member 'UBP_HDScopeComponentBase_C::ScopeOpticMaterial' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeOverlayClass) == 0x000230, "Member 'UBP_HDScopeComponentBase_C::ScopeOverlayClass' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, FreeAimMaxPitch) == 0x000238, "Member 'UBP_HDScopeComponentBase_C::FreeAimMaxPitch' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, FreeAimMaxYaw) == 0x00023C, "Member 'UBP_HDScopeComponentBase_C::FreeAimMaxYaw' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ReticleOffsetY) == 0x000240, "Member 'UBP_HDScopeComponentBase_C::ReticleOffsetY' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ReticleOffsetX) == 0x000244, "Member 'UBP_HDScopeComponentBase_C::ReticleOffsetX' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeMIDGlass) == 0x000248, "Member 'UBP_HDScopeComponentBase_C::ScopeMIDGlass' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeOverlay) == 0x000250, "Member 'UBP_HDScopeComponentBase_C::ScopeOverlay' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, AimInterpSpeed) == 0x000258, "Member 'UBP_HDScopeComponentBase_C::AimInterpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ScopeMID) == 0x000260, "Member 'UBP_HDScopeComponentBase_C::ScopeMID' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, DefaultAimingFOV) == 0x000268, "Member 'UBP_HDScopeComponentBase_C::DefaultAimingFOV' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, DefaultAimInterpSpeed) == 0x00026C, "Member 'UBP_HDScopeComponentBase_C::DefaultAimInterpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, DefaultFreeAimPitch) == 0x000270, "Member 'UBP_HDScopeComponentBase_C::DefaultFreeAimPitch' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, DefaultFreeAimYaw) == 0x000274, "Member 'UBP_HDScopeComponentBase_C::DefaultFreeAimYaw' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, DefaultCameraPostProcess) == 0x000280, "Member 'UBP_HDScopeComponentBase_C::DefaultCameraPostProcess' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, bIsScopedIn) == 0x0007C0, "Member 'UBP_HDScopeComponentBase_C::bIsScopedIn' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, DefaultADSOffset) == 0x0007C4, "Member 'UBP_HDScopeComponentBase_C::DefaultADSOffset' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ParentMesh) == 0x0007C8, "Member 'UBP_HDScopeComponentBase_C::ParentMesh' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ControllerRef) == 0x0007D0, "Member 'UBP_HDScopeComponentBase_C::ControllerRef' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, CharacterRef) == 0x0007D8, "Member 'UBP_HDScopeComponentBase_C::CharacterRef' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ParentWeaponRef) == 0x0007E0, "Member 'UBP_HDScopeComponentBase_C::ParentWeaponRef' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, PostProcessRef) == 0x0007E8, "Member 'UBP_HDScopeComponentBase_C::PostProcessRef' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, CameraRef) == 0x0007F8, "Member 'UBP_HDScopeComponentBase_C::CameraRef' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, ParentSightList) == 0x000800, "Member 'UBP_HDScopeComponentBase_C::ParentSightList' has a wrong offset!");
static_assert(offsetof(UBP_HDScopeComponentBase_C, MPC) == 0x000810, "Member 'UBP_HDScopeComponentBase_C::MPC' has a wrong offset!");

}


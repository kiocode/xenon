#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HDPlayerCharacter_TP

#include "Basic.hpp"

#include "HDMain_classes.hpp"
#include "DonkehFramework_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECharacterMoveState_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_HDPlayerCharacter_TP.ABP_HDPlayerCharacter_TP_C
// 0xBC00 (0xBEE0 - 0x02E0)
class UABP_HDPlayerCharacter_TP_C final : public UHDPlayerCharacterAnimInst_TPP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8;             // 0x02E8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7;             // 0x0308(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8;             // 0x0328(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_19;                   // 0x0348(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x0400(0x0078)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_35;                       // 0x0478(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_34;                       // 0x0580(0x0108)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x0688(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x0750(0x00C0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x0810(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7;             // 0x0830(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_33;                       // 0x0850(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_32;                       // 0x0958(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_31;                       // 0x0A60(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_30;                       // 0x0B68(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x0C70(0x0020)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x0C90(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x0D58(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x0D78(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_13;                         // 0x0D98(0x00F0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x0E88(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_18;                   // 0x0F48(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x1000(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x1028(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_29;                       // 0x1050(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_28;                       // 0x1158(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_12;                         // 0x1260(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_27;                       // 0x1350(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_11;                         // 0x1458(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_26;                       // 0x1548(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x1650(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x1678(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x16A0(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_10;                         // 0x16C0(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_25;                       // 0x17B0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x18B8(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x18D8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x1998(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x19C0(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_17;                   // 0x1A60(0x00B8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_24;                       // 0x1B18(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_23;                       // 0x1C20(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_22;                       // 0x1D28(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_21;                       // 0x1E30(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_20;                       // 0x1F38(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_19;                       // 0x2040(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_18;                       // 0x2148(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_16;                   // 0x2250(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x2308(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x2330(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_17;                       // 0x2358(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_16;                       // 0x2460(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x2568(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x2588(0x0020)()
	uint8                                         Pad_25A8[0x8];                                     // 0x25A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x25B0(0x01E0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_9;                          // 0x2790(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_8;                          // 0x2880(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_7;                          // 0x2970(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_6;                          // 0x2A60(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x2B50(0x0108)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_105;                // 0x2C58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_104;                // 0x2C80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_103;                // 0x2CA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_102;                // 0x2CD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_101;                // 0x2CF8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x2D20(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_55;                      // 0x2D98(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x2DC8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_54;                      // 0x2E40(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x2E70(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_53;                      // 0x2EE8(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x2F18(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_52;                      // 0x2F30(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_12;                     // 0x2F60(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x3010(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_100;                // 0x30D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_99;                 // 0x3100(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_98;                 // 0x3128(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x3150(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_51;                      // 0x31C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x31F8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_50;                      // 0x3270(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x32A0(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_49;                      // 0x32B8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_11;                     // 0x32E8(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x3398(0x00C8)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x3460(0x01E0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x3640(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x3748(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x3850(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x3958(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x3A60(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x3B20(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_15;                   // 0x3B48(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x3C00(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x3C28(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x3CE8(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x3D10(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x3E00(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x3EF0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x3FF8(0x0108)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x4100(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x41F0(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x42E0(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x43E8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x44A8(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x44D0(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x45D8(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x46E0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x4700(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x4720(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x4828(0x0108)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x4930(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_4;                      // 0x4960(0x0018)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x4978(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x49A8(0x0078)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x4A20(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x4A50(0x0078)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x4AC8(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x4AF8(0x0078)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x4B70(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x4BA0(0x0078)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x4C18(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x4C48(0x0078)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x4CC0(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_14;                   // 0x4D38(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_13;                   // 0x4DF0(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x4EA8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x4ED0(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x4EF8(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x4FE8(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x50A0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x50C8(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x5190(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x5208(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x52C0(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x52E8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x53D8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x5400(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x5428(0x00B8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x54E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x5528(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x55A0(0x00B8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x5658(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x5720(0x0078)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x5798(0x0188)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x5920(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x59C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x59E8(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x5A60(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x5B18(0x0078)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x5B90(0x0030)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x5BC0(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_97;                 // 0x5BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_96;                 // 0x5C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_95;                 // 0x5C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_94;                 // 0x5C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_93;                 // 0x5C90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_92;                 // 0x5CB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_91;                 // 0x5CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_90;                 // 0x5D08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_89;                 // 0x5D30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_88;                 // 0x5D58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_87;                 // 0x5D80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_86;                 // 0x5DA8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x5DD0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_48;                      // 0x5E48(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x5E78(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_47;                      // 0x5EF0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x5F20(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_46;                      // 0x5F98(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x5FC8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_45;                      // 0x6040(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x6070(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_44;                      // 0x60E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x6118(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_43;                      // 0x6190(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x61C0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x6238(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x62B0(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_42;                      // 0x6350(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_10;                     // 0x6380(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_41;                      // 0x6430(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_85;                 // 0x6460(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_3;                      // 0x6488(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_40;                      // 0x64A0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_9;                      // 0x64D0(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x6580(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_84;                 // 0x6638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_83;                 // 0x6660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_82;                 // 0x6688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_81;                 // 0x66B0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x66D8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_39;                      // 0x6750(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x6780(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x67A8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x6848(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_38;                      // 0x68C0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x68F0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_37;                      // 0x6968(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x6998(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_36;                      // 0x69C0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_8;                      // 0x69F0(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x6AA0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x6B68(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x6B90(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x6BC0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_80;                 // 0x6C08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_79;                 // 0x6C30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_78;                 // 0x6C58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_77;                 // 0x6C80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_76;                 // 0x6CA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_75;                 // 0x6CD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_74;                 // 0x6CF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_73;                 // 0x6D20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_72;                 // 0x6D48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_71;                 // 0x6D70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_70;                 // 0x6D98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_69;                 // 0x6DC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_68;                 // 0x6DE8(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_2;                      // 0x6E10(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_35;                      // 0x6E28(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x6E58(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_34;                      // 0x6F08(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_67;                 // 0x6F38(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x6F60(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_33;                      // 0x6F88(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_66;                 // 0x6FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_65;                 // 0x6FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_64;                 // 0x7008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_63;                 // 0x7030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_62;                 // 0x7058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_61;                 // 0x7080(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x70A8(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x7120(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x71C0(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_5;                   // 0x7238(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x72E8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_32;                      // 0x7360(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x7390(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x7408(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x74A8(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x7520(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x75D0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_31;                      // 0x7648(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x7678(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x76F0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x7790(0x0078)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x7808(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x78B8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x7930(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x7960(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x7978(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x79A8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x7A58(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_60;                 // 0x7A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_59;                 // 0x7AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_58;                 // 0x7AD8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x7B00(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x7B78(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x7BA8(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x7C88(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x7CB8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x7D68(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x7D98(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x7DC0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x7DF0(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_57;                 // 0x7EA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_56;                 // 0x7EC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x7EF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x7F18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x7F40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x7F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x7F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x7FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x7FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x8008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x8030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x8058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x8080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x80A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x80D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x80F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x8120(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x8148(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x8170(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x81A0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x81C8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x81F8(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x8228(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x8250(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x8280(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x82B0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x82D8(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x8308(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x8320(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x8350(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x8400(0x00B8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x84B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x84E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x8508(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x8530(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x8558(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x8580(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x85A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x85D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x85F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x8620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x8648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x8670(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x8698(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x86C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x86E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x8710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x8738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x8760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x8788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x87B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x87D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x8800(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x8828(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x88A0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x88D0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x8948(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x8978(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x89F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x8A20(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x8A98(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x8AC8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x8B40(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x8B70(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x8BE8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x8C18(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x8C40(0x0078)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x8CB8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x8DC0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x8EC8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x8EE8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x8F08(0x0078)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x8F80(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x9040(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x9070(0x0078)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x90E8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x91F0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x92F8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x9318(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x9338(0x0078)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x93B0(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x9470(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x94A0(0x00E0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x9580(0x0188)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x9708(0x0188)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x9890(0x00E0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x9970(0x00B0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x9A20(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x9B00(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x9BE0(0x00E0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x9CC0(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x9D70(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x9E10(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x9E40(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x9EF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x9F18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x9F40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x9F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x9F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x9FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x9FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0xA008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0xA030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0xA058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0xA080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0xA0A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0xA0D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0xA0F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0xA120(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0xA148(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0xA170(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0xA1E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0xA218(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0xA290(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0xA2C0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0xA338(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0xA368(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0xA3E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0xA410(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0xA488(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0xA4B8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0xA530(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0xA560(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0xA588(0x0188)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0xA710(0x0188)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0xA898(0x00E0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0xA978(0x00B0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0xAA28(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0xAB08(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0xAB38(0x00B0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0xABE8(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0xACC8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0xACF8(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0xADA8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0xAE60(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0xAF18(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0xAFD0(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0xB000(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0xB0B0(0x00B8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0xB168(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0xB218(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0xB2C8(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0xB380(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0xB3A8(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0xB458(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0xB508(0x00B0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0xB5B8(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0xB668(0x0028)()
	bool                                          __CustomProperty_DoPelvisDisplacement_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B691[0x3];                                     // 0xB691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_PelvisIK_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB694(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bDoFootIK_R_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bDoFootIK_L_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6A2[0x2];                                     // 0xB6A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               __CustomProperty_FootIK_L_Rotation_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               __CustomProperty_FootIK_R_Rotation_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                __CustomProperty_FootIK_L_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_FootIK_R_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bPreventAOHandDriftFromWeapon_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6D5[0x3];                                     // 0xB6D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         __CustomProperty_HandFKWeight_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bUseHandIKRetargeting_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bUseRightHandIK_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bUseLeftHandIK_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6DF[0x1];                                     // 0xB6DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             __CustomProperty_RightHandIKTransform_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB6E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             __CustomProperty_LeftHandIKTransform_E656822F4F77DD47557E8BA0FC4D0E5E; // 0xB710(0x0030)(IsPlainOldData, NoDestructor)
	struct FAnimNode_LinkedAnimGraph              AnimGraphNode_LinkedAnimGraph;                     // 0xB740(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0xB7E0(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0xB898(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0xB8C0(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0xB8E8(0x00C8)()
	class ABP_HDPlayerCharacterBase_C*            OwningChar;                                        // 0xB9B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDPlayerControllerBase_C*           OwningPC;                                          // 0xB9B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HDWeaponBase_C*                     CurrentWeapon;                                     // 0xB9C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNotLeaningOrIsMoving;                             // 0xB9C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLeaningNoSpeed;                                   // 0xB9C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLeaningLeft;                                      // 0xB9CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLeaningRight;                                     // 0xB9CB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELeanDirection                                LeanDirection;                                     // 0xB9CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEquipped;                                         // 0xB9CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bValidMovementState;                               // 0xB9CE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLandBasedMovement;                                // 0xB9CF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFluidBasedMovement;                               // 0xB9D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAirBasedMovement;                                 // 0xB9D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAirOnlyBasedMovement;                             // 0xB9D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFiring;                                           // 0xB9D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         FiringAlpha;                                       // 0xB9D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableWeaponUpperBodyLayer;                      // 0xB9D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECharacterMoveState                           MovementState;                                     // 0xB9D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemType                                     EquippedItemType;                                  // 0xB9DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPrefiring;                                        // 0xB9DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReadyToThrow;                                     // 0xB9DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseLeftHandIK;                                    // 0xB9DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9DE[0x2];                                     // 0xB9DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandIKTransform;                               // 0xB9E0(0x0030)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseRightHandIK;                                   // 0xBA10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA11[0xF];                                     // 0xBA11(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RightHandIKTransform;                              // 0xBA20(0x0030)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                      RifleLeanInAnim;                                   // 0xBA50(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      RifleLeanOutAnim;                                  // 0xBA58(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WeapLeftHandIKSocketName;                          // 0xBA60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WeapRightHandIKSocketName;                         // 0xBA68(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeftHandBoneName;                                  // 0xBA70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RightHandBoneName;                                 // 0xBA78(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeftFootBoneName;                                  // 0xBA80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RightFootBoneName;                                 // 0xBA88(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             WeapDefaultLeftHandIKTransform_Rifle;              // 0xBA90(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	struct FTransform                             WeapDefaultLeftHandIKTransform_Pistol;             // 0xBAC0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	struct FTransform                             WeapDefaultRightHandIKTransform_Rifle;             // 0xBAF0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	struct FTransform                             WeapDefaultRightHandIKTransform_Pistol;            // 0xBB20(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                      BasePoseUpperAnim;                                 // 0xBB50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      BasePoseTPPUpperAnim;                              // 0xBB58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      IdleAdditiveUpperAnim;                             // 0xBB60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      MoveUpperAnim;                                     // 0xBB68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimInUpperAnim;                                    // 0xBB70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimBasePoseUpperAnim;                              // 0xBB78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AimOutUpperAnim;                                   // 0xBB80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintInUpperAnim;                                 // 0xBB88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintUpperAnim;                                   // 0xBB90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      SprintOutUpperAnim;                                // 0xBB98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ProneInUpperAnim;                                  // 0xBBA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CrawlUpperAnim;                                    // 0xBBA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      ProneOutUpperAnim;                                 // 0xBBB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      IdleLowerBodyAnim;                                 // 0xBBB8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SourceMesh;                                        // 0xBBC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bValidProneUpperAnims;                             // 0xBBC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BBC9[0x3];                                     // 0xBBC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IdleUpperBodyAnimPlayRateToUse;                    // 0xBBCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseMirroredLowerBodyLocomotion;                   // 0xBBD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BBD1[0x3];                                     // 0xBBD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowerBodyBSPlayRateToUse;                          // 0xBBD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandFKWeightToUse;                                 // 0xBBD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugAnimMontagePlayback;                         // 0xBBDC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BBDD[0x3];                                     // 0xBBDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CharAnimMontageToPlay;                             // 0xBBE0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeapAnimInstanceToUse;                             // 0xBBE8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           WeapAnimMontageToPlay;                             // 0xBBF0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RifleHandFKWeight;                                 // 0xBBF8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PistolHandFKWeight;                                // 0xBBFC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               FootIKTraceChannel;                                // 0xBC00(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC01[0x3];                                     // 0xBC01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PawnScale;                                         // 0xBC04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootIKTraceDist;                                   // 0xBC08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftFootIKOffset;                                  // 0xBC0C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightFootIKOffset;                                 // 0xBC18(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC24[0x4];                                     // 0xBC24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      ThrowReadyBasePoseUpperAnim;                       // 0xBC28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanAmount;                                        // 0xBC30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanAlpha;                                         // 0xBC34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRifleLean;                                        // 0xBC38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC39[0x3];                                     // 0xBC39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeanLeftInAnimTime;                                // 0xBC3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanLeftOutAnimTime;                               // 0xBC40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanRightInAnimTime;                               // 0xBC44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanRightOutAnimTime;                              // 0xBC48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanAnimOffset;                                    // 0xBC4C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStanding;                                         // 0xBC50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInCrouchStance;                                   // 0xBC51(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInProneStance;                                    // 0xBC52(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStandToCrouch;                                    // 0xBC53(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStandToProne;                                     // 0xBC54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCrouchToProne;                                    // 0xBC55(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC56[0x2];                                     // 0xBC56(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeaponUpperBodyAlpha;                              // 0xBC58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementAlpha;                                     // 0xBC5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementAmount;                                    // 0xBC60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ItemPositionOffset;                                // 0xBC64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElbowIKWeight;                                     // 0xBC70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC74[0x4];                                     // 0xBC74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterAnimCollection               WeapArmsTPPAnims;                                  // 0xBC78(0x0128)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor)
	float                                         AimPitchAlpha;                                     // 0xBDA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AimingOffset;                                      // 0xBDA4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimAlpha;                                          // 0xBDB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeX;                                        // 0xBDB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InversePitchAimRot;                                // 0xBDB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVaulting;                                         // 0xBDC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNotVaultingNoAir;                                 // 0xBDC5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EVaultBehavior                                VaultBehavior;                                     // 0xBDC6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSprintVault;                                      // 0xBDC7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bVaultOver;                                        // 0xBDC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bClimbOnto;                                        // 0xBDC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDCA[0x2];                                     // 0xBDCA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                VaultPelvisOffset;                                 // 0xBDCC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VaultPelvisOffsetAlpha;                            // 0xBDD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VaultingAlpha;                                     // 0xBDDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInsideVaultState;                                 // 0xBDE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDE1[0x3];                                     // 0xBDE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LowReadyOffset;                                    // 0xBDE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LowReadyRotation;                                  // 0xBDF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bADSFireOnly;                                      // 0xBDFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPistolEquipped;                                   // 0xBDFD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLowReady;                                         // 0xBDFE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDFF[0x1];                                     // 0xBDFF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SpineLowerAimPitch;                                // 0xBE00(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SpineUpperAimPitch;                                // 0xBE0C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               NeckAimPitch;                                      // 0xBE18(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               HeadAimPitch;                                      // 0xBE24(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               GunAimPitch;                                       // 0xBE30(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FullBodyFKWeight;                                  // 0xBE3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bProneMoving;                                      // 0xBE3D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPistolEquippedAndSprinting;                       // 0xBE3E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBagEquipped;                                      // 0xBE3F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                GunAimPitchOffset;                                 // 0xBE40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoPitchRotation;                                  // 0xBE4C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPistolEquippedAndCrawling;                        // 0xBE4D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bThrowableEquipped;                                // 0xBE4E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStandingMovingAndLowReady;                        // 0xBE4F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PelvisSurfaceNormalRot;                            // 0xBE50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               PelvisSurfaceNormalRotInverse;                     // 0xBE5C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                FootIK_L_Displacement;                             // 0xBE68(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootIK_R_Displacement;                             // 0xBE74(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Foot_IK_R_Rotation;                                // 0xBE80(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Foot_IK_L_Rotation;                                // 0xBE8C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDoFootIK_L;                                       // 0xBE98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDoFootIK_R;                                       // 0xBE99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE9A[0x2];                                     // 0xBE9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PelvisIK_Displacement;                             // 0xBE9C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoPelvisDisplacement;                             // 0xBEA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSingleAction;                                     // 0xBEA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFiringAndNotSingleAction;                         // 0xBEAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStandingMoving;                                   // 0xBEAB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CapsuleQuarterHeight;                              // 0xBEAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintFKAlpha;                                     // 0xBEB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintAlpha;                                       // 0xBEB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintImpulseAlpha;                                // 0xBEB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SprintImpulseRotator;                              // 0xBEBC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SprintImpulseRotatorInverse;                       // 0xBEC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CrouchLeaningLeft;                                 // 0xBED4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_HDPlayerCharacter_TP(int32 EntryPoint);
	void AnimNotify_LeftCrouchState();
	void BlueprintUpdateEquippedWeaponRefs(class ADFBaseItem* NewWeap);
	void BlueprintUpdateControllerOwnerRefs(class AController* NewC);
	void BlueprintUpdatePawnOwnerRefs(class APawn* NewPawn);
	void EquippedItemChanged(class ADFBaseCharacter* Character, class ADFBaseItem* NewEquippedItem, class ADFBaseItem* PrevEquippedItem);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX_0);
	void AnimNotify_LeftVaultState();
	void AnimNotify_EnterVaultState();
	void AnimNotify_LeftProneState();
	void AnimNotify_FullyProneState();
	void AnimNotify_LeftStandState();
	void AnimNotify_FullyStandingState();
	void AnimNotify_FullyCrouchedState();
	void OnCompleted_ED2EB33C4A118243E7441F82017EFA1B(class FName NotifyName);
	void OnBlendOut_ED2EB33C4A118243E7441F82017EFA1B(class FName NotifyName);
	void OnInterrupted_ED2EB33C4A118243E7441F82017EFA1B(class FName NotifyName);
	void OnNotifyBegin_ED2EB33C4A118243E7441F82017EFA1B(class FName NotifyName);
	void OnNotifyEnd_ED2EB33C4A118243E7441F82017EFA1B(class FName NotifyName);
	void OnCompleted_03E0282943B466F95A9987B1825BCF44(class FName NotifyName);
	void OnBlendOut_03E0282943B466F95A9987B1825BCF44(class FName NotifyName);
	void OnInterrupted_03E0282943B466F95A9987B1825BCF44(class FName NotifyName);
	void OnNotifyBegin_03E0282943B466F95A9987B1825BCF44(class FName NotifyName);
	void OnNotifyEnd_03E0282943B466F95A9987B1825BCF44(class FName NotifyName);
	void AssignWeaponTPPLocomotionAnims(struct FCharacterAnimCollection& AnimCollection, bool bReadyToThrow_0);
	void AssignLegacyWeaponTPPLocomotionAnims(const TMap<class FName, class UAnimSequenceBase*>& WeaponAnimSetTPP);
	void PlayCharacterTPPMontage(class UAnimMontage* MontageToPlay, bool bForceDisableAutoBlendOut, float* PlayDuration);
	void SetupFootIK(class ACharacter* CharOwner);
	void UpdateFootIKTraceData();
	void PerformFootIKTrace(bool bFromRightFoot, bool* bOutHit, struct FVector* OutHitOffsetFromFoot);
	void UpdateIKTraceDataForFoot(bool bForRightFoot);
	void GetCapsuleQuarterHeight(class ACharacter* Char);
	void IKFootTraceSetup(class FName SocketName, struct FVector* TraceStart, struct FVector* TraceEnd);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BaseLocoLayer(struct FPoseLink* BaseLocoLayer_0);
	void OverlayLocoLayer(struct FPoseLink* OverlayLocoLayer_0);
	void LayeredLoco(const struct FPoseLink& InBaseLayer, const struct FPoseLink& InOverlayLayer, const struct FPoseLink& InFullBodyAdditive, struct FPoseLink* LayeredLoco_0);
	void VehicleLowerBody(const struct FPoseLink& LowerBody, struct FPoseLink* VehicleLowerBody_0);
	void VehicleFullBody(const struct FPoseLink& FullBody, struct FPoseLink* VehicleFullBody_0);
	void WeaponJumpLoop(const struct FPoseLink& LowerJumpLoop, struct FPoseLink* WeaponJumpLoop_0);
	void Move(const struct FPoseLink& Move_0, struct FPoseLink* Move_1);
	void WeaponAdditive(struct FPoseLink* WeaponAdditive_0);
	void WeaponUpperBody(const struct FPoseLink& UpperBody, struct FPoseLink* WeaponUpperBody_0);
	float PlayUnEquipMontage(class UAnimMontage* MontageToPlay);
	float PlayReloadMontage(class UAnimMontage* MontageToPlay, bool bFullReload);
	float PlayFireMontage(class UAnimMontage* MontageToPlay, bool bFireLast, bool bAiming_0);
	float PlayEquipMontage(class UAnimMontage* MontageToPlay);

	void GetDefaultLeftHandIKTransformByItemType(EItemType ItemType, struct FTransform* LeftTransform) const;
	void GetDefaultRightHandIKTransformByItemType(EItemType ItemType, struct FTransform* RightTransform) const;
	void ShouldUseHandIK(bool* bOutUseHandIK) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_HDPlayerCharacter_TP_C">();
	}
	static class UABP_HDPlayerCharacter_TP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_HDPlayerCharacter_TP_C>();
	}
};
static_assert(alignof(UABP_HDPlayerCharacter_TP_C) == 0x000010, "Wrong alignment on UABP_HDPlayerCharacter_TP_C");
static_assert(sizeof(UABP_HDPlayerCharacter_TP_C) == 0x00BEE0, "Wrong size on UABP_HDPlayerCharacter_TP_C");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, UberGraphFrame) == 0x0002E0, "Member 'UABP_HDPlayerCharacter_TP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_8) == 0x0002E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_7) == 0x000308, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_8) == 0x000328, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_19) == 0x000348, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_45) == 0x000400, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_35) == 0x000478, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_35' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_34) == 0x000580, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_34' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ApplyAdditive_4) == 0x000688, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_7) == 0x000750, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x000810, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_7) == 0x000830, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_33) == 0x000850, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_33' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_32) == 0x000958, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_32' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_31) == 0x000A60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_30) == 0x000B68, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_6) == 0x000C70, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TwoWayBlend_2) == 0x000C90, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_5) == 0x000D58, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x000D78, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_13) == 0x000D98, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_6) == 0x000E88, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_18) == 0x000F48, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_29) == 0x001000, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_28) == 0x001028, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_29) == 0x001050, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_28) == 0x001158, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_12) == 0x001260, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_27) == 0x001350, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_11) == 0x001458, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_26) == 0x001548, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_27) == 0x001650, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_26) == 0x001678, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_4) == 0x0016A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_10) == 0x0016C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_25) == 0x0017B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x0018B8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_5) == 0x0018D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_25) == 0x001998, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_7) == 0x0019C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_17) == 0x001A60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_24) == 0x001B18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_23) == 0x001C20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_22) == 0x001D28, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_21) == 0x001E30, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_20) == 0x001F38, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_19) == 0x002040, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_18) == 0x002148, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_16) == 0x002250, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_24) == 0x002308, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_23) == 0x002330, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_17) == 0x002358, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_16) == 0x002460, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_3) == 0x002568, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x002588, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TwoBoneIK_1) == 0x0025B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_9) == 0x002790, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_8) == 0x002880, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_7) == 0x002970, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_6) == 0x002A60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_15) == 0x002B50, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_105) == 0x002C58, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_105' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_104) == 0x002C80, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_104' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_103) == 0x002CA8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_103' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_102) == 0x002CD0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_102' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_101) == 0x002CF8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_101' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_44) == 0x002D20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_55) == 0x002D98, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_55' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_43) == 0x002DC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_54) == 0x002E40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_54' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_42) == 0x002E70, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_53) == 0x002EE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_53' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_IdentityPose_1) == 0x002F18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_52) == 0x002F30, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_52' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_12) == 0x002F60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ApplyAdditive_3) == 0x003010, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_100) == 0x0030D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_100' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_99) == 0x003100, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_99' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_98) == 0x003128, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_98' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_41) == 0x003150, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_51) == 0x0031C8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_51' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_40) == 0x0031F8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_50) == 0x003270, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_50' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_IdentityPose) == 0x0032A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_49) == 0x0032B8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_49' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_11) == 0x0032E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ApplyAdditive_2) == 0x003398, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TwoBoneIK) == 0x003460, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_14) == 0x003640, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_13) == 0x003748, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_12) == 0x003850, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_11) == 0x003958, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_4) == 0x003A60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_22) == 0x003B20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_15) == 0x003B48, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_21) == 0x003C00, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_3) == 0x003C28, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_20) == 0x003CE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_5) == 0x003D10, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_4) == 0x003E00, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_10) == 0x003EF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_9) == 0x003FF8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_3) == 0x004100, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_2) == 0x0041F0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_8) == 0x0042E0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0043E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_19) == 0x0044A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_7) == 0x0044D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_6) == 0x0045D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0046E0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x004700, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_5) == 0x004720, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_4) == 0x004828, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_9) == 0x004930, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalRefPose_4) == 0x004960, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalRefPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_8) == 0x004978, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_7) == 0x0049A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_7) == 0x004A20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_6) == 0x004A50, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_6) == 0x004AC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_5) == 0x004AF8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_5) == 0x004B70, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_4) == 0x004BA0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_4) == 0x004C18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_3) == 0x004C48, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_2) == 0x004CC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_14) == 0x004D38, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_13) == 0x004DF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_18) == 0x004EA8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_17) == 0x004ED0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone_1) == 0x004EF8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_12) == 0x004FE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_16) == 0x0050A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ApplyAdditive_1) == 0x0050C8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose_1) == 0x005190, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_11) == 0x005208, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_15) == 0x0052C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_CopyBone) == 0x0052E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_14) == 0x0053D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_13) == 0x005400, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_10) == 0x005428, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Slot_1) == 0x0054E0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_39) == 0x005528, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_9) == 0x0055A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ApplyAdditive) == 0x005658, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_38) == 0x005720, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x005798, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_6) == 0x005920, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_12) == 0x0059C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_37) == 0x0059E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_8) == 0x005A60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedInputPose) == 0x005B18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_3) == 0x005B90, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_2) == 0x005BC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_97) == 0x005BF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_97' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_96) == 0x005C18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_96' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_95) == 0x005C40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_95' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_94) == 0x005C68, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_94' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_93) == 0x005C90, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_93' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_92) == 0x005CB8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_92' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_91) == 0x005CE0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_91' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_90) == 0x005D08, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_90' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_89) == 0x005D30, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_89' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_88) == 0x005D58, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_88' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_87) == 0x005D80, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_87' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_86) == 0x005DA8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_86' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_36) == 0x005DD0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_48) == 0x005E48, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_48' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_35) == 0x005E78, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_47) == 0x005EF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_47' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_34) == 0x005F20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_46) == 0x005F98, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_46' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_33) == 0x005FC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_45) == 0x006040, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_45' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_32) == 0x006070, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_44) == 0x0060E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_44' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_31) == 0x006118, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_43) == 0x006190, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_43' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_30) == 0x0061C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_29) == 0x006238, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_5) == 0x0062B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_42) == 0x006350, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_42' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_10) == 0x006380, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_41) == 0x006430, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_41' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_85) == 0x006460, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_85' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalRefPose_3) == 0x006488, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalRefPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_40) == 0x0064A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_40' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_9) == 0x0064D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_7) == 0x006580, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_84) == 0x006638, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_84' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_83) == 0x006660, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_83' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_82) == 0x006688, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_82' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_81) == 0x0066B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_81' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_28) == 0x0066D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_39) == 0x006750, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_39' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_11) == 0x006780, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_4) == 0x0067A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_27) == 0x006848, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_38) == 0x0068C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_38' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_26) == 0x0068F0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_37) == 0x006968, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_37' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_10) == 0x006998, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_36) == 0x0069C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_36' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_8) == 0x0069F0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TwoWayBlend_1) == 0x006AA0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_9) == 0x006B68, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root_1) == 0x006B90, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Slot) == 0x006BC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_80) == 0x006C08, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_80' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_79) == 0x006C30, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_79' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_78) == 0x006C58, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_78' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_77) == 0x006C80, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_77' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_76) == 0x006CA8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_76' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_75) == 0x006CD0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_75' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_74) == 0x006CF8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_74' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_73) == 0x006D20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_73' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_72) == 0x006D48, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_72' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_71) == 0x006D70, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_71' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_70) == 0x006D98, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_70' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_69) == 0x006DC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_69' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_68) == 0x006DE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_68' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalRefPose_2) == 0x006E10, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalRefPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_35) == 0x006E28, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_35' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_7) == 0x006E58, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_34) == 0x006F08, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_34' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_67) == 0x006F38, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_67' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_8) == 0x006F60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_33) == 0x006F88, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_33' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_66) == 0x006FB8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_66' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_65) == 0x006FE0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_65' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_64) == 0x007008, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_64' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_63) == 0x007030, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_63' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_62) == 0x007058, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_62' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_61) == 0x007080, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_61' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_25) == 0x0070A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_3) == 0x007120, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_24) == 0x0071C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByEnum_5) == 0x007238, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByEnum_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_23) == 0x0072E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_32) == 0x007360, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_32' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_22) == 0x007390, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_2) == 0x007408, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_21) == 0x0074A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByEnum_4) == 0x007520, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_20) == 0x0075D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_31) == 0x007648, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_19) == 0x007678, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool_1) == 0x0076F0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_18) == 0x007790, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByEnum_3) == 0x007808, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_17) == 0x0078B8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_30) == 0x007930, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalRefPose_1) == 0x007960, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_29) == 0x007978, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_6) == 0x0079A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_28) == 0x007A58, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_60) == 0x007A88, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_60' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_59) == 0x007AB0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_59' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_58) == 0x007AD8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_58' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_16) == 0x007B00, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_27) == 0x007B78, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_8) == 0x007BA8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_26) == 0x007C88, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_5) == 0x007CB8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_25) == 0x007D68, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_7) == 0x007D98, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_24) == 0x007DC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_4) == 0x007DF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_57) == 0x007EA0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_57' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_56) == 0x007EC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_56' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_55) == 0x007EF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_54) == 0x007F18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_53) == 0x007F40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_52) == 0x007F68, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_51) == 0x007F90, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_50) == 0x007FB8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_49) == 0x007FE0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_48) == 0x008008, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_47) == 0x008030, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_46) == 0x008058, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_45) == 0x008080, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_44) == 0x0080A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_43) == 0x0080D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_42) == 0x0080F8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_41) == 0x008120, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_40) == 0x008148, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_23) == 0x008170, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_6) == 0x0081A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_22) == 0x0081C8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_21) == 0x0081F8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_5) == 0x008228, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_20) == 0x008250, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_19) == 0x008280, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_4) == 0x0082B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_18) == 0x0082D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalRefPose) == 0x008308, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_17) == 0x008320, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_3) == 0x008350, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_6) == 0x008400, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_39) == 0x0084B8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_38) == 0x0084E0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_37) == 0x008508, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_36) == 0x008530, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_35) == 0x008558, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_34) == 0x008580, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_33) == 0x0085A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_32) == 0x0085D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_31) == 0x0085F8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_30) == 0x008620, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_29) == 0x008648, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_28) == 0x008670, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_27) == 0x008698, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_26) == 0x0086C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_25) == 0x0086E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_24) == 0x008710, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_23) == 0x008738, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_22) == 0x008760, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_21) == 0x008788, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_20) == 0x0087B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_19) == 0x0087D8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_18) == 0x008800, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_15) == 0x008828, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_16) == 0x0088A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_14) == 0x0088D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_15) == 0x008948, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_13) == 0x008978, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_14) == 0x0089F0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_12) == 0x008A20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_13) == 0x008A98, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_11) == 0x008AC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_12) == 0x008B40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_10) == 0x008B70, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_11) == 0x008BE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_17) == 0x008C18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_9) == 0x008C40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_3) == 0x008CB8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_2) == 0x008DC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x008EC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x008EE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_8) == 0x008F08, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x008F80, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_10) == 0x009040, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_7) == 0x009070, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone_1) == 0x0090E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ModifyBone) == 0x0091F0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0092F8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LocalToComponentSpace) == 0x009318, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_6) == 0x009338, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LayeredBoneBlend) == 0x0093B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_9) == 0x009470, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_7) == 0x0094A0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x009580, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x009708, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x009890, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByEnum_2) == 0x009970, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x009A20, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x009B00, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x009BE0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByEnum_1) == 0x009CC0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByBool) == 0x009D70, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_8) == 0x009E10, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_2) == 0x009E40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_16) == 0x009EF0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_15) == 0x009F18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_14) == 0x009F40, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_13) == 0x009F68, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_12) == 0x009F90, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_11) == 0x009FB8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_10) == 0x009FE0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_9) == 0x00A008, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_8) == 0x00A030, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_7) == 0x00A058, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_6) == 0x00A080, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_5) == 0x00A0A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_4) == 0x00A0D0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_3) == 0x00A0F8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_2) == 0x00A120, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult_1) == 0x00A148, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_5) == 0x00A170, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_7) == 0x00A1E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_4) == 0x00A218, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_6) == 0x00A290, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_3) == 0x00A2C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_5) == 0x00A338, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_2) == 0x00A368, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_4) == 0x00A3E0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer_1) == 0x00A410, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_3) == 0x00A488, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SequencePlayer) == 0x00A4B8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_2) == 0x00A530, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TransitionResult) == 0x00A560, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x00A588, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x00A710, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x00A898, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendListByEnum) == 0x00A978, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x00AA28, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult_1) == 0x00AB08, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine_1) == 0x00AB38, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_BlendSpacePlayer) == 0x00ABE8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateResult) == 0x00ACC8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_StateMachine) == 0x00ACF8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_5) == 0x00ADA8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_4) == 0x00AE60, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_3) == 0x00AF18, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_Root) == 0x00AFD0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer_6) == 0x00B000, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_2) == 0x00B0B0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer_5) == 0x00B168, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer_4) == 0x00B218, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose_1) == 0x00B2C8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_3) == 0x00B380, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer_3) == 0x00B3A8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer_2) == 0x00B458, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer_1) == 0x00B508, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimLayer) == 0x00B5B8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_2) == 0x00B668, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_DoPelvisDisplacement_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B690, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_DoPelvisDisplacement_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_PelvisIK_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B694, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_PelvisIK_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_bDoFootIK_R_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6A0, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_bDoFootIK_R_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_bDoFootIK_L_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6A1, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_bDoFootIK_L_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_FootIK_L_Rotation_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6A4, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_FootIK_L_Rotation_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_FootIK_R_Rotation_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6B0, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_FootIK_R_Rotation_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_FootIK_L_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6BC, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_FootIK_L_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_FootIK_R_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6C8, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_FootIK_R_Displacement_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_bPreventAOHandDriftFromWeapon_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6D4, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_bPreventAOHandDriftFromWeapon_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_HandFKWeight_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6D8, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_HandFKWeight_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_bUseHandIKRetargeting_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6DC, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_bUseHandIKRetargeting_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_bUseRightHandIK_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6DD, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_bUseRightHandIK_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_bUseLeftHandIK_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6DE, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_bUseLeftHandIK_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_RightHandIKTransform_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B6E0, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_RightHandIKTransform_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, __CustomProperty_LeftHandIKTransform_E656822F4F77DD47557E8BA0FC4D0E5E) == 0x00B710, "Member 'UABP_HDPlayerCharacter_TP_C::__CustomProperty_LeftHandIKTransform_E656822F4F77DD47557E8BA0FC4D0E5E' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_LinkedAnimGraph) == 0x00B740, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_LinkedAnimGraph' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_SaveCachedPose) == 0x00B7E0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose_1) == 0x00B898, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_UseCachedPose) == 0x00B8C0, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AnimGraphNode_TwoWayBlend) == 0x00B8E8, "Member 'UABP_HDPlayerCharacter_TP_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, OwningChar) == 0x00B9B0, "Member 'UABP_HDPlayerCharacter_TP_C::OwningChar' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, OwningPC) == 0x00B9B8, "Member 'UABP_HDPlayerCharacter_TP_C::OwningPC' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, CurrentWeapon) == 0x00B9C0, "Member 'UABP_HDPlayerCharacter_TP_C::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bNotLeaningOrIsMoving) == 0x00B9C8, "Member 'UABP_HDPlayerCharacter_TP_C::bNotLeaningOrIsMoving' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bLeaningNoSpeed) == 0x00B9C9, "Member 'UABP_HDPlayerCharacter_TP_C::bLeaningNoSpeed' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bLeaningLeft) == 0x00B9CA, "Member 'UABP_HDPlayerCharacter_TP_C::bLeaningLeft' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bLeaningRight) == 0x00B9CB, "Member 'UABP_HDPlayerCharacter_TP_C::bLeaningRight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanDirection) == 0x00B9CC, "Member 'UABP_HDPlayerCharacter_TP_C::LeanDirection' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bEquipped) == 0x00B9CD, "Member 'UABP_HDPlayerCharacter_TP_C::bEquipped' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bValidMovementState) == 0x00B9CE, "Member 'UABP_HDPlayerCharacter_TP_C::bValidMovementState' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bLandBasedMovement) == 0x00B9CF, "Member 'UABP_HDPlayerCharacter_TP_C::bLandBasedMovement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bFluidBasedMovement) == 0x00B9D0, "Member 'UABP_HDPlayerCharacter_TP_C::bFluidBasedMovement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bAirBasedMovement) == 0x00B9D1, "Member 'UABP_HDPlayerCharacter_TP_C::bAirBasedMovement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bAirOnlyBasedMovement) == 0x00B9D2, "Member 'UABP_HDPlayerCharacter_TP_C::bAirOnlyBasedMovement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bFiring) == 0x00B9D3, "Member 'UABP_HDPlayerCharacter_TP_C::bFiring' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, FiringAlpha) == 0x00B9D4, "Member 'UABP_HDPlayerCharacter_TP_C::FiringAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bDisableWeaponUpperBodyLayer) == 0x00B9D8, "Member 'UABP_HDPlayerCharacter_TP_C::bDisableWeaponUpperBodyLayer' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, MovementState) == 0x00B9D9, "Member 'UABP_HDPlayerCharacter_TP_C::MovementState' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, EquippedItemType) == 0x00B9DA, "Member 'UABP_HDPlayerCharacter_TP_C::EquippedItemType' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bPrefiring) == 0x00B9DB, "Member 'UABP_HDPlayerCharacter_TP_C::bPrefiring' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bReadyToThrow) == 0x00B9DC, "Member 'UABP_HDPlayerCharacter_TP_C::bReadyToThrow' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bUseLeftHandIK) == 0x00B9DD, "Member 'UABP_HDPlayerCharacter_TP_C::bUseLeftHandIK' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeftHandIKTransform) == 0x00B9E0, "Member 'UABP_HDPlayerCharacter_TP_C::LeftHandIKTransform' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bUseRightHandIK) == 0x00BA10, "Member 'UABP_HDPlayerCharacter_TP_C::bUseRightHandIK' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RightHandIKTransform) == 0x00BA20, "Member 'UABP_HDPlayerCharacter_TP_C::RightHandIKTransform' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RifleLeanInAnim) == 0x00BA50, "Member 'UABP_HDPlayerCharacter_TP_C::RifleLeanInAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RifleLeanOutAnim) == 0x00BA58, "Member 'UABP_HDPlayerCharacter_TP_C::RifleLeanOutAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapLeftHandIKSocketName) == 0x00BA60, "Member 'UABP_HDPlayerCharacter_TP_C::WeapLeftHandIKSocketName' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapRightHandIKSocketName) == 0x00BA68, "Member 'UABP_HDPlayerCharacter_TP_C::WeapRightHandIKSocketName' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeftHandBoneName) == 0x00BA70, "Member 'UABP_HDPlayerCharacter_TP_C::LeftHandBoneName' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RightHandBoneName) == 0x00BA78, "Member 'UABP_HDPlayerCharacter_TP_C::RightHandBoneName' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeftFootBoneName) == 0x00BA80, "Member 'UABP_HDPlayerCharacter_TP_C::LeftFootBoneName' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RightFootBoneName) == 0x00BA88, "Member 'UABP_HDPlayerCharacter_TP_C::RightFootBoneName' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapDefaultLeftHandIKTransform_Rifle) == 0x00BA90, "Member 'UABP_HDPlayerCharacter_TP_C::WeapDefaultLeftHandIKTransform_Rifle' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapDefaultLeftHandIKTransform_Pistol) == 0x00BAC0, "Member 'UABP_HDPlayerCharacter_TP_C::WeapDefaultLeftHandIKTransform_Pistol' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapDefaultRightHandIKTransform_Rifle) == 0x00BAF0, "Member 'UABP_HDPlayerCharacter_TP_C::WeapDefaultRightHandIKTransform_Rifle' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapDefaultRightHandIKTransform_Pistol) == 0x00BB20, "Member 'UABP_HDPlayerCharacter_TP_C::WeapDefaultRightHandIKTransform_Pistol' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, BasePoseUpperAnim) == 0x00BB50, "Member 'UABP_HDPlayerCharacter_TP_C::BasePoseUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, BasePoseTPPUpperAnim) == 0x00BB58, "Member 'UABP_HDPlayerCharacter_TP_C::BasePoseTPPUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, IdleAdditiveUpperAnim) == 0x00BB60, "Member 'UABP_HDPlayerCharacter_TP_C::IdleAdditiveUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, MoveUpperAnim) == 0x00BB68, "Member 'UABP_HDPlayerCharacter_TP_C::MoveUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AimInUpperAnim) == 0x00BB70, "Member 'UABP_HDPlayerCharacter_TP_C::AimInUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AimBasePoseUpperAnim) == 0x00BB78, "Member 'UABP_HDPlayerCharacter_TP_C::AimBasePoseUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AimOutUpperAnim) == 0x00BB80, "Member 'UABP_HDPlayerCharacter_TP_C::AimOutUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintInUpperAnim) == 0x00BB88, "Member 'UABP_HDPlayerCharacter_TP_C::SprintInUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintUpperAnim) == 0x00BB90, "Member 'UABP_HDPlayerCharacter_TP_C::SprintUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintOutUpperAnim) == 0x00BB98, "Member 'UABP_HDPlayerCharacter_TP_C::SprintOutUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, ProneInUpperAnim) == 0x00BBA0, "Member 'UABP_HDPlayerCharacter_TP_C::ProneInUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, CrawlUpperAnim) == 0x00BBA8, "Member 'UABP_HDPlayerCharacter_TP_C::CrawlUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, ProneOutUpperAnim) == 0x00BBB0, "Member 'UABP_HDPlayerCharacter_TP_C::ProneOutUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, IdleLowerBodyAnim) == 0x00BBB8, "Member 'UABP_HDPlayerCharacter_TP_C::IdleLowerBodyAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SourceMesh) == 0x00BBC0, "Member 'UABP_HDPlayerCharacter_TP_C::SourceMesh' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bValidProneUpperAnims) == 0x00BBC8, "Member 'UABP_HDPlayerCharacter_TP_C::bValidProneUpperAnims' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, IdleUpperBodyAnimPlayRateToUse) == 0x00BBCC, "Member 'UABP_HDPlayerCharacter_TP_C::IdleUpperBodyAnimPlayRateToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bUseMirroredLowerBodyLocomotion) == 0x00BBD0, "Member 'UABP_HDPlayerCharacter_TP_C::bUseMirroredLowerBodyLocomotion' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LowerBodyBSPlayRateToUse) == 0x00BBD4, "Member 'UABP_HDPlayerCharacter_TP_C::LowerBodyBSPlayRateToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, HandFKWeightToUse) == 0x00BBD8, "Member 'UABP_HDPlayerCharacter_TP_C::HandFKWeightToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bDebugAnimMontagePlayback) == 0x00BBDC, "Member 'UABP_HDPlayerCharacter_TP_C::bDebugAnimMontagePlayback' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, CharAnimMontageToPlay) == 0x00BBE0, "Member 'UABP_HDPlayerCharacter_TP_C::CharAnimMontageToPlay' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapAnimInstanceToUse) == 0x00BBE8, "Member 'UABP_HDPlayerCharacter_TP_C::WeapAnimInstanceToUse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapAnimMontageToPlay) == 0x00BBF0, "Member 'UABP_HDPlayerCharacter_TP_C::WeapAnimMontageToPlay' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RifleHandFKWeight) == 0x00BBF8, "Member 'UABP_HDPlayerCharacter_TP_C::RifleHandFKWeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, PistolHandFKWeight) == 0x00BBFC, "Member 'UABP_HDPlayerCharacter_TP_C::PistolHandFKWeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, FootIKTraceChannel) == 0x00BC00, "Member 'UABP_HDPlayerCharacter_TP_C::FootIKTraceChannel' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, PawnScale) == 0x00BC04, "Member 'UABP_HDPlayerCharacter_TP_C::PawnScale' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, FootIKTraceDist) == 0x00BC08, "Member 'UABP_HDPlayerCharacter_TP_C::FootIKTraceDist' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeftFootIKOffset) == 0x00BC0C, "Member 'UABP_HDPlayerCharacter_TP_C::LeftFootIKOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, RightFootIKOffset) == 0x00BC18, "Member 'UABP_HDPlayerCharacter_TP_C::RightFootIKOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, ThrowReadyBasePoseUpperAnim) == 0x00BC28, "Member 'UABP_HDPlayerCharacter_TP_C::ThrowReadyBasePoseUpperAnim' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanAmount) == 0x00BC30, "Member 'UABP_HDPlayerCharacter_TP_C::LeanAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanAlpha) == 0x00BC34, "Member 'UABP_HDPlayerCharacter_TP_C::LeanAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bRifleLean) == 0x00BC38, "Member 'UABP_HDPlayerCharacter_TP_C::bRifleLean' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanLeftInAnimTime) == 0x00BC3C, "Member 'UABP_HDPlayerCharacter_TP_C::LeanLeftInAnimTime' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanLeftOutAnimTime) == 0x00BC40, "Member 'UABP_HDPlayerCharacter_TP_C::LeanLeftOutAnimTime' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanRightInAnimTime) == 0x00BC44, "Member 'UABP_HDPlayerCharacter_TP_C::LeanRightInAnimTime' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanRightOutAnimTime) == 0x00BC48, "Member 'UABP_HDPlayerCharacter_TP_C::LeanRightOutAnimTime' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LeanAnimOffset) == 0x00BC4C, "Member 'UABP_HDPlayerCharacter_TP_C::LeanAnimOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bStanding) == 0x00BC50, "Member 'UABP_HDPlayerCharacter_TP_C::bStanding' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bInCrouchStance) == 0x00BC51, "Member 'UABP_HDPlayerCharacter_TP_C::bInCrouchStance' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bInProneStance) == 0x00BC52, "Member 'UABP_HDPlayerCharacter_TP_C::bInProneStance' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bStandToCrouch) == 0x00BC53, "Member 'UABP_HDPlayerCharacter_TP_C::bStandToCrouch' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bStandToProne) == 0x00BC54, "Member 'UABP_HDPlayerCharacter_TP_C::bStandToProne' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bCrouchToProne) == 0x00BC55, "Member 'UABP_HDPlayerCharacter_TP_C::bCrouchToProne' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeaponUpperBodyAlpha) == 0x00BC58, "Member 'UABP_HDPlayerCharacter_TP_C::WeaponUpperBodyAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, MovementAlpha) == 0x00BC5C, "Member 'UABP_HDPlayerCharacter_TP_C::MovementAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, MovementAmount) == 0x00BC60, "Member 'UABP_HDPlayerCharacter_TP_C::MovementAmount' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, ItemPositionOffset) == 0x00BC64, "Member 'UABP_HDPlayerCharacter_TP_C::ItemPositionOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, ElbowIKWeight) == 0x00BC70, "Member 'UABP_HDPlayerCharacter_TP_C::ElbowIKWeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, WeapArmsTPPAnims) == 0x00BC78, "Member 'UABP_HDPlayerCharacter_TP_C::WeapArmsTPPAnims' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AimPitchAlpha) == 0x00BDA0, "Member 'UABP_HDPlayerCharacter_TP_C::AimPitchAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AimingOffset) == 0x00BDA4, "Member 'UABP_HDPlayerCharacter_TP_C::AimingOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, AimAlpha) == 0x00BDB0, "Member 'UABP_HDPlayerCharacter_TP_C::AimAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, DeltaTimeX) == 0x00BDB4, "Member 'UABP_HDPlayerCharacter_TP_C::DeltaTimeX' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, InversePitchAimRot) == 0x00BDB8, "Member 'UABP_HDPlayerCharacter_TP_C::InversePitchAimRot' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bVaulting) == 0x00BDC4, "Member 'UABP_HDPlayerCharacter_TP_C::bVaulting' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bNotVaultingNoAir) == 0x00BDC5, "Member 'UABP_HDPlayerCharacter_TP_C::bNotVaultingNoAir' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, VaultBehavior) == 0x00BDC6, "Member 'UABP_HDPlayerCharacter_TP_C::VaultBehavior' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bSprintVault) == 0x00BDC7, "Member 'UABP_HDPlayerCharacter_TP_C::bSprintVault' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bVaultOver) == 0x00BDC8, "Member 'UABP_HDPlayerCharacter_TP_C::bVaultOver' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bClimbOnto) == 0x00BDC9, "Member 'UABP_HDPlayerCharacter_TP_C::bClimbOnto' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, VaultPelvisOffset) == 0x00BDCC, "Member 'UABP_HDPlayerCharacter_TP_C::VaultPelvisOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, VaultPelvisOffsetAlpha) == 0x00BDD8, "Member 'UABP_HDPlayerCharacter_TP_C::VaultPelvisOffsetAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, VaultingAlpha) == 0x00BDDC, "Member 'UABP_HDPlayerCharacter_TP_C::VaultingAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bInsideVaultState) == 0x00BDE0, "Member 'UABP_HDPlayerCharacter_TP_C::bInsideVaultState' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LowReadyOffset) == 0x00BDE4, "Member 'UABP_HDPlayerCharacter_TP_C::LowReadyOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, LowReadyRotation) == 0x00BDF0, "Member 'UABP_HDPlayerCharacter_TP_C::LowReadyRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bADSFireOnly) == 0x00BDFC, "Member 'UABP_HDPlayerCharacter_TP_C::bADSFireOnly' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bPistolEquipped) == 0x00BDFD, "Member 'UABP_HDPlayerCharacter_TP_C::bPistolEquipped' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bLowReady) == 0x00BDFE, "Member 'UABP_HDPlayerCharacter_TP_C::bLowReady' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SpineLowerAimPitch) == 0x00BE00, "Member 'UABP_HDPlayerCharacter_TP_C::SpineLowerAimPitch' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SpineUpperAimPitch) == 0x00BE0C, "Member 'UABP_HDPlayerCharacter_TP_C::SpineUpperAimPitch' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, NeckAimPitch) == 0x00BE18, "Member 'UABP_HDPlayerCharacter_TP_C::NeckAimPitch' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, HeadAimPitch) == 0x00BE24, "Member 'UABP_HDPlayerCharacter_TP_C::HeadAimPitch' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, GunAimPitch) == 0x00BE30, "Member 'UABP_HDPlayerCharacter_TP_C::GunAimPitch' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, FullBodyFKWeight) == 0x00BE3C, "Member 'UABP_HDPlayerCharacter_TP_C::FullBodyFKWeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bProneMoving) == 0x00BE3D, "Member 'UABP_HDPlayerCharacter_TP_C::bProneMoving' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bPistolEquippedAndSprinting) == 0x00BE3E, "Member 'UABP_HDPlayerCharacter_TP_C::bPistolEquippedAndSprinting' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bBagEquipped) == 0x00BE3F, "Member 'UABP_HDPlayerCharacter_TP_C::bBagEquipped' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, GunAimPitchOffset) == 0x00BE40, "Member 'UABP_HDPlayerCharacter_TP_C::GunAimPitchOffset' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bDoPitchRotation) == 0x00BE4C, "Member 'UABP_HDPlayerCharacter_TP_C::bDoPitchRotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bPistolEquippedAndCrawling) == 0x00BE4D, "Member 'UABP_HDPlayerCharacter_TP_C::bPistolEquippedAndCrawling' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bThrowableEquipped) == 0x00BE4E, "Member 'UABP_HDPlayerCharacter_TP_C::bThrowableEquipped' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bStandingMovingAndLowReady) == 0x00BE4F, "Member 'UABP_HDPlayerCharacter_TP_C::bStandingMovingAndLowReady' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, PelvisSurfaceNormalRot) == 0x00BE50, "Member 'UABP_HDPlayerCharacter_TP_C::PelvisSurfaceNormalRot' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, PelvisSurfaceNormalRotInverse) == 0x00BE5C, "Member 'UABP_HDPlayerCharacter_TP_C::PelvisSurfaceNormalRotInverse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, FootIK_L_Displacement) == 0x00BE68, "Member 'UABP_HDPlayerCharacter_TP_C::FootIK_L_Displacement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, FootIK_R_Displacement) == 0x00BE74, "Member 'UABP_HDPlayerCharacter_TP_C::FootIK_R_Displacement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, Foot_IK_R_Rotation) == 0x00BE80, "Member 'UABP_HDPlayerCharacter_TP_C::Foot_IK_R_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, Foot_IK_L_Rotation) == 0x00BE8C, "Member 'UABP_HDPlayerCharacter_TP_C::Foot_IK_L_Rotation' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bDoFootIK_L) == 0x00BE98, "Member 'UABP_HDPlayerCharacter_TP_C::bDoFootIK_L' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bDoFootIK_R) == 0x00BE99, "Member 'UABP_HDPlayerCharacter_TP_C::bDoFootIK_R' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, PelvisIK_Displacement) == 0x00BE9C, "Member 'UABP_HDPlayerCharacter_TP_C::PelvisIK_Displacement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bDoPelvisDisplacement) == 0x00BEA8, "Member 'UABP_HDPlayerCharacter_TP_C::bDoPelvisDisplacement' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bSingleAction) == 0x00BEA9, "Member 'UABP_HDPlayerCharacter_TP_C::bSingleAction' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bFiringAndNotSingleAction) == 0x00BEAA, "Member 'UABP_HDPlayerCharacter_TP_C::bFiringAndNotSingleAction' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, bStandingMoving) == 0x00BEAB, "Member 'UABP_HDPlayerCharacter_TP_C::bStandingMoving' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, CapsuleQuarterHeight) == 0x00BEAC, "Member 'UABP_HDPlayerCharacter_TP_C::CapsuleQuarterHeight' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintFKAlpha) == 0x00BEB0, "Member 'UABP_HDPlayerCharacter_TP_C::SprintFKAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintAlpha) == 0x00BEB4, "Member 'UABP_HDPlayerCharacter_TP_C::SprintAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintImpulseAlpha) == 0x00BEB8, "Member 'UABP_HDPlayerCharacter_TP_C::SprintImpulseAlpha' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintImpulseRotator) == 0x00BEBC, "Member 'UABP_HDPlayerCharacter_TP_C::SprintImpulseRotator' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, SprintImpulseRotatorInverse) == 0x00BEC8, "Member 'UABP_HDPlayerCharacter_TP_C::SprintImpulseRotatorInverse' has a wrong offset!");
static_assert(offsetof(UABP_HDPlayerCharacter_TP_C, CrouchLeaningLeft) == 0x00BED4, "Member 'UABP_HDPlayerCharacter_TP_C::CrouchLeaningLeft' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CreditsListHeader

#include "Basic.hpp"

#include "FGameCreditsEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CreditsListHeader.WBP_CreditsListHeader_C.ExecuteUbergraph_WBP_CreditsListHeader
// 0x0008 (0x0008 - 0x0000)
struct WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader) == 0x000004, "Wrong alignment on WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader");
static_assert(sizeof(WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader) == 0x000008, "Wrong size on WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader");
static_assert(offsetof(WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader, EntryPoint) == 0x000000, "Member 'WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_CreditsListHeader_C_ExecuteUbergraph_WBP_CreditsListHeader::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_CreditsListHeader.WBP_CreditsListHeader_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CreditsListHeader_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CreditsListHeader_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CreditsListHeader_C_PreConstruct");
static_assert(sizeof(WBP_CreditsListHeader_C_PreConstruct) == 0x000001, "Wrong size on WBP_CreditsListHeader_C_PreConstruct");
static_assert(offsetof(WBP_CreditsListHeader_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CreditsListHeader_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CreditsListHeader.WBP_CreditsListHeader_C.SetCreditsEntry
// 0x0060 (0x0060 - 0x0000)
struct WBP_CreditsListHeader_C_SetCreditsEntry final
{
public:
	struct FFGameCreditsEntry                     Entry;                                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FMargin                                HeaderPadding;                                     // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0048(0x0018)()
};
static_assert(alignof(WBP_CreditsListHeader_C_SetCreditsEntry) == 0x000008, "Wrong alignment on WBP_CreditsListHeader_C_SetCreditsEntry");
static_assert(sizeof(WBP_CreditsListHeader_C_SetCreditsEntry) == 0x000060, "Wrong size on WBP_CreditsListHeader_C_SetCreditsEntry");
static_assert(offsetof(WBP_CreditsListHeader_C_SetCreditsEntry, Entry) == 0x000000, "Member 'WBP_CreditsListHeader_C_SetCreditsEntry::Entry' has a wrong offset!");
static_assert(offsetof(WBP_CreditsListHeader_C_SetCreditsEntry, HeaderPadding) == 0x000030, "Member 'WBP_CreditsListHeader_C_SetCreditsEntry::HeaderPadding' has a wrong offset!");
static_assert(offsetof(WBP_CreditsListHeader_C_SetCreditsEntry, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'WBP_CreditsListHeader_C_SetCreditsEntry::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CreditsListHeader_C_SetCreditsEntry, CallFunc_TextToUpper_ReturnValue) == 0x000048, "Member 'WBP_CreditsListHeader_C_SetCreditsEntry::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

}

